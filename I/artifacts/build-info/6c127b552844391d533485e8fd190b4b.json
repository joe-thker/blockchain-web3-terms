{
	"id": "6c127b552844391d533485e8fd190b4b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"I/Permit-Based Approval (ERC2612).sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\";\n\ncontract PermitBasedSpender {\n    function permitApprove(\n        address token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external {\n        IERC20Permit(token).permit(owner, spender, value, deadline, v, r, s);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n// EIP-2612 is Final as of 2022-11-01. This file is deprecated.\n\nimport \"./IERC20Permit.sol\";\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"I/Permit-Based Approval (ERC2612).sol": {
				"PermitBasedSpender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permitApprove",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"I/Permit-Based Approval (ERC2612).sol\":139:473  contract PermitBasedSpender {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"I/Permit-Based Approval (ERC2612).sol\":139:473  contract PermitBasedSpender {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64246e96\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"I/Permit-Based Approval (ERC2612).sol\":173:471  function permitApprove(... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"I/Permit-Based Approval (ERC2612).sol\":409:414  token */\n      dup8\n        /* \"I/Permit-Based Approval (ERC2612).sol\":396:422  IERC20Permit(token).permit */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd505accf\n        /* \"I/Permit-Based Approval (ERC2612).sol\":423:428  owner */\n      dup9\n        /* \"I/Permit-Based Approval (ERC2612).sol\":430:437  spender */\n      dup9\n        /* \"I/Permit-Based Approval (ERC2612).sol\":439:444  value */\n      dup9\n        /* \"I/Permit-Based Approval (ERC2612).sol\":446:454  deadline */\n      dup9\n        /* \"I/Permit-Based Approval (ERC2612).sol\":456:457  v */\n      dup9\n        /* \"I/Permit-Based Approval (ERC2612).sol\":459:460  r */\n      dup9\n        /* \"I/Permit-Based Approval (ERC2612).sol\":462:463  s */\n      dup9\n        /* \"I/Permit-Based Approval (ERC2612).sol\":396:464  IERC20Permit(token).permit(owner, spender, value, deadline, v, r, s) */\n      mload(0x40)\n      dup9\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      revert(0x00, 0x00)\n    tag_11:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n      pop\n      pop\n      pop\n        /* \"I/Permit-Based Approval (ERC2612).sol\":173:471  function permitApprove(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_15:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_17:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_18:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_40\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_17\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_19:\n        /* \"#utility.yul\":641:665   */\n      tag_42\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_18\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_43\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_43:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_20:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_45\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_19\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_21:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_22:\n        /* \"#utility.yul\":997:1021   */\n      tag_48\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_21\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_49:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_23:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_51\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_22\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1283   */\n    tag_24:\n        /* \"#utility.yul\":1232:1239   */\n      0x00\n        /* \"#utility.yul\":1272:1276   */\n      0xff\n        /* \"#utility.yul\":1265:1270   */\n      dup3\n        /* \"#utility.yul\":1261:1277   */\n      and\n        /* \"#utility.yul\":1250:1277   */\n      swap1\n      pop\n        /* \"#utility.yul\":1197:1283   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1289:1407   */\n    tag_25:\n        /* \"#utility.yul\":1360:1382   */\n      tag_54\n        /* \"#utility.yul\":1376:1381   */\n      dup2\n        /* \"#utility.yul\":1360:1382   */\n      tag_24\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1353:1358   */\n      dup2\n        /* \"#utility.yul\":1350:1383   */\n      eq\n        /* \"#utility.yul\":1340:1401   */\n      tag_55\n      jumpi\n        /* \"#utility.yul\":1397:1398   */\n      0x00\n        /* \"#utility.yul\":1394:1395   */\n      0x00\n        /* \"#utility.yul\":1387:1399   */\n      revert\n        /* \"#utility.yul\":1340:1401   */\n    tag_55:\n        /* \"#utility.yul\":1289:1407   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1413:1548   */\n    tag_26:\n        /* \"#utility.yul\":1457:1462   */\n      0x00\n        /* \"#utility.yul\":1495:1501   */\n      dup2\n        /* \"#utility.yul\":1482:1502   */\n      calldataload\n        /* \"#utility.yul\":1473:1502   */\n      swap1\n      pop\n        /* \"#utility.yul\":1511:1542   */\n      tag_57\n        /* \"#utility.yul\":1536:1541   */\n      dup2\n        /* \"#utility.yul\":1511:1542   */\n      tag_25\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":1413:1548   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1554:1631   */\n    tag_27:\n        /* \"#utility.yul\":1591:1598   */\n      0x00\n        /* \"#utility.yul\":1620:1625   */\n      dup2\n        /* \"#utility.yul\":1609:1625   */\n      swap1\n      pop\n        /* \"#utility.yul\":1554:1631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1637:1759   */\n    tag_28:\n        /* \"#utility.yul\":1710:1734   */\n      tag_60\n        /* \"#utility.yul\":1728:1733   */\n      dup2\n        /* \"#utility.yul\":1710:1734   */\n      tag_27\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1703:1708   */\n      dup2\n        /* \"#utility.yul\":1700:1735   */\n      eq\n        /* \"#utility.yul\":1690:1753   */\n      tag_61\n      jumpi\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1746:1747   */\n      0x00\n        /* \"#utility.yul\":1739:1751   */\n      revert\n        /* \"#utility.yul\":1690:1753   */\n    tag_61:\n        /* \"#utility.yul\":1637:1759   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1765:1904   */\n    tag_29:\n        /* \"#utility.yul\":1811:1816   */\n      0x00\n        /* \"#utility.yul\":1849:1855   */\n      dup2\n        /* \"#utility.yul\":1836:1856   */\n      calldataload\n        /* \"#utility.yul\":1827:1856   */\n      swap1\n      pop\n        /* \"#utility.yul\":1865:1898   */\n      tag_63\n        /* \"#utility.yul\":1892:1897   */\n      dup2\n        /* \"#utility.yul\":1865:1898   */\n      tag_28\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1765:1904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:3255   */\n    tag_6:\n        /* \"#utility.yul\":2030:2036   */\n      0x00\n        /* \"#utility.yul\":2038:2044   */\n      0x00\n        /* \"#utility.yul\":2046:2052   */\n      0x00\n        /* \"#utility.yul\":2054:2060   */\n      0x00\n        /* \"#utility.yul\":2062:2068   */\n      0x00\n        /* \"#utility.yul\":2070:2076   */\n      0x00\n        /* \"#utility.yul\":2078:2084   */\n      0x00\n        /* \"#utility.yul\":2086:2092   */\n      0x00\n        /* \"#utility.yul\":2135:2138   */\n      0x0100\n        /* \"#utility.yul\":2123:2132   */\n      dup10\n        /* \"#utility.yul\":2114:2121   */\n      dup12\n        /* \"#utility.yul\":2110:2133   */\n      sub\n        /* \"#utility.yul\":2106:2139   */\n      slt\n        /* \"#utility.yul\":2103:2223   */\n      iszero\n      tag_65\n      jumpi\n        /* \"#utility.yul\":2142:2221   */\n      tag_66\n      tag_15\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2103:2223   */\n    tag_65:\n        /* \"#utility.yul\":2262:2263   */\n      0x00\n        /* \"#utility.yul\":2287:2340   */\n      tag_67\n        /* \"#utility.yul\":2332:2339   */\n      dup12\n        /* \"#utility.yul\":2323:2329   */\n      dup3\n        /* \"#utility.yul\":2312:2321   */\n      dup13\n        /* \"#utility.yul\":2308:2330   */\n      add\n        /* \"#utility.yul\":2287:2340   */\n      tag_20\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2277:2340   */\n      swap9\n      pop\n        /* \"#utility.yul\":2233:2350   */\n      pop\n        /* \"#utility.yul\":2389:2391   */\n      0x20\n        /* \"#utility.yul\":2415:2468   */\n      tag_68\n        /* \"#utility.yul\":2460:2467   */\n      dup12\n        /* \"#utility.yul\":2451:2457   */\n      dup3\n        /* \"#utility.yul\":2440:2449   */\n      dup13\n        /* \"#utility.yul\":2436:2458   */\n      add\n        /* \"#utility.yul\":2415:2468   */\n      tag_20\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2405:2468   */\n      swap8\n      pop\n        /* \"#utility.yul\":2360:2478   */\n      pop\n        /* \"#utility.yul\":2517:2519   */\n      0x40\n        /* \"#utility.yul\":2543:2596   */\n      tag_69\n        /* \"#utility.yul\":2588:2595   */\n      dup12\n        /* \"#utility.yul\":2579:2585   */\n      dup3\n        /* \"#utility.yul\":2568:2577   */\n      dup13\n        /* \"#utility.yul\":2564:2586   */\n      add\n        /* \"#utility.yul\":2543:2596   */\n      tag_20\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2533:2596   */\n      swap7\n      pop\n        /* \"#utility.yul\":2488:2606   */\n      pop\n        /* \"#utility.yul\":2645:2647   */\n      0x60\n        /* \"#utility.yul\":2671:2724   */\n      tag_70\n        /* \"#utility.yul\":2716:2723   */\n      dup12\n        /* \"#utility.yul\":2707:2713   */\n      dup3\n        /* \"#utility.yul\":2696:2705   */\n      dup13\n        /* \"#utility.yul\":2692:2714   */\n      add\n        /* \"#utility.yul\":2671:2724   */\n      tag_23\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2661:2724   */\n      swap6\n      pop\n        /* \"#utility.yul\":2616:2734   */\n      pop\n        /* \"#utility.yul\":2773:2776   */\n      0x80\n        /* \"#utility.yul\":2800:2853   */\n      tag_71\n        /* \"#utility.yul\":2845:2852   */\n      dup12\n        /* \"#utility.yul\":2836:2842   */\n      dup3\n        /* \"#utility.yul\":2825:2834   */\n      dup13\n        /* \"#utility.yul\":2821:2843   */\n      add\n        /* \"#utility.yul\":2800:2853   */\n      tag_23\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2790:2853   */\n      swap5\n      pop\n        /* \"#utility.yul\":2744:2863   */\n      pop\n        /* \"#utility.yul\":2902:2905   */\n      0xa0\n        /* \"#utility.yul\":2929:2980   */\n      tag_72\n        /* \"#utility.yul\":2972:2979   */\n      dup12\n        /* \"#utility.yul\":2963:2969   */\n      dup3\n        /* \"#utility.yul\":2952:2961   */\n      dup13\n        /* \"#utility.yul\":2948:2970   */\n      add\n        /* \"#utility.yul\":2929:2980   */\n      tag_26\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2919:2980   */\n      swap4\n      pop\n        /* \"#utility.yul\":2873:2990   */\n      pop\n        /* \"#utility.yul\":3029:3032   */\n      0xc0\n        /* \"#utility.yul\":3056:3109   */\n      tag_73\n        /* \"#utility.yul\":3101:3108   */\n      dup12\n        /* \"#utility.yul\":3092:3098   */\n      dup3\n        /* \"#utility.yul\":3081:3090   */\n      dup13\n        /* \"#utility.yul\":3077:3099   */\n      add\n        /* \"#utility.yul\":3056:3109   */\n      tag_29\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":3046:3109   */\n      swap3\n      pop\n        /* \"#utility.yul\":3000:3119   */\n      pop\n        /* \"#utility.yul\":3158:3161   */\n      0xe0\n        /* \"#utility.yul\":3185:3238   */\n      tag_74\n        /* \"#utility.yul\":3230:3237   */\n      dup12\n        /* \"#utility.yul\":3221:3227   */\n      dup3\n        /* \"#utility.yul\":3210:3219   */\n      dup13\n        /* \"#utility.yul\":3206:3228   */\n      add\n        /* \"#utility.yul\":3185:3238   */\n      tag_29\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":3175:3238   */\n      swap2\n      pop\n        /* \"#utility.yul\":3129:3248   */\n      pop\n        /* \"#utility.yul\":1910:3255   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3261:3379   */\n    tag_30:\n        /* \"#utility.yul\":3348:3372   */\n      tag_76\n        /* \"#utility.yul\":3366:3371   */\n      dup2\n        /* \"#utility.yul\":3348:3372   */\n      tag_18\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":3343:3346   */\n      dup3\n        /* \"#utility.yul\":3336:3373   */\n      mstore\n        /* \"#utility.yul\":3261:3379   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3385:3503   */\n    tag_31:\n        /* \"#utility.yul\":3472:3496   */\n      tag_78\n        /* \"#utility.yul\":3490:3495   */\n      dup2\n        /* \"#utility.yul\":3472:3496   */\n      tag_21\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3467:3470   */\n      dup3\n        /* \"#utility.yul\":3460:3497   */\n      mstore\n        /* \"#utility.yul\":3385:3503   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3509:3621   */\n    tag_32:\n        /* \"#utility.yul\":3592:3614   */\n      tag_80\n        /* \"#utility.yul\":3608:3613   */\n      dup2\n        /* \"#utility.yul\":3592:3614   */\n      tag_24\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":3587:3590   */\n      dup3\n        /* \"#utility.yul\":3580:3615   */\n      mstore\n        /* \"#utility.yul\":3509:3621   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3627:3745   */\n    tag_33:\n        /* \"#utility.yul\":3714:3738   */\n      tag_82\n        /* \"#utility.yul\":3732:3737   */\n      dup2\n        /* \"#utility.yul\":3714:3738   */\n      tag_27\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3709:3712   */\n      dup3\n        /* \"#utility.yul\":3702:3739   */\n      mstore\n        /* \"#utility.yul\":3627:3745   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3751:4629   */\n    tag_10:\n        /* \"#utility.yul\":4008:4012   */\n      0x00\n        /* \"#utility.yul\":4046:4049   */\n      0xe0\n        /* \"#utility.yul\":4035:4044   */\n      dup3\n        /* \"#utility.yul\":4031:4050   */\n      add\n        /* \"#utility.yul\":4023:4050   */\n      swap1\n      pop\n        /* \"#utility.yul\":4060:4131   */\n      tag_84\n        /* \"#utility.yul\":4128:4129   */\n      0x00\n        /* \"#utility.yul\":4117:4126   */\n      dup4\n        /* \"#utility.yul\":4113:4130   */\n      add\n        /* \"#utility.yul\":4104:4110   */\n      dup11\n        /* \"#utility.yul\":4060:4131   */\n      tag_30\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":4141:4213   */\n      tag_85\n        /* \"#utility.yul\":4209:4211   */\n      0x20\n        /* \"#utility.yul\":4198:4207   */\n      dup4\n        /* \"#utility.yul\":4194:4212   */\n      add\n        /* \"#utility.yul\":4185:4191   */\n      dup10\n        /* \"#utility.yul\":4141:4213   */\n      tag_30\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":4223:4295   */\n      tag_86\n        /* \"#utility.yul\":4291:4293   */\n      0x40\n        /* \"#utility.yul\":4280:4289   */\n      dup4\n        /* \"#utility.yul\":4276:4294   */\n      add\n        /* \"#utility.yul\":4267:4273   */\n      dup9\n        /* \"#utility.yul\":4223:4295   */\n      tag_31\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":4305:4377   */\n      tag_87\n        /* \"#utility.yul\":4373:4375   */\n      0x60\n        /* \"#utility.yul\":4362:4371   */\n      dup4\n        /* \"#utility.yul\":4358:4376   */\n      add\n        /* \"#utility.yul\":4349:4355   */\n      dup8\n        /* \"#utility.yul\":4305:4377   */\n      tag_31\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":4387:4456   */\n      tag_88\n        /* \"#utility.yul\":4451:4454   */\n      0x80\n        /* \"#utility.yul\":4440:4449   */\n      dup4\n        /* \"#utility.yul\":4436:4455   */\n      add\n        /* \"#utility.yul\":4427:4433   */\n      dup7\n        /* \"#utility.yul\":4387:4456   */\n      tag_32\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":4466:4539   */\n      tag_89\n        /* \"#utility.yul\":4534:4537   */\n      0xa0\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4519:4538   */\n      add\n        /* \"#utility.yul\":4510:4516   */\n      dup6\n        /* \"#utility.yul\":4466:4539   */\n      tag_33\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":4549:4622   */\n      tag_90\n        /* \"#utility.yul\":4617:4620   */\n      0xc0\n        /* \"#utility.yul\":4606:4615   */\n      dup4\n        /* \"#utility.yul\":4602:4621   */\n      add\n        /* \"#utility.yul\":4593:4599   */\n      dup5\n        /* \"#utility.yul\":4549:4622   */\n      tag_33\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3751:4629   */\n      swap9\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122034eab3d676f92f129c4d27a13a44cc24b58d915c1d14e45990a05a726edca6f264736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061034f8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806364246e961461002d575b5f5ffd5b610047600480360381019061004291906101bf565b610049565b005b8773ffffffffffffffffffffffffffffffffffffffff1663d505accf888888888888886040518863ffffffff1660e01b815260040161008e97969594939291906102ac565b5f604051808303815f87803b1580156100a5575f5ffd5b505af11580156100b7573d5f5f3e3d5ffd5b505050505050505050505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100f2826100c9565b9050919050565b610102816100e8565b811461010c575f5ffd5b50565b5f8135905061011d816100f9565b92915050565b5f819050919050565b61013581610123565b811461013f575f5ffd5b50565b5f813590506101508161012c565b92915050565b5f60ff82169050919050565b61016b81610156565b8114610175575f5ffd5b50565b5f8135905061018681610162565b92915050565b5f819050919050565b61019e8161018c565b81146101a8575f5ffd5b50565b5f813590506101b981610195565b92915050565b5f5f5f5f5f5f5f5f610100898b0312156101dc576101db6100c5565b5b5f6101e98b828c0161010f565b98505060206101fa8b828c0161010f565b975050604061020b8b828c0161010f565b965050606061021c8b828c01610142565b955050608061022d8b828c01610142565b94505060a061023e8b828c01610178565b93505060c061024f8b828c016101ab565b92505060e06102608b828c016101ab565b9150509295985092959890939650565b610279816100e8565b82525050565b61028881610123565b82525050565b61029781610156565b82525050565b6102a68161018c565b82525050565b5f60e0820190506102bf5f83018a610270565b6102cc6020830189610270565b6102d9604083018861027f565b6102e6606083018761027f565b6102f3608083018661028e565b61030060a083018561029d565b61030d60c083018461029d565b9897505050505050505056fea264697066735822122034eab3d676f92f129c4d27a13a44cc24b58d915c1d14e45990a05a726edca6f264736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x34F DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64246E96 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF2 DUP3 PUSH2 0xC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102 DUP2 PUSH2 0xE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x10C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D DUP2 PUSH2 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135 DUP2 PUSH2 0x123 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150 DUP2 PUSH2 0x12C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B DUP2 PUSH2 0x156 JUMP JUMPDEST DUP2 EQ PUSH2 0x175 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x186 DUP2 PUSH2 0x162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E DUP2 PUSH2 0x18C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9 DUP2 PUSH2 0x195 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1DC JUMPI PUSH2 0x1DB PUSH2 0xC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E9 DUP12 DUP3 DUP13 ADD PUSH2 0x10F JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1FA DUP12 DUP3 DUP13 ADD PUSH2 0x10F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x20B DUP12 DUP3 DUP13 ADD PUSH2 0x10F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x21C DUP12 DUP3 DUP13 ADD PUSH2 0x142 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x22D DUP12 DUP3 DUP13 ADD PUSH2 0x142 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x23E DUP12 DUP3 DUP13 ADD PUSH2 0x178 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x24F DUP12 DUP3 DUP13 ADD PUSH2 0x1AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x260 DUP12 DUP3 DUP13 ADD PUSH2 0x1AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x279 DUP2 PUSH2 0xE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x156 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x18C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2BF PUSH0 DUP4 ADD DUP11 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x2F3 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x28E JUMP JUMPDEST PUSH2 0x300 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x30D PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x29D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xEA 0xB3 0xD6 PUSH23 0xF92F129C4D27A13A44CC24B58D915C1D14E45990A05A72 PUSH15 0xDCA6F264736F6C634300081D003300 ",
							"sourceMap": "139:334:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@permitApprove_74": {
									"entryPoint": 73,
									"id": 74,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 427,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4632:3",
										"nodeType": "YulBlock",
										"src": "0:4632:3",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:3",
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nativeSrc": "57:19:3",
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:3",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nativeSrc": "67:9:3",
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:3",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:3",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nativeSrc": "177:28:3",
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:3",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:3",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nativeSrc": "187:12:3",
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nativeSrc": "187:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nativeSrc": "300:28:3",
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:3",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:3",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nativeSrc": "310:12:3",
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nativeSrc": "310:12:3",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:3",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nativeSrc": "379:81:3",
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nativeSrc": "389:65:3",
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:3",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nativeSrc": "400:54:3",
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:3",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:3",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nativeSrc": "511:51:3",
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nativeSrc": "521:35:3",
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nativeSrc": "532:24:3",
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:3",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:3",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nativeSrc": "611:79:3",
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:3",
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:3",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:3",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nativeSrc": "670:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nativeSrc": "670:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nativeSrc": "641:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nativeSrc": "631:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nativeSrc": "624:43:3",
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nativeSrc": "621:63:3",
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:3",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nativeSrc": "748:87:3",
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nativeSrc": "758:29:3",
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nativeSrc": "767:20:3",
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nativeSrc": "796:33:3",
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nativeSrc": "796:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:3",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:3",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:3",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nativeSrc": "886:32:3",
													"nodeType": "YulBlock",
													"src": "886:32:3",
													"statements": [
														{
															"nativeSrc": "896:16:3",
															"nodeType": "YulAssignment",
															"src": "896:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:3",
																"nodeType": "YulIdentifier",
																"src": "907:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:3",
														"nodeType": "YulTypedName",
														"src": "868:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:3",
														"nodeType": "YulTypedName",
														"src": "878:7:3",
														"type": ""
													}
												],
												"src": "841:77:3"
											},
											{
												"body": {
													"nativeSrc": "967:79:3",
													"nodeType": "YulBlock",
													"src": "967:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:3",
																"nodeType": "YulBlock",
																"src": "1024:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:3"
																			},
																			"nativeSrc": "1026:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:3"
																		},
																		"nativeSrc": "1026:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:3"
																				},
																				"nativeSrc": "997:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:3"
																		},
																		"nativeSrc": "987:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:3"
																},
																"nativeSrc": "980:43:3",
																"nodeType": "YulFunctionCall",
																"src": "980:43:3"
															},
															"nativeSrc": "977:63:3",
															"nodeType": "YulIf",
															"src": "977:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:3",
														"nodeType": "YulTypedName",
														"src": "960:5:3",
														"type": ""
													}
												],
												"src": "924:122:3"
											},
											{
												"body": {
													"nativeSrc": "1104:87:3",
													"nodeType": "YulBlock",
													"src": "1104:87:3",
													"statements": [
														{
															"nativeSrc": "1114:29:3",
															"nodeType": "YulAssignment",
															"src": "1114:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:3"
																},
																"nativeSrc": "1123:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:3"
																},
																"nativeSrc": "1152:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:3"
															},
															"nativeSrc": "1152:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:3",
														"nodeType": "YulTypedName",
														"src": "1082:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:3",
														"nodeType": "YulTypedName",
														"src": "1090:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:3",
														"nodeType": "YulTypedName",
														"src": "1098:5:3",
														"type": ""
													}
												],
												"src": "1052:139:3"
											},
											{
												"body": {
													"nativeSrc": "1240:43:3",
													"nodeType": "YulBlock",
													"src": "1240:43:3",
													"statements": [
														{
															"nativeSrc": "1250:27:3",
															"nodeType": "YulAssignment",
															"src": "1250:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1265:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1265:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1272:4:3",
																		"nodeType": "YulLiteral",
																		"src": "1272:4:3",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1261:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1261:3:3"
																},
																"nativeSrc": "1261:16:3",
																"nodeType": "YulFunctionCall",
																"src": "1261:16:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1250:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1250:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "1197:86:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1222:5:3",
														"nodeType": "YulTypedName",
														"src": "1222:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1232:7:3",
														"nodeType": "YulTypedName",
														"src": "1232:7:3",
														"type": ""
													}
												],
												"src": "1197:86:3"
											},
											{
												"body": {
													"nativeSrc": "1330:77:3",
													"nodeType": "YulBlock",
													"src": "1330:77:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1385:16:3",
																"nodeType": "YulBlock",
																"src": "1385:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1394:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1394:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1397:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1397:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1387:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1387:6:3"
																			},
																			"nativeSrc": "1387:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1387:12:3"
																		},
																		"nativeSrc": "1387:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1387:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1353:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1353:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1376:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1376:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "1360:15:3",
																					"nodeType": "YulIdentifier",
																					"src": "1360:15:3"
																				},
																				"nativeSrc": "1360:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1360:22:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1350:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1350:2:3"
																		},
																		"nativeSrc": "1350:33:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1350:33:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1343:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:3"
																},
																"nativeSrc": "1343:41:3",
																"nodeType": "YulFunctionCall",
																"src": "1343:41:3"
															},
															"nativeSrc": "1340:61:3",
															"nodeType": "YulIf",
															"src": "1340:61:3"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "1289:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1323:5:3",
														"nodeType": "YulTypedName",
														"src": "1323:5:3",
														"type": ""
													}
												],
												"src": "1289:118:3"
											},
											{
												"body": {
													"nativeSrc": "1463:85:3",
													"nodeType": "YulBlock",
													"src": "1463:85:3",
													"statements": [
														{
															"nativeSrc": "1473:29:3",
															"nodeType": "YulAssignment",
															"src": "1473:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1495:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1495:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1482:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1482:12:3"
																},
																"nativeSrc": "1482:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1482:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1473:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1473:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1536:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1536:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "1511:24:3",
																	"nodeType": "YulIdentifier",
																	"src": "1511:24:3"
																},
																"nativeSrc": "1511:31:3",
																"nodeType": "YulFunctionCall",
																"src": "1511:31:3"
															},
															"nativeSrc": "1511:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "1511:31:3"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "1413:135:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1441:6:3",
														"nodeType": "YulTypedName",
														"src": "1441:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1449:3:3",
														"nodeType": "YulTypedName",
														"src": "1449:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1457:5:3",
														"nodeType": "YulTypedName",
														"src": "1457:5:3",
														"type": ""
													}
												],
												"src": "1413:135:3"
											},
											{
												"body": {
													"nativeSrc": "1599:32:3",
													"nodeType": "YulBlock",
													"src": "1599:32:3",
													"statements": [
														{
															"nativeSrc": "1609:16:3",
															"nodeType": "YulAssignment",
															"src": "1609:16:3",
															"value": {
																"name": "value",
																"nativeSrc": "1620:5:3",
																"nodeType": "YulIdentifier",
																"src": "1620:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1609:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "1609:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1554:77:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1581:5:3",
														"nodeType": "YulTypedName",
														"src": "1581:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1591:7:3",
														"nodeType": "YulTypedName",
														"src": "1591:7:3",
														"type": ""
													}
												],
												"src": "1554:77:3"
											},
											{
												"body": {
													"nativeSrc": "1680:79:3",
													"nodeType": "YulBlock",
													"src": "1680:79:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "1737:16:3",
																"nodeType": "YulBlock",
																"src": "1737:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1746:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1746:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1749:1:3",
																					"nodeType": "YulLiteral",
																					"src": "1749:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1739:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1739:6:3"
																			},
																			"nativeSrc": "1739:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1739:12:3"
																		},
																		"nativeSrc": "1739:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "1739:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1703:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "1703:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1728:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "1728:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1710:17:3",
																					"nodeType": "YulIdentifier",
																					"src": "1710:17:3"
																				},
																				"nativeSrc": "1710:24:3",
																				"nodeType": "YulFunctionCall",
																				"src": "1710:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1700:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "1700:2:3"
																		},
																		"nativeSrc": "1700:35:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1700:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:3"
																},
																"nativeSrc": "1693:43:3",
																"nodeType": "YulFunctionCall",
																"src": "1693:43:3"
															},
															"nativeSrc": "1690:63:3",
															"nodeType": "YulIf",
															"src": "1690:63:3"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1637:122:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1673:5:3",
														"nodeType": "YulTypedName",
														"src": "1673:5:3",
														"type": ""
													}
												],
												"src": "1637:122:3"
											},
											{
												"body": {
													"nativeSrc": "1817:87:3",
													"nodeType": "YulBlock",
													"src": "1817:87:3",
													"statements": [
														{
															"nativeSrc": "1827:29:3",
															"nodeType": "YulAssignment",
															"src": "1827:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1849:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1849:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1836:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "1836:12:3"
																},
																"nativeSrc": "1836:20:3",
																"nodeType": "YulFunctionCall",
																"src": "1836:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1827:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1827:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1865:26:3",
																	"nodeType": "YulIdentifier",
																	"src": "1865:26:3"
																},
																"nativeSrc": "1865:33:3",
																"nodeType": "YulFunctionCall",
																"src": "1865:33:3"
															},
															"nativeSrc": "1865:33:3",
															"nodeType": "YulExpressionStatement",
															"src": "1865:33:3"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1765:139:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1795:6:3",
														"nodeType": "YulTypedName",
														"src": "1795:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1803:3:3",
														"nodeType": "YulTypedName",
														"src": "1803:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1811:5:3",
														"nodeType": "YulTypedName",
														"src": "1811:5:3",
														"type": ""
													}
												],
												"src": "1765:139:3"
											},
											{
												"body": {
													"nativeSrc": "2093:1162:3",
													"nodeType": "YulBlock",
													"src": "2093:1162:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2140:83:3",
																"nodeType": "YulBlock",
																"src": "2140:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2142:77:3",
																				"nodeType": "YulIdentifier",
																				"src": "2142:77:3"
																			},
																			"nativeSrc": "2142:79:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2142:79:3"
																		},
																		"nativeSrc": "2142:79:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2142:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2114:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2114:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2123:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2123:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2110:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2110:3:3"
																		},
																		"nativeSrc": "2110:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2110:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2135:3:3",
																		"nodeType": "YulLiteral",
																		"src": "2135:3:3",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2106:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2106:3:3"
																},
																"nativeSrc": "2106:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2106:33:3"
															},
															"nativeSrc": "2103:120:3",
															"nodeType": "YulIf",
															"src": "2103:120:3"
														},
														{
															"nativeSrc": "2233:117:3",
															"nodeType": "YulBlock",
															"src": "2233:117:3",
															"statements": [
																{
																	"nativeSrc": "2248:15:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2248:15:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2262:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2262:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2252:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2252:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2277:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2277:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2312:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2312:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2323:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2323:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2308:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2308:3:3"
																				},
																				"nativeSrc": "2308:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2308:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2332:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2332:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2287:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2287:20:3"
																		},
																		"nativeSrc": "2287:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2287:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2277:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2277:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2360:118:3",
															"nodeType": "YulBlock",
															"src": "2360:118:3",
															"statements": [
																{
																	"nativeSrc": "2375:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2375:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2389:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2389:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2379:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2379:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2405:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2405:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2440:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2440:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2451:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2451:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2436:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2436:3:3"
																				},
																				"nativeSrc": "2436:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2436:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2460:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2460:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2415:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2415:20:3"
																		},
																		"nativeSrc": "2415:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2415:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2405:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2405:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2488:118:3",
															"nodeType": "YulBlock",
															"src": "2488:118:3",
															"statements": [
																{
																	"nativeSrc": "2503:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2503:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2517:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2517:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2507:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2507:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2533:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2533:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2568:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2568:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2579:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2579:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2564:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2564:3:3"
																				},
																				"nativeSrc": "2564:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2564:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2588:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2588:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2543:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2543:20:3"
																		},
																		"nativeSrc": "2543:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2543:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2533:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2533:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2616:118:3",
															"nodeType": "YulBlock",
															"src": "2616:118:3",
															"statements": [
																{
																	"nativeSrc": "2631:16:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2631:16:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2645:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2645:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2635:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2635:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2661:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2661:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2696:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2696:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2707:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2707:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2692:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2692:3:3"
																				},
																				"nativeSrc": "2692:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2692:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2716:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2716:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2671:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2671:20:3"
																		},
																		"nativeSrc": "2671:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "2661:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2661:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2744:119:3",
															"nodeType": "YulBlock",
															"src": "2744:119:3",
															"statements": [
																{
																	"nativeSrc": "2759:17:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2759:17:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2773:3:3",
																		"nodeType": "YulLiteral",
																		"src": "2773:3:3",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2763:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2763:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2790:63:3",
																	"nodeType": "YulAssignment",
																	"src": "2790:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2825:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2825:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2836:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2836:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2821:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2821:3:3"
																				},
																				"nativeSrc": "2821:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2821:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2845:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2845:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2800:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "2800:20:3"
																		},
																		"nativeSrc": "2800:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2800:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "2790:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2790:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2873:117:3",
															"nodeType": "YulBlock",
															"src": "2873:117:3",
															"statements": [
																{
																	"nativeSrc": "2888:17:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2888:17:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2902:3:3",
																		"nodeType": "YulLiteral",
																		"src": "2902:3:3",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2892:6:3",
																			"nodeType": "YulTypedName",
																			"src": "2892:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2919:61:3",
																	"nodeType": "YulAssignment",
																	"src": "2919:61:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2952:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "2952:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2963:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2963:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2948:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2948:3:3"
																				},
																				"nativeSrc": "2948:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "2948:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2972:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2972:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "2929:18:3",
																			"nodeType": "YulIdentifier",
																			"src": "2929:18:3"
																		},
																		"nativeSrc": "2929:51:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2929:51:3"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nativeSrc": "2919:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "2919:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3000:119:3",
															"nodeType": "YulBlock",
															"src": "3000:119:3",
															"statements": [
																{
																	"nativeSrc": "3015:17:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3015:17:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3029:3:3",
																		"nodeType": "YulLiteral",
																		"src": "3029:3:3",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3019:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3019:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3046:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3046:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3081:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3081:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3092:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3092:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3077:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3077:3:3"
																				},
																				"nativeSrc": "3077:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3077:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3101:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3101:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3056:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3056:20:3"
																		},
																		"nativeSrc": "3056:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3056:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nativeSrc": "3046:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3046:6:3"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3129:119:3",
															"nodeType": "YulBlock",
															"src": "3129:119:3",
															"statements": [
																{
																	"nativeSrc": "3144:17:3",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3144:17:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3158:3:3",
																		"nodeType": "YulLiteral",
																		"src": "3158:3:3",
																		"type": "",
																		"value": "224"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3148:6:3",
																			"nodeType": "YulTypedName",
																			"src": "3148:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3175:63:3",
																	"nodeType": "YulAssignment",
																	"src": "3175:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3210:9:3",
																						"nodeType": "YulIdentifier",
																						"src": "3210:9:3"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3221:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3221:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3206:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3206:3:3"
																				},
																				"nativeSrc": "3206:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3206:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3230:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3230:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3185:20:3",
																			"nodeType": "YulIdentifier",
																			"src": "3185:20:3"
																		},
																		"nativeSrc": "3185:53:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3185:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value7",
																			"nativeSrc": "3175:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "3175:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nativeSrc": "1910:1345:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2007:9:3",
														"nodeType": "YulTypedName",
														"src": "2007:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2018:7:3",
														"nodeType": "YulTypedName",
														"src": "2018:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2030:6:3",
														"nodeType": "YulTypedName",
														"src": "2030:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2038:6:3",
														"nodeType": "YulTypedName",
														"src": "2038:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2046:6:3",
														"nodeType": "YulTypedName",
														"src": "2046:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2054:6:3",
														"nodeType": "YulTypedName",
														"src": "2054:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2062:6:3",
														"nodeType": "YulTypedName",
														"src": "2062:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2070:6:3",
														"nodeType": "YulTypedName",
														"src": "2070:6:3",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "2078:6:3",
														"nodeType": "YulTypedName",
														"src": "2078:6:3",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "2086:6:3",
														"nodeType": "YulTypedName",
														"src": "2086:6:3",
														"type": ""
													}
												],
												"src": "1910:1345:3"
											},
											{
												"body": {
													"nativeSrc": "3326:53:3",
													"nodeType": "YulBlock",
													"src": "3326:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3343:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3343:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3366:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3366:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3348:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3348:17:3"
																		},
																		"nativeSrc": "3348:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3348:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3336:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3336:6:3"
																},
																"nativeSrc": "3336:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3336:37:3"
															},
															"nativeSrc": "3336:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3336:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3261:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3314:5:3",
														"nodeType": "YulTypedName",
														"src": "3314:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3321:3:3",
														"nodeType": "YulTypedName",
														"src": "3321:3:3",
														"type": ""
													}
												],
												"src": "3261:118:3"
											},
											{
												"body": {
													"nativeSrc": "3450:53:3",
													"nodeType": "YulBlock",
													"src": "3450:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3467:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3467:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3490:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3490:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3472:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3472:17:3"
																		},
																		"nativeSrc": "3472:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3460:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3460:6:3"
																},
																"nativeSrc": "3460:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3460:37:3"
															},
															"nativeSrc": "3460:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3460:37:3"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3385:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3438:5:3",
														"nodeType": "YulTypedName",
														"src": "3438:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3445:3:3",
														"nodeType": "YulTypedName",
														"src": "3445:3:3",
														"type": ""
													}
												],
												"src": "3385:118:3"
											},
											{
												"body": {
													"nativeSrc": "3570:51:3",
													"nodeType": "YulBlock",
													"src": "3570:51:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3587:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3587:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3608:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3608:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "3592:15:3",
																			"nodeType": "YulIdentifier",
																			"src": "3592:15:3"
																		},
																		"nativeSrc": "3592:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3592:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3580:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3580:6:3"
																},
																"nativeSrc": "3580:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3580:35:3"
															},
															"nativeSrc": "3580:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "3580:35:3"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "3509:112:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3558:5:3",
														"nodeType": "YulTypedName",
														"src": "3558:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3565:3:3",
														"nodeType": "YulTypedName",
														"src": "3565:3:3",
														"type": ""
													}
												],
												"src": "3509:112:3"
											},
											{
												"body": {
													"nativeSrc": "3692:53:3",
													"nodeType": "YulBlock",
													"src": "3692:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3709:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "3709:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3732:5:3",
																				"nodeType": "YulIdentifier",
																				"src": "3732:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "3714:17:3",
																			"nodeType": "YulIdentifier",
																			"src": "3714:17:3"
																		},
																		"nativeSrc": "3714:24:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3714:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3702:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3702:6:3"
																},
																"nativeSrc": "3702:37:3",
																"nodeType": "YulFunctionCall",
																"src": "3702:37:3"
															},
															"nativeSrc": "3702:37:3",
															"nodeType": "YulExpressionStatement",
															"src": "3702:37:3"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "3627:118:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3680:5:3",
														"nodeType": "YulTypedName",
														"src": "3680:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3687:3:3",
														"nodeType": "YulTypedName",
														"src": "3687:3:3",
														"type": ""
													}
												],
												"src": "3627:118:3"
											},
											{
												"body": {
													"nativeSrc": "4013:616:3",
													"nodeType": "YulBlock",
													"src": "4013:616:3",
													"statements": [
														{
															"nativeSrc": "4023:27:3",
															"nodeType": "YulAssignment",
															"src": "4023:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4035:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4035:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4046:3:3",
																		"nodeType": "YulLiteral",
																		"src": "4046:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4031:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4031:3:3"
																},
																"nativeSrc": "4031:19:3",
																"nodeType": "YulFunctionCall",
																"src": "4031:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4023:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4023:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4104:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4117:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4117:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4128:1:3",
																				"nodeType": "YulLiteral",
																				"src": "4128:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4113:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4113:3:3"
																		},
																		"nativeSrc": "4113:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4113:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4060:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4060:43:3"
																},
																"nativeSrc": "4060:71:3",
																"nodeType": "YulFunctionCall",
																"src": "4060:71:3"
															},
															"nativeSrc": "4060:71:3",
															"nodeType": "YulExpressionStatement",
															"src": "4060:71:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4185:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4185:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4198:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4198:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4209:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4209:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4194:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4194:3:3"
																		},
																		"nativeSrc": "4194:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4194:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4141:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4141:43:3"
																},
																"nativeSrc": "4141:72:3",
																"nodeType": "YulFunctionCall",
																"src": "4141:72:3"
															},
															"nativeSrc": "4141:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "4141:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4267:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4267:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4280:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4280:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4291:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4291:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4276:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4276:3:3"
																		},
																		"nativeSrc": "4276:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4276:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4223:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4223:43:3"
																},
																"nativeSrc": "4223:72:3",
																"nodeType": "YulFunctionCall",
																"src": "4223:72:3"
															},
															"nativeSrc": "4223:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "4223:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4349:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4362:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4362:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4373:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4373:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4358:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4358:3:3"
																		},
																		"nativeSrc": "4358:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4358:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4305:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4305:43:3"
																},
																"nativeSrc": "4305:72:3",
																"nodeType": "YulFunctionCall",
																"src": "4305:72:3"
															},
															"nativeSrc": "4305:72:3",
															"nodeType": "YulExpressionStatement",
															"src": "4305:72:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4427:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4427:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4440:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4440:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4451:3:3",
																				"nodeType": "YulLiteral",
																				"src": "4451:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4436:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4436:3:3"
																		},
																		"nativeSrc": "4436:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4436:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4387:39:3",
																	"nodeType": "YulIdentifier",
																	"src": "4387:39:3"
																},
																"nativeSrc": "4387:69:3",
																"nodeType": "YulFunctionCall",
																"src": "4387:69:3"
															},
															"nativeSrc": "4387:69:3",
															"nodeType": "YulExpressionStatement",
															"src": "4387:69:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "4510:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4510:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4534:3:3",
																				"nodeType": "YulLiteral",
																				"src": "4534:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4519:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4519:3:3"
																		},
																		"nativeSrc": "4519:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4519:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4466:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4466:43:3"
																},
																"nativeSrc": "4466:73:3",
																"nodeType": "YulFunctionCall",
																"src": "4466:73:3"
															},
															"nativeSrc": "4466:73:3",
															"nodeType": "YulExpressionStatement",
															"src": "4466:73:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nativeSrc": "4593:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4593:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4606:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4606:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4617:3:3",
																				"nodeType": "YulLiteral",
																				"src": "4617:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4602:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4602:3:3"
																		},
																		"nativeSrc": "4602:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4602:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "4549:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "4549:43:3"
																},
																"nativeSrc": "4549:73:3",
																"nodeType": "YulFunctionCall",
																"src": "4549:73:3"
															},
															"nativeSrc": "4549:73:3",
															"nodeType": "YulExpressionStatement",
															"src": "4549:73:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nativeSrc": "3751:878:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3937:9:3",
														"nodeType": "YulTypedName",
														"src": "3937:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "3949:6:3",
														"nodeType": "YulTypedName",
														"src": "3949:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "3957:6:3",
														"nodeType": "YulTypedName",
														"src": "3957:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3965:6:3",
														"nodeType": "YulTypedName",
														"src": "3965:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3973:6:3",
														"nodeType": "YulTypedName",
														"src": "3973:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3981:6:3",
														"nodeType": "YulTypedName",
														"src": "3981:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3989:6:3",
														"nodeType": "YulTypedName",
														"src": "3989:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3997:6:3",
														"nodeType": "YulTypedName",
														"src": "3997:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4008:4:3",
														"nodeType": "YulTypedName",
														"src": "4008:4:3",
														"type": ""
													}
												],
												"src": "3751:878:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 256) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value6,  add(headStart, 192))\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c806364246e961461002d575b5f5ffd5b610047600480360381019061004291906101bf565b610049565b005b8773ffffffffffffffffffffffffffffffffffffffff1663d505accf888888888888886040518863ffffffff1660e01b815260040161008e97969594939291906102ac565b5f604051808303815f87803b1580156100a5575f5ffd5b505af11580156100b7573d5f5f3e3d5ffd5b505050505050505050505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100f2826100c9565b9050919050565b610102816100e8565b811461010c575f5ffd5b50565b5f8135905061011d816100f9565b92915050565b5f819050919050565b61013581610123565b811461013f575f5ffd5b50565b5f813590506101508161012c565b92915050565b5f60ff82169050919050565b61016b81610156565b8114610175575f5ffd5b50565b5f8135905061018681610162565b92915050565b5f819050919050565b61019e8161018c565b81146101a8575f5ffd5b50565b5f813590506101b981610195565b92915050565b5f5f5f5f5f5f5f5f610100898b0312156101dc576101db6100c5565b5b5f6101e98b828c0161010f565b98505060206101fa8b828c0161010f565b975050604061020b8b828c0161010f565b965050606061021c8b828c01610142565b955050608061022d8b828c01610142565b94505060a061023e8b828c01610178565b93505060c061024f8b828c016101ab565b92505060e06102608b828c016101ab565b9150509295985092959890939650565b610279816100e8565b82525050565b61028881610123565b82525050565b61029781610156565b82525050565b6102a68161018c565b82525050565b5f60e0820190506102bf5f83018a610270565b6102cc6020830189610270565b6102d9604083018861027f565b6102e6606083018761027f565b6102f3608083018661028e565b61030060a083018561029d565b61030d60c083018461029d565b9897505050505050505056fea264697066735822122034eab3d676f92f129c4d27a13a44cc24b58d915c1d14e45990a05a726edca6f264736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64246E96 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD505ACCF DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP9 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB7 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF2 DUP3 PUSH2 0xC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102 DUP2 PUSH2 0xE8 JUMP JUMPDEST DUP2 EQ PUSH2 0x10C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11D DUP2 PUSH2 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x135 DUP2 PUSH2 0x123 JUMP JUMPDEST DUP2 EQ PUSH2 0x13F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150 DUP2 PUSH2 0x12C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B DUP2 PUSH2 0x156 JUMP JUMPDEST DUP2 EQ PUSH2 0x175 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x186 DUP2 PUSH2 0x162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E DUP2 PUSH2 0x18C JUMP JUMPDEST DUP2 EQ PUSH2 0x1A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B9 DUP2 PUSH2 0x195 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x1DC JUMPI PUSH2 0x1DB PUSH2 0xC5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E9 DUP12 DUP3 DUP13 ADD PUSH2 0x10F JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1FA DUP12 DUP3 DUP13 ADD PUSH2 0x10F JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x20B DUP12 DUP3 DUP13 ADD PUSH2 0x10F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x21C DUP12 DUP3 DUP13 ADD PUSH2 0x142 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 PUSH2 0x22D DUP12 DUP3 DUP13 ADD PUSH2 0x142 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xA0 PUSH2 0x23E DUP12 DUP3 DUP13 ADD PUSH2 0x178 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xC0 PUSH2 0x24F DUP12 DUP3 DUP13 ADD PUSH2 0x1AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0xE0 PUSH2 0x260 DUP12 DUP3 DUP13 ADD PUSH2 0x1AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH2 0x279 DUP2 PUSH2 0xE8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x288 DUP2 PUSH2 0x123 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x297 DUP2 PUSH2 0x156 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2A6 DUP2 PUSH2 0x18C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x2BF PUSH0 DUP4 ADD DUP11 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x2CC PUSH1 0x20 DUP4 ADD DUP10 PUSH2 0x270 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x2E6 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x27F JUMP JUMPDEST PUSH2 0x2F3 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x28E JUMP JUMPDEST PUSH2 0x300 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x30D PUSH1 0xC0 DUP4 ADD DUP5 PUSH2 0x29D JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE 0xEA 0xB3 0xD6 PUSH23 0xF92F129C4D27A13A44CC24B58D915C1D14E45990A05A72 PUSH15 0xDCA6F264736F6C634300081D003300 ",
							"sourceMap": "139:334:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;173:298;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;409:5;396:26;;;423:5;430:7;439:5;446:8;456:1;459;462;396:68;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;173:298;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:86::-;1232:7;1272:4;1265:5;1261:16;1250:27;;1197:86;;;:::o;1289:118::-;1360:22;1376:5;1360:22;:::i;:::-;1353:5;1350:33;1340:61;;1397:1;1394;1387:12;1340:61;1289:118;:::o;1413:135::-;1457:5;1495:6;1482:20;1473:29;;1511:31;1536:5;1511:31;:::i;:::-;1413:135;;;;:::o;1554:77::-;1591:7;1620:5;1609:16;;1554:77;;;:::o;1637:122::-;1710:24;1728:5;1710:24;:::i;:::-;1703:5;1700:35;1690:63;;1749:1;1746;1739:12;1690:63;1637:122;:::o;1765:139::-;1811:5;1849:6;1836:20;1827:29;;1865:33;1892:5;1865:33;:::i;:::-;1765:139;;;;:::o;1910:1345::-;2030:6;2038;2046;2054;2062;2070;2078;2086;2135:3;2123:9;2114:7;2110:23;2106:33;2103:120;;;2142:79;;:::i;:::-;2103:120;2262:1;2287:53;2332:7;2323:6;2312:9;2308:22;2287:53;:::i;:::-;2277:63;;2233:117;2389:2;2415:53;2460:7;2451:6;2440:9;2436:22;2415:53;:::i;:::-;2405:63;;2360:118;2517:2;2543:53;2588:7;2579:6;2568:9;2564:22;2543:53;:::i;:::-;2533:63;;2488:118;2645:2;2671:53;2716:7;2707:6;2696:9;2692:22;2671:53;:::i;:::-;2661:63;;2616:118;2773:3;2800:53;2845:7;2836:6;2825:9;2821:22;2800:53;:::i;:::-;2790:63;;2744:119;2902:3;2929:51;2972:7;2963:6;2952:9;2948:22;2929:51;:::i;:::-;2919:61;;2873:117;3029:3;3056:53;3101:7;3092:6;3081:9;3077:22;3056:53;:::i;:::-;3046:63;;3000:119;3158:3;3185:53;3230:7;3221:6;3210:9;3206:22;3185:53;:::i;:::-;3175:63;;3129:119;1910:1345;;;;;;;;;;;:::o;3261:118::-;3348:24;3366:5;3348:24;:::i;:::-;3343:3;3336:37;3261:118;;:::o;3385:::-;3472:24;3490:5;3472:24;:::i;:::-;3467:3;3460:37;3385:118;;:::o;3509:112::-;3592:22;3608:5;3592:22;:::i;:::-;3587:3;3580:35;3509:112;;:::o;3627:118::-;3714:24;3732:5;3714:24;:::i;:::-;3709:3;3702:37;3627:118;;:::o;3751:878::-;4008:4;4046:3;4035:9;4031:19;4023:27;;4060:71;4128:1;4117:9;4113:17;4104:6;4060:71;:::i;:::-;4141:72;4209:2;4198:9;4194:18;4185:6;4141:72;:::i;:::-;4223;4291:2;4280:9;4276:18;4267:6;4223:72;:::i;:::-;4305;4373:2;4362:9;4358:18;4349:6;4305:72;:::i;:::-;4387:69;4451:3;4440:9;4436:19;4427:6;4387:69;:::i;:::-;4466:73;4534:3;4523:9;4519:19;4510:6;4466:73;:::i;:::-;4549;4617:3;4606:9;4602:19;4593:6;4549:73;:::i;:::-;3751:878;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "169400",
								"executionCost": "212",
								"totalCost": "169612"
							},
							"external": {
								"permitApprove(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 139,
									"end": 473,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 139,
									"end": 473,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034eab3d676f92f129c4d27a13a44cc24b58d915c1d14e45990a05a726edca6f264736f6c634300081d0033",
									".code": [
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "64246E96"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 473,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 471,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 471,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 471,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 173,
											"end": 471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 409,
											"end": 414,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 396,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 396,
											"end": 422,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 396,
											"end": 422,
											"name": "PUSH",
											"source": 2,
											"value": "D505ACCF"
										},
										{
											"begin": 423,
											"end": 428,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 430,
											"end": 437,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 439,
											"end": 444,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 446,
											"end": 454,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 456,
											"end": 457,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 462,
											"end": 463,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 396,
											"end": 464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 396,
											"end": 464,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 396,
											"end": 464,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 173,
											"end": 471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1283,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1283,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1232,
											"end": 1239,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1265,
											"end": 1270,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1261,
											"end": 1277,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1250,
											"end": 1277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1283,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1283,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1283,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1407,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1289,
											"end": 1407,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1360,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1360,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1358,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1350,
											"end": 1383,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1340,
											"end": 1401,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1397,
											"end": 1398,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1394,
											"end": 1395,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1399,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1340,
											"end": 1401,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 1340,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1407,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1289,
											"end": 1407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1548,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1413,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1457,
											"end": 1462,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1501,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1482,
											"end": 1502,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1502,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1473,
											"end": 1502,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1536,
											"end": 1541,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1511,
											"end": 1542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1511,
											"end": 1542,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1511,
											"end": 1542,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1548,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1548,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1548,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1413,
											"end": 1548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1631,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1554,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1591,
											"end": 1598,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1625,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1609,
											"end": 1625,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1609,
											"end": 1625,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1631,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1631,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1631,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1554,
											"end": 1631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1759,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1637,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1728,
											"end": 1733,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1710,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1710,
											"end": 1734,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1710,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1700,
											"end": 1735,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1690,
											"end": 1753,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1751,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1690,
											"end": 1753,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 1690,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1759,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1637,
											"end": 1759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1856,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1856,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1856,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 1865,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1765,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2030,
											"end": 2036,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2038,
											"end": 2044,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2054,
											"end": 2060,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2062,
											"end": 2068,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2076,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2092,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2135,
											"end": 2138,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2123,
											"end": 2132,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2114,
											"end": 2121,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2110,
											"end": 2133,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2106,
											"end": 2139,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2223,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2103,
											"end": 2223,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2142,
											"end": 2221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 2142,
											"end": 2221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2223,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 2103,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2262,
											"end": 2263,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2332,
											"end": 2339,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2323,
											"end": 2329,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2308,
											"end": 2330,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2287,
											"end": 2340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 2287,
											"end": 2340,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2340,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 2277,
											"end": 2340,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2233,
											"end": 2350,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2389,
											"end": 2391,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2451,
											"end": 2457,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2440,
											"end": 2449,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2436,
											"end": 2458,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2415,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2415,
											"end": 2468,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 2415,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2468,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 2405,
											"end": 2468,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2360,
											"end": 2478,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2517,
											"end": 2519,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2543,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2588,
											"end": 2595,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2579,
											"end": 2585,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2568,
											"end": 2577,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2564,
											"end": 2586,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2543,
											"end": 2596,
											"name": "tag",
											"source": 3,
											"value": "69"
										},
										{
											"begin": 2543,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2596,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 2533,
											"end": 2596,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2488,
											"end": 2606,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2645,
											"end": 2647,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2671,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2716,
											"end": 2723,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2707,
											"end": 2713,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2696,
											"end": 2705,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2692,
											"end": 2714,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2671,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2671,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2671,
											"end": 2724,
											"name": "tag",
											"source": 3,
											"value": "70"
										},
										{
											"begin": 2671,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2724,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2661,
											"end": 2724,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2616,
											"end": 2734,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2773,
											"end": 2776,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2845,
											"end": 2852,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2836,
											"end": 2842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2825,
											"end": 2834,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2821,
											"end": 2843,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2800,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "71"
										},
										{
											"begin": 2800,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2853,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 2790,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2744,
											"end": 2863,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 2929,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2972,
											"end": 2979,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2963,
											"end": 2969,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2952,
											"end": 2961,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2948,
											"end": 2970,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2929,
											"end": 2980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2980,
											"name": "tag",
											"source": 3,
											"value": "72"
										},
										{
											"begin": 2929,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 2980,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2919,
											"end": 2980,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2873,
											"end": 2990,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3081,
											"end": 3090,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3077,
											"end": 3099,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3056,
											"end": 3109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "tag",
											"source": 3,
											"value": "73"
										},
										{
											"begin": 3056,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3046,
											"end": 3109,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3000,
											"end": 3119,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3158,
											"end": 3161,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 3185,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3230,
											"end": 3237,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3210,
											"end": 3219,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3206,
											"end": 3228,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3238,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 3185,
											"end": 3238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3185,
											"end": 3238,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 3185,
											"end": 3238,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3238,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3175,
											"end": 3238,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3129,
											"end": 3248,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1910,
											"end": 3255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3379,
											"name": "tag",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3261,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3366,
											"end": 3371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 3348,
											"end": 3372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "tag",
											"source": 3,
											"value": "76"
										},
										{
											"begin": 3348,
											"end": 3372,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3343,
											"end": 3346,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3336,
											"end": 3373,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3379,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3261,
											"end": 3379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3503,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 3385,
											"end": 3503,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3490,
											"end": 3495,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3496,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3472,
											"end": 3496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3496,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 3472,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3467,
											"end": 3470,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3460,
											"end": 3497,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3503,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3385,
											"end": 3503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3621,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 3509,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3608,
											"end": 3613,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3592,
											"end": 3614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3592,
											"end": 3614,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3592,
											"end": 3614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3587,
											"end": 3590,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3580,
											"end": 3615,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3621,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3745,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 3627,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3732,
											"end": 3737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3714,
											"end": 3738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3714,
											"end": 3738,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 3714,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3709,
											"end": 3712,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3702,
											"end": 3739,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4008,
											"end": 4012,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4046,
											"end": 4049,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 4035,
											"end": 4044,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4031,
											"end": 4050,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4023,
											"end": 4050,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4023,
											"end": 4050,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4128,
											"end": 4129,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4117,
											"end": 4126,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4113,
											"end": 4130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4104,
											"end": 4110,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4131,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4060,
											"end": 4131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4060,
											"end": 4131,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4060,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4209,
											"end": 4211,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4207,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4194,
											"end": 4212,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4185,
											"end": 4191,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4141,
											"end": 4213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4141,
											"end": 4213,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4141,
											"end": 4213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4291,
											"end": 4293,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4267,
											"end": 4273,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4295,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4223,
											"end": 4295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4223,
											"end": 4295,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4223,
											"end": 4295,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4373,
											"end": 4375,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4362,
											"end": 4371,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4358,
											"end": 4376,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 4305,
											"end": 4377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4305,
											"end": 4377,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4305,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4451,
											"end": 4454,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4440,
											"end": 4449,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4436,
											"end": 4455,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4427,
											"end": 4433,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 4387,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4387,
											"end": 4456,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4387,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4534,
											"end": 4537,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4519,
											"end": 4538,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4466,
											"end": 4539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4466,
											"end": 4539,
											"name": "tag",
											"source": 3,
											"value": "89"
										},
										{
											"begin": 4466,
											"end": 4539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4617,
											"end": 4620,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4602,
											"end": 4621,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4593,
											"end": 4599,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4549,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "tag",
											"source": 3,
											"value": "90"
										},
										{
											"begin": 4549,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3751,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"I/Permit-Based Approval (ERC2612).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"permitApprove(address,address,address,uint256,uint256,uint8,bytes32,bytes32)": "64246e96"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permitApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"I/Permit-Based Approval (ERC2612).sol\":\"PermitBasedSpender\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x27dbc90e5136ffe46c04f7596fc2dbcc3acebd8d504da3d93fdb8496e6de04f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea8b92e4245d75a5579c10f22f118f7b4ba07c57341f181f0b2a85ff8663de3\",\"dweb:/ipfs/Qme3Ss5ByjmkxxkMdLpyu7fQ1PCtjNFH1wEFszt2BZePiG\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xc7134e0f63b0adcee02bf4b15efb2d0d4b1c03ae0d127dc90d846da4cab23a76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5265dd0f6809e9fbb0ca8da7a5cd0940fcf6d8fcd4df20fbac942617d17b8d6\",\"dweb:/ipfs/QmS1gFsXoZ3uCEH6mfuRVvhE235WTGA8ttSWSs6Ehc9DUb\"]},\"I/Permit-Based Approval (ERC2612).sol\":{\"keccak256\":\"0x15a1c049cd00f58a528776238383a88caf0c18b3a43cc41a7f2cf1129465e2e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a2232c24e84d29891907422e1ee38a4c2ba05d914b76edda53be65632710dd5\",\"dweb:/ipfs/QmTjx6DB1yapR7urUnp5ZspsQhNMiew6wfvQF8SXvvswRo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							35
						]
					},
					"id": 36,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "149:1965:0",
								"text": " @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "IERC20Permit",
							"nameLocation": "2125:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "2144:850:0",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3008:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3032:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "3024:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3055:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "3047:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3080:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "3072:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3072:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3103:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "3095:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3127:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "3121:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 12,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3146:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "3138:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 14,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3165:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "3157:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3014:158:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:0:0"
									},
									"scope": 35,
									"src": "2999:183:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "3188:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 28,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3496:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3511:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "3503:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3503:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3502:15:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "3541:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:9:0"
									},
									"scope": 35,
									"src": "3487:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "3556:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3751:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3767:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "3793:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3793:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3792:9:0"
									},
									"scope": 35,
									"src": "3742:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 36,
							"src": "2115:1689:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3682:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							35
						]
					},
					"id": 39,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 37,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "129:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "./IERC20Permit.sol",
							"id": 38,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 39,
							"sourceUnit": 36,
							"src": "219:28:1",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "129:119:1"
				},
				"id": 1
			},
			"I/Permit-Based Approval (ERC2612).sol": {
				"ast": {
					"absolutePath": "I/Permit-Based Approval (ERC2612).sol",
					"exportedSymbols": {
						"IERC20Permit": [
							35
						],
						"PermitBasedSpender": [
							75
						]
					},
					"id": 76,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 40,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"id": 41,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 76,
							"sourceUnit": 39,
							"src": "58:79:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PermitBasedSpender",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 75,
							"linearizedBaseContracts": [
								75
							],
							"name": "PermitBasedSpender",
							"nameLocation": "148:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "386:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 64,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "423:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 65,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 47,
															"src": "430:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 66,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "439:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 67,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "446:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 68,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "456:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 69,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 55,
															"src": "459:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 70,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 57,
															"src": "462:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 61,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "409:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 60,
																"name": "IERC20Permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "396:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Permit_$35_$",
																	"typeString": "type(contract IERC20Permit)"
																}
															},
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "396:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$35",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "416:6:2",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "396:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "396:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "396:68:2"
											}
										]
									},
									"functionSelector": "64246e96",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "permitApprove",
									"nameLocation": "182:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "213:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "205:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "205:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "236:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "228:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "228:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "259:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "251:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "251:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "284:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "276:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "307:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "299:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "299:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "331:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "325:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 52,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "325:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "350:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "342:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 54,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "369:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "361:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 56,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "195:181:2"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "386:0:2"
									},
									"scope": 75,
									"src": "173:298:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 76,
							"src": "139:334:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:442:2"
				},
				"id": 2
			}
		}
	}
}