{
	"id": "f6d12db383d297c5abbd97fd3d6bc874",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"I/Auto-Approval on Deposit.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract InfiniteApprovalOnDeposit {\n    mapping(address => bool) public autoApproved;\n\n    function depositAndApprove(address token, address spender, uint256 amount) external {\n        IERC20(token).transferFrom(msg.sender, address(this), amount);\n\n        if (!autoApproved[msg.sender]) {\n            IERC20(token).approve(spender, type(uint256).max);\n            autoApproved[msg.sender] = true;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"I/Auto-Approval on Deposit.sol": {
				"InfiniteApprovalOnDeposit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "autoApproved",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositAndApprove",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"I/Auto-Approval on Deposit.sol\":116:532  contract InfiniteApprovalOnDeposit {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"I/Auto-Approval on Deposit.sol\":116:532  contract InfiniteApprovalOnDeposit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7df67090\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa0052a8e\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"I/Auto-Approval on Deposit.sol\":208:530  function depositAndApprove(address token, address spender, uint256 amount) external {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"I/Auto-Approval on Deposit.sol\":157:201  mapping(address => bool) public autoApproved */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"I/Auto-Approval on Deposit.sol\":208:530  function depositAndApprove(address token, address spender, uint256 amount) external {... */\n    tag_8:\n        /* \"I/Auto-Approval on Deposit.sol\":309:314  token */\n      dup3\n        /* \"I/Auto-Approval on Deposit.sol\":302:328  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"I/Auto-Approval on Deposit.sol\":329:339  msg.sender */\n      caller\n        /* \"I/Auto-Approval on Deposit.sol\":349:353  this */\n      address\n        /* \"I/Auto-Approval on Deposit.sol\":356:362  amount */\n      dup5\n        /* \"I/Auto-Approval on Deposit.sol\":302:363  IERC20(token).transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_20\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      pop\n        /* \"I/Auto-Approval on Deposit.sol\":379:391  autoApproved */\n      0x00\n        /* \"I/Auto-Approval on Deposit.sol\":379:403  autoApproved[msg.sender] */\n      0x00\n        /* \"I/Auto-Approval on Deposit.sol\":392:402  msg.sender */\n      caller\n        /* \"I/Auto-Approval on Deposit.sol\":379:403  autoApproved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"I/Auto-Approval on Deposit.sol\":374:524  if (!autoApproved[msg.sender]) {... */\n      tag_22\n      jumpi\n        /* \"I/Auto-Approval on Deposit.sol\":426:431  token */\n      dup3\n        /* \"I/Auto-Approval on Deposit.sol\":419:440  IERC20(token).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"I/Auto-Approval on Deposit.sol\":441:448  spender */\n      dup4\n        /* \"I/Auto-Approval on Deposit.sol\":450:467  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"I/Auto-Approval on Deposit.sol\":419:468  IERC20(token).approve(spender, type(uint256).max) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_23\n      swap3\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_27:\n      pop\n        /* \"I/Auto-Approval on Deposit.sol\":509:513  true */\n      0x01\n        /* \"I/Auto-Approval on Deposit.sol\":482:494  autoApproved */\n      0x00\n        /* \"I/Auto-Approval on Deposit.sol\":482:506  autoApproved[msg.sender] */\n      0x00\n        /* \"I/Auto-Approval on Deposit.sol\":495:505  msg.sender */\n      caller\n        /* \"I/Auto-Approval on Deposit.sol\":482:506  autoApproved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"I/Auto-Approval on Deposit.sol\":482:513  autoApproved[msg.sender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"I/Auto-Approval on Deposit.sol\":374:524  if (!autoApproved[msg.sender]) {... */\n    tag_22:\n        /* \"I/Auto-Approval on Deposit.sol\":208:530  function depositAndApprove(address token, address spender, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"I/Auto-Approval on Deposit.sol\":157:201  mapping(address => bool) public autoApproved */\n    tag_12:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_29:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_31:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_32:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_50\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_31\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_33:\n        /* \"#utility.yul\":641:665   */\n      tag_52\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_32\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_53:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_34:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_55\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_33\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_35:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_36:\n        /* \"#utility.yul\":997:1021   */\n      tag_58\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_35\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_59:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_37:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_61\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_36\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1816   */\n    tag_7:\n        /* \"#utility.yul\":1274:1280   */\n      0x00\n        /* \"#utility.yul\":1282:1288   */\n      0x00\n        /* \"#utility.yul\":1290:1296   */\n      0x00\n        /* \"#utility.yul\":1339:1341   */\n      0x60\n        /* \"#utility.yul\":1327:1336   */\n      dup5\n        /* \"#utility.yul\":1318:1325   */\n      dup7\n        /* \"#utility.yul\":1314:1337   */\n      sub\n        /* \"#utility.yul\":1310:1342   */\n      slt\n        /* \"#utility.yul\":1307:1426   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":1345:1424   */\n      tag_64\n      tag_29\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1307:1426   */\n    tag_63:\n        /* \"#utility.yul\":1465:1466   */\n      0x00\n        /* \"#utility.yul\":1490:1543   */\n      tag_65\n        /* \"#utility.yul\":1535:1542   */\n      dup7\n        /* \"#utility.yul\":1526:1532   */\n      dup3\n        /* \"#utility.yul\":1515:1524   */\n      dup8\n        /* \"#utility.yul\":1511:1533   */\n      add\n        /* \"#utility.yul\":1490:1543   */\n      tag_34\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":1480:1543   */\n      swap4\n      pop\n        /* \"#utility.yul\":1436:1553   */\n      pop\n        /* \"#utility.yul\":1592:1594   */\n      0x20\n        /* \"#utility.yul\":1618:1671   */\n      tag_66\n        /* \"#utility.yul\":1663:1670   */\n      dup7\n        /* \"#utility.yul\":1654:1660   */\n      dup3\n        /* \"#utility.yul\":1643:1652   */\n      dup8\n        /* \"#utility.yul\":1639:1661   */\n      add\n        /* \"#utility.yul\":1618:1671   */\n      tag_34\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1608:1671   */\n      swap3\n      pop\n        /* \"#utility.yul\":1563:1681   */\n      pop\n        /* \"#utility.yul\":1720:1722   */\n      0x40\n        /* \"#utility.yul\":1746:1799   */\n      tag_67\n        /* \"#utility.yul\":1791:1798   */\n      dup7\n        /* \"#utility.yul\":1782:1788   */\n      dup3\n        /* \"#utility.yul\":1771:1780   */\n      dup8\n        /* \"#utility.yul\":1767:1789   */\n      add\n        /* \"#utility.yul\":1746:1799   */\n      tag_37\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1736:1799   */\n      swap2\n      pop\n        /* \"#utility.yul\":1691:1809   */\n      pop\n        /* \"#utility.yul\":1197:1816   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1822:2151   */\n    tag_11:\n        /* \"#utility.yul\":1881:1887   */\n      0x00\n        /* \"#utility.yul\":1930:1932   */\n      0x20\n        /* \"#utility.yul\":1918:1927   */\n      dup3\n        /* \"#utility.yul\":1909:1916   */\n      dup5\n        /* \"#utility.yul\":1905:1928   */\n      sub\n        /* \"#utility.yul\":1901:1933   */\n      slt\n        /* \"#utility.yul\":1898:2017   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1936:2015   */\n      tag_70\n      tag_29\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1898:2017   */\n    tag_69:\n        /* \"#utility.yul\":2056:2057   */\n      0x00\n        /* \"#utility.yul\":2081:2134   */\n      tag_71\n        /* \"#utility.yul\":2126:2133   */\n      dup5\n        /* \"#utility.yul\":2117:2123   */\n      dup3\n        /* \"#utility.yul\":2106:2115   */\n      dup6\n        /* \"#utility.yul\":2102:2124   */\n      add\n        /* \"#utility.yul\":2081:2134   */\n      tag_34\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2071:2134   */\n      swap2\n      pop\n        /* \"#utility.yul\":2027:2144   */\n      pop\n        /* \"#utility.yul\":1822:2151   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2157:2247   */\n    tag_38:\n        /* \"#utility.yul\":2191:2198   */\n      0x00\n        /* \"#utility.yul\":2234:2239   */\n      dup2\n        /* \"#utility.yul\":2227:2240   */\n      iszero\n        /* \"#utility.yul\":2220:2241   */\n      iszero\n        /* \"#utility.yul\":2209:2241   */\n      swap1\n      pop\n        /* \"#utility.yul\":2157:2247   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2253:2362   */\n    tag_39:\n        /* \"#utility.yul\":2334:2355   */\n      tag_74\n        /* \"#utility.yul\":2349:2354   */\n      dup2\n        /* \"#utility.yul\":2334:2355   */\n      tag_38\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":2329:2332   */\n      dup3\n        /* \"#utility.yul\":2322:2356   */\n      mstore\n        /* \"#utility.yul\":2253:2362   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2368:2578   */\n    tag_14:\n        /* \"#utility.yul\":2455:2459   */\n      0x00\n        /* \"#utility.yul\":2493:2495   */\n      0x20\n        /* \"#utility.yul\":2482:2491   */\n      dup3\n        /* \"#utility.yul\":2478:2496   */\n      add\n        /* \"#utility.yul\":2470:2496   */\n      swap1\n      pop\n        /* \"#utility.yul\":2506:2571   */\n      tag_76\n        /* \"#utility.yul\":2568:2569   */\n      0x00\n        /* \"#utility.yul\":2557:2566   */\n      dup4\n        /* \"#utility.yul\":2553:2570   */\n      add\n        /* \"#utility.yul\":2544:2550   */\n      dup5\n        /* \"#utility.yul\":2506:2571   */\n      tag_39\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2368:2578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2584:2702   */\n    tag_40:\n        /* \"#utility.yul\":2671:2695   */\n      tag_78\n        /* \"#utility.yul\":2689:2694   */\n      dup2\n        /* \"#utility.yul\":2671:2695   */\n      tag_32\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2666:2669   */\n      dup3\n        /* \"#utility.yul\":2659:2696   */\n      mstore\n        /* \"#utility.yul\":2584:2702   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2708:2826   */\n    tag_41:\n        /* \"#utility.yul\":2795:2819   */\n      tag_80\n        /* \"#utility.yul\":2813:2818   */\n      dup2\n        /* \"#utility.yul\":2795:2819   */\n      tag_35\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2790:2793   */\n      dup3\n        /* \"#utility.yul\":2783:2820   */\n      mstore\n        /* \"#utility.yul\":2708:2826   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2832:3274   */\n    tag_17:\n        /* \"#utility.yul\":2981:2985   */\n      0x00\n        /* \"#utility.yul\":3019:3021   */\n      0x60\n        /* \"#utility.yul\":3008:3017   */\n      dup3\n        /* \"#utility.yul\":3004:3022   */\n      add\n        /* \"#utility.yul\":2996:3022   */\n      swap1\n      pop\n        /* \"#utility.yul\":3032:3103   */\n      tag_82\n        /* \"#utility.yul\":3100:3101   */\n      0x00\n        /* \"#utility.yul\":3089:3098   */\n      dup4\n        /* \"#utility.yul\":3085:3102   */\n      add\n        /* \"#utility.yul\":3076:3082   */\n      dup7\n        /* \"#utility.yul\":3032:3103   */\n      tag_40\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3113:3185   */\n      tag_83\n        /* \"#utility.yul\":3181:3183   */\n      0x20\n        /* \"#utility.yul\":3170:3179   */\n      dup4\n        /* \"#utility.yul\":3166:3184   */\n      add\n        /* \"#utility.yul\":3157:3163   */\n      dup6\n        /* \"#utility.yul\":3113:3185   */\n      tag_40\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":3195:3267   */\n      tag_84\n        /* \"#utility.yul\":3263:3265   */\n      0x40\n        /* \"#utility.yul\":3252:3261   */\n      dup4\n        /* \"#utility.yul\":3248:3266   */\n      add\n        /* \"#utility.yul\":3239:3245   */\n      dup5\n        /* \"#utility.yul\":3195:3267   */\n      tag_41\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2832:3274   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3280:3396   */\n    tag_42:\n        /* \"#utility.yul\":3350:3371   */\n      tag_86\n        /* \"#utility.yul\":3365:3370   */\n      dup2\n        /* \"#utility.yul\":3350:3371   */\n      tag_38\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3343:3348   */\n      dup2\n        /* \"#utility.yul\":3340:3372   */\n      eq\n        /* \"#utility.yul\":3330:3390   */\n      tag_87\n      jumpi\n        /* \"#utility.yul\":3386:3387   */\n      0x00\n        /* \"#utility.yul\":3383:3384   */\n      0x00\n        /* \"#utility.yul\":3376:3388   */\n      revert\n        /* \"#utility.yul\":3330:3390   */\n    tag_87:\n        /* \"#utility.yul\":3280:3396   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3402:3539   */\n    tag_43:\n        /* \"#utility.yul\":3456:3461   */\n      0x00\n        /* \"#utility.yul\":3487:3493   */\n      dup2\n        /* \"#utility.yul\":3481:3494   */\n      mload\n        /* \"#utility.yul\":3472:3494   */\n      swap1\n      pop\n        /* \"#utility.yul\":3503:3533   */\n      tag_89\n        /* \"#utility.yul\":3527:3532   */\n      dup2\n        /* \"#utility.yul\":3503:3533   */\n      tag_42\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":3402:3539   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3545:3890   */\n    tag_21:\n        /* \"#utility.yul\":3612:3618   */\n      0x00\n        /* \"#utility.yul\":3661:3663   */\n      0x20\n        /* \"#utility.yul\":3649:3658   */\n      dup3\n        /* \"#utility.yul\":3640:3647   */\n      dup5\n        /* \"#utility.yul\":3636:3659   */\n      sub\n        /* \"#utility.yul\":3632:3664   */\n      slt\n        /* \"#utility.yul\":3629:3748   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":3667:3746   */\n      tag_92\n      tag_29\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3629:3748   */\n    tag_91:\n        /* \"#utility.yul\":3787:3788   */\n      0x00\n        /* \"#utility.yul\":3812:3873   */\n      tag_93\n        /* \"#utility.yul\":3865:3872   */\n      dup5\n        /* \"#utility.yul\":3856:3862   */\n      dup3\n        /* \"#utility.yul\":3845:3854   */\n      dup6\n        /* \"#utility.yul\":3841:3863   */\n      add\n        /* \"#utility.yul\":3812:3873   */\n      tag_43\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3802:3873   */\n      swap2\n      pop\n        /* \"#utility.yul\":3758:3883   */\n      pop\n        /* \"#utility.yul\":3545:3890   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3896:4228   */\n    tag_24:\n        /* \"#utility.yul\":4017:4021   */\n      0x00\n        /* \"#utility.yul\":4055:4057   */\n      0x40\n        /* \"#utility.yul\":4044:4053   */\n      dup3\n        /* \"#utility.yul\":4040:4058   */\n      add\n        /* \"#utility.yul\":4032:4058   */\n      swap1\n      pop\n        /* \"#utility.yul\":4068:4139   */\n      tag_95\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4125:4134   */\n      dup4\n        /* \"#utility.yul\":4121:4138   */\n      add\n        /* \"#utility.yul\":4112:4118   */\n      dup6\n        /* \"#utility.yul\":4068:4139   */\n      tag_40\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":4149:4221   */\n      tag_96\n        /* \"#utility.yul\":4217:4219   */\n      0x20\n        /* \"#utility.yul\":4206:4215   */\n      dup4\n        /* \"#utility.yul\":4202:4220   */\n      add\n        /* \"#utility.yul\":4193:4199   */\n      dup5\n        /* \"#utility.yul\":4149:4221   */\n      tag_41\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3896:4228   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220073cd09cac0796c2a5243cc567b8c0edb2f0aa64f113b2c1f8fb2e140b87931a64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506104a58061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80637df6709014610038578063a0052a8e14610054575b5f5ffd5b610052600480360381019061004d91906102f2565b610084565b005b61006e60048036038101906100699190610342565b610245565b60405161007b9190610387565b60405180910390f35b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100c1939291906103be565b6020604051808303815f875af11580156100dd573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610101919061041d565b505f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610240578273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016101aa929190610448565b6020604051808303815f875af11580156101c6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ea919061041d565b5060015f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b505050565b5f602052805f5260405f205f915054906101000a900460ff1681565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61028e82610265565b9050919050565b61029e81610284565b81146102a8575f5ffd5b50565b5f813590506102b981610295565b92915050565b5f819050919050565b6102d1816102bf565b81146102db575f5ffd5b50565b5f813590506102ec816102c8565b92915050565b5f5f5f6060848603121561030957610308610261565b5b5f610316868287016102ab565b9350506020610327868287016102ab565b9250506040610338868287016102de565b9150509250925092565b5f6020828403121561035757610356610261565b5b5f610364848285016102ab565b91505092915050565b5f8115159050919050565b6103818161036d565b82525050565b5f60208201905061039a5f830184610378565b92915050565b6103a981610284565b82525050565b6103b8816102bf565b82525050565b5f6060820190506103d15f8301866103a0565b6103de60208301856103a0565b6103eb60408301846103af565b949350505050565b6103fc8161036d565b8114610406575f5ffd5b50565b5f81519050610417816103f3565b92915050565b5f6020828403121561043257610431610261565b5b5f61043f84828501610409565b91505092915050565b5f60408201905061045b5f8301856103a0565b61046860208301846103af565b939250505056fea2646970667358221220073cd09cac0796c2a5243cc567b8c0edb2f0aa64f113b2c1f8fb2e140b87931a64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4A5 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DF67090 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xA0052A8E EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST POP PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP3 SWAP2 SWAP1 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST POP PUSH1 0x1 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28E DUP3 PUSH2 0x265 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E DUP2 PUSH2 0x284 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B9 DUP2 PUSH2 0x295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 DUP2 PUSH2 0x2BF JUMP JUMPDEST DUP2 EQ PUSH2 0x2DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x309 JUMPI PUSH2 0x308 PUSH2 0x261 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x316 DUP7 DUP3 DUP8 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x327 DUP7 DUP3 DUP8 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x338 DUP7 DUP3 DUP8 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x261 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x364 DUP5 DUP3 DUP6 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x381 DUP2 PUSH2 0x36D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39A PUSH0 DUP4 ADD DUP5 PUSH2 0x378 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A9 DUP2 PUSH2 0x284 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3B8 DUP2 PUSH2 0x2BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D1 PUSH0 DUP4 ADD DUP7 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3DE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3EB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3FC DUP2 PUSH2 0x36D JUMP JUMPDEST DUP2 EQ PUSH2 0x406 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x417 DUP2 PUSH2 0x3F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x261 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x43F DUP5 DUP3 DUP6 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x45B PUSH0 DUP4 ADD DUP6 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x468 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD EXTCODECOPY 0xD0 SWAP13 0xAC SMOD SWAP7 0xC2 0xA5 0x24 EXTCODECOPY 0xC5 PUSH8 0xB8C0EDB2F0AA64F1 SGT 0xB2 0xC1 EXTCALL EXTSTATICCALL 0x2E EQ SIGNEXTEND DUP8 SWAP4 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "116:416:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@autoApproved_84": {
									"entryPoint": 581,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositAndApprove_133": {
									"entryPoint": 132,
									"id": 133,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 734,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 958,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 609,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4231:2",
										"nodeType": "YulBlock",
										"src": "0:4231:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "886:32:2",
													"nodeType": "YulBlock",
													"src": "886:32:2",
													"statements": [
														{
															"nativeSrc": "896:16:2",
															"nodeType": "YulAssignment",
															"src": "896:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:2",
																"nodeType": "YulIdentifier",
																"src": "907:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:2",
														"nodeType": "YulTypedName",
														"src": "868:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:2",
														"nodeType": "YulTypedName",
														"src": "878:7:2",
														"type": ""
													}
												],
												"src": "841:77:2"
											},
											{
												"body": {
													"nativeSrc": "967:79:2",
													"nodeType": "YulBlock",
													"src": "967:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:2",
																"nodeType": "YulBlock",
																"src": "1024:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:2"
																			},
																			"nativeSrc": "1026:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:2"
																		},
																		"nativeSrc": "1026:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:2"
																				},
																				"nativeSrc": "997:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:2"
																		},
																		"nativeSrc": "987:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:2"
																},
																"nativeSrc": "980:43:2",
																"nodeType": "YulFunctionCall",
																"src": "980:43:2"
															},
															"nativeSrc": "977:63:2",
															"nodeType": "YulIf",
															"src": "977:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:2",
														"nodeType": "YulTypedName",
														"src": "960:5:2",
														"type": ""
													}
												],
												"src": "924:122:2"
											},
											{
												"body": {
													"nativeSrc": "1104:87:2",
													"nodeType": "YulBlock",
													"src": "1104:87:2",
													"statements": [
														{
															"nativeSrc": "1114:29:2",
															"nodeType": "YulAssignment",
															"src": "1114:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:2"
																},
																"nativeSrc": "1123:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:2"
																},
																"nativeSrc": "1152:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:2"
															},
															"nativeSrc": "1152:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:2",
														"nodeType": "YulTypedName",
														"src": "1082:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:2",
														"nodeType": "YulTypedName",
														"src": "1090:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:2",
														"nodeType": "YulTypedName",
														"src": "1098:5:2",
														"type": ""
													}
												],
												"src": "1052:139:2"
											},
											{
												"body": {
													"nativeSrc": "1297:519:2",
													"nodeType": "YulBlock",
													"src": "1297:519:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1343:83:2",
																"nodeType": "YulBlock",
																"src": "1343:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1345:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1345:77:2"
																			},
																			"nativeSrc": "1345:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1345:79:2"
																		},
																		"nativeSrc": "1345:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1345:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1318:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1318:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1327:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1327:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1314:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:2"
																		},
																		"nativeSrc": "1314:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1314:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1339:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1310:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1310:3:2"
																},
																"nativeSrc": "1310:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1310:32:2"
															},
															"nativeSrc": "1307:119:2",
															"nodeType": "YulIf",
															"src": "1307:119:2"
														},
														{
															"nativeSrc": "1436:117:2",
															"nodeType": "YulBlock",
															"src": "1436:117:2",
															"statements": [
																{
																	"nativeSrc": "1451:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1451:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1465:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1465:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1455:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1455:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1480:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1480:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1515:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1515:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1526:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1526:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1511:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1511:3:2"
																				},
																				"nativeSrc": "1511:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1511:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1490:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1490:20:2"
																		},
																		"nativeSrc": "1490:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1490:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1480:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1480:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1563:118:2",
															"nodeType": "YulBlock",
															"src": "1563:118:2",
															"statements": [
																{
																	"nativeSrc": "1578:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1578:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1592:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1592:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1582:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1582:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1608:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1608:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1643:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1643:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1654:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1654:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1639:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1639:3:2"
																				},
																				"nativeSrc": "1639:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1639:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1663:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1663:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1618:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1618:20:2"
																		},
																		"nativeSrc": "1618:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1618:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1608:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1608:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1691:118:2",
															"nodeType": "YulBlock",
															"src": "1691:118:2",
															"statements": [
																{
																	"nativeSrc": "1706:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1706:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1720:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1720:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1710:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1710:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1736:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1736:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1771:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1771:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1782:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1782:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1767:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1767:3:2"
																				},
																				"nativeSrc": "1767:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1767:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1791:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1791:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1746:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1746:20:2"
																		},
																		"nativeSrc": "1746:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1746:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1736:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1736:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1197:619:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1251:9:2",
														"nodeType": "YulTypedName",
														"src": "1251:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1262:7:2",
														"nodeType": "YulTypedName",
														"src": "1262:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1274:6:2",
														"nodeType": "YulTypedName",
														"src": "1274:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1282:6:2",
														"nodeType": "YulTypedName",
														"src": "1282:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1290:6:2",
														"nodeType": "YulTypedName",
														"src": "1290:6:2",
														"type": ""
													}
												],
												"src": "1197:619:2"
											},
											{
												"body": {
													"nativeSrc": "1888:263:2",
													"nodeType": "YulBlock",
													"src": "1888:263:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1934:83:2",
																"nodeType": "YulBlock",
																"src": "1934:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1936:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1936:77:2"
																			},
																			"nativeSrc": "1936:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1936:79:2"
																		},
																		"nativeSrc": "1936:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1936:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1909:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1909:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1918:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1918:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1905:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1905:3:2"
																		},
																		"nativeSrc": "1905:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1905:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1930:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1930:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1901:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1901:3:2"
																},
																"nativeSrc": "1901:32:2",
																"nodeType": "YulFunctionCall",
																"src": "1901:32:2"
															},
															"nativeSrc": "1898:119:2",
															"nodeType": "YulIf",
															"src": "1898:119:2"
														},
														{
															"nativeSrc": "2027:117:2",
															"nodeType": "YulBlock",
															"src": "2027:117:2",
															"statements": [
																{
																	"nativeSrc": "2042:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2042:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2056:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2056:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2046:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2046:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2071:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2071:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2106:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2106:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2117:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2117:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2102:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2102:3:2"
																				},
																				"nativeSrc": "2102:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2102:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2126:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2126:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2081:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2081:20:2"
																		},
																		"nativeSrc": "2081:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2071:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2071:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1822:329:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1858:9:2",
														"nodeType": "YulTypedName",
														"src": "1858:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1869:7:2",
														"nodeType": "YulTypedName",
														"src": "1869:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1881:6:2",
														"nodeType": "YulTypedName",
														"src": "1881:6:2",
														"type": ""
													}
												],
												"src": "1822:329:2"
											},
											{
												"body": {
													"nativeSrc": "2199:48:2",
													"nodeType": "YulBlock",
													"src": "2199:48:2",
													"statements": [
														{
															"nativeSrc": "2209:32:2",
															"nodeType": "YulAssignment",
															"src": "2209:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2234:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2234:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2227:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2227:6:2"
																		},
																		"nativeSrc": "2227:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2227:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2220:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2220:6:2"
																},
																"nativeSrc": "2220:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2220:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2209:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2209:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2157:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2181:5:2",
														"nodeType": "YulTypedName",
														"src": "2181:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2191:7:2",
														"nodeType": "YulTypedName",
														"src": "2191:7:2",
														"type": ""
													}
												],
												"src": "2157:90:2"
											},
											{
												"body": {
													"nativeSrc": "2312:50:2",
													"nodeType": "YulBlock",
													"src": "2312:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2329:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2329:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2349:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2349:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2334:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "2334:14:2"
																		},
																		"nativeSrc": "2334:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2334:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2322:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:2"
																},
																"nativeSrc": "2322:34:2",
																"nodeType": "YulFunctionCall",
																"src": "2322:34:2"
															},
															"nativeSrc": "2322:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "2322:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2253:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2300:5:2",
														"nodeType": "YulTypedName",
														"src": "2300:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2307:3:2",
														"nodeType": "YulTypedName",
														"src": "2307:3:2",
														"type": ""
													}
												],
												"src": "2253:109:2"
											},
											{
												"body": {
													"nativeSrc": "2460:118:2",
													"nodeType": "YulBlock",
													"src": "2460:118:2",
													"statements": [
														{
															"nativeSrc": "2470:26:2",
															"nodeType": "YulAssignment",
															"src": "2470:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2482:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2482:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2493:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2493:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2478:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2478:3:2"
																},
																"nativeSrc": "2478:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2478:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2470:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2470:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2544:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2544:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2557:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2557:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2568:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2553:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2553:3:2"
																		},
																		"nativeSrc": "2553:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2553:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2506:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "2506:37:2"
																},
																"nativeSrc": "2506:65:2",
																"nodeType": "YulFunctionCall",
																"src": "2506:65:2"
															},
															"nativeSrc": "2506:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "2506:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "2368:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2432:9:2",
														"nodeType": "YulTypedName",
														"src": "2432:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2444:6:2",
														"nodeType": "YulTypedName",
														"src": "2444:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2455:4:2",
														"nodeType": "YulTypedName",
														"src": "2455:4:2",
														"type": ""
													}
												],
												"src": "2368:210:2"
											},
											{
												"body": {
													"nativeSrc": "2649:53:2",
													"nodeType": "YulBlock",
													"src": "2649:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2666:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2666:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2689:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2689:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2671:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2671:17:2"
																		},
																		"nativeSrc": "2671:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2659:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2659:6:2"
																},
																"nativeSrc": "2659:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2659:37:2"
															},
															"nativeSrc": "2659:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2659:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2584:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2637:5:2",
														"nodeType": "YulTypedName",
														"src": "2637:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2644:3:2",
														"nodeType": "YulTypedName",
														"src": "2644:3:2",
														"type": ""
													}
												],
												"src": "2584:118:2"
											},
											{
												"body": {
													"nativeSrc": "2773:53:2",
													"nodeType": "YulBlock",
													"src": "2773:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2790:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2790:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2813:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2813:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2795:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2795:17:2"
																		},
																		"nativeSrc": "2795:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2795:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2783:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:2"
																},
																"nativeSrc": "2783:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2783:37:2"
															},
															"nativeSrc": "2783:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2783:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2708:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2761:5:2",
														"nodeType": "YulTypedName",
														"src": "2761:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2768:3:2",
														"nodeType": "YulTypedName",
														"src": "2768:3:2",
														"type": ""
													}
												],
												"src": "2708:118:2"
											},
											{
												"body": {
													"nativeSrc": "2986:288:2",
													"nodeType": "YulBlock",
													"src": "2986:288:2",
													"statements": [
														{
															"nativeSrc": "2996:26:2",
															"nodeType": "YulAssignment",
															"src": "2996:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3008:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3008:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3019:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3019:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3004:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3004:3:2"
																},
																"nativeSrc": "3004:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3004:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2996:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2996:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3076:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3076:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3089:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3089:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3100:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3100:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3085:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:2"
																		},
																		"nativeSrc": "3085:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3085:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3032:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "3032:43:2"
																},
																"nativeSrc": "3032:71:2",
																"nodeType": "YulFunctionCall",
																"src": "3032:71:2"
															},
															"nativeSrc": "3032:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "3032:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3157:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3157:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3170:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3170:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3181:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3181:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3166:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3166:3:2"
																		},
																		"nativeSrc": "3166:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3166:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3113:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "3113:43:2"
																},
																"nativeSrc": "3113:72:2",
																"nodeType": "YulFunctionCall",
																"src": "3113:72:2"
															},
															"nativeSrc": "3113:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "3113:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3239:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3239:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3252:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3252:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3263:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3263:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3248:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3248:3:2"
																		},
																		"nativeSrc": "3248:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3248:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3195:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "3195:43:2"
																},
																"nativeSrc": "3195:72:2",
																"nodeType": "YulFunctionCall",
																"src": "3195:72:2"
															},
															"nativeSrc": "3195:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "3195:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2832:442:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2942:9:2",
														"nodeType": "YulTypedName",
														"src": "2942:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2954:6:2",
														"nodeType": "YulTypedName",
														"src": "2954:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2962:6:2",
														"nodeType": "YulTypedName",
														"src": "2962:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2970:6:2",
														"nodeType": "YulTypedName",
														"src": "2970:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2981:4:2",
														"nodeType": "YulTypedName",
														"src": "2981:4:2",
														"type": ""
													}
												],
												"src": "2832:442:2"
											},
											{
												"body": {
													"nativeSrc": "3320:76:2",
													"nodeType": "YulBlock",
													"src": "3320:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3374:16:2",
																"nodeType": "YulBlock",
																"src": "3374:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3383:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3383:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3386:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3386:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3376:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3376:6:2"
																			},
																			"nativeSrc": "3376:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3376:12:2"
																		},
																		"nativeSrc": "3376:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3376:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3343:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3343:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3365:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "3365:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3350:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "3350:14:2"
																				},
																				"nativeSrc": "3350:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3350:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3340:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3340:2:2"
																		},
																		"nativeSrc": "3340:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3340:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3333:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3333:6:2"
																},
																"nativeSrc": "3333:40:2",
																"nodeType": "YulFunctionCall",
																"src": "3333:40:2"
															},
															"nativeSrc": "3330:60:2",
															"nodeType": "YulIf",
															"src": "3330:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3280:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3313:5:2",
														"nodeType": "YulTypedName",
														"src": "3313:5:2",
														"type": ""
													}
												],
												"src": "3280:116:2"
											},
											{
												"body": {
													"nativeSrc": "3462:77:2",
													"nodeType": "YulBlock",
													"src": "3462:77:2",
													"statements": [
														{
															"nativeSrc": "3472:22:2",
															"nodeType": "YulAssignment",
															"src": "3472:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3487:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3487:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3481:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3481:5:2"
																},
																"nativeSrc": "3481:13:2",
																"nodeType": "YulFunctionCall",
																"src": "3481:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3472:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3472:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3527:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3527:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3503:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "3503:23:2"
																},
																"nativeSrc": "3503:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3503:30:2"
															},
															"nativeSrc": "3503:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "3503:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "3402:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3440:6:2",
														"nodeType": "YulTypedName",
														"src": "3440:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3448:3:2",
														"nodeType": "YulTypedName",
														"src": "3448:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3456:5:2",
														"nodeType": "YulTypedName",
														"src": "3456:5:2",
														"type": ""
													}
												],
												"src": "3402:137:2"
											},
											{
												"body": {
													"nativeSrc": "3619:271:2",
													"nodeType": "YulBlock",
													"src": "3619:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3665:83:2",
																"nodeType": "YulBlock",
																"src": "3665:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3667:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "3667:77:2"
																			},
																			"nativeSrc": "3667:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3667:79:2"
																		},
																		"nativeSrc": "3667:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3667:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3640:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3640:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3649:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3649:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3636:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3636:3:2"
																		},
																		"nativeSrc": "3636:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3636:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3661:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3661:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3632:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3632:3:2"
																},
																"nativeSrc": "3632:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3632:32:2"
															},
															"nativeSrc": "3629:119:2",
															"nodeType": "YulIf",
															"src": "3629:119:2"
														},
														{
															"nativeSrc": "3758:125:2",
															"nodeType": "YulBlock",
															"src": "3758:125:2",
															"statements": [
																{
																	"nativeSrc": "3773:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3773:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3787:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3787:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3777:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3777:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3802:71:2",
																	"nodeType": "YulAssignment",
																	"src": "3802:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3845:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3845:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3856:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3856:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3841:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3841:3:2"
																				},
																				"nativeSrc": "3841:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3841:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3865:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3865:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "3812:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "3812:28:2"
																		},
																		"nativeSrc": "3812:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3812:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3802:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3802:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3545:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3589:9:2",
														"nodeType": "YulTypedName",
														"src": "3589:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3600:7:2",
														"nodeType": "YulTypedName",
														"src": "3600:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3612:6:2",
														"nodeType": "YulTypedName",
														"src": "3612:6:2",
														"type": ""
													}
												],
												"src": "3545:345:2"
											},
											{
												"body": {
													"nativeSrc": "4022:206:2",
													"nodeType": "YulBlock",
													"src": "4022:206:2",
													"statements": [
														{
															"nativeSrc": "4032:26:2",
															"nodeType": "YulAssignment",
															"src": "4032:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4044:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "4044:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4055:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4055:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4040:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4040:3:2"
																},
																"nativeSrc": "4040:18:2",
																"nodeType": "YulFunctionCall",
																"src": "4040:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4032:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "4032:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4112:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4112:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4125:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4125:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4136:1:2",
																				"nodeType": "YulLiteral",
																				"src": "4136:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4121:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4121:3:2"
																		},
																		"nativeSrc": "4121:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4121:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4068:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "4068:43:2"
																},
																"nativeSrc": "4068:71:2",
																"nodeType": "YulFunctionCall",
																"src": "4068:71:2"
															},
															"nativeSrc": "4068:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "4068:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4193:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "4193:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4206:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4206:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4217:2:2",
																				"nodeType": "YulLiteral",
																				"src": "4217:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4202:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4202:3:2"
																		},
																		"nativeSrc": "4202:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4202:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4149:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "4149:43:2"
																},
																"nativeSrc": "4149:72:2",
																"nodeType": "YulFunctionCall",
																"src": "4149:72:2"
															},
															"nativeSrc": "4149:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "4149:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3896:332:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3986:9:2",
														"nodeType": "YulTypedName",
														"src": "3986:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3998:6:2",
														"nodeType": "YulTypedName",
														"src": "3998:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4006:6:2",
														"nodeType": "YulTypedName",
														"src": "4006:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4017:4:2",
														"nodeType": "YulTypedName",
														"src": "4017:4:2",
														"type": ""
													}
												],
												"src": "3896:332:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80637df6709014610038578063a0052a8e14610054575b5f5ffd5b610052600480360381019061004d91906102f2565b610084565b005b61006e60048036038101906100699190610342565b610245565b60405161007b9190610387565b60405180910390f35b8273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b81526004016100c1939291906103be565b6020604051808303815f875af11580156100dd573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610101919061041d565b505f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610240578273ffffffffffffffffffffffffffffffffffffffff1663095ea7b3837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016101aa929190610448565b6020604051808303815f875af11580156101c6573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101ea919061041d565b5060015f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b505050565b5f602052805f5260405f205f915054906101000a900460ff1681565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61028e82610265565b9050919050565b61029e81610284565b81146102a8575f5ffd5b50565b5f813590506102b981610295565b92915050565b5f819050919050565b6102d1816102bf565b81146102db575f5ffd5b50565b5f813590506102ec816102c8565b92915050565b5f5f5f6060848603121561030957610308610261565b5b5f610316868287016102ab565b9350506020610327868287016102ab565b9250506040610338868287016102de565b9150509250925092565b5f6020828403121561035757610356610261565b5b5f610364848285016102ab565b91505092915050565b5f8115159050919050565b6103818161036d565b82525050565b5f60208201905061039a5f830184610378565b92915050565b6103a981610284565b82525050565b6103b8816102bf565b82525050565b5f6060820190506103d15f8301866103a0565b6103de60208301856103a0565b6103eb60408301846103af565b949350505050565b6103fc8161036d565b8114610406575f5ffd5b50565b5f81519050610417816103f3565b92915050565b5f6020828403121561043257610431610261565b5b5f61043f84828501610409565b91505092915050565b5f60408201905061045b5f8301856103a0565b61046860208301846103af565b939250505056fea2646970667358221220073cd09cac0796c2a5243cc567b8c0edb2f0aa64f113b2c1f8fb2e140b87931a64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7DF67090 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xA0052A8E EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x2F2 JUMP JUMPDEST PUSH2 0x84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x245 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x387 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST POP PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x240 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AA SWAP3 SWAP2 SWAP1 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1C6 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EA SWAP2 SWAP1 PUSH2 0x41D JUMP JUMPDEST POP PUSH1 0x1 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28E DUP3 PUSH2 0x265 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x29E DUP2 PUSH2 0x284 JUMP JUMPDEST DUP2 EQ PUSH2 0x2A8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B9 DUP2 PUSH2 0x295 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2D1 DUP2 PUSH2 0x2BF JUMP JUMPDEST DUP2 EQ PUSH2 0x2DB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2EC DUP2 PUSH2 0x2C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x309 JUMPI PUSH2 0x308 PUSH2 0x261 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x316 DUP7 DUP3 DUP8 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x327 DUP7 DUP3 DUP8 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x338 DUP7 DUP3 DUP8 ADD PUSH2 0x2DE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x357 JUMPI PUSH2 0x356 PUSH2 0x261 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x364 DUP5 DUP3 DUP6 ADD PUSH2 0x2AB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x381 DUP2 PUSH2 0x36D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x39A PUSH0 DUP4 ADD DUP5 PUSH2 0x378 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3A9 DUP2 PUSH2 0x284 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3B8 DUP2 PUSH2 0x2BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3D1 PUSH0 DUP4 ADD DUP7 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3DE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x3EB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x3AF JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x3FC DUP2 PUSH2 0x36D JUMP JUMPDEST DUP2 EQ PUSH2 0x406 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x417 DUP2 PUSH2 0x3F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x261 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x43F DUP5 DUP3 DUP6 ADD PUSH2 0x409 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x45B PUSH0 DUP4 ADD DUP6 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x468 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3AF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD EXTCODECOPY 0xD0 SWAP13 0xAC SMOD SWAP7 0xC2 0xA5 0x24 EXTCODECOPY 0xC5 PUSH8 0xB8C0EDB2F0AA64F1 SGT 0xB2 0xC1 EXTCALL EXTSTATICCALL 0x2E EQ SIGNEXTEND DUP8 SWAP4 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "116:416:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208:322;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;157:44;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;208:322;309:5;302:26;;;329:10;349:4;356:6;302:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;379:12;:24;392:10;379:24;;;;;;;;;;;;;;;;;;;;;;;;;374:150;;426:5;419:21;;;441:7;450:17;419:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;509:4;482:12;:24;495:10;482:24;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;374:150;208:322;;;:::o;157:44::-;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:619::-;1274:6;1282;1290;1339:2;1327:9;1318:7;1314:23;1310:32;1307:119;;;1345:79;;:::i;:::-;1307:119;1465:1;1490:53;1535:7;1526:6;1515:9;1511:22;1490:53;:::i;:::-;1480:63;;1436:117;1592:2;1618:53;1663:7;1654:6;1643:9;1639:22;1618:53;:::i;:::-;1608:63;;1563:118;1720:2;1746:53;1791:7;1782:6;1771:9;1767:22;1746:53;:::i;:::-;1736:63;;1691:118;1197:619;;;;;:::o;1822:329::-;1881:6;1930:2;1918:9;1909:7;1905:23;1901:32;1898:119;;;1936:79;;:::i;:::-;1898:119;2056:1;2081:53;2126:7;2117:6;2106:9;2102:22;2081:53;:::i;:::-;2071:63;;2027:117;1822:329;;;;:::o;2157:90::-;2191:7;2234:5;2227:13;2220:21;2209:32;;2157:90;;;:::o;2253:109::-;2334:21;2349:5;2334:21;:::i;:::-;2329:3;2322:34;2253:109;;:::o;2368:210::-;2455:4;2493:2;2482:9;2478:18;2470:26;;2506:65;2568:1;2557:9;2553:17;2544:6;2506:65;:::i;:::-;2368:210;;;;:::o;2584:118::-;2671:24;2689:5;2671:24;:::i;:::-;2666:3;2659:37;2584:118;;:::o;2708:::-;2795:24;2813:5;2795:24;:::i;:::-;2790:3;2783:37;2708:118;;:::o;2832:442::-;2981:4;3019:2;3008:9;3004:18;2996:26;;3032:71;3100:1;3089:9;3085:17;3076:6;3032:71;:::i;:::-;3113:72;3181:2;3170:9;3166:18;3157:6;3113:72;:::i;:::-;3195;3263:2;3252:9;3248:18;3239:6;3195:72;:::i;:::-;2832:442;;;;;;:::o;3280:116::-;3350:21;3365:5;3350:21;:::i;:::-;3343:5;3340:32;3330:60;;3386:1;3383;3376:12;3330:60;3280:116;:::o;3402:137::-;3456:5;3487:6;3481:13;3472:22;;3503:30;3527:5;3503:30;:::i;:::-;3402:137;;;;:::o;3545:345::-;3612:6;3661:2;3649:9;3640:7;3636:23;3632:32;3629:119;;;3667:79;;:::i;:::-;3629:119;3787:1;3812:61;3865:7;3856:6;3845:9;3841:22;3812:61;:::i;:::-;3802:71;;3758:125;3545:345;;;;:::o;3896:332::-;4017:4;4055:2;4044:9;4040:18;4032:26;;4068:71;4136:1;4125:9;4121:17;4112:6;4068:71;:::i;:::-;4149:72;4217:2;4206:9;4202:18;4193:6;4149:72;:::i;:::-;3896:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "237800",
								"executionCost": "279",
								"totalCost": "238079"
							},
							"external": {
								"autoApproved(address)": "2832",
								"depositAndApprove(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 532,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 532,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220073cd09cac0796c2a5243cc567b8c0edb2f0aa64f113b2c1f8fb2e140b87931a64736f6c634300081d0033",
									".code": [
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "7DF67090"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "A0052A8E"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 532,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 208,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 208,
											"end": 530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 208,
											"end": 530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 208,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 208,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 208,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 157,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 157,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 157,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 208,
											"end": 530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 309,
											"end": 314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 302,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 302,
											"end": 328,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 302,
											"end": 328,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 329,
											"end": 339,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 349,
											"end": 353,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 356,
											"end": 362,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 302,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 302,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 302,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 402,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 379,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 379,
											"end": 403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 374,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 524,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 419,
											"end": 440,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 419,
											"end": 440,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 419,
											"end": 440,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 441,
											"end": 448,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 450,
											"end": 467,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 419,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 419,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 419,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 419,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 482,
											"end": 494,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 495,
											"end": 505,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 506,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 482,
											"end": 506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 482,
											"end": 513,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 374,
											"end": 524,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 374,
											"end": 524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 208,
											"end": 530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 157,
											"end": 201,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 157,
											"end": 201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1274,
											"end": 1280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1282,
											"end": 1288,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1290,
											"end": 1296,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1341,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1327,
											"end": 1336,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1318,
											"end": 1325,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1314,
											"end": 1337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1310,
											"end": 1342,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1345,
											"end": 1424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1345,
											"end": 1424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1307,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1465,
											"end": 1466,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1515,
											"end": 1524,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1533,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1490,
											"end": 1543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1490,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1480,
											"end": 1543,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1436,
											"end": 1553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1592,
											"end": 1594,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1663,
											"end": 1670,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1654,
											"end": 1660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1652,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1661,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1618,
											"end": 1671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1618,
											"end": 1671,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1671,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1563,
											"end": 1681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1720,
											"end": 1722,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1791,
											"end": 1798,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1782,
											"end": 1788,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1771,
											"end": 1780,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1789,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1746,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1746,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1736,
											"end": 1799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1691,
											"end": 1809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1881,
											"end": 1887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1932,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1918,
											"end": 1927,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1909,
											"end": 1916,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1905,
											"end": 1928,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1933,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1936,
											"end": 2015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1936,
											"end": 2015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 1898,
											"end": 2017,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2117,
											"end": 2123,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2106,
											"end": 2115,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2081,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2071,
											"end": 2134,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2027,
											"end": 2144,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 2151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2191,
											"end": 2198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2227,
											"end": 2240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2220,
											"end": 2241,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2209,
											"end": 2241,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2157,
											"end": 2247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2253,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2334,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2334,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2329,
											"end": 2332,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2322,
											"end": 2356,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2253,
											"end": 2362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2493,
											"end": 2495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2491,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2478,
											"end": 2496,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2496,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2568,
											"end": 2569,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2566,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2570,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2550,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2506,
											"end": 2571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2571,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2506,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2671,
											"end": 2695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2671,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2659,
											"end": 2696,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2702,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2584,
											"end": 2702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2826,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2708,
											"end": 2826,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2813,
											"end": 2818,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2819,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2795,
											"end": 2819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2819,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2795,
											"end": 2819,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2793,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2820,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2826,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2708,
											"end": 2826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 3274,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2832,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2981,
											"end": 2985,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3019,
											"end": 3021,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3008,
											"end": 3017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3022,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3022,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3100,
											"end": 3101,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3089,
											"end": 3098,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3085,
											"end": 3102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3076,
											"end": 3082,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3032,
											"end": 3103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3032,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3181,
											"end": 3183,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3170,
											"end": 3179,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3166,
											"end": 3184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3113,
											"end": 3185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3113,
											"end": 3185,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3113,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3195,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3263,
											"end": 3265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3261,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3248,
											"end": 3266,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3195,
											"end": 3267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3195,
											"end": 3267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3195,
											"end": 3267,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3195,
											"end": 3267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 3274,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 3274,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 3274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2832,
											"end": 3274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3280,
											"end": 3396,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3280,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3365,
											"end": 3370,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3350,
											"end": 3371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3350,
											"end": 3371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3343,
											"end": 3348,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3340,
											"end": 3372,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3390,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3330,
											"end": 3390,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3386,
											"end": 3387,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3388,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3330,
											"end": 3390,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3330,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3280,
											"end": 3396,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3280,
											"end": 3396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3539,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3402,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3461,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3487,
											"end": 3493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3481,
											"end": 3494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3472,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3527,
											"end": 3532,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3503,
											"end": 3533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3503,
											"end": 3533,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3503,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3539,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3539,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3402,
											"end": 3539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3890,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3545,
											"end": 3890,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3612,
											"end": 3618,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3663,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3649,
											"end": 3658,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3647,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3636,
											"end": 3659,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3632,
											"end": 3664,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3748,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3748,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3629,
											"end": 3748,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3667,
											"end": 3746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3667,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3748,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3629,
											"end": 3748,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3812,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3856,
											"end": 3862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3845,
											"end": 3854,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3863,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3812,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3812,
											"end": 3873,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3812,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3758,
											"end": 3883,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3890,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3890,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3890,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3545,
											"end": 3890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4228,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3896,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4017,
											"end": 4021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4057,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4053,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4040,
											"end": 4058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4058,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4058,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4134,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4121,
											"end": 4138,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4112,
											"end": 4118,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4139,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4068,
											"end": 4139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4149,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4217,
											"end": 4219,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4206,
											"end": 4215,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4220,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4193,
											"end": 4199,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4149,
											"end": 4221,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4149,
											"end": 4221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4149,
											"end": 4221,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4149,
											"end": 4221,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4228,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4228,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4228,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4228,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4228,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3896,
											"end": 4228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"I/Auto-Approval on Deposit.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"autoApproved(address)": "a0052a8e",
							"depositAndApprove(address,address,uint256)": "7df67090"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"autoApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositAndApprove\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"I/Auto-Approval on Deposit.sol\":\"InfiniteApprovalOnDeposit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"I/Auto-Approval on Deposit.sol\":{\"keccak256\":\"0x5b74219f6c92438e6a69c0d478e6e44079d852c0c3ea18a4c54346b5d4f9fc9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34e21d43bf7a9cbaf3f5392de99e947ea49e36d6f5f9d6468d4b988762d39bdd\",\"dweb:/ipfs/QmSxbm9YmRXzYVu9PCTLJsnRZK4XD5MgjBtAJW2uNwW9hP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 84,
								"contract": "I/Auto-Approval on Deposit.sol:InfiniteApprovalOnDeposit",
								"label": "autoApproved",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"I/Auto-Approval on Deposit.sol": {
				"ast": {
					"absolutePath": "I/Auto-Approval on Deposit.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"InfiniteApprovalOnDeposit": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 135,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "InfiniteApprovalOnDeposit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "InfiniteApprovalOnDeposit",
							"nameLocation": "125:25:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "a0052a8e",
									"id": 84,
									"mutability": "mutable",
									"name": "autoApproved",
									"nameLocation": "189:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 134,
									"src": "157:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 83,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 81,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "165:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "157:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 82,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "176:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "292:238:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 97,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "329:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 98,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "333:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "329:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 101,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "349:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_InfiniteApprovalOnDeposit_$134",
																		"typeString": "contract InfiniteApprovalOnDeposit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_InfiniteApprovalOnDeposit_$134",
																		"typeString": "contract InfiniteApprovalOnDeposit"
																	}
																],
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "341:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 99,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "341:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "341:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 103,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "356:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 94,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "309:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 93,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "302:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "302:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "316:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "302:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "302:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "302:61:1"
											},
											{
												"condition": {
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "378:25:1",
													"subExpression": {
														"baseExpression": {
															"id": 106,
															"name": "autoApproved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "379:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 109,
														"indexExpression": {
															"expression": {
																"id": 107,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "392:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "396:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "392:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "379:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 131,
												"nodeType": "IfStatement",
												"src": "374:150:1",
												"trueBody": {
													"id": 130,
													"nodeType": "Block",
													"src": "405:119:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 115,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "441:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 118,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "455:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 117,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "455:7:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					}
																				],
																				"id": 116,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "450:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 119,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "450:13:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint256",
																				"typeString": "type(uint256)"
																			}
																		},
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "464:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "450:17:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 112,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 86,
																				"src": "426:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 111,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 77,
																			"src": "419:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "419:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "433:7:1",
																	"memberName": "approve",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 64,
																	"src": "419:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "419:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 122,
															"nodeType": "ExpressionStatement",
															"src": "419:49:1"
														},
														{
															"expression": {
																"id": 128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 123,
																		"name": "autoApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "482:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 126,
																	"indexExpression": {
																		"expression": {
																			"id": 124,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "495:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "499:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "495:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "482:24:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "509:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "482:31:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 129,
															"nodeType": "ExpressionStatement",
															"src": "482:31:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "7df67090",
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAndApprove",
									"nameLocation": "217:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "243:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "235:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "235:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "258:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "250:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "250:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "275:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "267:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "267:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "234:48:1"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "292:0:1"
									},
									"scope": 134,
									"src": "208:322:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 135,
							"src": "116:416:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:501:1"
				},
				"id": 1
			}
		}
	}
}