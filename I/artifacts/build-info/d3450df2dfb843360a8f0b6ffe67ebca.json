{
	"id": "d3450df2dfb843360a8f0b6ffe67ebca",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"I/infiniteApproval.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @title InfiniteApprovalRegistry\n/// @notice Tracks and allows revocation of infinite approvals to prevent token drain risks\ncontract InfiniteApprovalRegistry {\n    // Mapping: user => spender => is infinite approval active\n    mapping(address => mapping(address => bool)) public isInfiniteApproved;\n\n    /// @notice Call this after doing an approval to track if it was infinite\n    function trackApproval(address token, address spender, uint256 amount) external {\n        if (amount == type(uint256).max) {\n            isInfiniteApproved[msg.sender][spender] = true;\n        }\n    }\n\n    /// @notice Revoke approval to the spender if you previously approved max\n    function revoke(address token, address spender) external {\n        IERC20(token).approve(spender, 0); // Revoke approval\n        isInfiniteApproved[msg.sender][spender] = false;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"I/infiniteApproval.sol": {
				"InfiniteApprovalRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isInfiniteApproved",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "revoke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "trackApproval",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "InfiniteApprovalRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"I/infiniteApproval.sol\":244:971  contract InfiniteApprovalRegistry {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"I/infiniteApproval.sol\":244:971  contract InfiniteApprovalRegistry {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x381f22b0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xdcf3fb2a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xfbabf747\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"I/infiniteApproval.sol\":347:417  mapping(address => mapping(address => bool)) public isInfiniteApproved */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"I/infiniteApproval.sol\":786:969  function revoke(address token, address spender) external {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_13:\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"I/infiniteApproval.sol\":502:702  function trackApproval(address token, address spender, uint256 amount) external {... */\n    tag_5:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      stop\n        /* \"I/infiniteApproval.sol\":347:417  mapping(address => mapping(address => bool)) public isInfiniteApproved */\n    tag_9:\n      mstore(0x20, 0x00)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"I/infiniteApproval.sol\":786:969  function revoke(address token, address spender) external {... */\n    tag_14:\n        /* \"I/infiniteApproval.sol\":860:865  token */\n      dup2\n        /* \"I/infiniteApproval.sol\":853:874  IERC20(token).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"I/infiniteApproval.sol\":875:882  spender */\n      dup3\n        /* \"I/infiniteApproval.sol\":884:885  0 */\n      0x00\n        /* \"I/infiniteApproval.sol\":853:886  IERC20(token).approve(spender, 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_20\n      swap3\n      swap2\n      swap1\n      tag_21\n      jump\t// in\n    tag_20:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_23\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_23:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      pop\n        /* \"I/infiniteApproval.sol\":957:962  false */\n      0x00\n        /* \"I/infiniteApproval.sol\":915:933  isInfiniteApproved */\n      0x00\n        /* \"I/infiniteApproval.sol\":915:945  isInfiniteApproved[msg.sender] */\n      0x00\n        /* \"I/infiniteApproval.sol\":934:944  msg.sender */\n      caller\n        /* \"I/infiniteApproval.sol\":915:945  isInfiniteApproved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"I/infiniteApproval.sol\":915:954  isInfiniteApproved[msg.sender][spender] */\n      0x00\n        /* \"I/infiniteApproval.sol\":946:953  spender */\n      dup4\n        /* \"I/infiniteApproval.sol\":915:954  isInfiniteApproved[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"I/infiniteApproval.sol\":915:962  isInfiniteApproved[msg.sender][spender] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"I/infiniteApproval.sol\":786:969  function revoke(address token, address spender) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"I/infiniteApproval.sol\":502:702  function trackApproval(address token, address spender, uint256 amount) external {... */\n    tag_18:\n        /* \"I/infiniteApproval.sol\":606:623  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"I/infiniteApproval.sol\":596:602  amount */\n      dup2\n        /* \"I/infiniteApproval.sol\":596:623  amount == type(uint256).max */\n      sub\n        /* \"I/infiniteApproval.sol\":592:696  if (amount == type(uint256).max) {... */\n      tag_27\n      jumpi\n        /* \"I/infiniteApproval.sol\":681:685  true */\n      0x01\n        /* \"I/infiniteApproval.sol\":639:657  isInfiniteApproved */\n      0x00\n        /* \"I/infiniteApproval.sol\":639:669  isInfiniteApproved[msg.sender] */\n      0x00\n        /* \"I/infiniteApproval.sol\":658:668  msg.sender */\n      caller\n        /* \"I/infiniteApproval.sol\":639:669  isInfiniteApproved[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"I/infiniteApproval.sol\":639:678  isInfiniteApproved[msg.sender][spender] */\n      0x00\n        /* \"I/infiniteApproval.sol\":670:677  spender */\n      dup5\n        /* \"I/infiniteApproval.sol\":639:678  isInfiniteApproved[msg.sender][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"I/infiniteApproval.sol\":639:685  isInfiniteApproved[msg.sender][spender] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"I/infiniteApproval.sol\":592:696  if (amount == type(uint256).max) {... */\n    tag_27:\n        /* \"I/infiniteApproval.sol\":502:702  function trackApproval(address token, address spender, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_29:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_31:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_32:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_53\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_31\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_33:\n        /* \"#utility.yul\":641:665   */\n      tag_55\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_32\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_56:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_34:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_58\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_33\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1315   */\n    tag_8:\n        /* \"#utility.yul\":909:915   */\n      0x00\n        /* \"#utility.yul\":917:923   */\n      0x00\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":945:952   */\n      dup6\n        /* \"#utility.yul\":941:964   */\n      sub\n        /* \"#utility.yul\":937:969   */\n      slt\n        /* \"#utility.yul\":934:1053   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":972:1051   */\n      tag_61\n      tag_29\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":934:1053   */\n    tag_60:\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1117:1170   */\n      tag_62\n        /* \"#utility.yul\":1162:1169   */\n      dup6\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1142:1151   */\n      dup7\n        /* \"#utility.yul\":1138:1160   */\n      add\n        /* \"#utility.yul\":1117:1170   */\n      tag_34\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1107:1170   */\n      swap3\n      pop\n        /* \"#utility.yul\":1063:1180   */\n      pop\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1245:1298   */\n      tag_63\n        /* \"#utility.yul\":1290:1297   */\n      dup6\n        /* \"#utility.yul\":1281:1287   */\n      dup3\n        /* \"#utility.yul\":1270:1279   */\n      dup7\n        /* \"#utility.yul\":1266:1288   */\n      add\n        /* \"#utility.yul\":1245:1298   */\n      tag_34\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1235:1298   */\n      swap2\n      pop\n        /* \"#utility.yul\":1190:1308   */\n      pop\n        /* \"#utility.yul\":841:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1411   */\n    tag_35:\n        /* \"#utility.yul\":1355:1362   */\n      0x00\n        /* \"#utility.yul\":1398:1403   */\n      dup2\n        /* \"#utility.yul\":1391:1404   */\n      iszero\n        /* \"#utility.yul\":1384:1405   */\n      iszero\n        /* \"#utility.yul\":1373:1405   */\n      swap1\n      pop\n        /* \"#utility.yul\":1321:1411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1417:1526   */\n    tag_36:\n        /* \"#utility.yul\":1498:1519   */\n      tag_66\n        /* \"#utility.yul\":1513:1518   */\n      dup2\n        /* \"#utility.yul\":1498:1519   */\n      tag_35\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1493:1496   */\n      dup3\n        /* \"#utility.yul\":1486:1520   */\n      mstore\n        /* \"#utility.yul\":1417:1526   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1532:1742   */\n    tag_11:\n        /* \"#utility.yul\":1619:1623   */\n      0x00\n        /* \"#utility.yul\":1657:1659   */\n      0x20\n        /* \"#utility.yul\":1646:1655   */\n      dup3\n        /* \"#utility.yul\":1642:1660   */\n      add\n        /* \"#utility.yul\":1634:1660   */\n      swap1\n      pop\n        /* \"#utility.yul\":1670:1735   */\n      tag_68\n        /* \"#utility.yul\":1732:1733   */\n      0x00\n        /* \"#utility.yul\":1721:1730   */\n      dup4\n        /* \"#utility.yul\":1717:1734   */\n      add\n        /* \"#utility.yul\":1708:1714   */\n      dup5\n        /* \"#utility.yul\":1670:1735   */\n      tag_36\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1532:1742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1748:1825   */\n    tag_37:\n        /* \"#utility.yul\":1785:1792   */\n      0x00\n        /* \"#utility.yul\":1814:1819   */\n      dup2\n        /* \"#utility.yul\":1803:1819   */\n      swap1\n      pop\n        /* \"#utility.yul\":1748:1825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1831:1953   */\n    tag_38:\n        /* \"#utility.yul\":1904:1928   */\n      tag_71\n        /* \"#utility.yul\":1922:1927   */\n      dup2\n        /* \"#utility.yul\":1904:1928   */\n      tag_37\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1897:1902   */\n      dup2\n        /* \"#utility.yul\":1894:1929   */\n      eq\n        /* \"#utility.yul\":1884:1947   */\n      tag_72\n      jumpi\n        /* \"#utility.yul\":1943:1944   */\n      0x00\n        /* \"#utility.yul\":1940:1941   */\n      0x00\n        /* \"#utility.yul\":1933:1945   */\n      revert\n        /* \"#utility.yul\":1884:1947   */\n    tag_72:\n        /* \"#utility.yul\":1831:1953   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1959:2098   */\n    tag_39:\n        /* \"#utility.yul\":2005:2010   */\n      0x00\n        /* \"#utility.yul\":2043:2049   */\n      dup2\n        /* \"#utility.yul\":2030:2050   */\n      calldataload\n        /* \"#utility.yul\":2021:2050   */\n      swap1\n      pop\n        /* \"#utility.yul\":2059:2092   */\n      tag_74\n        /* \"#utility.yul\":2086:2091   */\n      dup2\n        /* \"#utility.yul\":2059:2092   */\n      tag_38\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1959:2098   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2104:2723   */\n    tag_17:\n        /* \"#utility.yul\":2181:2187   */\n      0x00\n        /* \"#utility.yul\":2189:2195   */\n      0x00\n        /* \"#utility.yul\":2197:2203   */\n      0x00\n        /* \"#utility.yul\":2246:2248   */\n      0x60\n        /* \"#utility.yul\":2234:2243   */\n      dup5\n        /* \"#utility.yul\":2225:2232   */\n      dup7\n        /* \"#utility.yul\":2221:2244   */\n      sub\n        /* \"#utility.yul\":2217:2249   */\n      slt\n        /* \"#utility.yul\":2214:2333   */\n      iszero\n      tag_76\n      jumpi\n        /* \"#utility.yul\":2252:2331   */\n      tag_77\n      tag_29\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2214:2333   */\n    tag_76:\n        /* \"#utility.yul\":2372:2373   */\n      0x00\n        /* \"#utility.yul\":2397:2450   */\n      tag_78\n        /* \"#utility.yul\":2442:2449   */\n      dup7\n        /* \"#utility.yul\":2433:2439   */\n      dup3\n        /* \"#utility.yul\":2422:2431   */\n      dup8\n        /* \"#utility.yul\":2418:2440   */\n      add\n        /* \"#utility.yul\":2397:2450   */\n      tag_34\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2387:2450   */\n      swap4\n      pop\n        /* \"#utility.yul\":2343:2460   */\n      pop\n        /* \"#utility.yul\":2499:2501   */\n      0x20\n        /* \"#utility.yul\":2525:2578   */\n      tag_79\n        /* \"#utility.yul\":2570:2577   */\n      dup7\n        /* \"#utility.yul\":2561:2567   */\n      dup3\n        /* \"#utility.yul\":2550:2559   */\n      dup8\n        /* \"#utility.yul\":2546:2568   */\n      add\n        /* \"#utility.yul\":2525:2578   */\n      tag_34\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":2515:2578   */\n      swap3\n      pop\n        /* \"#utility.yul\":2470:2588   */\n      pop\n        /* \"#utility.yul\":2627:2629   */\n      0x40\n        /* \"#utility.yul\":2653:2706   */\n      tag_80\n        /* \"#utility.yul\":2698:2705   */\n      dup7\n        /* \"#utility.yul\":2689:2695   */\n      dup3\n        /* \"#utility.yul\":2678:2687   */\n      dup8\n        /* \"#utility.yul\":2674:2696   */\n      add\n        /* \"#utility.yul\":2653:2706   */\n      tag_39\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2643:2706   */\n      swap2\n      pop\n        /* \"#utility.yul\":2598:2716   */\n      pop\n        /* \"#utility.yul\":2104:2723   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2729:2847   */\n    tag_40:\n        /* \"#utility.yul\":2816:2840   */\n      tag_82\n        /* \"#utility.yul\":2834:2839   */\n      dup2\n        /* \"#utility.yul\":2816:2840   */\n      tag_32\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2811:2814   */\n      dup3\n        /* \"#utility.yul\":2804:2841   */\n      mstore\n        /* \"#utility.yul\":2729:2847   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2853:2938   */\n    tag_41:\n        /* \"#utility.yul\":2898:2905   */\n      0x00\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2916:2932   */\n      swap1\n      pop\n        /* \"#utility.yul\":2853:2938   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2944:3004   */\n    tag_42:\n        /* \"#utility.yul\":2972:2975   */\n      0x00\n        /* \"#utility.yul\":2993:2998   */\n      dup2\n        /* \"#utility.yul\":2986:2998   */\n      swap1\n      pop\n        /* \"#utility.yul\":2944:3004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3010:3168   */\n    tag_43:\n        /* \"#utility.yul\":3068:3077   */\n      0x00\n        /* \"#utility.yul\":3101:3162   */\n      tag_86\n        /* \"#utility.yul\":3119:3161   */\n      tag_87\n        /* \"#utility.yul\":3128:3160   */\n      tag_88\n        /* \"#utility.yul\":3154:3159   */\n      dup5\n        /* \"#utility.yul\":3128:3160   */\n      tag_41\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":3119:3161   */\n      tag_42\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3101:3162   */\n      tag_37\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3088:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3010:3168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3174:3321   */\n    tag_44:\n        /* \"#utility.yul\":3269:3314   */\n      tag_90\n        /* \"#utility.yul\":3308:3313   */\n      dup2\n        /* \"#utility.yul\":3269:3314   */\n      tag_43\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3264:3267   */\n      dup3\n        /* \"#utility.yul\":3257:3315   */\n      mstore\n        /* \"#utility.yul\":3174:3321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3327:3675   */\n    tag_21:\n        /* \"#utility.yul\":3456:3460   */\n      0x00\n        /* \"#utility.yul\":3494:3496   */\n      0x40\n        /* \"#utility.yul\":3483:3492   */\n      dup3\n        /* \"#utility.yul\":3479:3497   */\n      add\n        /* \"#utility.yul\":3471:3497   */\n      swap1\n      pop\n        /* \"#utility.yul\":3507:3578   */\n      tag_92\n        /* \"#utility.yul\":3575:3576   */\n      0x00\n        /* \"#utility.yul\":3564:3573   */\n      dup4\n        /* \"#utility.yul\":3560:3577   */\n      add\n        /* \"#utility.yul\":3551:3557   */\n      dup6\n        /* \"#utility.yul\":3507:3578   */\n      tag_40\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":3588:3668   */\n      tag_93\n        /* \"#utility.yul\":3664:3666   */\n      0x20\n        /* \"#utility.yul\":3653:3662   */\n      dup4\n        /* \"#utility.yul\":3649:3667   */\n      add\n        /* \"#utility.yul\":3640:3646   */\n      dup5\n        /* \"#utility.yul\":3588:3668   */\n      tag_44\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3327:3675   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3681:3797   */\n    tag_45:\n        /* \"#utility.yul\":3751:3772   */\n      tag_95\n        /* \"#utility.yul\":3766:3771   */\n      dup2\n        /* \"#utility.yul\":3751:3772   */\n      tag_35\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3744:3749   */\n      dup2\n        /* \"#utility.yul\":3741:3773   */\n      eq\n        /* \"#utility.yul\":3731:3791   */\n      tag_96\n      jumpi\n        /* \"#utility.yul\":3787:3788   */\n      0x00\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3777:3789   */\n      revert\n        /* \"#utility.yul\":3731:3791   */\n    tag_96:\n        /* \"#utility.yul\":3681:3797   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3803:3940   */\n    tag_46:\n        /* \"#utility.yul\":3857:3862   */\n      0x00\n        /* \"#utility.yul\":3888:3894   */\n      dup2\n        /* \"#utility.yul\":3882:3895   */\n      mload\n        /* \"#utility.yul\":3873:3895   */\n      swap1\n      pop\n        /* \"#utility.yul\":3904:3934   */\n      tag_98\n        /* \"#utility.yul\":3928:3933   */\n      dup2\n        /* \"#utility.yul\":3904:3934   */\n      tag_45\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3803:3940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3946:4291   */\n    tag_25:\n        /* \"#utility.yul\":4013:4019   */\n      0x00\n        /* \"#utility.yul\":4062:4064   */\n      0x20\n        /* \"#utility.yul\":4050:4059   */\n      dup3\n        /* \"#utility.yul\":4041:4048   */\n      dup5\n        /* \"#utility.yul\":4037:4060   */\n      sub\n        /* \"#utility.yul\":4033:4065   */\n      slt\n        /* \"#utility.yul\":4030:4149   */\n      iszero\n      tag_100\n      jumpi\n        /* \"#utility.yul\":4068:4147   */\n      tag_101\n      tag_29\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":4030:4149   */\n    tag_100:\n        /* \"#utility.yul\":4188:4189   */\n      0x00\n        /* \"#utility.yul\":4213:4274   */\n      tag_102\n        /* \"#utility.yul\":4266:4273   */\n      dup5\n        /* \"#utility.yul\":4257:4263   */\n      dup3\n        /* \"#utility.yul\":4246:4255   */\n      dup6\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4213:4274   */\n      tag_46\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4203:4274   */\n      swap2\n      pop\n        /* \"#utility.yul\":4159:4284   */\n      pop\n        /* \"#utility.yul\":3946:4291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ce978bcd0153c6626f8a9109a3a43b0107f59f71ebfcf76d321878d5ce5f97f264736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506104f38061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c8063381f22b014610043578063dcf3fb2a14610073578063fbabf7471461008f575b5f5ffd5b61005d600480360381019061005891906102fc565b6100ab565b60405161006a9190610354565b60405180910390f35b61008d600480360381019061008891906102fc565b6100d4565b005b6100a960048036038101906100a491906103a0565b6101e2565b005b5f602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3825f6040518363ffffffff1660e01b815260040161010f929190610441565b6020604051808303815f875af115801561012b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061014f9190610492565b505f5f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036102995760015f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102cb826102a2565b9050919050565b6102db816102c1565b81146102e5575f5ffd5b50565b5f813590506102f6816102d2565b92915050565b5f5f604083850312156103125761031161029e565b5b5f61031f858286016102e8565b9250506020610330858286016102e8565b9150509250929050565b5f8115159050919050565b61034e8161033a565b82525050565b5f6020820190506103675f830184610345565b92915050565b5f819050919050565b61037f8161036d565b8114610389575f5ffd5b50565b5f8135905061039a81610376565b92915050565b5f5f5f606084860312156103b7576103b661029e565b5b5f6103c4868287016102e8565b93505060206103d5868287016102e8565b92505060406103e68682870161038c565b9150509250925092565b6103f9816102c1565b82525050565b5f819050919050565b5f819050919050565b5f61042b610426610421846103ff565b610408565b61036d565b9050919050565b61043b81610411565b82525050565b5f6040820190506104545f8301856103f0565b6104616020830184610432565b9392505050565b6104718161033a565b811461047b575f5ffd5b50565b5f8151905061048c81610468565b92915050565b5f602082840312156104a7576104a661029e565b5b5f6104b48482850161047e565b9150509291505056fea2646970667358221220ce978bcd0153c6626f8a9109a3a43b0107f59f71ebfcf76d321878d5ce5f97f264736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4F3 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x381F22B0 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xDCF3FB2A EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xFBABF747 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP3 PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP3 SWAP2 SWAP1 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST POP PUSH0 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SUB PUSH2 0x299 JUMPI PUSH1 0x1 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB DUP3 PUSH2 0x2A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F6 DUP2 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x312 JUMPI PUSH2 0x311 PUSH2 0x29E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x31F DUP6 DUP3 DUP7 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x330 DUP6 DUP3 DUP7 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E DUP2 PUSH2 0x33A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x367 PUSH0 DUP4 ADD DUP5 PUSH2 0x345 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37F DUP2 PUSH2 0x36D JUMP JUMPDEST DUP2 EQ PUSH2 0x389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39A DUP2 PUSH2 0x376 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x3B6 PUSH2 0x29E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C4 DUP7 DUP3 DUP8 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3D5 DUP7 DUP3 DUP8 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3E6 DUP7 DUP3 DUP8 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3F9 DUP2 PUSH2 0x2C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42B PUSH2 0x426 PUSH2 0x421 DUP5 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43B DUP2 PUSH2 0x411 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x454 PUSH0 DUP4 ADD DUP6 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x461 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x432 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x33A JUMP JUMPDEST DUP2 EQ PUSH2 0x47B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x48C DUP2 PUSH2 0x468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A6 PUSH2 0x29E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B4 DUP5 DUP3 DUP6 ADD PUSH2 0x47E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP8 DUP12 0xCD ADD MSTORE8 0xC6 PUSH3 0x6F8A91 MULMOD LOG3 LOG4 EXTCODESIZE ADD SMOD CREATE2 SWAP16 PUSH18 0xEBFCF76D321878D5CE5F97F264736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "244:727:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isInfiniteApproved_87": {
									"entryPoint": 171,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revoke_142": {
									"entryPoint": 212,
									"id": 142,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@trackApproval_116": {
									"entryPoint": 482,
									"id": 116,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 744,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 764,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 1074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1089,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 705,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 1023,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 674,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 1041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4294:2",
										"nodeType": "YulBlock",
										"src": "0:4294:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "924:391:2",
													"nodeType": "YulBlock",
													"src": "924:391:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "970:83:2",
																"nodeType": "YulBlock",
																"src": "970:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "972:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "972:77:2"
																			},
																			"nativeSrc": "972:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "972:79:2"
																		},
																		"nativeSrc": "972:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "972:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "945:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "945:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "954:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "941:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:2"
																		},
																		"nativeSrc": "941:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "941:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "966:2:2",
																		"nodeType": "YulLiteral",
																		"src": "966:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "937:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:2"
																},
																"nativeSrc": "937:32:2",
																"nodeType": "YulFunctionCall",
																"src": "937:32:2"
															},
															"nativeSrc": "934:119:2",
															"nodeType": "YulIf",
															"src": "934:119:2"
														},
														{
															"nativeSrc": "1063:117:2",
															"nodeType": "YulBlock",
															"src": "1063:117:2",
															"statements": [
																{
																	"nativeSrc": "1078:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1078:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1092:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1092:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1082:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1082:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1107:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1107:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1142:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1142:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1153:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1153:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1138:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:2"
																				},
																				"nativeSrc": "1138:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1138:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1162:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1117:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1117:20:2"
																		},
																		"nativeSrc": "1117:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1107:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1107:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1190:118:2",
															"nodeType": "YulBlock",
															"src": "1190:118:2",
															"statements": [
																{
																	"nativeSrc": "1205:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1205:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1219:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1209:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1209:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1235:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1235:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1270:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1270:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1281:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1281:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1266:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1266:3:2"
																				},
																				"nativeSrc": "1266:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1266:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1290:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1290:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1245:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1245:20:2"
																		},
																		"nativeSrc": "1245:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1245:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1235:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1235:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "841:474:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "886:9:2",
														"nodeType": "YulTypedName",
														"src": "886:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "897:7:2",
														"nodeType": "YulTypedName",
														"src": "897:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "909:6:2",
														"nodeType": "YulTypedName",
														"src": "909:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "917:6:2",
														"nodeType": "YulTypedName",
														"src": "917:6:2",
														"type": ""
													}
												],
												"src": "841:474:2"
											},
											{
												"body": {
													"nativeSrc": "1363:48:2",
													"nodeType": "YulBlock",
													"src": "1363:48:2",
													"statements": [
														{
															"nativeSrc": "1373:32:2",
															"nodeType": "YulAssignment",
															"src": "1373:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1398:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1398:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1391:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1391:6:2"
																		},
																		"nativeSrc": "1391:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1384:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1384:6:2"
																},
																"nativeSrc": "1384:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1384:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1373:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1373:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1321:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1345:5:2",
														"nodeType": "YulTypedName",
														"src": "1345:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1355:7:2",
														"nodeType": "YulTypedName",
														"src": "1355:7:2",
														"type": ""
													}
												],
												"src": "1321:90:2"
											},
											{
												"body": {
													"nativeSrc": "1476:50:2",
													"nodeType": "YulBlock",
													"src": "1476:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1493:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1493:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1513:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1513:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1498:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "1498:14:2"
																		},
																		"nativeSrc": "1498:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1498:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1486:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1486:6:2"
																},
																"nativeSrc": "1486:34:2",
																"nodeType": "YulFunctionCall",
																"src": "1486:34:2"
															},
															"nativeSrc": "1486:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "1486:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1417:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1464:5:2",
														"nodeType": "YulTypedName",
														"src": "1464:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1471:3:2",
														"nodeType": "YulTypedName",
														"src": "1471:3:2",
														"type": ""
													}
												],
												"src": "1417:109:2"
											},
											{
												"body": {
													"nativeSrc": "1624:118:2",
													"nodeType": "YulBlock",
													"src": "1624:118:2",
													"statements": [
														{
															"nativeSrc": "1634:26:2",
															"nodeType": "YulAssignment",
															"src": "1634:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1646:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1646:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1657:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1657:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1642:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1642:3:2"
																},
																"nativeSrc": "1642:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1642:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1634:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1634:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1708:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1721:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1721:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1732:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1732:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1717:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1717:3:2"
																		},
																		"nativeSrc": "1717:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1717:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1670:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "1670:37:2"
																},
																"nativeSrc": "1670:65:2",
																"nodeType": "YulFunctionCall",
																"src": "1670:65:2"
															},
															"nativeSrc": "1670:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "1670:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1532:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1596:9:2",
														"nodeType": "YulTypedName",
														"src": "1596:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1608:6:2",
														"nodeType": "YulTypedName",
														"src": "1608:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1619:4:2",
														"nodeType": "YulTypedName",
														"src": "1619:4:2",
														"type": ""
													}
												],
												"src": "1532:210:2"
											},
											{
												"body": {
													"nativeSrc": "1793:32:2",
													"nodeType": "YulBlock",
													"src": "1793:32:2",
													"statements": [
														{
															"nativeSrc": "1803:16:2",
															"nodeType": "YulAssignment",
															"src": "1803:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1814:5:2",
																"nodeType": "YulIdentifier",
																"src": "1814:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1803:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1803:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1748:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1775:5:2",
														"nodeType": "YulTypedName",
														"src": "1775:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1785:7:2",
														"nodeType": "YulTypedName",
														"src": "1785:7:2",
														"type": ""
													}
												],
												"src": "1748:77:2"
											},
											{
												"body": {
													"nativeSrc": "1874:79:2",
													"nodeType": "YulBlock",
													"src": "1874:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1931:16:2",
																"nodeType": "YulBlock",
																"src": "1931:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1940:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1940:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1943:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1943:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1933:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:2"
																			},
																			"nativeSrc": "1933:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1933:12:2"
																		},
																		"nativeSrc": "1933:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1933:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1897:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1897:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1922:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1922:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1904:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "1904:17:2"
																				},
																				"nativeSrc": "1904:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1904:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1894:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1894:2:2"
																		},
																		"nativeSrc": "1894:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1894:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1887:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:2"
																},
																"nativeSrc": "1887:43:2",
																"nodeType": "YulFunctionCall",
																"src": "1887:43:2"
															},
															"nativeSrc": "1884:63:2",
															"nodeType": "YulIf",
															"src": "1884:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1831:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1867:5:2",
														"nodeType": "YulTypedName",
														"src": "1867:5:2",
														"type": ""
													}
												],
												"src": "1831:122:2"
											},
											{
												"body": {
													"nativeSrc": "2011:87:2",
													"nodeType": "YulBlock",
													"src": "2011:87:2",
													"statements": [
														{
															"nativeSrc": "2021:29:2",
															"nodeType": "YulAssignment",
															"src": "2021:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2043:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2043:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2030:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "2030:12:2"
																},
																"nativeSrc": "2030:20:2",
																"nodeType": "YulFunctionCall",
																"src": "2030:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2021:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2021:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2086:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2086:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2059:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "2059:26:2"
																},
																"nativeSrc": "2059:33:2",
																"nodeType": "YulFunctionCall",
																"src": "2059:33:2"
															},
															"nativeSrc": "2059:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "2059:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1959:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1989:6:2",
														"nodeType": "YulTypedName",
														"src": "1989:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1997:3:2",
														"nodeType": "YulTypedName",
														"src": "1997:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2005:5:2",
														"nodeType": "YulTypedName",
														"src": "2005:5:2",
														"type": ""
													}
												],
												"src": "1959:139:2"
											},
											{
												"body": {
													"nativeSrc": "2204:519:2",
													"nodeType": "YulBlock",
													"src": "2204:519:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2250:83:2",
																"nodeType": "YulBlock",
																"src": "2250:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2252:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2252:77:2"
																			},
																			"nativeSrc": "2252:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2252:79:2"
																		},
																		"nativeSrc": "2252:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2252:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2225:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2225:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2234:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2234:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2221:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2221:3:2"
																		},
																		"nativeSrc": "2221:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2221:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2246:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2246:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2217:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2217:3:2"
																},
																"nativeSrc": "2217:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2217:32:2"
															},
															"nativeSrc": "2214:119:2",
															"nodeType": "YulIf",
															"src": "2214:119:2"
														},
														{
															"nativeSrc": "2343:117:2",
															"nodeType": "YulBlock",
															"src": "2343:117:2",
															"statements": [
																{
																	"nativeSrc": "2358:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2358:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2372:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2372:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2362:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2362:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2387:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2387:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2422:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2422:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2433:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2433:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2418:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2418:3:2"
																				},
																				"nativeSrc": "2418:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2418:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2442:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2442:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2397:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2397:20:2"
																		},
																		"nativeSrc": "2397:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2387:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2387:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2470:118:2",
															"nodeType": "YulBlock",
															"src": "2470:118:2",
															"statements": [
																{
																	"nativeSrc": "2485:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2485:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2499:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2499:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2489:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2489:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2515:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2515:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2550:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2550:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2561:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2561:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2546:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2546:3:2"
																				},
																				"nativeSrc": "2546:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2546:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2570:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2570:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2525:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2525:20:2"
																		},
																		"nativeSrc": "2525:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2525:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2515:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2515:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2598:118:2",
															"nodeType": "YulBlock",
															"src": "2598:118:2",
															"statements": [
																{
																	"nativeSrc": "2613:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2613:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2627:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2627:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2617:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2617:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2643:63:2",
																	"nodeType": "YulAssignment",
																	"src": "2643:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2678:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2678:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2689:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2689:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2674:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2674:3:2"
																				},
																				"nativeSrc": "2674:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2674:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2698:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2698:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2653:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "2653:20:2"
																		},
																		"nativeSrc": "2653:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2653:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2643:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2643:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2104:619:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2158:9:2",
														"nodeType": "YulTypedName",
														"src": "2158:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2169:7:2",
														"nodeType": "YulTypedName",
														"src": "2169:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2181:6:2",
														"nodeType": "YulTypedName",
														"src": "2181:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2189:6:2",
														"nodeType": "YulTypedName",
														"src": "2189:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2197:6:2",
														"nodeType": "YulTypedName",
														"src": "2197:6:2",
														"type": ""
													}
												],
												"src": "2104:619:2"
											},
											{
												"body": {
													"nativeSrc": "2794:53:2",
													"nodeType": "YulBlock",
													"src": "2794:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2811:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2811:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2834:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2834:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2816:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2816:17:2"
																		},
																		"nativeSrc": "2816:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2816:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2804:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2804:6:2"
																},
																"nativeSrc": "2804:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2804:37:2"
															},
															"nativeSrc": "2804:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2804:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2729:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2782:5:2",
														"nodeType": "YulTypedName",
														"src": "2782:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2789:3:2",
														"nodeType": "YulTypedName",
														"src": "2789:3:2",
														"type": ""
													}
												],
												"src": "2729:118:2"
											},
											{
												"body": {
													"nativeSrc": "2906:32:2",
													"nodeType": "YulBlock",
													"src": "2906:32:2",
													"statements": [
														{
															"nativeSrc": "2916:16:2",
															"nodeType": "YulAssignment",
															"src": "2916:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "2927:5:2",
																"nodeType": "YulIdentifier",
																"src": "2927:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2916:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2916:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nativeSrc": "2853:85:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2888:5:2",
														"nodeType": "YulTypedName",
														"src": "2888:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2898:7:2",
														"nodeType": "YulTypedName",
														"src": "2898:7:2",
														"type": ""
													}
												],
												"src": "2853:85:2"
											},
											{
												"body": {
													"nativeSrc": "2976:28:2",
													"nodeType": "YulBlock",
													"src": "2976:28:2",
													"statements": [
														{
															"nativeSrc": "2986:12:2",
															"nodeType": "YulAssignment",
															"src": "2986:12:2",
															"value": {
																"name": "value",
																"nativeSrc": "2993:5:2",
																"nodeType": "YulIdentifier",
																"src": "2993:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2986:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2986:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2944:60:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2962:5:2",
														"nodeType": "YulTypedName",
														"src": "2962:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2972:3:2",
														"nodeType": "YulTypedName",
														"src": "2972:3:2",
														"type": ""
													}
												],
												"src": "2944:60:2"
											},
											{
												"body": {
													"nativeSrc": "3078:90:2",
													"nodeType": "YulBlock",
													"src": "3078:90:2",
													"statements": [
														{
															"nativeSrc": "3088:74:2",
															"nodeType": "YulAssignment",
															"src": "3088:74:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3154:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "3154:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nativeSrc": "3128:25:2",
																					"nodeType": "YulIdentifier",
																					"src": "3128:25:2"
																				},
																				"nativeSrc": "3128:32:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3128:32:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3119:8:2",
																			"nodeType": "YulIdentifier",
																			"src": "3119:8:2"
																		},
																		"nativeSrc": "3119:42:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3119:42:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3101:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "3101:17:2"
																},
																"nativeSrc": "3101:61:2",
																"nodeType": "YulFunctionCall",
																"src": "3101:61:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3088:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "3088:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nativeSrc": "3010:158:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3058:5:2",
														"nodeType": "YulTypedName",
														"src": "3058:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3068:9:2",
														"nodeType": "YulTypedName",
														"src": "3068:9:2",
														"type": ""
													}
												],
												"src": "3010:158:2"
											},
											{
												"body": {
													"nativeSrc": "3247:74:2",
													"nodeType": "YulBlock",
													"src": "3247:74:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3264:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "3264:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3308:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3308:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nativeSrc": "3269:38:2",
																			"nodeType": "YulIdentifier",
																			"src": "3269:38:2"
																		},
																		"nativeSrc": "3269:45:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3269:45:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3257:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3257:6:2"
																},
																"nativeSrc": "3257:58:2",
																"nodeType": "YulFunctionCall",
																"src": "3257:58:2"
															},
															"nativeSrc": "3257:58:2",
															"nodeType": "YulExpressionStatement",
															"src": "3257:58:2"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nativeSrc": "3174:147:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3235:5:2",
														"nodeType": "YulTypedName",
														"src": "3235:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3242:3:2",
														"nodeType": "YulTypedName",
														"src": "3242:3:2",
														"type": ""
													}
												],
												"src": "3174:147:2"
											},
											{
												"body": {
													"nativeSrc": "3461:214:2",
													"nodeType": "YulBlock",
													"src": "3461:214:2",
													"statements": [
														{
															"nativeSrc": "3471:26:2",
															"nodeType": "YulAssignment",
															"src": "3471:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3483:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "3483:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3494:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3494:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3479:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3479:3:2"
																},
																"nativeSrc": "3479:18:2",
																"nodeType": "YulFunctionCall",
																"src": "3479:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3471:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "3471:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3551:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3551:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3564:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3564:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3575:1:2",
																				"nodeType": "YulLiteral",
																				"src": "3575:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3560:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3560:3:2"
																		},
																		"nativeSrc": "3560:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3560:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3507:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "3507:43:2"
																},
																"nativeSrc": "3507:71:2",
																"nodeType": "YulFunctionCall",
																"src": "3507:71:2"
															},
															"nativeSrc": "3507:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "3507:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3640:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3640:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3653:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3653:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3664:2:2",
																				"nodeType": "YulLiteral",
																				"src": "3664:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3649:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3649:3:2"
																		},
																		"nativeSrc": "3649:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3649:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "3588:51:2",
																	"nodeType": "YulIdentifier",
																	"src": "3588:51:2"
																},
																"nativeSrc": "3588:80:2",
																"nodeType": "YulFunctionCall",
																"src": "3588:80:2"
															},
															"nativeSrc": "3588:80:2",
															"nodeType": "YulExpressionStatement",
															"src": "3588:80:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3327:348:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3425:9:2",
														"nodeType": "YulTypedName",
														"src": "3425:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3437:6:2",
														"nodeType": "YulTypedName",
														"src": "3437:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3445:6:2",
														"nodeType": "YulTypedName",
														"src": "3445:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3456:4:2",
														"nodeType": "YulTypedName",
														"src": "3456:4:2",
														"type": ""
													}
												],
												"src": "3327:348:2"
											},
											{
												"body": {
													"nativeSrc": "3721:76:2",
													"nodeType": "YulBlock",
													"src": "3721:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3775:16:2",
																"nodeType": "YulBlock",
																"src": "3775:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3784:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3784:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3787:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3787:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3777:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3777:6:2"
																			},
																			"nativeSrc": "3777:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3777:12:2"
																		},
																		"nativeSrc": "3777:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3777:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3744:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3744:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3766:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "3766:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3751:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "3751:14:2"
																				},
																				"nativeSrc": "3751:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3751:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3741:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3741:2:2"
																		},
																		"nativeSrc": "3741:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3741:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3734:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3734:6:2"
																},
																"nativeSrc": "3734:40:2",
																"nodeType": "YulFunctionCall",
																"src": "3734:40:2"
															},
															"nativeSrc": "3731:60:2",
															"nodeType": "YulIf",
															"src": "3731:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3681:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3714:5:2",
														"nodeType": "YulTypedName",
														"src": "3714:5:2",
														"type": ""
													}
												],
												"src": "3681:116:2"
											},
											{
												"body": {
													"nativeSrc": "3863:77:2",
													"nodeType": "YulBlock",
													"src": "3863:77:2",
													"statements": [
														{
															"nativeSrc": "3873:22:2",
															"nodeType": "YulAssignment",
															"src": "3873:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3888:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3888:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3882:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3882:5:2"
																},
																"nativeSrc": "3882:13:2",
																"nodeType": "YulFunctionCall",
																"src": "3882:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3873:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3873:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3928:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3928:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3904:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "3904:23:2"
																},
																"nativeSrc": "3904:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3904:30:2"
															},
															"nativeSrc": "3904:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "3904:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "3803:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3841:6:2",
														"nodeType": "YulTypedName",
														"src": "3841:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3849:3:2",
														"nodeType": "YulTypedName",
														"src": "3849:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3857:5:2",
														"nodeType": "YulTypedName",
														"src": "3857:5:2",
														"type": ""
													}
												],
												"src": "3803:137:2"
											},
											{
												"body": {
													"nativeSrc": "4020:271:2",
													"nodeType": "YulBlock",
													"src": "4020:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "4066:83:2",
																"nodeType": "YulBlock",
																"src": "4066:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4068:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "4068:77:2"
																			},
																			"nativeSrc": "4068:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "4068:79:2"
																		},
																		"nativeSrc": "4068:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "4068:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4041:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "4041:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4050:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "4050:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4037:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "4037:3:2"
																		},
																		"nativeSrc": "4037:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4037:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4062:2:2",
																		"nodeType": "YulLiteral",
																		"src": "4062:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4033:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "4033:3:2"
																},
																"nativeSrc": "4033:32:2",
																"nodeType": "YulFunctionCall",
																"src": "4033:32:2"
															},
															"nativeSrc": "4030:119:2",
															"nodeType": "YulIf",
															"src": "4030:119:2"
														},
														{
															"nativeSrc": "4159:125:2",
															"nodeType": "YulBlock",
															"src": "4159:125:2",
															"statements": [
																{
																	"nativeSrc": "4174:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4174:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4188:1:2",
																		"nodeType": "YulLiteral",
																		"src": "4188:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4178:6:2",
																			"nodeType": "YulTypedName",
																			"src": "4178:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4203:71:2",
																	"nodeType": "YulAssignment",
																	"src": "4203:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4246:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "4246:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4257:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4242:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:2"
																				},
																				"nativeSrc": "4242:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "4242:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4266:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "4266:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "4213:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "4213:28:2"
																		},
																		"nativeSrc": "4213:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "4213:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4203:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "4203:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3946:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3990:9:2",
														"nodeType": "YulTypedName",
														"src": "3990:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4001:7:2",
														"nodeType": "YulTypedName",
														"src": "4001:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4013:6:2",
														"nodeType": "YulTypedName",
														"src": "4013:6:2",
														"type": ""
													}
												],
												"src": "3946:345:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061003f575f3560e01c8063381f22b014610043578063dcf3fb2a14610073578063fbabf7471461008f575b5f5ffd5b61005d600480360381019061005891906102fc565b6100ab565b60405161006a9190610354565b60405180910390f35b61008d600480360381019061008891906102fc565b6100d4565b005b6100a960048036038101906100a491906103a0565b6101e2565b005b5f602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3825f6040518363ffffffff1660e01b815260040161010f929190610441565b6020604051808303815f875af115801561012b573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061014f9190610492565b505f5f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81036102995760015f5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505b505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6102cb826102a2565b9050919050565b6102db816102c1565b81146102e5575f5ffd5b50565b5f813590506102f6816102d2565b92915050565b5f5f604083850312156103125761031161029e565b5b5f61031f858286016102e8565b9250506020610330858286016102e8565b9150509250929050565b5f8115159050919050565b61034e8161033a565b82525050565b5f6020820190506103675f830184610345565b92915050565b5f819050919050565b61037f8161036d565b8114610389575f5ffd5b50565b5f8135905061039a81610376565b92915050565b5f5f5f606084860312156103b7576103b661029e565b5b5f6103c4868287016102e8565b93505060206103d5868287016102e8565b92505060406103e68682870161038c565b9150509250925092565b6103f9816102c1565b82525050565b5f819050919050565b5f819050919050565b5f61042b610426610421846103ff565b610408565b61036d565b9050919050565b61043b81610411565b82525050565b5f6040820190506104545f8301856103f0565b6104616020830184610432565b9392505050565b6104718161033a565b811461047b575f5ffd5b50565b5f8151905061048c81610468565b92915050565b5f602082840312156104a7576104a661029e565b5b5f6104b48482850161047e565b9150509291505056fea2646970667358221220ce978bcd0153c6626f8a9109a3a43b0107f59f71ebfcf76d321878d5ce5f97f264736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x381F22B0 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xDCF3FB2A EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xFBABF747 EQ PUSH2 0x8F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x8D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x2FC JUMP JUMPDEST PUSH2 0xD4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x3A0 JUMP JUMPDEST PUSH2 0x1E2 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP3 PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F SWAP3 SWAP2 SWAP1 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12B JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x492 JUMP JUMPDEST POP PUSH0 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SUB PUSH2 0x299 JUMPI PUSH1 0x1 PUSH0 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB DUP3 PUSH2 0x2A2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2E5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F6 DUP2 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x312 JUMPI PUSH2 0x311 PUSH2 0x29E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x31F DUP6 DUP3 DUP7 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x330 DUP6 DUP3 DUP7 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34E DUP2 PUSH2 0x33A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x367 PUSH0 DUP4 ADD DUP5 PUSH2 0x345 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x37F DUP2 PUSH2 0x36D JUMP JUMPDEST DUP2 EQ PUSH2 0x389 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x39A DUP2 PUSH2 0x376 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3B7 JUMPI PUSH2 0x3B6 PUSH2 0x29E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3C4 DUP7 DUP3 DUP8 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3D5 DUP7 DUP3 DUP8 ADD PUSH2 0x2E8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3E6 DUP7 DUP3 DUP8 ADD PUSH2 0x38C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3F9 DUP2 PUSH2 0x2C1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x42B PUSH2 0x426 PUSH2 0x421 DUP5 PUSH2 0x3FF JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x43B DUP2 PUSH2 0x411 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x454 PUSH0 DUP4 ADD DUP6 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x461 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x432 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x33A JUMP JUMPDEST DUP2 EQ PUSH2 0x47B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x48C DUP2 PUSH2 0x468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A7 JUMPI PUSH2 0x4A6 PUSH2 0x29E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x4B4 DUP5 DUP3 DUP6 ADD PUSH2 0x47E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SWAP8 DUP12 0xCD ADD MSTORE8 0xC6 PUSH3 0x6F8A91 MULMOD LOG3 LOG4 EXTCODESIZE ADD SMOD CREATE2 SWAP16 PUSH18 0xEBFCF76D321878D5CE5F97F264736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "244:727:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;347:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;786:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;502:200;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;347:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;786:183::-;860:5;853:21;;;875:7;884:1;853:33;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;957:5;915:18;:30;934:10;915:30;;;;;;;;;;;;;;;:39;946:7;915:39;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;786:183;;:::o;502:200::-;606:17;596:6;:27;592:104;;681:4;639:18;:30;658:10;639:30;;;;;;;;;;;;;;;:39;670:7;639:39;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;592:104;502:200;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:90::-;1355:7;1398:5;1391:13;1384:21;1373:32;;1321:90;;;:::o;1417:109::-;1498:21;1513:5;1498:21;:::i;:::-;1493:3;1486:34;1417:109;;:::o;1532:210::-;1619:4;1657:2;1646:9;1642:18;1634:26;;1670:65;1732:1;1721:9;1717:17;1708:6;1670:65;:::i;:::-;1532:210;;;;:::o;1748:77::-;1785:7;1814:5;1803:16;;1748:77;;;:::o;1831:122::-;1904:24;1922:5;1904:24;:::i;:::-;1897:5;1894:35;1884:63;;1943:1;1940;1933:12;1884:63;1831:122;:::o;1959:139::-;2005:5;2043:6;2030:20;2021:29;;2059:33;2086:5;2059:33;:::i;:::-;1959:139;;;;:::o;2104:619::-;2181:6;2189;2197;2246:2;2234:9;2225:7;2221:23;2217:32;2214:119;;;2252:79;;:::i;:::-;2214:119;2372:1;2397:53;2442:7;2433:6;2422:9;2418:22;2397:53;:::i;:::-;2387:63;;2343:117;2499:2;2525:53;2570:7;2561:6;2550:9;2546:22;2525:53;:::i;:::-;2515:63;;2470:118;2627:2;2653:53;2698:7;2689:6;2678:9;2674:22;2653:53;:::i;:::-;2643:63;;2598:118;2104:619;;;;;:::o;2729:118::-;2816:24;2834:5;2816:24;:::i;:::-;2811:3;2804:37;2729:118;;:::o;2853:85::-;2898:7;2927:5;2916:16;;2853:85;;;:::o;2944:60::-;2972:3;2993:5;2986:12;;2944:60;;;:::o;3010:158::-;3068:9;3101:61;3119:42;3128:32;3154:5;3128:32;:::i;:::-;3119:42;:::i;:::-;3101:61;:::i;:::-;3088:74;;3010:158;;;:::o;3174:147::-;3269:45;3308:5;3269:45;:::i;:::-;3264:3;3257:58;3174:147;;:::o;3327:348::-;3456:4;3494:2;3483:9;3479:18;3471:26;;3507:71;3575:1;3564:9;3560:17;3551:6;3507:71;:::i;:::-;3588:80;3664:2;3653:9;3649:18;3640:6;3588:80;:::i;:::-;3327:348;;;;;:::o;3681:116::-;3751:21;3766:5;3751:21;:::i;:::-;3744:5;3741:32;3731:60;;3787:1;3784;3777:12;3731:60;3681:116;:::o;3803:137::-;3857:5;3888:6;3882:13;3873:22;;3904:30;3928:5;3904:30;:::i;:::-;3803:137;;;;:::o;3946:345::-;4013:6;4062:2;4050:9;4041:7;4037:23;4033:32;4030:119;;;4068:79;;:::i;:::-;4030:119;4188:1;4213:61;4266:7;4257:6;4246:9;4242:22;4213:61;:::i;:::-;4203:71;;4159:125;3946:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "253400",
								"executionCost": "292",
								"totalCost": "253692"
							},
							"external": {
								"isInfiniteApproved(address,address)": "infinite",
								"revoke(address,address)": "infinite",
								"trackApproval(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 244,
									"end": 971,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 971,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce978bcd0153c6626f8a9109a3a43b0107f59f71ebfcf76d321878d5ce5f97f264736f6c634300081d0033",
									".code": [
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "381F22B0"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "DCF3FB2A"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "FBABF747"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 971,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 347,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 347,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 347,
											"end": 417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 786,
											"end": 969,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 786,
											"end": 969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 786,
											"end": 969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 786,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 786,
											"end": 969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 786,
											"end": 969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 786,
											"end": 969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 502,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 702,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 702,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 502,
											"end": 702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 502,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 502,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 502,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 347,
											"end": 417,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 347,
											"end": 417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 786,
											"end": 969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 860,
											"end": 865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 874,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 875,
											"end": 882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 884,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 853,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 853,
											"end": 886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 853,
											"end": 886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 853,
											"end": 886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 957,
											"end": 962,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 934,
											"end": 944,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 945,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 945,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 946,
											"end": 953,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 954,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 915,
											"end": 954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 954,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 915,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 962,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 915,
											"end": 962,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 915,
											"end": 962,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 915,
											"end": 962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 786,
											"end": 969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 502,
											"end": 702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 623,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 596,
											"end": 602,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 596,
											"end": 623,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 592,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 592,
											"end": 696,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 681,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 639,
											"end": 657,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 658,
											"end": 668,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 639,
											"end": 669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 639,
											"end": 669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 669,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 677,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 639,
											"end": 678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 639,
											"end": 678,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 639,
											"end": 678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 678,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 639,
											"end": 678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 639,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 639,
											"end": 685,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 639,
											"end": 685,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 685,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 696,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 592,
											"end": 696,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 502,
											"end": 702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 941,
											"end": 964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 972,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1117,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1245,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1411,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1321,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1355,
											"end": 1362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1398,
											"end": 1403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1391,
											"end": 1404,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1405,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1373,
											"end": 1405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1526,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1417,
											"end": 1526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1513,
											"end": 1518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1519,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1498,
											"end": 1519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1498,
											"end": 1519,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1498,
											"end": 1519,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1493,
											"end": 1496,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1526,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1742,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1532,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1619,
											"end": 1623,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1659,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1634,
											"end": 1660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1732,
											"end": 1733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1721,
											"end": 1730,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1717,
											"end": 1734,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1708,
											"end": 1714,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1670,
											"end": 1735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1670,
											"end": 1735,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1670,
											"end": 1735,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1742,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1742,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1742,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1742,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1785,
											"end": 1792,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1819,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1803,
											"end": 1819,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1748,
											"end": 1825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1922,
											"end": 1927,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1904,
											"end": 1928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1904,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1897,
											"end": 1902,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1894,
											"end": 1929,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1940,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1945,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1884,
											"end": 1947,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1953,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2005,
											"end": 2010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2049,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2030,
											"end": 2050,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2050,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2021,
											"end": 2050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2059,
											"end": 2092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 2059,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1959,
											"end": 2098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2181,
											"end": 2187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2189,
											"end": 2195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2197,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2246,
											"end": 2248,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2234,
											"end": 2243,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2225,
											"end": 2232,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2221,
											"end": 2244,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2217,
											"end": 2249,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2252,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 2252,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2214,
											"end": 2333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2372,
											"end": 2373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2442,
											"end": 2449,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2439,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2422,
											"end": 2431,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2418,
											"end": 2440,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2397,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2397,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2450,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2387,
											"end": 2450,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2343,
											"end": 2460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2501,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2570,
											"end": 2577,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2561,
											"end": 2567,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2546,
											"end": 2568,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2525,
											"end": 2578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2525,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2470,
											"end": 2588,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2698,
											"end": 2705,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2689,
											"end": 2695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2687,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 2653,
											"end": 2706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2653,
											"end": 2706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2643,
											"end": 2706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2598,
											"end": 2716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2723,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2104,
											"end": 2723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2847,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2729,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2834,
											"end": 2839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2816,
											"end": 2840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2816,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2811,
											"end": 2814,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2804,
											"end": 2841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2847,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2938,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 2853,
											"end": 2938,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2898,
											"end": 2905,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2932,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2916,
											"end": 2932,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2938,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2938,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2938,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2853,
											"end": 2938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3004,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2944,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2972,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2993,
											"end": 2998,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 2998,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2986,
											"end": 2998,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3004,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3004,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2944,
											"end": 3004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3010,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3119,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3154,
											"end": 3159,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3128,
											"end": 3160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3128,
											"end": 3160,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3119,
											"end": 3161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3119,
											"end": 3161,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3119,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 3101,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3101,
											"end": 3162,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3101,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3168,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3168,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3168,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3010,
											"end": 3168,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3321,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3174,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3308,
											"end": 3313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3269,
											"end": 3314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3269,
											"end": 3314,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3269,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3264,
											"end": 3267,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3257,
											"end": 3315,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3321,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3174,
											"end": 3321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3675,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 3327,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3456,
											"end": 3460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3494,
											"end": 3496,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3492,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3479,
											"end": 3497,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3471,
											"end": 3497,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3507,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3575,
											"end": 3576,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3564,
											"end": 3573,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3560,
											"end": 3577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3557,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3507,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3507,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3507,
											"end": 3578,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3507,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3664,
											"end": 3666,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3653,
											"end": 3662,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3649,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3640,
											"end": 3646,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3588,
											"end": 3668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3588,
											"end": 3668,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3588,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3675,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3675,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3675,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3327,
											"end": 3675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3797,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3681,
											"end": 3797,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3766,
											"end": 3771,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3751,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3751,
											"end": 3772,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3751,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3744,
											"end": 3749,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3741,
											"end": 3773,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3731,
											"end": 3791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3777,
											"end": 3789,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3791,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3731,
											"end": 3791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3797,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3681,
											"end": 3797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3940,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3803,
											"end": 3940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3857,
											"end": 3862,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3888,
											"end": 3894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3895,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3873,
											"end": 3895,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3928,
											"end": 3933,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3904,
											"end": 3934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3904,
											"end": 3934,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3940,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3940,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3940,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4291,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3946,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4013,
											"end": 4019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4050,
											"end": 4059,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4041,
											"end": 4048,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4037,
											"end": 4060,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4033,
											"end": 4065,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4149,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4030,
											"end": 4149,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4068,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4068,
											"end": 4147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4068,
											"end": 4147,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4068,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4030,
											"end": 4149,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4030,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4188,
											"end": 4189,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4213,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 4213,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4213,
											"end": 4274,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4213,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4203,
											"end": 4274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4159,
											"end": 4284,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4291,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4291,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4291,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 4291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"I/infiniteApproval.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isInfiniteApproved(address,address)": "381f22b0",
							"revoke(address,address)": "dcf3fb2a",
							"trackApproval(address,address,uint256)": "fbabf747"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isInfiniteApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"revoke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"trackApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"InfiniteApprovalRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"revoke(address,address)\":{\"notice\":\"Revoke approval to the spender if you previously approved max\"},\"trackApproval(address,address,uint256)\":{\"notice\":\"Call this after doing an approval to track if it was infinite\"}},\"notice\":\"Tracks and allows revocation of infinite approvals to prevent token drain risks\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"I/infiniteApproval.sol\":\"InfiniteApprovalRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"I/infiniteApproval.sol\":{\"keccak256\":\"0x20a360b9701be4c50eb4deb02bdde381d7757eb23c63c0c213c1468a7f88c8f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0acd77cea5dfeac2ffd9f3d35eea36784c6fdcf83bd54e8d853654c7568fe99b\",\"dweb:/ipfs/QmUC6fZeGad3VcPhTwy5BLFAW3hs4zNnJDhaPwt9U3yKp9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 87,
								"contract": "I/infiniteApproval.sol:InfiniteApprovalRegistry",
								"label": "isInfiniteApproved",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"revoke(address,address)": {
								"notice": "Revoke approval to the spender if you previously approved max"
							},
							"trackApproval(address,address,uint256)": {
								"notice": "Call this after doing an approval to track if it was infinite"
							}
						},
						"notice": "Tracks and allows revocation of infinite approvals to prevent token drain risks",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> I/infiniteApproval.sol:13:28:\n   |\n13 |     function trackApproval(address token, address spender, uint256 amount) external {\n   |                            ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 538,
					"file": "I/infiniteApproval.sol",
					"start": 525
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"I/infiniteApproval.sol": {
				"ast": {
					"absolutePath": "I/infiniteApproval.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"InfiniteApprovalRegistry": [
							143
						]
					},
					"id": 144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 144,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "InfiniteApprovalRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "116:128:1",
								"text": "@title InfiniteApprovalRegistry\n @notice Tracks and allows revocation of infinite approvals to prevent token drain risks"
							},
							"fullyImplemented": true,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "InfiniteApprovalRegistry",
							"nameLocation": "253:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "381f22b0",
									"id": 87,
									"mutability": "mutable",
									"name": "isInfiniteApproved",
									"nameLocation": "399:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 143,
									"src": "347:70:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 86,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 82,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "355:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "347:44:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 85,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 83,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "366:24:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 84,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "385:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "582:120:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 97,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "596:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "611:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 99,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "611:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 98,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "606:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "606:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "620:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "606:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "596:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 114,
												"nodeType": "IfStatement",
												"src": "592:104:1",
												"trueBody": {
													"id": 113,
													"nodeType": "Block",
													"src": "625:71:1",
													"statements": [
														{
															"expression": {
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 104,
																			"name": "isInfiniteApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 87,
																			"src": "639:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																				"typeString": "mapping(address => mapping(address => bool))"
																			}
																		},
																		"id": 108,
																		"indexExpression": {
																			"expression": {
																				"id": 105,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "658:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 106,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "662:6:1",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "658:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "639:30:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 109,
																	"indexExpression": {
																		"id": 107,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "670:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "639:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "681:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "639:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 112,
															"nodeType": "ExpressionStatement",
															"src": "639:46:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "424:73:1",
										"text": "@notice Call this after doing an approval to track if it was infinite"
									},
									"functionSelector": "fbabf747",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trackApproval",
									"nameLocation": "511:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "533:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "525:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "548:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "540:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "540:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "565:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "557:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:48:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:0:1"
									},
									"scope": 143,
									"src": "502:200:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "843:126:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 128,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "875:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "884:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 125,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "860:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 124,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "853:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "853:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "867:7:1",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "853:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "853:33:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "853:33:1"
											},
											{
												"expression": {
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 132,
																"name": "isInfiniteApproved",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 87,
																"src": "915:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 136,
															"indexExpression": {
																"expression": {
																	"id": 133,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "934:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "938:6:1",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "934:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "915:30:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 137,
														"indexExpression": {
															"id": 135,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 121,
															"src": "946:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "915:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "957:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "915:47:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "915:47:1"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "708:73:1",
										"text": "@notice Revoke approval to the spender if you previously approved max"
									},
									"functionSelector": "dcf3fb2a",
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "revoke",
									"nameLocation": "795:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "810:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "802:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "802:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "825:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "817:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:32:1"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:0:1"
									},
									"scope": 143,
									"src": "786:183:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 144,
							"src": "244:727:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:940:1"
				},
				"id": 1
			}
		}
	}
}