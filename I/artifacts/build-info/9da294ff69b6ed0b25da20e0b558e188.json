{
	"id": "9da294ff69b6ed0b25da20e0b558e188",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"I/Proxy Contract With Hidden Infinite Approval Logic.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract ProxyApprover {\n    address public target;\n\n    constructor(address _target) {\n        target = _target;\n    }\n\n    function approveOnBehalf(address token, address spender) external {\n        // Dangerous if proxy leads to malicious logic\n        IERC20(token).approve(spender, type(uint256).max);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"I/Proxy Contract With Hidden Infinite Approval Logic.sol": {
				"ProxyApprover": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_target",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "approveOnBehalf",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "target",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":116:430  contract ProxyApprover {... */\n  mstore(0x40, 0x80)\n    /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":173:235  constructor(address _target) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":221:228  _target */\n  dup1\n    /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":212:218  target */\n  0x00\n  0x00\n    /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":212:228  target = _target */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":173:235  constructor(address _target) {... */\n  pop\n    /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":116:430  contract ProxyApprover {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":116:430  contract ProxyApprover {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":116:430  contract ProxyApprover {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5fcbe559\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd4b83992\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":241:428  function approveOnBehalf(address token, address spender) external {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":145:166  address public target */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":241:428  function approveOnBehalf(address token, address spender) external {... */\n    tag_8:\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":379:384  token */\n      dup2\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":372:393  IERC20(token).approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":394:401  spender */\n      dup3\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":403:420  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":372:421  IERC20(token).approve(spender, type(uint256).max) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_14\n      swap3\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_17\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      pop\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":241:428  function approveOnBehalf(address token, address spender) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":145:166  address public target */\n    tag_10:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_21:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_23:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_24:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_39\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_23\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_25:\n        /* \"#utility.yul\":641:665   */\n      tag_41\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_24\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_42\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_42:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_26:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_44\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1315   */\n    tag_7:\n        /* \"#utility.yul\":909:915   */\n      0x00\n        /* \"#utility.yul\":917:923   */\n      0x00\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":945:952   */\n      dup6\n        /* \"#utility.yul\":941:964   */\n      sub\n        /* \"#utility.yul\":937:969   */\n      slt\n        /* \"#utility.yul\":934:1053   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":972:1051   */\n      tag_47\n      tag_21\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":934:1053   */\n    tag_46:\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1117:1170   */\n      tag_48\n        /* \"#utility.yul\":1162:1169   */\n      dup6\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1142:1151   */\n      dup7\n        /* \"#utility.yul\":1138:1160   */\n      add\n        /* \"#utility.yul\":1117:1170   */\n      tag_26\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1107:1170   */\n      swap3\n      pop\n        /* \"#utility.yul\":1063:1180   */\n      pop\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1245:1298   */\n      tag_49\n        /* \"#utility.yul\":1290:1297   */\n      dup6\n        /* \"#utility.yul\":1281:1287   */\n      dup3\n        /* \"#utility.yul\":1270:1279   */\n      dup7\n        /* \"#utility.yul\":1266:1288   */\n      add\n        /* \"#utility.yul\":1245:1298   */\n      tag_26\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1235:1298   */\n      swap2\n      pop\n        /* \"#utility.yul\":1190:1308   */\n      pop\n        /* \"#utility.yul\":841:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1439   */\n    tag_27:\n        /* \"#utility.yul\":1408:1432   */\n      tag_51\n        /* \"#utility.yul\":1426:1431   */\n      dup2\n        /* \"#utility.yul\":1408:1432   */\n      tag_24\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1403:1406   */\n      dup3\n        /* \"#utility.yul\":1396:1433   */\n      mstore\n        /* \"#utility.yul\":1321:1439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1445:1667   */\n    tag_12:\n        /* \"#utility.yul\":1538:1542   */\n      0x00\n        /* \"#utility.yul\":1576:1578   */\n      0x20\n        /* \"#utility.yul\":1565:1574   */\n      dup3\n        /* \"#utility.yul\":1561:1579   */\n      add\n        /* \"#utility.yul\":1553:1579   */\n      swap1\n      pop\n        /* \"#utility.yul\":1589:1660   */\n      tag_53\n        /* \"#utility.yul\":1657:1658   */\n      0x00\n        /* \"#utility.yul\":1646:1655   */\n      dup4\n        /* \"#utility.yul\":1642:1659   */\n      add\n        /* \"#utility.yul\":1633:1639   */\n      dup5\n        /* \"#utility.yul\":1589:1660   */\n      tag_27\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1445:1667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1673:1750   */\n    tag_28:\n        /* \"#utility.yul\":1710:1717   */\n      0x00\n        /* \"#utility.yul\":1739:1744   */\n      dup2\n        /* \"#utility.yul\":1728:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1673:1750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1874   */\n    tag_29:\n        /* \"#utility.yul\":1843:1867   */\n      tag_56\n        /* \"#utility.yul\":1861:1866   */\n      dup2\n        /* \"#utility.yul\":1843:1867   */\n      tag_28\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1838:1841   */\n      dup3\n        /* \"#utility.yul\":1831:1868   */\n      mstore\n        /* \"#utility.yul\":1756:1874   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2212   */\n    tag_15:\n        /* \"#utility.yul\":2001:2005   */\n      0x00\n        /* \"#utility.yul\":2039:2041   */\n      0x40\n        /* \"#utility.yul\":2028:2037   */\n      dup3\n        /* \"#utility.yul\":2024:2042   */\n      add\n        /* \"#utility.yul\":2016:2042   */\n      swap1\n      pop\n        /* \"#utility.yul\":2052:2123   */\n      tag_58\n        /* \"#utility.yul\":2120:2121   */\n      0x00\n        /* \"#utility.yul\":2109:2118   */\n      dup4\n        /* \"#utility.yul\":2105:2122   */\n      add\n        /* \"#utility.yul\":2096:2102   */\n      dup6\n        /* \"#utility.yul\":2052:2123   */\n      tag_27\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2133:2205   */\n      tag_59\n        /* \"#utility.yul\":2201:2203   */\n      0x20\n        /* \"#utility.yul\":2190:2199   */\n      dup4\n        /* \"#utility.yul\":2186:2204   */\n      add\n        /* \"#utility.yul\":2177:2183   */\n      dup5\n        /* \"#utility.yul\":2133:2205   */\n      tag_29\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1880:2212   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2218:2308   */\n    tag_30:\n        /* \"#utility.yul\":2252:2259   */\n      0x00\n        /* \"#utility.yul\":2295:2300   */\n      dup2\n        /* \"#utility.yul\":2288:2301   */\n      iszero\n        /* \"#utility.yul\":2281:2302   */\n      iszero\n        /* \"#utility.yul\":2270:2302   */\n      swap1\n      pop\n        /* \"#utility.yul\":2218:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2430   */\n    tag_31:\n        /* \"#utility.yul\":2384:2405   */\n      tag_62\n        /* \"#utility.yul\":2399:2404   */\n      dup2\n        /* \"#utility.yul\":2384:2405   */\n      tag_30\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2377:2382   */\n      dup2\n        /* \"#utility.yul\":2374:2406   */\n      eq\n        /* \"#utility.yul\":2364:2424   */\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2420:2421   */\n      0x00\n        /* \"#utility.yul\":2417:2418   */\n      0x00\n        /* \"#utility.yul\":2410:2422   */\n      revert\n        /* \"#utility.yul\":2364:2424   */\n    tag_63:\n        /* \"#utility.yul\":2314:2430   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2436:2573   */\n    tag_32:\n        /* \"#utility.yul\":2490:2495   */\n      0x00\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2515:2528   */\n      mload\n        /* \"#utility.yul\":2506:2528   */\n      swap1\n      pop\n        /* \"#utility.yul\":2537:2567   */\n      tag_65\n        /* \"#utility.yul\":2561:2566   */\n      dup2\n        /* \"#utility.yul\":2537:2567   */\n      tag_31\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2436:2573   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2579:2924   */\n    tag_19:\n        /* \"#utility.yul\":2646:2652   */\n      0x00\n        /* \"#utility.yul\":2695:2697   */\n      0x20\n        /* \"#utility.yul\":2683:2692   */\n      dup3\n        /* \"#utility.yul\":2674:2681   */\n      dup5\n        /* \"#utility.yul\":2670:2693   */\n      sub\n        /* \"#utility.yul\":2666:2698   */\n      slt\n        /* \"#utility.yul\":2663:2782   */\n      iszero\n      tag_67\n      jumpi\n        /* \"#utility.yul\":2701:2780   */\n      tag_68\n      tag_21\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2663:2782   */\n    tag_67:\n        /* \"#utility.yul\":2821:2822   */\n      0x00\n        /* \"#utility.yul\":2846:2907   */\n      tag_69\n        /* \"#utility.yul\":2899:2906   */\n      dup5\n        /* \"#utility.yul\":2890:2896   */\n      dup3\n        /* \"#utility.yul\":2879:2888   */\n      dup6\n        /* \"#utility.yul\":2875:2897   */\n      add\n        /* \"#utility.yul\":2846:2907   */\n      tag_32\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":2836:2907   */\n      swap2\n      pop\n        /* \"#utility.yul\":2792:2917   */\n      pop\n        /* \"#utility.yul\":2579:2924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dd9d1588e2dd59b0718e9ffe56fe53de78d83b31b24b3c492e60e5adc5fc63f164736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:2",
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "759:80:2",
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nativeSrc": "769:22:2",
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nativeSrc": "778:13:2",
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nativeSrc": "800:33:2",
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nativeSrc": "800:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:2",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:2",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:2",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nativeSrc": "922:274:2",
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:2",
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nativeSrc": "970:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nativeSrc": "970:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nativeSrc": "939:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:2",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nativeSrc": "935:32:2",
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nativeSrc": "932:119:2",
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nativeSrc": "1061:128:2",
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nativeSrc": "1076:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:2",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nativeSrc": "1147:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nativeSrc": "1115:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:2",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:2",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:2",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516103db3803806103db833981810160405281019061003191906100d4565b805f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6102cf8061010c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80635fcbe55914610038578063d4b8399214610054575b5f5ffd5b610052600480360381019061004d9190610194565b610072565b005b61005c610112565b60405161006991906101e1565b60405180910390f35b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016100cd929190610212565b6020604051808303815f875af11580156100e9573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061010d919061026e565b505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101638261013a565b9050919050565b61017381610159565b811461017d575f5ffd5b50565b5f8135905061018e8161016a565b92915050565b5f5f604083850312156101aa576101a9610136565b5b5f6101b785828601610180565b92505060206101c885828601610180565b9150509250929050565b6101db81610159565b82525050565b5f6020820190506101f45f8301846101d2565b92915050565b5f819050919050565b61020c816101fa565b82525050565b5f6040820190506102255f8301856101d2565b6102326020830184610203565b9392505050565b5f8115159050919050565b61024d81610239565b8114610257575f5ffd5b50565b5f8151905061026881610244565b92915050565b5f6020828403121561028357610282610136565b5b5f6102908482850161025a565b9150509291505056fea2646970667358221220dd9d1588e2dd59b0718e9ffe56fe53de78d83b31b24b3c492e60e5adc5fc63f164736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3DB CODESIZE SUB DUP1 PUSH2 0x3DB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST DUP1 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2CF DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FCBE559 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD4B83992 EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD SWAP3 SWAP2 SWAP1 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x26E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x163 DUP3 PUSH2 0x13A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x173 DUP2 PUSH2 0x159 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18E DUP2 PUSH2 0x16A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA JUMPI PUSH2 0x1A9 PUSH2 0x136 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B7 DUP6 DUP3 DUP7 ADD PUSH2 0x180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C8 DUP6 DUP3 DUP7 ADD PUSH2 0x180 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB DUP2 PUSH2 0x159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C DUP2 PUSH2 0x1FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x225 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x232 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x203 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24D DUP2 PUSH2 0x239 JUMP JUMPDEST DUP2 EQ PUSH2 0x257 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x268 DUP2 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x136 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x290 DUP5 DUP3 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD SWAP14 ISZERO DUP9 0xE2 0xDD MSIZE 0xB0 PUSH18 0x8E9FFE56FE53DE78D83B31B24B3C492E60E5 0xAD 0xC5 0xFC PUSH4 0xF164736F PUSH13 0x634300081D0033000000000000 ",
							"sourceMap": "116:314:1:-:0;;;173:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;221:7;212:6;;:16;;;;;;;;;;;;;;;;;;173:62;116:314;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;116:314:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@approveOnBehalf_112": {
									"entryPoint": 114,
									"id": 112,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@target_82": {
									"entryPoint": 274,
									"id": 82,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2927:2",
										"nodeType": "YulBlock",
										"src": "0:2927:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "924:391:2",
													"nodeType": "YulBlock",
													"src": "924:391:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "970:83:2",
																"nodeType": "YulBlock",
																"src": "970:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "972:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "972:77:2"
																			},
																			"nativeSrc": "972:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "972:79:2"
																		},
																		"nativeSrc": "972:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "972:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "945:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "945:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "954:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "941:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:2"
																		},
																		"nativeSrc": "941:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "941:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "966:2:2",
																		"nodeType": "YulLiteral",
																		"src": "966:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "937:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:2"
																},
																"nativeSrc": "937:32:2",
																"nodeType": "YulFunctionCall",
																"src": "937:32:2"
															},
															"nativeSrc": "934:119:2",
															"nodeType": "YulIf",
															"src": "934:119:2"
														},
														{
															"nativeSrc": "1063:117:2",
															"nodeType": "YulBlock",
															"src": "1063:117:2",
															"statements": [
																{
																	"nativeSrc": "1078:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1078:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1092:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1092:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1082:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1082:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1107:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1107:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1142:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1142:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1153:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1153:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1138:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:2"
																				},
																				"nativeSrc": "1138:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1138:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1162:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1117:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1117:20:2"
																		},
																		"nativeSrc": "1117:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1107:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1107:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1190:118:2",
															"nodeType": "YulBlock",
															"src": "1190:118:2",
															"statements": [
																{
																	"nativeSrc": "1205:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1205:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1219:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1209:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1209:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1235:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1235:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1270:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1270:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1281:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1281:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1266:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1266:3:2"
																				},
																				"nativeSrc": "1266:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1266:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1290:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1290:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1245:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1245:20:2"
																		},
																		"nativeSrc": "1245:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1245:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1235:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1235:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "841:474:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "886:9:2",
														"nodeType": "YulTypedName",
														"src": "886:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "897:7:2",
														"nodeType": "YulTypedName",
														"src": "897:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "909:6:2",
														"nodeType": "YulTypedName",
														"src": "909:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "917:6:2",
														"nodeType": "YulTypedName",
														"src": "917:6:2",
														"type": ""
													}
												],
												"src": "841:474:2"
											},
											{
												"body": {
													"nativeSrc": "1386:53:2",
													"nodeType": "YulBlock",
													"src": "1386:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1403:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1403:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1426:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1426:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1408:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1408:17:2"
																		},
																		"nativeSrc": "1408:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1396:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:2"
																},
																"nativeSrc": "1396:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1396:37:2"
															},
															"nativeSrc": "1396:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1396:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1321:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1374:5:2",
														"nodeType": "YulTypedName",
														"src": "1374:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1381:3:2",
														"nodeType": "YulTypedName",
														"src": "1381:3:2",
														"type": ""
													}
												],
												"src": "1321:118:2"
											},
											{
												"body": {
													"nativeSrc": "1543:124:2",
													"nodeType": "YulBlock",
													"src": "1543:124:2",
													"statements": [
														{
															"nativeSrc": "1553:26:2",
															"nodeType": "YulAssignment",
															"src": "1553:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1565:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1565:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1576:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1576:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1561:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:2"
																},
																"nativeSrc": "1561:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1561:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1553:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1553:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1633:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1633:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1646:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1646:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1657:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1657:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1642:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:2"
																		},
																		"nativeSrc": "1642:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1642:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1589:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "1589:43:2"
																},
																"nativeSrc": "1589:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1589:71:2"
															},
															"nativeSrc": "1589:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "1589:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1445:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1515:9:2",
														"nodeType": "YulTypedName",
														"src": "1515:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1527:6:2",
														"nodeType": "YulTypedName",
														"src": "1527:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1538:4:2",
														"nodeType": "YulTypedName",
														"src": "1538:4:2",
														"type": ""
													}
												],
												"src": "1445:222:2"
											},
											{
												"body": {
													"nativeSrc": "1718:32:2",
													"nodeType": "YulBlock",
													"src": "1718:32:2",
													"statements": [
														{
															"nativeSrc": "1728:16:2",
															"nodeType": "YulAssignment",
															"src": "1728:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1739:5:2",
																"nodeType": "YulIdentifier",
																"src": "1739:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1728:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1728:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1673:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1700:5:2",
														"nodeType": "YulTypedName",
														"src": "1700:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1710:7:2",
														"nodeType": "YulTypedName",
														"src": "1710:7:2",
														"type": ""
													}
												],
												"src": "1673:77:2"
											},
											{
												"body": {
													"nativeSrc": "1821:53:2",
													"nodeType": "YulBlock",
													"src": "1821:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1838:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1838:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1861:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1861:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1843:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1843:17:2"
																		},
																		"nativeSrc": "1843:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1843:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1831:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:2"
																},
																"nativeSrc": "1831:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1831:37:2"
															},
															"nativeSrc": "1831:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1831:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1756:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1809:5:2",
														"nodeType": "YulTypedName",
														"src": "1809:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1816:3:2",
														"nodeType": "YulTypedName",
														"src": "1816:3:2",
														"type": ""
													}
												],
												"src": "1756:118:2"
											},
											{
												"body": {
													"nativeSrc": "2006:206:2",
													"nodeType": "YulBlock",
													"src": "2006:206:2",
													"statements": [
														{
															"nativeSrc": "2016:26:2",
															"nodeType": "YulAssignment",
															"src": "2016:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2028:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2028:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2039:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2039:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2024:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2024:3:2"
																},
																"nativeSrc": "2024:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2024:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2016:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2016:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2096:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2096:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2109:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2109:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2120:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2120:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2105:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2105:3:2"
																		},
																		"nativeSrc": "2105:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2105:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2052:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2052:43:2"
																},
																"nativeSrc": "2052:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2052:71:2"
															},
															"nativeSrc": "2052:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2052:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2177:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2177:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2190:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2190:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2201:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2201:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2186:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2186:3:2"
																		},
																		"nativeSrc": "2186:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2186:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2133:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2133:43:2"
																},
																"nativeSrc": "2133:72:2",
																"nodeType": "YulFunctionCall",
																"src": "2133:72:2"
															},
															"nativeSrc": "2133:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "2133:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "1880:332:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1970:9:2",
														"nodeType": "YulTypedName",
														"src": "1970:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1982:6:2",
														"nodeType": "YulTypedName",
														"src": "1982:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1990:6:2",
														"nodeType": "YulTypedName",
														"src": "1990:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2001:4:2",
														"nodeType": "YulTypedName",
														"src": "2001:4:2",
														"type": ""
													}
												],
												"src": "1880:332:2"
											},
											{
												"body": {
													"nativeSrc": "2260:48:2",
													"nodeType": "YulBlock",
													"src": "2260:48:2",
													"statements": [
														{
															"nativeSrc": "2270:32:2",
															"nodeType": "YulAssignment",
															"src": "2270:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2295:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2295:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2288:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2288:6:2"
																		},
																		"nativeSrc": "2288:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2281:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2281:6:2"
																},
																"nativeSrc": "2281:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2281:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2270:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2270:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2218:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2242:5:2",
														"nodeType": "YulTypedName",
														"src": "2242:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2252:7:2",
														"nodeType": "YulTypedName",
														"src": "2252:7:2",
														"type": ""
													}
												],
												"src": "2218:90:2"
											},
											{
												"body": {
													"nativeSrc": "2354:76:2",
													"nodeType": "YulBlock",
													"src": "2354:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2408:16:2",
																"nodeType": "YulBlock",
																"src": "2408:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2417:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2417:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2420:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2420:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2410:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2410:6:2"
																			},
																			"nativeSrc": "2410:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2410:12:2"
																		},
																		"nativeSrc": "2410:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2410:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2377:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2377:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2399:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2399:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2384:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "2384:14:2"
																				},
																				"nativeSrc": "2384:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2384:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2374:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2374:2:2"
																		},
																		"nativeSrc": "2374:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2367:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2367:6:2"
																},
																"nativeSrc": "2367:40:2",
																"nodeType": "YulFunctionCall",
																"src": "2367:40:2"
															},
															"nativeSrc": "2364:60:2",
															"nodeType": "YulIf",
															"src": "2364:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2314:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2347:5:2",
														"nodeType": "YulTypedName",
														"src": "2347:5:2",
														"type": ""
													}
												],
												"src": "2314:116:2"
											},
											{
												"body": {
													"nativeSrc": "2496:77:2",
													"nodeType": "YulBlock",
													"src": "2496:77:2",
													"statements": [
														{
															"nativeSrc": "2506:22:2",
															"nodeType": "YulAssignment",
															"src": "2506:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2521:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2515:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2515:5:2"
																},
																"nativeSrc": "2515:13:2",
																"nodeType": "YulFunctionCall",
																"src": "2515:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2506:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2506:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2561:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2561:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2537:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "2537:23:2"
																},
																"nativeSrc": "2537:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2537:30:2"
															},
															"nativeSrc": "2537:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2537:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2436:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2474:6:2",
														"nodeType": "YulTypedName",
														"src": "2474:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2482:3:2",
														"nodeType": "YulTypedName",
														"src": "2482:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2490:5:2",
														"nodeType": "YulTypedName",
														"src": "2490:5:2",
														"type": ""
													}
												],
												"src": "2436:137:2"
											},
											{
												"body": {
													"nativeSrc": "2653:271:2",
													"nodeType": "YulBlock",
													"src": "2653:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2699:83:2",
																"nodeType": "YulBlock",
																"src": "2699:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2701:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2701:77:2"
																			},
																			"nativeSrc": "2701:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2701:79:2"
																		},
																		"nativeSrc": "2701:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2701:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2674:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2674:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2683:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2683:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2670:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2670:3:2"
																		},
																		"nativeSrc": "2670:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2670:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2695:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2695:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2666:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2666:3:2"
																},
																"nativeSrc": "2666:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2666:32:2"
															},
															"nativeSrc": "2663:119:2",
															"nodeType": "YulIf",
															"src": "2663:119:2"
														},
														{
															"nativeSrc": "2792:125:2",
															"nodeType": "YulBlock",
															"src": "2792:125:2",
															"statements": [
																{
																	"nativeSrc": "2807:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2807:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2821:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2821:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2811:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2811:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2836:71:2",
																	"nodeType": "YulAssignment",
																	"src": "2836:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2879:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2879:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2890:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2890:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2875:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2875:3:2"
																				},
																				"nativeSrc": "2875:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2875:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2899:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2899:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "2846:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "2846:28:2"
																		},
																		"nativeSrc": "2846:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2846:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2836:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2836:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2579:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2623:9:2",
														"nodeType": "YulTypedName",
														"src": "2623:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2634:7:2",
														"nodeType": "YulTypedName",
														"src": "2634:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2646:6:2",
														"nodeType": "YulTypedName",
														"src": "2646:6:2",
														"type": ""
													}
												],
												"src": "2579:345:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610034575f3560e01c80635fcbe55914610038578063d4b8399214610054575b5f5ffd5b610052600480360381019061004d9190610194565b610072565b005b61005c610112565b60405161006991906101e1565b60405180910390f35b8173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b81526004016100cd929190610212565b6020604051808303815f875af11580156100e9573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061010d919061026e565b505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101638261013a565b9050919050565b61017381610159565b811461017d575f5ffd5b50565b5f8135905061018e8161016a565b92915050565b5f5f604083850312156101aa576101a9610136565b5b5f6101b785828601610180565b92505060206101c885828601610180565b9150509250929050565b6101db81610159565b82525050565b5f6020820190506101f45f8301846101d2565b92915050565b5f819050919050565b61020c816101fa565b82525050565b5f6040820190506102255f8301856101d2565b6102326020830184610203565b9392505050565b5f8115159050919050565b61024d81610239565b8114610257575f5ffd5b50565b5f8151905061026881610244565b92915050565b5f6020828403121561028357610282610136565b5b5f6102908482850161025a565b9150509291505056fea2646970667358221220dd9d1588e2dd59b0718e9ffe56fe53de78d83b31b24b3c492e60e5adc5fc63f164736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5FCBE559 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD4B83992 EQ PUSH2 0x54 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x194 JUMP JUMPDEST PUSH2 0x72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5C PUSH2 0x112 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x69 SWAP2 SWAP1 PUSH2 0x1E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD SWAP3 SWAP2 SWAP1 PUSH2 0x212 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE9 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10D SWAP2 SWAP1 PUSH2 0x26E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x163 DUP3 PUSH2 0x13A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x173 DUP2 PUSH2 0x159 JUMP JUMPDEST DUP2 EQ PUSH2 0x17D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x18E DUP2 PUSH2 0x16A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AA JUMPI PUSH2 0x1A9 PUSH2 0x136 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B7 DUP6 DUP3 DUP7 ADD PUSH2 0x180 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C8 DUP6 DUP3 DUP7 ADD PUSH2 0x180 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DB DUP2 PUSH2 0x159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F4 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20C DUP2 PUSH2 0x1FA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x225 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D2 JUMP JUMPDEST PUSH2 0x232 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x203 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24D DUP2 PUSH2 0x239 JUMP JUMPDEST DUP2 EQ PUSH2 0x257 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x268 DUP2 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x283 JUMPI PUSH2 0x282 PUSH2 0x136 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x290 DUP5 DUP3 DUP6 ADD PUSH2 0x25A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD SWAP14 ISZERO DUP9 0xE2 0xDD MSIZE 0xB0 PUSH18 0x8E9FFE56FE53DE78D83B31B24B3C492E60E5 0xAD 0xC5 0xFC PUSH4 0xF164736F PUSH13 0x634300081D0033000000000000 ",
							"sourceMap": "116:314:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;241:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;145:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;241:187;379:5;372:21;;;394:7;403:17;372:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;241:187;;:::o;145:21::-;;;;;;;;;;;;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:118::-;1408:24;1426:5;1408:24;:::i;:::-;1403:3;1396:37;1321:118;;:::o;1445:222::-;1538:4;1576:2;1565:9;1561:18;1553:26;;1589:71;1657:1;1646:9;1642:17;1633:6;1589:71;:::i;:::-;1445:222;;;;:::o;1673:77::-;1710:7;1739:5;1728:16;;1673:77;;;:::o;1756:118::-;1843:24;1861:5;1843:24;:::i;:::-;1838:3;1831:37;1756:118;;:::o;1880:332::-;2001:4;2039:2;2028:9;2024:18;2016:26;;2052:71;2120:1;2109:9;2105:17;2096:6;2052:71;:::i;:::-;2133:72;2201:2;2190:9;2186:18;2177:6;2133:72;:::i;:::-;1880:332;;;;;:::o;2218:90::-;2252:7;2295:5;2288:13;2281:21;2270:32;;2218:90;;;:::o;2314:116::-;2384:21;2399:5;2384:21;:::i;:::-;2377:5;2374:32;2364:60;;2420:1;2417;2410:12;2364:60;2314:116;:::o;2436:137::-;2490:5;2521:6;2515:13;2506:22;;2537:30;2561:5;2537:30;:::i;:::-;2436:137;;;;:::o;2579:345::-;2646:6;2695:2;2683:9;2674:7;2670:23;2666:32;2663:119;;;2701:79;;:::i;:::-;2663:119;2821:1;2846:61;2899:7;2890:6;2879:9;2875:22;2846:61;:::i;:::-;2836:71;;2792:125;2579:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "143800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approveOnBehalf(address,address)": "infinite",
								"target()": "2507"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 430,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 235,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 173,
									"end": 235,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 173,
									"end": 235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 235,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 173,
									"end": 235,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 173,
									"end": 235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 173,
									"end": 235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 173,
									"end": 235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 221,
									"end": 228,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 212,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 218,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 228,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 212,
									"end": 228,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 212,
									"end": 228,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 212,
									"end": 228,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 212,
									"end": 228,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 173,
									"end": 235,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 116,
									"end": 430,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 430,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 116,
									"end": 430,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 430,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 430,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 430,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 430,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 430,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 430,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 430,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dd9d1588e2dd59b0718e9ffe56fe53de78d83b31b24b3c492e60e5adc5fc63f164736f6c634300081d0033",
									".code": [
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "5FCBE559"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "D4B83992"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 430,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 241,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 428,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 241,
											"end": 428,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 241,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 241,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 241,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 145,
											"end": 166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 145,
											"end": 166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 241,
											"end": 428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 379,
											"end": 384,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 393,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 372,
											"end": 393,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 394,
											"end": 401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 403,
											"end": 420,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 372,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 372,
											"end": 421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 372,
											"end": 421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 372,
											"end": 421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 145,
											"end": 166,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 145,
											"end": 166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 941,
											"end": 964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 972,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1117,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1245,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1426,
											"end": 1431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1408,
											"end": 1432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1406,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1657,
											"end": 1658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1659,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1639,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1589,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1660,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1589,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1861,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1843,
											"end": 1867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1843,
											"end": 1867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1838,
											"end": 1841,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1868,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1874,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2212,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1880,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2001,
											"end": 2005,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2039,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2028,
											"end": 2037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2024,
											"end": 2042,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2042,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2016,
											"end": 2042,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2120,
											"end": 2121,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2118,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2105,
											"end": 2122,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2096,
											"end": 2102,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2052,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2052,
											"end": 2123,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2052,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2201,
											"end": 2203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2190,
											"end": 2199,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2186,
											"end": 2204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2133,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2133,
											"end": 2205,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2133,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2212,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2212,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2212,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1880,
											"end": 2212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2308,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2218,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2252,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2301,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2302,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2302,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2270,
											"end": 2302,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2308,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2430,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2314,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2399,
											"end": 2404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2384,
											"end": 2405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2384,
											"end": 2405,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2384,
											"end": 2405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2382,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2374,
											"end": 2406,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2420,
											"end": 2421,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2417,
											"end": 2418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2410,
											"end": 2422,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2364,
											"end": 2424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2314,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2573,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2436,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2515,
											"end": 2528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2561,
											"end": 2566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2537,
											"end": 2567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2537,
											"end": 2567,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2573,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2573,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2436,
											"end": 2573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2924,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2579,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2646,
											"end": 2652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2697,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2692,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2674,
											"end": 2681,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2670,
											"end": 2693,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2698,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2782,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2782,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2663,
											"end": 2782,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2701,
											"end": 2780,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2701,
											"end": 2780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2701,
											"end": 2780,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2701,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2782,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 2663,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2821,
											"end": 2822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2899,
											"end": 2906,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2890,
											"end": 2896,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2879,
											"end": 2888,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2875,
											"end": 2897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2846,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2846,
											"end": 2907,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2846,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2907,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2907,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2917,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2924,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2924,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2924,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2579,
											"end": 2924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"I/Proxy Contract With Hidden Infinite Approval Logic.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approveOnBehalf(address,address)": "5fcbe559",
							"target()": "d4b83992"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"approveOnBehalf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"target\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":\"ProxyApprover\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"I/Proxy Contract With Hidden Infinite Approval Logic.sol\":{\"keccak256\":\"0xd51d54cde9d86e1316c338493936a90fd41b430337804ecf1a1acd308e6dce09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aa6ae64e2f7c819c485df311183bc76fe11e148e791659c2d684c41d06403944\",\"dweb:/ipfs/QmZKpMJd77mY8cihUYwcedWWs2qXvQyjtv7AUx5LzUeAM8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "I/Proxy Contract With Hidden Infinite Approval Logic.sol:ProxyApprover",
								"label": "target",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"I/Proxy Contract With Hidden Infinite Approval Logic.sol": {
				"ast": {
					"absolutePath": "I/Proxy Contract With Hidden Infinite Approval Logic.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						],
						"ProxyApprover": [
							113
						]
					},
					"id": 114,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 114,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ProxyApprover",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 113,
							"linearizedBaseContracts": [
								113
							],
							"name": "ProxyApprover",
							"nameLocation": "125:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d4b83992",
									"id": 82,
									"mutability": "mutable",
									"name": "target",
									"nameLocation": "160:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 113,
									"src": "145:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "145:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "202:33:1",
										"statements": [
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "212:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 88,
														"name": "_target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "221:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "212:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "212:16:1"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_target",
												"nameLocation": "193:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "185:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "185:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "184:17:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:0:1"
									},
									"scope": 113,
									"src": "173:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "307:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 103,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 96,
															"src": "394:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "408:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 105,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "408:7:1",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 104,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "403:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "403:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "417:3:1",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "403:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 100,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "379:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 99,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "372:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "372:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "386:7:1",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 64,
														"src": "372:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "372:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "372:49:1"
											}
										]
									},
									"functionSelector": "5fcbe559",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveOnBehalf",
									"nameLocation": "250:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "274:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "266:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "266:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "289:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "281:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "281:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "265:32:1"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:0:1"
									},
									"scope": 113,
									"src": "241:187:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 114,
							"src": "116:314:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:399:1"
				},
				"id": 1
			}
		}
	}
}