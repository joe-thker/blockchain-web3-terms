{
	"id": "933bc5a0aaf8ff81713df52951626d9d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\n/// @title SecureUpgradeableToken\n/// @notice UUPS upgradeable token with protected mint and upgrade logic\ncontract SecureUpgradeableToken is ERC20Upgradeable, UUPSUpgradeable, OwnableUpgradeable {\n    /// @notice Initializer replaces constructor in upgradeable contracts\n    function initialize() external initializer {\n        __ERC20_init(\"UpSafe\", \"UPS\");\n        __Ownable_init(msg.sender); // âœ… Explicitly set initial owner\n    }\n\n    /// @notice Only the owner can authorize an upgrade\n    function _authorizeUpgrade(address) internal override onlyOwner {}\n\n    /// @notice Only the owner can mint new tokens\n    function mint(address to, uint256 amount) external onlyOwner {\n        _mint(to, amount);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x5c54228bbb2f1f8616179c51bdb90b7960f4a3414c390ad5c6ead6763eb55a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://745fe72596bb8fde5f294d9d6b943db942202e4445536ee00da3ba011f876e86\",\"dweb:/ipfs/QmcjeESkk4rbhUVaSBfyq5f8rY56Jms1TwcJXaRD55K3UH\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`â€™s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220427204e6dd40a3ac2a96ef95d89f8f0e445a3828aee13d2520c4e2955a7629b864736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220427204e6dd40a3ac2a96ef95d89f8f0e445a3828aee13d2520c4e2955a7629b864736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP PUSH19 0x4E6DD40A3AC2A96EF95D89F8F0E445A3828AE RJUMPI 0x3D25 KECCAK256 0xC4 0xE2 SWAP6 GAS PUSH23 0x29B864736F6C634300081D003300000000000000000000 ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220427204e6dd40a3ac2a96ef95d89f8f0e445a3828aee13d2520c4e2955a7629b864736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP PUSH19 0x4E6DD40A3AC2A96EF95D89F8F0E445A3828AE RJUMPI 0x3D25 KECCAK256 0xC4 0xE2 SWAP6 GAS PUSH23 0x29B864736F6C634300081D003300000000000000000000 ",
							"sourceMap": "496:5741:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220427204e6dd40a3ac2a96ef95d89f8f0e445a3828aee13d2520c4e2955a7629b864736f6c634300081d0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220c96a3abc7b1e53e091cd953fb51ec69be036a430329fc6f7875079005959102a64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c96a3abc7b1e53e091cd953fb51ec69be036a430329fc6f7875079005959102a64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH11 0x3ABC7B1E53E091CD953FB5 0x1E 0xC6 SWAP12 RJUMP 0x36A4 ADDRESS ORIGIN SWAP16 0xC6 0xF7 DUP8 POP PUSH26 0x5959102A64736F6C634300081D003300000000000000000000 ",
							"sourceMap": "233:5815:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220c96a3abc7b1e53e091cd953fb51ec69be036a430329fc6f7875079005959102a64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 PUSH11 0x3ABC7B1E53E091CD953FB5 0x1E 0xC6 SWAP12 RJUMP 0x36A4 ADDRESS ORIGIN SWAP16 0xC6 0xF7 DUP8 POP PUSH26 0x5959102A64736F6C634300081D003300000000000000000000 ",
							"sourceMap": "233:5815:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c96a3abc7b1e53e091cd953fb51ec69be036a430329fc6f7875079005959102a64736f6c634300081d0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212203e16264def44762410966563017c88dff15ebc9c10f97c1cd3e4439971ef8f6c64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203e16264def44762410966563017c88dff15ebc9c10f97c1cd3e4439971ef8f6c64736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY AND 0x26 0x4D 0xEF PREVRANDAO PUSH23 0x2410966563017C88DFF15EBC9C10F97C1CD3E4439971EF DUP16 PUSH13 0x64736F6C634300081D00330000 ",
							"sourceMap": "411:484:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212203e16264def44762410966563017c88dff15ebc9c10f97c1cd3e4439971ef8f6c64736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY AND 0x26 0x4D 0xEF PREVRANDAO PUSH23 0x2410966563017C88DFF15EBC9C10F97C1CD3E4439971EF DUP16 PUSH13 0x64736F6C634300081D00330000 ",
							"sourceMap": "411:484:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e16264def44762410966563017c88dff15ebc9c10f97c1cd3e4439971ef8f6c64736f6c634300081d0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220d0663ae3330dc09ed9579fbe24f4b5d29b595c829fdef2bf34e700ac27875ad264736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d0663ae3330dc09ed9579fbe24f4b5d29b595c829fdef2bf34e700ac27875ad264736f6c634300081d0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 PUSH7 0x3AE3330DC09ED9 JUMPI SWAP16 0xBE 0x24 DELEGATECALL 0xB5 0xD2 SWAP12 MSIZE TLOAD DUP3 SWAP16 0xDE CALLCODE 0xBF CALLVALUE SWAPN 0x0 0xAC 0x27 DUP8 GAS 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "1407:2774:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d0663ae3330dc09ed9579fbe24f4b5d29b595c829fdef2bf34e700ac27875ad264736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 PUSH7 0x3AE3330DC09ED9 JUMPI SWAP16 0xBE 0x24 DELEGATECALL 0xB5 0xD2 SWAP12 MSIZE TLOAD DUP3 SWAP16 0xDE CALLCODE 0xBF CALLVALUE SWAPN 0x0 0xAC 0x27 DUP8 GAS 0xD2 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "1407:2774:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0663ae3330dc09ed9579fbe24f4b5d29b595c829fdef2bf34e700ac27875ad264736f6c634300081d0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol": {
				"SecureUpgradeableToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"title": "SecureUpgradeableToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":399:1011  contract SecureUpgradeableToken is ERC20Upgradeable, UUPSUpgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":399:1011  contract SecureUpgradeableToken is ERC20Upgradeable, UUPSUpgradeable, OwnableUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":399:1011  contract SecureUpgradeableToken is ERC20Upgradeable, UUPSUpgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x313ce567\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_21:\n      dup1\n      0x06fdde03\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_22\n      jumpi\n      revert(0x00, 0x00)\n    tag_22:\n      pop\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_27\n      jumpi\n      revert(0x00, 0x00)\n    tag_27:\n      pop\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_34\n      jumpi\n      revert(0x00, 0x00)\n    tag_34:\n      pop\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      revert(0x00, 0x00)\n    tag_39:\n      pop\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      revert(0x00, 0x00)\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":914:1009  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_50\n      jumpi\n      revert(0x00, 0x00)\n    tag_50:\n      pop\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_8:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      tag_57\n      jump\t// in\n    tag_54:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      revert(0x00, 0x00)\n    tag_58:\n      pop\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      revert(0x00, 0x00)\n    tag_63:\n      pop\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      stop\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":568:729  function initialize() external initializer {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      revert(0x00, 0x00)\n    tag_72:\n      pop\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      revert(0x00, 0x00)\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      revert(0x00, 0x00)\n    tag_80:\n      pop\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      revert(0x00, 0x00)\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      revert(0x00, 0x00)\n    tag_89:\n      pop\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_93\n      jumpi\n      revert(0x00, 0x00)\n    tag_93:\n      pop\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      revert(0x00, 0x00)\n    tag_99:\n      pop\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_101\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_101:\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2761:2774  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2808  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2827  _getERC20Storage */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2811:2829  _getERC20Storage() */\n      jump\t// in\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2786:2829  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2847  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2846:2853  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2839:2853  return $._name */\n      dup1\n      sload\n      tag_106\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_108\n      swap1\n      tag_107\n      jump\t// in\n    tag_108:\n      dup1\n      iszero\n      tag_109\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_110\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_109)\n    tag_110:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_111:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_111\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_109:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2716:2860  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5283:5287  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5312  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5325  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5315:5327  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5299:5327  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      tag_115\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5346:5351  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5353:5360  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5362:5367  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5345  _approve */\n      tag_116\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5337:5368  _approve(owner, spender, value) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5385:5389  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5378:5389  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5210:5396  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3948:3955  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:3989  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      tag_118\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4008  _getERC20Storage */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3992:4010  _getERC20Storage() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3967:4010  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4028  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4027:4041  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4020:4041  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3896:4048  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6075:6079  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6106  address spender */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6119  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6109:6121  _msgSender() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6091:6121  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      tag_121\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6147:6151  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6153:6160  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6162:6167  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6146  _spendAllowance */\n      tag_122\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6131:6168  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      tag_123\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6188:6192  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6194:6196  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6198:6203  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6187  _transfer */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6178:6204  _transfer(from, to, value) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6221:6225  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6214:6225  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5988:6232  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3803:3808  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3827:3829  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3820:3829  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3754:3836  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":914:1009  function mint(address to, uint256 amount) external onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_127\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_127:\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":985:1002  _mint(to, amount) */\n      tag_130\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":991:993  to */\n      dup3\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":995:1001  amount */\n      dup3\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":985:990  _mint */\n      tag_131\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":985:1002  _mint(to, amount) */\n      jump\t// in\n    tag_130:\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":914:1009  function mint(address to, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_138\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_138:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_141\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_141:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4171:4178  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4212  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4231  _getERC20Storage */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4215:4233  _getERC20Storage() */\n      jump\t// in\n    tag_145:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4190:4233  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4251  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4261  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4262:4269  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4250:4270  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4243:4270  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4106:4277  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_71:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_147\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_147:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":568:729  function initialize() external initializer {... */\n    tag_74:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_152\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4723  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4741:4742  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4737  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_154\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_155\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4839:4840  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_157\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4952  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4965  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4983:4997  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      iszero\n      tag_158\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5031:5035  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5014  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5028  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_158:\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":621:650  __ERC20_init(\"UpSafe\", \"UPS\") */\n      tag_160\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      0x5570536166650000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x5550530000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":621:633  __ERC20_init */\n      tag_161\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":621:650  __ERC20_init(\"UpSafe\", \"UPS\") */\n      jump\t// in\n    tag_160:\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":660:686  __Ownable_init(msg.sender) */\n      tag_162\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":675:685  msg.sender */\n      caller\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":660:674  __Ownable_init */\n      tag_163\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":660:686  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_164\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5118:5123  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5101  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5115  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5154:5155  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_166\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":568:729  function initialize() external initializer {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_168\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3020:3033  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3067  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      tag_171\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3086  _getERC20Storage */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3070:3088  _getERC20Storage() */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3045:3088  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3106  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3105:3114  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3098:3114  return $._symbol */\n      dup1\n      sload\n      tag_172\n      swap1\n      tag_107\n      jump\t// in\n    tag_172:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_173\n      swap1\n      tag_107\n      jump\t// in\n    tag_173:\n      dup1\n      iszero\n      tag_174\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_175\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_174)\n    tag_175:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_176:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_176\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2973:3121  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4545  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4570  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4583  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4573:4585  _msgSender() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4557:4585  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4605:4610  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4614  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4616:4621  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4604  _transfer */\n      tag_124\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4595:4622  _transfer(owner, to, value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4639:4643  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4632:4643  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4472:4650  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_91:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4788:4795  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4829  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4848  _getERC20Storage */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4832:4850  _getERC20Storage() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4807:4850  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4868  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4880  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4881:4886  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4887  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4888:4895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4867:4896  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4860:4896  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4708:4903  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_185:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_187:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_116:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10094:10099  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10101:10108  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10110:10115  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10117:10121  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10093  _approve */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10085:10122  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10001:10129  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12221  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11868  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11881:11886  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11888:11895  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11880  allowance */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11871:11896  allowance(owner, spender) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11844:11896  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11929:11946  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11926  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11910:11946  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12215  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11985:11990  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11966:11982  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11966:11990  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11962:12092  if (currentAllowance < value) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12044:12051  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12053:12069  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12071:12076  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12017:12077  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_197\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11962:12092  if (currentAllowance < value) {... */\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12133:12190  _approve(owner, spender, currentAllowance - value, false) */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12142:12147  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12149:12156  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12177:12182  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12174  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12158:12182  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12184:12189  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12133:12141  _approve */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12133:12190  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11906:12215  if (currentAllowance < type(uint256).max) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11834:12221  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11745:12221  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_124:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6704:6705  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6692  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6688:6706  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6756:6757  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6729:6759  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6684:6770  if (from == address(0)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6797:6798  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6785  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6783:6799  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n      tag_203\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6851:6852  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6822:6854  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6779:6865  if (to == address(0)) {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6882:6886  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6888:6890  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6892:6897  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6881  _update */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6874:6898  _update(from, to, value) */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6605:6905  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_77\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_114\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8822:8823  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8824  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8876:8877  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8847:8879  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8799:8890  if (account == address(0)) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8915:8916  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8919:8926  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8928:8933  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8906  _update */\n      tag_206\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8899:8934  _update(address(0), account, value) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8733:8941  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4692:4698  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4683:4687  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4698  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_218\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4789:4795  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      tag_219\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4783  ERC1967Utils.getImplementation */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4785  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4753:4795  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4675:4795  address(this) == __self || // Must be called through delegatecall... */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n      iszero\n      tag_221\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4869:4898  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4909  if (... */\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4603:4915  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":791:857  function _authorizeUpgrade(address) internal override onlyOwner {} */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_223\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_223:\n        /* \"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":791:857  function _authorizeUpgrade(address) internal override onlyOwner {} */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_139:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6174:6191  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6206  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6156:6208  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_226\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_228\n      jump\t// in\n    tag_227:\n      0x01\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6560:6577  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6518:6578  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_233\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_233:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6152:6589  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6258:6290  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6254  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6250:6290  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6346:6350  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6317:6351  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6246:6366  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_237\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6409:6426  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6428:6432  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6408  ERC1967Utils.upgradeToAndCall */\n      tag_238\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6379:6433  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_237:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6209:6444  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6057:6595  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5115:5121  __self */\n      immutable(\"0x0b83f23a4eeb8c3f5f7d5934a2289bcf0186d09a12e1b7f20adf54e4b179db15\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5106:5110  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5098:5121  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5199:5228  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5239  if (address(this) != __self) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5032:5245  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_150:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_242\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8795:8825  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8860:8891  $.slot := INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8737:8907  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_245\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      tag_248\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2407:2412  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2414:2421  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2406  __ERC20_init_unchained */\n      tag_249\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2384:2422  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2282:2429  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_163:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11106  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11125  _getERC20Storage */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11109:11127  _getERC20Storage() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11084:11127  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11158:11159  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11146  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11141:11160  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11212:11213  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11183:11215  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_259\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_259:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11137:11226  if (owner == address(0)) {... */\n    tag_258:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11258:11259  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11246  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11239:11260  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11311:11312  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11283:11314  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11235:11325  if (spender == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11366:11371  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11335  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11347  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11348:11353  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11354  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11355:11362  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11363  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11334:11371  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11385:11394  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n      iszero\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11431:11438  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11424:11429  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11440:11445  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11415:11446  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_263\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11381:11457  if (emitEvent) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11074:11463  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10976:11463  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_206:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7327  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      tag_265\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7346  _getERC20Storage */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7330:7348  _getERC20Storage() */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7305:7348  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7378:7379  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7366  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7362:7380  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7516:7521  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7499  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7512  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7498:7521  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_267\n      swap2\n      swap1\n      tag_268\n      jump\t// in\n    tag_267:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n      jump(tag_269)\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7571  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7575  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7585  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7586:7590  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7574:7591  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7552:7591  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7623:7628  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7620  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7609:7628  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7680:7684  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7686:7697  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7699:7704  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7655:7705  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7605:7720  if (fromBalance < value) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7874:7879  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7871  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7860:7879  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7841  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7851  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7852:7856  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7857  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7840:7879  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7538:7904  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7358:7904  if (from == address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7932:7933  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7920  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7918:7934  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8099:8104  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8082  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8095  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8081:8104  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n      jump(tag_273)\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8313:8318  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8295  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8305  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8306:8308  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8309  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8294:8318  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7914:8343  if (to == address(0)) {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8373:8375  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8367:8371  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8377:8382  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8358:8383  Transfer(from, to, value) */\n      mload(0x40)\n      tag_274\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7295:8390  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7220:8390  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_276\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_277\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_279\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_280\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_279:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_281\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_282\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_283\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_282:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_284)\n    tag_281:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_285\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_286\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_284:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      tag_288\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7166  _isInitializing */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7151:7168  _isInitializing() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_290\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n    tag_290:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_249:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_292\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2569  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      tag_294\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2588  _getERC20Storage */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2572:2590  _getERC20Storage() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2547:2590  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2610:2615  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2601  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2607  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2600:2615  $._name = name_ */\n      swap1\n      dup2\n      tag_295\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_295:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2637:2644  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2626  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2634  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2625:2644  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_297\n      swap2\n      swap1\n      tag_296\n      jump\t// in\n    tag_297:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2537:2651  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2435:2651  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_299\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_150\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_308\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_277\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_283:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_310\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_314\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_313)\n    tag_314:\n      0x60\n      swap2\n      pop\n    tag_313:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_315\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_316\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_318:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8537:8541  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      tag_320\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8584  _getInitializableStorage */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8586  _getInitializableStorage() */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8553:8600  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8487:8607  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_322\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_323\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_324\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_323:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_325)\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4878:4879  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4867  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_326\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4905:4906  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4889  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      swap1\n      pop\n      jump(tag_321)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_321:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_330\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:106   */\n    tag_332:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_333:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_334:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_335:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_336:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_396\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_332\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":711:782   */\n      tag_397\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_333\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_398\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_334\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":881:910   */\n      tag_399\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_335\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_401\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_336\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_337:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_338:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_339:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_340:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_341:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_407\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_340\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_342:\n        /* \"#utility.yul\":1876:1900   */\n      tag_409\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_341\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_410:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_343:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_412\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_342\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_344:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_345:\n        /* \"#utility.yul\":2232:2256   */\n      tag_415\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_344\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_416\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_416:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_346:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_418\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_345\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_30:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_421\n      tag_338\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2525:2644   */\n    tag_420:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_422\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_343\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_423\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_346\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_347:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_348:\n        /* \"#utility.yul\":3089:3110   */\n      tag_426\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_347\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_33:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_428\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_348\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_349:\n        /* \"#utility.yul\":3426:3450   */\n      tag_430\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_344\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_38:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_432\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_349\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_42:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_435\n      tag_338\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3801:3920   */\n    tag_434:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_436\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_343\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_437\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_343\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_438\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_346\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_350:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_351:\n        /* \"#utility.yul\":4491:4513   */\n      tag_441\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_350\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_49:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_443\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_351\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4863   */\n    tag_352:\n        /* \"#utility.yul\":4855:4856   */\n      0x00\n        /* \"#utility.yul\":4852:4853   */\n      0x00\n        /* \"#utility.yul\":4845:4857   */\n      revert\n        /* \"#utility.yul\":4869:4986   */\n    tag_353:\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4975:4976   */\n      0x00\n        /* \"#utility.yul\":4968:4980   */\n      revert\n        /* \"#utility.yul\":4992:5172   */\n    tag_354:\n        /* \"#utility.yul\":5040:5117   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5037:5038   */\n      0x00\n        /* \"#utility.yul\":5030:5118   */\n      mstore\n        /* \"#utility.yul\":5137:5141   */\n      0x41\n        /* \"#utility.yul\":5134:5135   */\n      0x04\n        /* \"#utility.yul\":5127:5142   */\n      mstore\n        /* \"#utility.yul\":5161:5165   */\n      0x24\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5151:5166   */\n      revert\n        /* \"#utility.yul\":5178:5459   */\n    tag_355:\n        /* \"#utility.yul\":5261:5288   */\n      tag_448\n        /* \"#utility.yul\":5283:5287   */\n      dup3\n        /* \"#utility.yul\":5261:5288   */\n      tag_335\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5253:5259   */\n      dup2\n        /* \"#utility.yul\":5249:5289   */\n      add\n        /* \"#utility.yul\":5391:5397   */\n      dup2\n        /* \"#utility.yul\":5379:5389   */\n      dup2\n        /* \"#utility.yul\":5376:5398   */\n      lt\n        /* \"#utility.yul\":5355:5373   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5343:5353   */\n      dup3\n        /* \"#utility.yul\":5340:5374   */\n      gt\n        /* \"#utility.yul\":5337:5399   */\n      or\n        /* \"#utility.yul\":5334:5422   */\n      iszero\n      tag_449\n      jumpi\n        /* \"#utility.yul\":5402:5420   */\n      tag_450\n      tag_354\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":5334:5422   */\n    tag_449:\n        /* \"#utility.yul\":5442:5452   */\n      dup1\n        /* \"#utility.yul\":5438:5440   */\n      0x40\n        /* \"#utility.yul\":5431:5453   */\n      mstore\n        /* \"#utility.yul\":5221:5459   */\n      pop\n        /* \"#utility.yul\":5178:5459   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5465:5594   */\n    tag_356:\n        /* \"#utility.yul\":5499:5505   */\n      0x00\n        /* \"#utility.yul\":5526:5546   */\n      tag_452\n      tag_337\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":5516:5546   */\n      swap1\n      pop\n        /* \"#utility.yul\":5555:5588   */\n      tag_453\n        /* \"#utility.yul\":5583:5587   */\n      dup3\n        /* \"#utility.yul\":5575:5581   */\n      dup3\n        /* \"#utility.yul\":5555:5588   */\n      tag_355\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5465:5594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5600:5907   */\n    tag_357:\n        /* \"#utility.yul\":5661:5665   */\n      0x00\n        /* \"#utility.yul\":5751:5769   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5743:5749   */\n      dup3\n        /* \"#utility.yul\":5740:5770   */\n      gt\n        /* \"#utility.yul\":5737:5793   */\n      iszero\n      tag_455\n      jumpi\n        /* \"#utility.yul\":5773:5791   */\n      tag_456\n      tag_354\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":5737:5793   */\n    tag_455:\n        /* \"#utility.yul\":5811:5840   */\n      tag_457\n        /* \"#utility.yul\":5833:5839   */\n      dup3\n        /* \"#utility.yul\":5811:5840   */\n      tag_335\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5803:5840   */\n      swap1\n      pop\n        /* \"#utility.yul\":5895:5899   */\n      0x20\n        /* \"#utility.yul\":5889:5893   */\n      dup2\n        /* \"#utility.yul\":5885:5900   */\n      add\n        /* \"#utility.yul\":5877:5900   */\n      swap1\n      pop\n        /* \"#utility.yul\":5600:5907   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6061   */\n    tag_358:\n        /* \"#utility.yul\":6011:6017   */\n      dup3\n        /* \"#utility.yul\":6006:6009   */\n      dup2\n        /* \"#utility.yul\":6001:6004   */\n      dup4\n        /* \"#utility.yul\":5988:6018   */\n      calldatacopy\n        /* \"#utility.yul\":6052:6053   */\n      0x00\n        /* \"#utility.yul\":6043:6049   */\n      dup4\n        /* \"#utility.yul\":6038:6041   */\n      dup4\n        /* \"#utility.yul\":6034:6050   */\n      add\n        /* \"#utility.yul\":6027:6054   */\n      mstore\n        /* \"#utility.yul\":5913:6061   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6067:6490   */\n    tag_359:\n        /* \"#utility.yul\":6144:6149   */\n      0x00\n        /* \"#utility.yul\":6169:6234   */\n      tag_460\n        /* \"#utility.yul\":6185:6233   */\n      tag_461\n        /* \"#utility.yul\":6226:6232   */\n      dup5\n        /* \"#utility.yul\":6185:6233   */\n      tag_357\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":6169:6234   */\n      tag_356\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":6160:6234   */\n      swap1\n      pop\n        /* \"#utility.yul\":6257:6263   */\n      dup3\n        /* \"#utility.yul\":6250:6255   */\n      dup2\n        /* \"#utility.yul\":6243:6264   */\n      mstore\n        /* \"#utility.yul\":6295:6299   */\n      0x20\n        /* \"#utility.yul\":6288:6293   */\n      dup2\n        /* \"#utility.yul\":6284:6300   */\n      add\n        /* \"#utility.yul\":6333:6336   */\n      dup5\n        /* \"#utility.yul\":6324:6330   */\n      dup5\n        /* \"#utility.yul\":6319:6322   */\n      dup5\n        /* \"#utility.yul\":6315:6331   */\n      add\n        /* \"#utility.yul\":6312:6337   */\n      gt\n        /* \"#utility.yul\":6309:6421   */\n      iszero\n      tag_462\n      jumpi\n        /* \"#utility.yul\":6340:6419   */\n      tag_463\n      tag_353\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":6309:6421   */\n    tag_462:\n        /* \"#utility.yul\":6430:6484   */\n      tag_464\n        /* \"#utility.yul\":6477:6483   */\n      dup5\n        /* \"#utility.yul\":6472:6475   */\n      dup3\n        /* \"#utility.yul\":6467:6470   */\n      dup6\n        /* \"#utility.yul\":6430:6484   */\n      tag_358\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6150:6490   */\n      pop\n        /* \"#utility.yul\":6067:6490   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6509:6847   */\n    tag_360:\n        /* \"#utility.yul\":6564:6569   */\n      0x00\n        /* \"#utility.yul\":6613:6616   */\n      dup3\n        /* \"#utility.yul\":6606:6610   */\n      0x1f\n        /* \"#utility.yul\":6598:6604   */\n      dup4\n        /* \"#utility.yul\":6594:6611   */\n      add\n        /* \"#utility.yul\":6590:6617   */\n      slt\n        /* \"#utility.yul\":6580:6702   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":6621:6700   */\n      tag_467\n      tag_352\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":6580:6702   */\n    tag_466:\n        /* \"#utility.yul\":6738:6744   */\n      dup2\n        /* \"#utility.yul\":6725:6745   */\n      calldataload\n        /* \"#utility.yul\":6763:6841   */\n      tag_468\n        /* \"#utility.yul\":6837:6840   */\n      dup5\n        /* \"#utility.yul\":6829:6835   */\n      dup3\n        /* \"#utility.yul\":6822:6826   */\n      0x20\n        /* \"#utility.yul\":6814:6820   */\n      dup7\n        /* \"#utility.yul\":6810:6827   */\n      add\n        /* \"#utility.yul\":6763:6841   */\n      tag_359\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":6754:6841   */\n      swap2\n      pop\n        /* \"#utility.yul\":6570:6847   */\n      pop\n        /* \"#utility.yul\":6509:6847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6853:7505   */\n    tag_56:\n        /* \"#utility.yul\":6930:6936   */\n      0x00\n        /* \"#utility.yul\":6938:6944   */\n      0x00\n        /* \"#utility.yul\":6987:6989   */\n      0x40\n        /* \"#utility.yul\":6975:6984   */\n      dup4\n        /* \"#utility.yul\":6966:6973   */\n      dup6\n        /* \"#utility.yul\":6962:6985   */\n      sub\n        /* \"#utility.yul\":6958:6990   */\n      slt\n        /* \"#utility.yul\":6955:7074   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":6993:7072   */\n      tag_471\n      tag_338\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6955:7074   */\n    tag_470:\n        /* \"#utility.yul\":7113:7114   */\n      0x00\n        /* \"#utility.yul\":7138:7191   */\n      tag_472\n        /* \"#utility.yul\":7183:7190   */\n      dup6\n        /* \"#utility.yul\":7174:7180   */\n      dup3\n        /* \"#utility.yul\":7163:7172   */\n      dup7\n        /* \"#utility.yul\":7159:7181   */\n      add\n        /* \"#utility.yul\":7138:7191   */\n      tag_343\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":7128:7191   */\n      swap3\n      pop\n        /* \"#utility.yul\":7084:7201   */\n      pop\n        /* \"#utility.yul\":7268:7270   */\n      0x20\n        /* \"#utility.yul\":7257:7266   */\n      dup4\n        /* \"#utility.yul\":7253:7271   */\n      add\n        /* \"#utility.yul\":7240:7272   */\n      calldataload\n        /* \"#utility.yul\":7299:7317   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7291:7297   */\n      dup2\n        /* \"#utility.yul\":7288:7318   */\n      gt\n        /* \"#utility.yul\":7285:7402   */\n      iszero\n      tag_473\n      jumpi\n        /* \"#utility.yul\":7321:7400   */\n      tag_474\n      tag_339\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":7285:7402   */\n    tag_473:\n        /* \"#utility.yul\":7426:7488   */\n      tag_475\n        /* \"#utility.yul\":7480:7487   */\n      dup6\n        /* \"#utility.yul\":7471:7477   */\n      dup3\n        /* \"#utility.yul\":7460:7469   */\n      dup7\n        /* \"#utility.yul\":7456:7478   */\n      add\n        /* \"#utility.yul\":7426:7488   */\n      tag_360\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":7416:7488   */\n      swap2\n      pop\n        /* \"#utility.yul\":7211:7498   */\n      pop\n        /* \"#utility.yul\":6853:7505   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7511:7588   */\n    tag_361:\n        /* \"#utility.yul\":7548:7555   */\n      0x00\n        /* \"#utility.yul\":7577:7582   */\n      dup2\n        /* \"#utility.yul\":7566:7582   */\n      swap1\n      pop\n        /* \"#utility.yul\":7511:7588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7594:7712   */\n    tag_362:\n        /* \"#utility.yul\":7681:7705   */\n      tag_478\n        /* \"#utility.yul\":7699:7704   */\n      dup2\n        /* \"#utility.yul\":7681:7705   */\n      tag_361\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7676:7679   */\n      dup3\n        /* \"#utility.yul\":7669:7706   */\n      mstore\n        /* \"#utility.yul\":7594:7712   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7718:7940   */\n    tag_62:\n        /* \"#utility.yul\":7811:7815   */\n      0x00\n        /* \"#utility.yul\":7849:7851   */\n      0x20\n        /* \"#utility.yul\":7838:7847   */\n      dup3\n        /* \"#utility.yul\":7834:7852   */\n      add\n        /* \"#utility.yul\":7826:7852   */\n      swap1\n      pop\n        /* \"#utility.yul\":7862:7933   */\n      tag_480\n        /* \"#utility.yul\":7930:7931   */\n      0x00\n        /* \"#utility.yul\":7919:7928   */\n      dup4\n        /* \"#utility.yul\":7915:7932   */\n      add\n        /* \"#utility.yul\":7906:7912   */\n      dup5\n        /* \"#utility.yul\":7862:7933   */\n      tag_362\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":7718:7940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7946:8275   */\n    tag_66:\n        /* \"#utility.yul\":8005:8011   */\n      0x00\n        /* \"#utility.yul\":8054:8056   */\n      0x20\n        /* \"#utility.yul\":8042:8051   */\n      dup3\n        /* \"#utility.yul\":8033:8040   */\n      dup5\n        /* \"#utility.yul\":8029:8052   */\n      sub\n        /* \"#utility.yul\":8025:8057   */\n      slt\n        /* \"#utility.yul\":8022:8141   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":8060:8139   */\n      tag_483\n      tag_338\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":8022:8141   */\n    tag_482:\n        /* \"#utility.yul\":8180:8181   */\n      0x00\n        /* \"#utility.yul\":8205:8258   */\n      tag_484\n        /* \"#utility.yul\":8250:8257   */\n      dup5\n        /* \"#utility.yul\":8241:8247   */\n      dup3\n        /* \"#utility.yul\":8230:8239   */\n      dup6\n        /* \"#utility.yul\":8226:8248   */\n      add\n        /* \"#utility.yul\":8205:8258   */\n      tag_343\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":8195:8258   */\n      swap2\n      pop\n        /* \"#utility.yul\":8151:8268   */\n      pop\n        /* \"#utility.yul\":7946:8275   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8281:8399   */\n    tag_363:\n        /* \"#utility.yul\":8368:8392   */\n      tag_486\n        /* \"#utility.yul\":8386:8391   */\n      dup2\n        /* \"#utility.yul\":8368:8392   */\n      tag_341\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":8363:8366   */\n      dup3\n        /* \"#utility.yul\":8356:8393   */\n      mstore\n        /* \"#utility.yul\":8281:8399   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8405:8627   */\n    tag_79:\n        /* \"#utility.yul\":8498:8502   */\n      0x00\n        /* \"#utility.yul\":8536:8538   */\n      0x20\n        /* \"#utility.yul\":8525:8534   */\n      dup3\n        /* \"#utility.yul\":8521:8539   */\n      add\n        /* \"#utility.yul\":8513:8539   */\n      swap1\n      pop\n        /* \"#utility.yul\":8549:8620   */\n      tag_488\n        /* \"#utility.yul\":8617:8618   */\n      0x00\n        /* \"#utility.yul\":8606:8615   */\n      dup4\n        /* \"#utility.yul\":8602:8619   */\n      add\n        /* \"#utility.yul\":8593:8599   */\n      dup5\n        /* \"#utility.yul\":8549:8620   */\n      tag_363\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":8405:8627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8633:9107   */\n    tag_96:\n        /* \"#utility.yul\":8701:8707   */\n      0x00\n        /* \"#utility.yul\":8709:8715   */\n      0x00\n        /* \"#utility.yul\":8758:8760   */\n      0x40\n        /* \"#utility.yul\":8746:8755   */\n      dup4\n        /* \"#utility.yul\":8737:8744   */\n      dup6\n        /* \"#utility.yul\":8733:8756   */\n      sub\n        /* \"#utility.yul\":8729:8761   */\n      slt\n        /* \"#utility.yul\":8726:8845   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":8764:8843   */\n      tag_491\n      tag_338\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8726:8845   */\n    tag_490:\n        /* \"#utility.yul\":8884:8885   */\n      0x00\n        /* \"#utility.yul\":8909:8962   */\n      tag_492\n        /* \"#utility.yul\":8954:8961   */\n      dup6\n        /* \"#utility.yul\":8945:8951   */\n      dup3\n        /* \"#utility.yul\":8934:8943   */\n      dup7\n        /* \"#utility.yul\":8930:8952   */\n      add\n        /* \"#utility.yul\":8909:8962   */\n      tag_343\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8899:8962   */\n      swap3\n      pop\n        /* \"#utility.yul\":8855:8972   */\n      pop\n        /* \"#utility.yul\":9011:9013   */\n      0x20\n        /* \"#utility.yul\":9037:9090   */\n      tag_493\n        /* \"#utility.yul\":9082:9089   */\n      dup6\n        /* \"#utility.yul\":9073:9079   */\n      dup3\n        /* \"#utility.yul\":9062:9071   */\n      dup7\n        /* \"#utility.yul\":9058:9080   */\n      add\n        /* \"#utility.yul\":9037:9090   */\n      tag_343\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":9027:9090   */\n      swap2\n      pop\n        /* \"#utility.yul\":8982:9100   */\n      pop\n        /* \"#utility.yul\":8633:9107   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9113:9293   */\n    tag_364:\n        /* \"#utility.yul\":9161:9238   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9158:9159   */\n      0x00\n        /* \"#utility.yul\":9151:9239   */\n      mstore\n        /* \"#utility.yul\":9258:9262   */\n      0x22\n        /* \"#utility.yul\":9255:9256   */\n      0x04\n        /* \"#utility.yul\":9248:9263   */\n      mstore\n        /* \"#utility.yul\":9282:9286   */\n      0x24\n        /* \"#utility.yul\":9279:9280   */\n      0x00\n        /* \"#utility.yul\":9272:9287   */\n      revert\n        /* \"#utility.yul\":9299:9619   */\n    tag_107:\n        /* \"#utility.yul\":9343:9349   */\n      0x00\n        /* \"#utility.yul\":9380:9381   */\n      0x02\n        /* \"#utility.yul\":9374:9378   */\n      dup3\n        /* \"#utility.yul\":9370:9382   */\n      div\n        /* \"#utility.yul\":9360:9382   */\n      swap1\n      pop\n        /* \"#utility.yul\":9427:9428   */\n      0x01\n        /* \"#utility.yul\":9421:9425   */\n      dup3\n        /* \"#utility.yul\":9417:9429   */\n      and\n        /* \"#utility.yul\":9448:9466   */\n      dup1\n        /* \"#utility.yul\":9438:9519   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":9504:9508   */\n      0x7f\n        /* \"#utility.yul\":9496:9502   */\n      dup3\n        /* \"#utility.yul\":9492:9509   */\n      and\n        /* \"#utility.yul\":9482:9509   */\n      swap2\n      pop\n        /* \"#utility.yul\":9438:9519   */\n    tag_496:\n        /* \"#utility.yul\":9566:9568   */\n      0x20\n        /* \"#utility.yul\":9558:9564   */\n      dup3\n        /* \"#utility.yul\":9555:9569   */\n      lt\n        /* \"#utility.yul\":9535:9553   */\n      dup2\n        /* \"#utility.yul\":9532:9570   */\n      sub\n        /* \"#utility.yul\":9529:9613   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":9585:9603   */\n      tag_498\n      tag_364\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":9529:9613   */\n    tag_497:\n        /* \"#utility.yul\":9350:9619   */\n      pop\n        /* \"#utility.yul\":9299:9619   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9625:9710   */\n    tag_365:\n        /* \"#utility.yul\":9670:9677   */\n      0x00\n        /* \"#utility.yul\":9699:9704   */\n      dup2\n        /* \"#utility.yul\":9688:9704   */\n      swap1\n      pop\n        /* \"#utility.yul\":9625:9710   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9716:9817   */\n    tag_366:\n        /* \"#utility.yul\":9752:9759   */\n      0x00\n        /* \"#utility.yul\":9792:9810   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9785:9790   */\n      dup3\n        /* \"#utility.yul\":9781:9811   */\n      and\n        /* \"#utility.yul\":9770:9811   */\n      swap1\n      pop\n        /* \"#utility.yul\":9716:9817   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9823:9883   */\n    tag_367:\n        /* \"#utility.yul\":9851:9854   */\n      0x00\n        /* \"#utility.yul\":9872:9877   */\n      dup2\n        /* \"#utility.yul\":9865:9877   */\n      swap1\n      pop\n        /* \"#utility.yul\":9823:9883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9889:10045   */\n    tag_368:\n        /* \"#utility.yul\":9946:9955   */\n      0x00\n        /* \"#utility.yul\":9979:10039   */\n      tag_503\n        /* \"#utility.yul\":9996:10038   */\n      tag_504\n        /* \"#utility.yul\":10005:10037   */\n      tag_505\n        /* \"#utility.yul\":10031:10036   */\n      dup5\n        /* \"#utility.yul\":10005:10037   */\n      tag_365\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9996:10038   */\n      tag_367\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9979:10039   */\n      tag_366\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9966:10039   */\n      swap1\n      pop\n        /* \"#utility.yul\":9889:10045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10051:10196   */\n    tag_369:\n        /* \"#utility.yul\":10145:10189   */\n      tag_507\n        /* \"#utility.yul\":10183:10188   */\n      dup2\n        /* \"#utility.yul\":10145:10189   */\n      tag_368\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":10140:10143   */\n      dup3\n        /* \"#utility.yul\":10133:10190   */\n      mstore\n        /* \"#utility.yul\":10051:10196   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10202:10438   */\n    tag_166:\n        /* \"#utility.yul\":10302:10306   */\n      0x00\n        /* \"#utility.yul\":10340:10342   */\n      0x20\n        /* \"#utility.yul\":10329:10338   */\n      dup3\n        /* \"#utility.yul\":10325:10343   */\n      add\n        /* \"#utility.yul\":10317:10343   */\n      swap1\n      pop\n        /* \"#utility.yul\":10353:10431   */\n      tag_509\n        /* \"#utility.yul\":10428:10429   */\n      0x00\n        /* \"#utility.yul\":10417:10426   */\n      dup4\n        /* \"#utility.yul\":10413:10430   */\n      add\n        /* \"#utility.yul\":10404:10410   */\n      dup5\n        /* \"#utility.yul\":10353:10431   */\n      tag_369\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10202:10438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10444:10886   */\n    tag_198:\n        /* \"#utility.yul\":10593:10597   */\n      0x00\n        /* \"#utility.yul\":10631:10633   */\n      0x60\n        /* \"#utility.yul\":10620:10629   */\n      dup3\n        /* \"#utility.yul\":10616:10634   */\n      add\n        /* \"#utility.yul\":10608:10634   */\n      swap1\n      pop\n        /* \"#utility.yul\":10644:10715   */\n      tag_511\n        /* \"#utility.yul\":10712:10713   */\n      0x00\n        /* \"#utility.yul\":10701:10710   */\n      dup4\n        /* \"#utility.yul\":10697:10714   */\n      add\n        /* \"#utility.yul\":10688:10694   */\n      dup7\n        /* \"#utility.yul\":10644:10715   */\n      tag_363\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":10725:10797   */\n      tag_512\n        /* \"#utility.yul\":10793:10795   */\n      0x20\n        /* \"#utility.yul\":10782:10791   */\n      dup4\n        /* \"#utility.yul\":10778:10796   */\n      add\n        /* \"#utility.yul\":10769:10775   */\n      dup6\n        /* \"#utility.yul\":10725:10797   */\n      tag_349\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10807:10879   */\n      tag_513\n        /* \"#utility.yul\":10875:10877   */\n      0x40\n        /* \"#utility.yul\":10864:10873   */\n      dup4\n        /* \"#utility.yul\":10860:10878   */\n      add\n        /* \"#utility.yul\":10851:10857   */\n      dup5\n        /* \"#utility.yul\":10807:10879   */\n      tag_349\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":10444:10886   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10892:11014   */\n    tag_370:\n        /* \"#utility.yul\":10965:10989   */\n      tag_515\n        /* \"#utility.yul\":10983:10988   */\n      dup2\n        /* \"#utility.yul\":10965:10989   */\n      tag_361\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10958:10963   */\n      dup2\n        /* \"#utility.yul\":10955:10990   */\n      eq\n        /* \"#utility.yul\":10945:11008   */\n      tag_516\n      jumpi\n        /* \"#utility.yul\":11004:11005   */\n      0x00\n        /* \"#utility.yul\":11001:11002   */\n      0x00\n        /* \"#utility.yul\":10994:11006   */\n      revert\n        /* \"#utility.yul\":10945:11008   */\n    tag_516:\n        /* \"#utility.yul\":10892:11014   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11020:11163   */\n    tag_371:\n        /* \"#utility.yul\":11077:11082   */\n      0x00\n        /* \"#utility.yul\":11108:11114   */\n      dup2\n        /* \"#utility.yul\":11102:11115   */\n      mload\n        /* \"#utility.yul\":11093:11115   */\n      swap1\n      pop\n        /* \"#utility.yul\":11124:11157   */\n      tag_518\n        /* \"#utility.yul\":11151:11156   */\n      dup2\n        /* \"#utility.yul\":11124:11157   */\n      tag_370\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":11020:11163   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11169:11520   */\n    tag_228:\n        /* \"#utility.yul\":11239:11245   */\n      0x00\n        /* \"#utility.yul\":11288:11290   */\n      0x20\n        /* \"#utility.yul\":11276:11285   */\n      dup3\n        /* \"#utility.yul\":11267:11274   */\n      dup5\n        /* \"#utility.yul\":11263:11286   */\n      sub\n        /* \"#utility.yul\":11259:11291   */\n      slt\n        /* \"#utility.yul\":11256:11375   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":11294:11373   */\n      tag_521\n      tag_338\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":11256:11375   */\n    tag_520:\n        /* \"#utility.yul\":11414:11415   */\n      0x00\n        /* \"#utility.yul\":11439:11503   */\n      tag_522\n        /* \"#utility.yul\":11495:11502   */\n      dup5\n        /* \"#utility.yul\":11486:11492   */\n      dup3\n        /* \"#utility.yul\":11475:11484   */\n      dup6\n        /* \"#utility.yul\":11471:11493   */\n      add\n        /* \"#utility.yul\":11439:11503   */\n      tag_371\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":11429:11503   */\n      swap2\n      pop\n        /* \"#utility.yul\":11385:11513   */\n      pop\n        /* \"#utility.yul\":11169:11520   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11526:11706   */\n    tag_372:\n        /* \"#utility.yul\":11574:11651   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11571:11572   */\n      0x00\n        /* \"#utility.yul\":11564:11652   */\n      mstore\n        /* \"#utility.yul\":11671:11675   */\n      0x11\n        /* \"#utility.yul\":11668:11669   */\n      0x04\n        /* \"#utility.yul\":11661:11676   */\n      mstore\n        /* \"#utility.yul\":11695:11699   */\n      0x24\n        /* \"#utility.yul\":11692:11693   */\n      0x00\n        /* \"#utility.yul\":11685:11700   */\n      revert\n        /* \"#utility.yul\":11712:11903   */\n    tag_268:\n        /* \"#utility.yul\":11752:11755   */\n      0x00\n        /* \"#utility.yul\":11771:11791   */\n      tag_525\n        /* \"#utility.yul\":11789:11790   */\n      dup3\n        /* \"#utility.yul\":11771:11791   */\n      tag_344\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11766:11791   */\n      swap2\n      pop\n        /* \"#utility.yul\":11805:11825   */\n      tag_526\n        /* \"#utility.yul\":11823:11824   */\n      dup4\n        /* \"#utility.yul\":11805:11825   */\n      tag_344\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":11800:11825   */\n      swap3\n      pop\n        /* \"#utility.yul\":11848:11849   */\n      dup3\n        /* \"#utility.yul\":11845:11846   */\n      dup3\n        /* \"#utility.yul\":11841:11850   */\n      add\n        /* \"#utility.yul\":11834:11850   */\n      swap1\n      pop\n        /* \"#utility.yul\":11869:11872   */\n      dup1\n        /* \"#utility.yul\":11866:11867   */\n      dup3\n        /* \"#utility.yul\":11863:11873   */\n      gt\n        /* \"#utility.yul\":11860:11896   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":11876:11894   */\n      tag_528\n      tag_372\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11860:11896   */\n    tag_527:\n        /* \"#utility.yul\":11712:11903   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11909:12050   */\n    tag_373:\n        /* \"#utility.yul\":11958:11962   */\n      0x00\n        /* \"#utility.yul\":11981:11984   */\n      dup2\n        /* \"#utility.yul\":11973:11984   */\n      swap1\n      pop\n        /* \"#utility.yul\":12004:12007   */\n      dup2\n        /* \"#utility.yul\":12001:12002   */\n      0x00\n        /* \"#utility.yul\":11994:12008   */\n      mstore\n        /* \"#utility.yul\":12038:12042   */\n      0x20\n        /* \"#utility.yul\":12035:12036   */\n      0x00\n        /* \"#utility.yul\":12025:12043   */\n      keccak256\n        /* \"#utility.yul\":12017:12043   */\n      swap1\n      pop\n        /* \"#utility.yul\":11909:12050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12056:12149   */\n    tag_374:\n        /* \"#utility.yul\":12093:12099   */\n      0x00\n        /* \"#utility.yul\":12140:12142   */\n      0x20\n        /* \"#utility.yul\":12135:12137   */\n      0x1f\n        /* \"#utility.yul\":12128:12133   */\n      dup4\n        /* \"#utility.yul\":12124:12138   */\n      add\n        /* \"#utility.yul\":12120:12143   */\n      div\n        /* \"#utility.yul\":12110:12143   */\n      swap1\n      pop\n        /* \"#utility.yul\":12056:12149   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12155:12262   */\n    tag_375:\n        /* \"#utility.yul\":12199:12207   */\n      0x00\n        /* \"#utility.yul\":12249:12254   */\n      dup3\n        /* \"#utility.yul\":12243:12247   */\n      dup3\n        /* \"#utility.yul\":12239:12255   */\n      shl\n        /* \"#utility.yul\":12218:12255   */\n      swap1\n      pop\n        /* \"#utility.yul\":12155:12262   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12268:12661   */\n    tag_376:\n        /* \"#utility.yul\":12337:12343   */\n      0x00\n        /* \"#utility.yul\":12387:12388   */\n      0x08\n        /* \"#utility.yul\":12375:12385   */\n      dup4\n        /* \"#utility.yul\":12371:12389   */\n      mul\n        /* \"#utility.yul\":12410:12507   */\n      tag_533\n        /* \"#utility.yul\":12440:12506   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12429:12438   */\n      dup3\n        /* \"#utility.yul\":12410:12507   */\n      tag_375\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12528:12567   */\n      tag_534\n        /* \"#utility.yul\":12558:12566   */\n      dup7\n        /* \"#utility.yul\":12547:12556   */\n      dup4\n        /* \"#utility.yul\":12528:12567   */\n      tag_375\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":12516:12567   */\n      swap6\n      pop\n        /* \"#utility.yul\":12600:12604   */\n      dup1\n        /* \"#utility.yul\":12596:12605   */\n      not\n        /* \"#utility.yul\":12589:12594   */\n      dup5\n        /* \"#utility.yul\":12585:12606   */\n      and\n        /* \"#utility.yul\":12576:12606   */\n      swap4\n      pop\n        /* \"#utility.yul\":12649:12653   */\n      dup1\n        /* \"#utility.yul\":12639:12647   */\n      dup7\n        /* \"#utility.yul\":12635:12654   */\n      and\n        /* \"#utility.yul\":12628:12633   */\n      dup5\n        /* \"#utility.yul\":12625:12655   */\n      or\n        /* \"#utility.yul\":12615:12655   */\n      swap3\n      pop\n        /* \"#utility.yul\":12344:12661   */\n      pop\n      pop\n        /* \"#utility.yul\":12268:12661   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12667:12809   */\n    tag_377:\n        /* \"#utility.yul\":12717:12726   */\n      0x00\n        /* \"#utility.yul\":12750:12803   */\n      tag_536\n        /* \"#utility.yul\":12768:12802   */\n      tag_537\n        /* \"#utility.yul\":12777:12801   */\n      tag_538\n        /* \"#utility.yul\":12795:12800   */\n      dup5\n        /* \"#utility.yul\":12777:12801   */\n      tag_344\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12768:12802   */\n      tag_367\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12750:12803   */\n      tag_344\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12737:12803   */\n      swap1\n      pop\n        /* \"#utility.yul\":12667:12809   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12815:12890   */\n    tag_378:\n        /* \"#utility.yul\":12858:12861   */\n      0x00\n        /* \"#utility.yul\":12879:12884   */\n      dup2\n        /* \"#utility.yul\":12872:12884   */\n      swap1\n      pop\n        /* \"#utility.yul\":12815:12890   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12896:13165   */\n    tag_379:\n        /* \"#utility.yul\":13006:13045   */\n      tag_541\n        /* \"#utility.yul\":13037:13044   */\n      dup4\n        /* \"#utility.yul\":13006:13045   */\n      tag_377\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":13067:13158   */\n      tag_542\n        /* \"#utility.yul\":13116:13157   */\n      tag_543\n        /* \"#utility.yul\":13140:13156   */\n      dup3\n        /* \"#utility.yul\":13116:13157   */\n      tag_378\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13108:13114   */\n      dup5\n        /* \"#utility.yul\":13101:13105   */\n      dup5\n        /* \"#utility.yul\":13095:13106   */\n      sload\n        /* \"#utility.yul\":13067:13158   */\n      tag_376\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":13061:13065   */\n      dup3\n        /* \"#utility.yul\":13054:13159   */\n      sstore\n        /* \"#utility.yul\":12972:13165   */\n      pop\n        /* \"#utility.yul\":12896:13165   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13171:13244   */\n    tag_380:\n        /* \"#utility.yul\":13216:13219   */\n      0x00\n        /* \"#utility.yul\":13237:13238   */\n      0x00\n        /* \"#utility.yul\":13230:13238   */\n      swap1\n      pop\n        /* \"#utility.yul\":13171:13244   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13250:13439   */\n    tag_381:\n        /* \"#utility.yul\":13327:13359   */\n      tag_546\n      tag_380\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":13368:13433   */\n      tag_547\n        /* \"#utility.yul\":13426:13432   */\n      dup2\n        /* \"#utility.yul\":13418:13424   */\n      dup5\n        /* \"#utility.yul\":13412:13416   */\n      dup5\n        /* \"#utility.yul\":13368:13433   */\n      tag_379\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13303:13439   */\n      pop\n        /* \"#utility.yul\":13250:13439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13445:13631   */\n    tag_382:\n        /* \"#utility.yul\":13505:13625   */\n    tag_549:\n        /* \"#utility.yul\":13522:13525   */\n      dup2\n        /* \"#utility.yul\":13515:13520   */\n      dup2\n        /* \"#utility.yul\":13512:13526   */\n      lt\n        /* \"#utility.yul\":13505:13625   */\n      iszero\n      tag_551\n      jumpi\n        /* \"#utility.yul\":13576:13615   */\n      tag_552\n        /* \"#utility.yul\":13613:13614   */\n      0x00\n        /* \"#utility.yul\":13606:13611   */\n      dup3\n        /* \"#utility.yul\":13576:13615   */\n      tag_381\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13549:13550   */\n      0x01\n        /* \"#utility.yul\":13542:13547   */\n      dup2\n        /* \"#utility.yul\":13538:13551   */\n      add\n        /* \"#utility.yul\":13529:13551   */\n      swap1\n      pop\n        /* \"#utility.yul\":13505:13625   */\n      jump(tag_549)\n    tag_551:\n        /* \"#utility.yul\":13445:13631   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13637:14180   */\n    tag_383:\n        /* \"#utility.yul\":13738:13740   */\n      0x1f\n        /* \"#utility.yul\":13733:13736   */\n      dup3\n        /* \"#utility.yul\":13730:13741   */\n      gt\n        /* \"#utility.yul\":13727:14173   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":13772:13810   */\n      tag_555\n        /* \"#utility.yul\":13804:13809   */\n      dup2\n        /* \"#utility.yul\":13772:13810   */\n      tag_373\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13856:13885   */\n      tag_556\n        /* \"#utility.yul\":13874:13884   */\n      dup5\n        /* \"#utility.yul\":13856:13885   */\n      tag_374\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13846:13854   */\n      dup2\n        /* \"#utility.yul\":13842:13886   */\n      add\n        /* \"#utility.yul\":14039:14041   */\n      0x20\n        /* \"#utility.yul\":14027:14037   */\n      dup6\n        /* \"#utility.yul\":14024:14042   */\n      lt\n        /* \"#utility.yul\":14021:14070   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":14060:14068   */\n      dup2\n        /* \"#utility.yul\":14045:14068   */\n      swap1\n      pop\n        /* \"#utility.yul\":14021:14070   */\n    tag_557:\n        /* \"#utility.yul\":14083:14163   */\n      tag_558\n        /* \"#utility.yul\":14139:14161   */\n      tag_559\n        /* \"#utility.yul\":14157:14160   */\n      dup6\n        /* \"#utility.yul\":14139:14161   */\n      tag_374\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":14129:14137   */\n      dup4\n        /* \"#utility.yul\":14125:14162   */\n      add\n        /* \"#utility.yul\":14112:14123   */\n      dup3\n        /* \"#utility.yul\":14083:14163   */\n      tag_382\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":13742:14173   */\n      pop\n      pop\n        /* \"#utility.yul\":13727:14173   */\n    tag_554:\n        /* \"#utility.yul\":13637:14180   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14186:14303   */\n    tag_384:\n        /* \"#utility.yul\":14240:14248   */\n      0x00\n        /* \"#utility.yul\":14290:14295   */\n      dup3\n        /* \"#utility.yul\":14284:14288   */\n      dup3\n        /* \"#utility.yul\":14280:14296   */\n      shr\n        /* \"#utility.yul\":14259:14296   */\n      swap1\n      pop\n        /* \"#utility.yul\":14186:14303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14309:14478   */\n    tag_385:\n        /* \"#utility.yul\":14353:14359   */\n      0x00\n        /* \"#utility.yul\":14386:14437   */\n      tag_562\n        /* \"#utility.yul\":14434:14435   */\n      0x00\n        /* \"#utility.yul\":14430:14436   */\n      not\n        /* \"#utility.yul\":14422:14427   */\n      dup5\n        /* \"#utility.yul\":14419:14420   */\n      0x08\n        /* \"#utility.yul\":14415:14428   */\n      mul\n        /* \"#utility.yul\":14386:14437   */\n      tag_384\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":14382:14438   */\n      not\n        /* \"#utility.yul\":14467:14471   */\n      dup1\n        /* \"#utility.yul\":14461:14465   */\n      dup4\n        /* \"#utility.yul\":14457:14472   */\n      and\n        /* \"#utility.yul\":14447:14472   */\n      swap2\n      pop\n        /* \"#utility.yul\":14360:14478   */\n      pop\n        /* \"#utility.yul\":14309:14478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14483:14778   */\n    tag_386:\n        /* \"#utility.yul\":14559:14563   */\n      0x00\n        /* \"#utility.yul\":14705:14734   */\n      tag_564\n        /* \"#utility.yul\":14730:14733   */\n      dup4\n        /* \"#utility.yul\":14724:14728   */\n      dup4\n        /* \"#utility.yul\":14705:14734   */\n      tag_385\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":14697:14734   */\n      swap2\n      pop\n        /* \"#utility.yul\":14767:14770   */\n      dup3\n        /* \"#utility.yul\":14764:14765   */\n      0x02\n        /* \"#utility.yul\":14760:14771   */\n      mul\n        /* \"#utility.yul\":14754:14758   */\n      dup3\n        /* \"#utility.yul\":14751:14772   */\n      or\n        /* \"#utility.yul\":14743:14772   */\n      swap1\n      pop\n        /* \"#utility.yul\":14483:14778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14783:16178   */\n    tag_296:\n        /* \"#utility.yul\":14900:14937   */\n      tag_566\n        /* \"#utility.yul\":14933:14936   */\n      dup3\n        /* \"#utility.yul\":14900:14937   */\n      tag_332\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":15002:15020   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14994:15000   */\n      dup2\n        /* \"#utility.yul\":14991:15021   */\n      gt\n        /* \"#utility.yul\":14988:15044   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":15024:15042   */\n      tag_568\n      tag_354\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":14988:15044   */\n    tag_567:\n        /* \"#utility.yul\":15068:15106   */\n      tag_569\n        /* \"#utility.yul\":15100:15104   */\n      dup3\n        /* \"#utility.yul\":15094:15105   */\n      sload\n        /* \"#utility.yul\":15068:15106   */\n      tag_107\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15153:15220   */\n      tag_570\n        /* \"#utility.yul\":15213:15219   */\n      dup3\n        /* \"#utility.yul\":15205:15211   */\n      dup3\n        /* \"#utility.yul\":15199:15203   */\n      dup6\n        /* \"#utility.yul\":15153:15220   */\n      tag_383\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15247:15248   */\n      0x00\n        /* \"#utility.yul\":15271:15275   */\n      0x20\n        /* \"#utility.yul\":15258:15275   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15305   */\n      0x1f\n        /* \"#utility.yul\":15295:15301   */\n      dup4\n        /* \"#utility.yul\":15292:15306   */\n      gt\n        /* \"#utility.yul\":15320:15321   */\n      0x01\n        /* \"#utility.yul\":15315:15933   */\n      dup2\n      eq\n      tag_572\n      jumpi\n        /* \"#utility.yul\":15977:15978   */\n      0x00\n        /* \"#utility.yul\":15994:16000   */\n      dup5\n        /* \"#utility.yul\":15991:16068   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":16043:16052   */\n      dup3\n        /* \"#utility.yul\":16038:16041   */\n      dup8\n        /* \"#utility.yul\":16034:16053   */\n      add\n        /* \"#utility.yul\":16028:16054   */\n      mload\n        /* \"#utility.yul\":16019:16054   */\n      swap1\n      pop\n        /* \"#utility.yul\":15991:16068   */\n    tag_573:\n        /* \"#utility.yul\":16094:16161   */\n      tag_574\n        /* \"#utility.yul\":16154:16160   */\n      dup6\n        /* \"#utility.yul\":16147:16152   */\n      dup3\n        /* \"#utility.yul\":16094:16161   */\n      tag_386\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":16088:16092   */\n      dup7\n        /* \"#utility.yul\":16081:16162   */\n      sstore\n        /* \"#utility.yul\":15950:16172   */\n      pop\n        /* \"#utility.yul\":15285:16172   */\n      jump(tag_571)\n        /* \"#utility.yul\":15315:15933   */\n    tag_572:\n        /* \"#utility.yul\":15367:15371   */\n      0x1f\n        /* \"#utility.yul\":15363:15372   */\n      not\n        /* \"#utility.yul\":15355:15361   */\n      dup5\n        /* \"#utility.yul\":15351:15373   */\n      and\n        /* \"#utility.yul\":15401:15438   */\n      tag_575\n        /* \"#utility.yul\":15433:15437   */\n      dup7\n        /* \"#utility.yul\":15401:15438   */\n      tag_373\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":15460:15461   */\n      0x00\n        /* \"#utility.yul\":15474:15682   */\n    tag_576:\n        /* \"#utility.yul\":15488:15495   */\n      dup3\n        /* \"#utility.yul\":15485:15486   */\n      dup2\n        /* \"#utility.yul\":15482:15496   */\n      lt\n        /* \"#utility.yul\":15474:15682   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":15567:15576   */\n      dup5\n        /* \"#utility.yul\":15562:15565   */\n      dup10\n        /* \"#utility.yul\":15558:15577   */\n      add\n        /* \"#utility.yul\":15552:15578   */\n      mload\n        /* \"#utility.yul\":15544:15550   */\n      dup3\n        /* \"#utility.yul\":15537:15579   */\n      sstore\n        /* \"#utility.yul\":15618:15619   */\n      0x01\n        /* \"#utility.yul\":15610:15616   */\n      dup3\n        /* \"#utility.yul\":15606:15620   */\n      add\n        /* \"#utility.yul\":15596:15620   */\n      swap2\n      pop\n        /* \"#utility.yul\":15665:15667   */\n      0x20\n        /* \"#utility.yul\":15654:15663   */\n      dup6\n        /* \"#utility.yul\":15650:15668   */\n      add\n        /* \"#utility.yul\":15637:15668   */\n      swap5\n      pop\n        /* \"#utility.yul\":15511:15515   */\n      0x20\n        /* \"#utility.yul\":15508:15509   */\n      dup2\n        /* \"#utility.yul\":15504:15516   */\n      add\n        /* \"#utility.yul\":15499:15516   */\n      swap1\n      pop\n        /* \"#utility.yul\":15474:15682   */\n      jump(tag_576)\n    tag_578:\n        /* \"#utility.yul\":15710:15716   */\n      dup7\n        /* \"#utility.yul\":15701:15708   */\n      dup4\n        /* \"#utility.yul\":15698:15717   */\n      lt\n        /* \"#utility.yul\":15695:15874   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":15768:15777   */\n      dup5\n        /* \"#utility.yul\":15763:15766   */\n      dup10\n        /* \"#utility.yul\":15759:15778   */\n      add\n        /* \"#utility.yul\":15753:15779   */\n      mload\n        /* \"#utility.yul\":15811:15859   */\n      tag_580\n        /* \"#utility.yul\":15853:15857   */\n      0x1f\n        /* \"#utility.yul\":15845:15851   */\n      dup10\n        /* \"#utility.yul\":15841:15858   */\n      and\n        /* \"#utility.yul\":15830:15839   */\n      dup3\n        /* \"#utility.yul\":15811:15859   */\n      tag_385\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":15803:15809   */\n      dup4\n        /* \"#utility.yul\":15796:15860   */\n      sstore\n        /* \"#utility.yul\":15718:15874   */\n      pop\n        /* \"#utility.yul\":15695:15874   */\n    tag_579:\n        /* \"#utility.yul\":15920:15921   */\n      0x01\n        /* \"#utility.yul\":15916:15917   */\n      0x02\n        /* \"#utility.yul\":15908:15914   */\n      dup9\n        /* \"#utility.yul\":15904:15918   */\n      mul\n        /* \"#utility.yul\":15900:15922   */\n      add\n        /* \"#utility.yul\":15894:15898   */\n      dup9\n        /* \"#utility.yul\":15887:15923   */\n      sstore\n        /* \"#utility.yul\":15322:15933   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15285:16172   */\n    tag_571:\n      pop\n        /* \"#utility.yul\":14875:16178   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14783:16178   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16184:16282   */\n    tag_387:\n        /* \"#utility.yul\":16235:16241   */\n      0x00\n        /* \"#utility.yul\":16269:16274   */\n      dup2\n        /* \"#utility.yul\":16263:16275   */\n      mload\n        /* \"#utility.yul\":16253:16275   */\n      swap1\n      pop\n        /* \"#utility.yul\":16184:16282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16288:16435   */\n    tag_388:\n        /* \"#utility.yul\":16389:16400   */\n      0x00\n        /* \"#utility.yul\":16426:16429   */\n      dup2\n        /* \"#utility.yul\":16411:16429   */\n      swap1\n      pop\n        /* \"#utility.yul\":16288:16435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16441:16827   */\n    tag_389:\n        /* \"#utility.yul\":16545:16548   */\n      0x00\n        /* \"#utility.yul\":16573:16611   */\n      tag_584\n        /* \"#utility.yul\":16605:16610   */\n      dup3\n        /* \"#utility.yul\":16573:16611   */\n      tag_387\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":16627:16715   */\n      tag_585\n        /* \"#utility.yul\":16708:16714   */\n      dup2\n        /* \"#utility.yul\":16703:16706   */\n      dup6\n        /* \"#utility.yul\":16627:16715   */\n      tag_388\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":16620:16715   */\n      swap4\n      pop\n        /* \"#utility.yul\":16724:16789   */\n      tag_586\n        /* \"#utility.yul\":16782:16788   */\n      dup2\n        /* \"#utility.yul\":16777:16780   */\n      dup6\n        /* \"#utility.yul\":16770:16774   */\n      0x20\n        /* \"#utility.yul\":16763:16768   */\n      dup7\n        /* \"#utility.yul\":16759:16775   */\n      add\n        /* \"#utility.yul\":16724:16789   */\n      tag_334\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16814:16820   */\n      dup1\n        /* \"#utility.yul\":16809:16812   */\n      dup5\n        /* \"#utility.yul\":16805:16821   */\n      add\n        /* \"#utility.yul\":16798:16821   */\n      swap2\n      pop\n        /* \"#utility.yul\":16549:16827   */\n      pop\n        /* \"#utility.yul\":16441:16827   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16833:17104   */\n    tag_311:\n        /* \"#utility.yul\":16963:16966   */\n      0x00\n        /* \"#utility.yul\":16985:17078   */\n      tag_588\n        /* \"#utility.yul\":17074:17077   */\n      dup3\n        /* \"#utility.yul\":17065:17071   */\n      dup5\n        /* \"#utility.yul\":16985:17078   */\n      tag_389\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":16978:17078   */\n      swap2\n      pop\n        /* \"#utility.yul\":17095:17098   */\n      dup2\n        /* \"#utility.yul\":17088:17098   */\n      swap1\n      pop\n        /* \"#utility.yul\":16833:17104   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122060e8c4f2fef5204f84f2df059ad2a3bb08aad7a40c54c9f63a5a825bbc6bb8ac64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156041575f5ffd5b5060805161222e6100685f395f8181610cc501528181610d1a0152610ed4015261222e5ff3fe6080604052600436106100fd575f3560e01c806370a082311161009457806395d89b411161006357806395d89b41146102f7578063a9059cbb14610321578063ad3cb1cc1461035d578063dd62ed3e14610387578063f2fde38b146103c3576100fd565b806370a0823114610265578063715018a6146102a15780638129fc1c146102b75780638da5cb5b146102cd576100fd565b8063313ce567116100d0578063313ce567146101cd57806340c10f19146101f75780634f1ef2861461021f57806352d1902d1461023b576100fd565b806306fdde0314610101578063095ea7b31461012b57806318160ddd1461016757806323b872dd14610191575b5f5ffd5b34801561010c575f5ffd5b506101156103eb565b6040516101229190611960565b60405180910390f35b348015610136575f5ffd5b50610151600480360381019061014c9190611a1e565b610489565b60405161015e9190611a76565b60405180910390f35b348015610172575f5ffd5b5061017b6104ab565b6040516101889190611a9e565b60405180910390f35b34801561019c575f5ffd5b506101b760048036038101906101b29190611ab7565b6104c2565b6040516101c49190611a76565b60405180910390f35b3480156101d8575f5ffd5b506101e16104f0565b6040516101ee9190611b22565b60405180910390f35b348015610202575f5ffd5b5061021d60048036038101906102189190611a1e565b6104f8565b005b61023960048036038101906102349190611c67565b61050e565b005b348015610246575f5ffd5b5061024f61052d565b60405161025c9190611cd9565b60405180910390f35b348015610270575f5ffd5b5061028b60048036038101906102869190611cf2565b61055e565b6040516102989190611a9e565b60405180910390f35b3480156102ac575f5ffd5b506102b56105b1565b005b3480156102c2575f5ffd5b506102cb6105c4565b005b3480156102d8575f5ffd5b506102e16107b8565b6040516102ee9190611d2c565b60405180910390f35b348015610302575f5ffd5b5061030b6107ed565b6040516103189190611960565b60405180910390f35b34801561032c575f5ffd5b5061034760048036038101906103429190611a1e565b61088b565b6040516103549190611a76565b60405180910390f35b348015610368575f5ffd5b506103716108ad565b60405161037e9190611960565b60405180910390f35b348015610392575f5ffd5b506103ad60048036038101906103a89190611d45565b6108e6565b6040516103ba9190611a9e565b60405180910390f35b3480156103ce575f5ffd5b506103e960048036038101906103e49190611cf2565b610976565b005b60605f6103f66109fa565b905080600301805461040790611db0565b80601f016020809104026020016040519081016040528092919081815260200182805461043390611db0565b801561047e5780601f106104555761010080835404028352916020019161047e565b820191905f5260205f20905b81548152906001019060200180831161046157829003601f168201915b505050505091505090565b5f5f610493610a21565b90506104a0818585610a28565b600191505092915050565b5f5f6104b56109fa565b9050806002015491505090565b5f5f6104cc610a21565b90506104d9858285610a3a565b6104e4858585610acd565b60019150509392505050565b5f6012905090565b610500610bbd565b61050a8282610c44565b5050565b610516610cc3565b61051f82610da9565b6105298282610db4565b5050565b5f610536610ed2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f5f6105686109fa565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6105b9610bbd565b6105c25f610f59565b565b5f6105cd61102a565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156106155750825b90505f60018367ffffffffffffffff1614801561064857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610656575080155b1561068d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106da576001855f0160086101000a81548160ff0219169083151502179055505b61074e6040518060400160405280600681526020017f55705361666500000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5550530000000000000000000000000000000000000000000000000000000000815250611051565b61075733611067565b83156107b1575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516107a89190611e35565b60405180910390a15b5050505050565b5f5f6107c261107b565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f6107f86109fa565b905080600401805461080990611db0565b80601f016020809104026020016040519081016040528092919081815260200182805461083590611db0565b80156108805780601f1061085757610100808354040283529160200191610880565b820191905f5260205f20905b81548152906001019060200180831161086357829003601f168201915b505050505091505090565b5f5f610895610a21565b90506108a2818585610acd565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f5f6108f06109fa565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b61097e610bbd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ee575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e59190611d2c565b60405180910390fd5b6109f781610f59565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610a3583838360016110a2565b505050565b5f610a4584846108e6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ac75781811015610ab8578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610aaf93929190611e4e565b60405180910390fd5b610ac684848484035f6110a2565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b3d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b349190611d2c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bad575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ba49190611d2c565b60405180910390fd5b610bb883838361127f565b505050565b610bc5610a21565b73ffffffffffffffffffffffffffffffffffffffff16610be36107b8565b73ffffffffffffffffffffffffffffffffffffffff1614610c4257610c06610a21565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c399190611d2c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cab9190611d2c565b60405180910390fd5b610cbf5f838361127f565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610d7057507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610d576114ae565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610da7576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610db1610bbd565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e1c57506040513d601f19601f82011682018060405250810190610e199190611ead565b60015b610e5d57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610e549190611d2c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610ec357806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610eba9190611cd9565b60405180910390fd5b610ecd8383611501565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610f57576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f610f6261107b565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611059611573565b61106382826115b3565b5050565b61106f611573565b611078816115ef565b50565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f6110ab6109fa565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361111d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111149190611d2c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361118d575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111849190611d2c565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611278578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161126f9190611a9e565b60405180910390a35b5050505050565b5f6112886109fa565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112dc5781816002015f8282546112d09190611f05565b925050819055506113ae565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611367578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161135e93929190611e4e565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113f75781816002015f8282540392505081905550611443565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114a09190611a9e565b60405180910390a350505050565b5f6114da7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611673565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61150a8261167c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115611566576115608282611745565b5061156f565b61156e6117c5565b5b5050565b61157b611801565b6115b1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6115bb611573565b5f6115c46109fa565b9050828160030190816115d791906120cf565b50818160040190816115e991906120cf565b50505050565b6115f7611573565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611667575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161165e9190611d2c565b60405180910390fd5b61167081610f59565b50565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036116d757806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016116ce9190611d2c565b60405180910390fd5b806117037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611673565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff168460405161176e91906121e2565b5f60405180830381855af49150503d805f81146117a6576040519150601f19603f3d011682016040523d82523d5f602084013e6117ab565b606091505b50915091506117bb85838361181f565b9250505092915050565b5f3411156117ff576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61180a61102a565b5f0160089054906101000a900460ff16905090565b6060826118345761182f826118ac565b6118a4565b5f825114801561185a57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561189c57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016118939190611d2c565b60405180910390fd5b8190506118a5565b5b9392505050565b5f815111156118be5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611932826118f0565b61193c81856118fa565b935061194c81856020860161190a565b61195581611918565b840191505092915050565b5f6020820190508181035f8301526119788184611928565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119ba82611991565b9050919050565b6119ca816119b0565b81146119d4575f5ffd5b50565b5f813590506119e5816119c1565b92915050565b5f819050919050565b6119fd816119eb565b8114611a07575f5ffd5b50565b5f81359050611a18816119f4565b92915050565b5f5f60408385031215611a3457611a33611989565b5b5f611a41858286016119d7565b9250506020611a5285828601611a0a565b9150509250929050565b5f8115159050919050565b611a7081611a5c565b82525050565b5f602082019050611a895f830184611a67565b92915050565b611a98816119eb565b82525050565b5f602082019050611ab15f830184611a8f565b92915050565b5f5f5f60608486031215611ace57611acd611989565b5b5f611adb868287016119d7565b9350506020611aec868287016119d7565b9250506040611afd86828701611a0a565b9150509250925092565b5f60ff82169050919050565b611b1c81611b07565b82525050565b5f602082019050611b355f830184611b13565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b7982611918565b810181811067ffffffffffffffff82111715611b9857611b97611b43565b5b80604052505050565b5f611baa611980565b9050611bb68282611b70565b919050565b5f67ffffffffffffffff821115611bd557611bd4611b43565b5b611bde82611918565b9050602081019050919050565b828183375f83830152505050565b5f611c0b611c0684611bbb565b611ba1565b905082815260208101848484011115611c2757611c26611b3f565b5b611c32848285611beb565b509392505050565b5f82601f830112611c4e57611c4d611b3b565b5b8135611c5e848260208601611bf9565b91505092915050565b5f5f60408385031215611c7d57611c7c611989565b5b5f611c8a858286016119d7565b925050602083013567ffffffffffffffff811115611cab57611caa61198d565b5b611cb785828601611c3a565b9150509250929050565b5f819050919050565b611cd381611cc1565b82525050565b5f602082019050611cec5f830184611cca565b92915050565b5f60208284031215611d0757611d06611989565b5b5f611d14848285016119d7565b91505092915050565b611d26816119b0565b82525050565b5f602082019050611d3f5f830184611d1d565b92915050565b5f5f60408385031215611d5b57611d5a611989565b5b5f611d68858286016119d7565b9250506020611d79858286016119d7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611dc757607f821691505b602082108103611dda57611dd9611d83565b5b50919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f611e1f611e1a611e1584611de0565b611dfc565b611de9565b9050919050565b611e2f81611e05565b82525050565b5f602082019050611e485f830184611e26565b92915050565b5f606082019050611e615f830186611d1d565b611e6e6020830185611a8f565b611e7b6040830184611a8f565b949350505050565b611e8c81611cc1565b8114611e96575f5ffd5b50565b5f81519050611ea781611e83565b92915050565b5f60208284031215611ec257611ec1611989565b5b5f611ecf84828501611e99565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f0f826119eb565b9150611f1a836119eb565b9250828201905080821115611f3257611f31611ed8565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611f947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f59565b611f9e8683611f59565b95508019841693508086168417925050509392505050565b5f611fd0611fcb611fc6846119eb565b611dfc565b6119eb565b9050919050565b5f819050919050565b611fe983611fb6565b611ffd611ff582611fd7565b848454611f65565b825550505050565b5f5f905090565b612014612005565b61201f818484611fe0565b505050565b5b81811015612042576120375f8261200c565b600181019050612025565b5050565b601f8211156120875761205881611f38565b61206184611f4a565b81016020851015612070578190505b61208461207c85611f4a565b830182612024565b50505b505050565b5f82821c905092915050565b5f6120a75f198460080261208c565b1980831691505092915050565b5f6120bf8383612098565b9150826002028217905092915050565b6120d8826118f0565b67ffffffffffffffff8111156120f1576120f0611b43565b5b6120fb8254611db0565b612106828285612046565b5f60209050601f831160018114612137575f8415612125578287015190505b61212f85826120b4565b865550612196565b601f19841661214586611f38565b5f5b8281101561216c57848901518255600182019150602085019450602081019050612147565b868310156121895784890151612185601f891682612098565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f6121bc8261219e565b6121c681856121a8565b93506121d681856020860161190a565b80840191505092915050565b5f6121ed82846121b2565b91508190509291505056fea264697066735822122060e8c4f2fef5204f84f2df059ad2a3bb08aad7a40c54c9f63a5a825bbc6bb8ac64736f6c634300081d0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x222E PUSH2 0x68 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xCC5 ADD MSTORE DUP2 DUP2 PUSH2 0xD1A ADD MSTORE PUSH2 0xED4 ADD MSTORE PUSH2 0x222E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C3 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CD JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x23B JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1AB7 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x5B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x5C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x371 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x3F6 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x407 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x433 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x455 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x461 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x493 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x4A0 DUP2 DUP6 DUP6 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4B5 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4CC PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP6 DUP3 DUP6 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x4E4 DUP6 DUP6 DUP6 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x500 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x50A DUP3 DUP3 PUSH2 0xC44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x516 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0x51F DUP3 PUSH2 0xDA9 JUMP JUMPDEST PUSH2 0x529 DUP3 DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x536 PUSH2 0xED2 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x568 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B9 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x5C2 PUSH0 PUSH2 0xF59 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5CD PUSH2 0x102A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x615 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x648 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x74E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5570536166650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5550530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x757 CALLER PUSH2 0x1067 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x7B1 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x1E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7C2 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x7F8 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x809 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x835 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x880 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x857 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x880 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x863 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x895 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x8A2 DUP2 DUP6 DUP6 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8F0 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97E PUSH2 0xBBD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xF59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA35 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA45 DUP5 DUP5 PUSH2 0x8E6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAC7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10A2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB8 DUP4 DUP4 DUP4 PUSH2 0x127F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBC5 PUSH2 0xA21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE3 PUSH2 0x7B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC42 JUMPI PUSH2 0xC06 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBF PUSH0 DUP4 DUP4 PUSH2 0x127F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD70 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD57 PUSH2 0x14AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xDB1 PUSH2 0xBBD JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE1C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE5D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE54 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xEC3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBA SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xECD DUP4 DUP4 PUSH2 0x1501 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xF62 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1059 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x1063 DUP3 DUP3 PUSH2 0x15B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x106F PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x1078 DUP2 PUSH2 0x15EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x10AB PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x111D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1114 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x118D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1184 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1278 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1288 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12DC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13AE JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1367 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F7 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1443 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x14A0 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1673 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x150A DUP3 PUSH2 0x167C JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1566 JUMPI PUSH2 0x1560 DUP3 DUP3 PUSH2 0x1745 JUMP JUMPDEST POP PUSH2 0x156F JUMP JUMPDEST PUSH2 0x156E PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x157B PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15BB PUSH2 0x1573 JUMP JUMPDEST PUSH0 PUSH2 0x15C4 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x15D7 SWAP2 SWAP1 PUSH2 0x20CF JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x20CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15F7 PUSH2 0x1573 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1667 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165E SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1670 DUP2 PUSH2 0xF59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x16D7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CE SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1703 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1673 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x176E SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x17BB DUP6 DUP4 DUP4 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x17FF JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x180A PUSH2 0x102A JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1834 JUMPI PUSH2 0x182F DUP3 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x18A4 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x185A JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x189C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x18BE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1932 DUP3 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x193C DUP2 DUP6 PUSH2 0x18FA JUMP JUMPDEST SWAP4 POP PUSH2 0x194C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190A JUMP JUMPDEST PUSH2 0x1955 DUP2 PUSH2 0x1918 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1978 DUP2 DUP5 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19BA DUP3 PUSH2 0x1991 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CA DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x19D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E5 DUP2 PUSH2 0x19C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FD DUP2 PUSH2 0x19EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1A07 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A18 DUP2 PUSH2 0x19F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A33 PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A41 DUP6 DUP3 DUP7 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A52 DUP6 DUP3 DUP7 ADD PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A70 DUP2 PUSH2 0x1A5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A89 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A98 DUP2 PUSH2 0x19EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AB1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ACE JUMPI PUSH2 0x1ACD PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ADB DUP7 DUP3 DUP8 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AEC DUP7 DUP3 DUP8 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AFD DUP7 DUP3 DUP8 ADD PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1C DUP2 PUSH2 0x1B07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B35 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B79 DUP3 PUSH2 0x1918 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B98 JUMPI PUSH2 0x1B97 PUSH2 0x1B43 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BAA PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB6 DUP3 DUP3 PUSH2 0x1B70 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD5 JUMPI PUSH2 0x1BD4 PUSH2 0x1B43 JUMP JUMPDEST JUMPDEST PUSH2 0x1BDE DUP3 PUSH2 0x1918 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0B PUSH2 0x1C06 DUP5 PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C27 JUMPI PUSH2 0x1C26 PUSH2 0x1B3F JUMP JUMPDEST JUMPDEST PUSH2 0x1C32 DUP5 DUP3 DUP6 PUSH2 0x1BEB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C4E JUMPI PUSH2 0x1C4D PUSH2 0x1B3B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C5E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C8A DUP6 DUP3 DUP7 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CAB JUMPI PUSH2 0x1CAA PUSH2 0x198D JUMP JUMPDEST JUMPDEST PUSH2 0x1CB7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C3A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x1CC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CEC PUSH0 DUP4 ADD DUP5 PUSH2 0x1CCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D06 PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D14 DUP5 DUP3 DUP6 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D26 DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D3F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D5B JUMPI PUSH2 0x1D5A PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D68 DUP6 DUP3 DUP7 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D79 DUP6 DUP3 DUP7 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x1D83 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1F PUSH2 0x1E1A PUSH2 0x1E15 DUP5 PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x1DE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2F DUP2 PUSH2 0x1E05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E48 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E61 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1E6E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x1E7B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A8F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1E8C DUP2 PUSH2 0x1CC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E96 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EA7 DUP2 PUSH2 0x1E83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC1 PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ECF DUP5 DUP3 DUP6 ADD PUSH2 0x1E99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 PUSH2 0x19EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1A DUP4 PUSH2 0x19EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x1ED8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1F94 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x1F9E DUP7 DUP4 PUSH2 0x1F59 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD0 PUSH2 0x1FCB PUSH2 0x1FC6 DUP5 PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE9 DUP4 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x1FFD PUSH2 0x1FF5 DUP3 PUSH2 0x1FD7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F65 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2014 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x201F DUP2 DUP5 DUP5 PUSH2 0x1FE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2042 JUMPI PUSH2 0x2037 PUSH0 DUP3 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2025 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2087 JUMPI PUSH2 0x2058 DUP2 PUSH2 0x1F38 JUMP JUMPDEST PUSH2 0x2061 DUP5 PUSH2 0x1F4A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2070 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2084 PUSH2 0x207C DUP6 PUSH2 0x1F4A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2024 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20A7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x208C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20BF DUP4 DUP4 PUSH2 0x2098 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D8 DUP3 PUSH2 0x18F0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F1 JUMPI PUSH2 0x20F0 PUSH2 0x1B43 JUMP JUMPDEST JUMPDEST PUSH2 0x20FB DUP3 SLOAD PUSH2 0x1DB0 JUMP JUMPDEST PUSH2 0x2106 DUP3 DUP3 DUP6 PUSH2 0x2046 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2137 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2125 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x212F DUP6 DUP3 PUSH2 0x20B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2145 DUP7 PUSH2 0x1F38 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x216C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2147 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2189 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2185 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2098 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21BC DUP3 PUSH2 0x219E JUMP JUMPDEST PUSH2 0x21C6 DUP2 DUP6 PUSH2 0x21A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x21D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21ED DUP3 DUP5 PUSH2 0x21B2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xE8 0xC4 CALLCODE INVALID CREATE2 KECCAK256 0x4F DUP5 CALLCODE 0xDF SDIV SWAP11 0xD2 LOG3 0xBB ADDMOD 0xAA 0xD7 LOG4 0xC SLOAD 0xC9 0xF6 GASPRICE GAS DUP3 JUMPDEST 0xBC PUSH12 0xB8AC64736F6C634300081D00 CALLER ",
							"sourceMap": "399:612:15:-:0;;;1171:4:2;1128:48;;;;;;;;;399:612:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UPGRADE_INTERFACE_VERSION_472": {
									"entryPoint": 2221,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ERC20_init_698": {
									"entryPoint": 4177,
									"id": 698,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_726": {
									"entryPoint": 5555,
									"id": 726,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 4199,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 5615,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_1130": {
									"entryPoint": 2600,
									"id": 1130,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1198": {
									"entryPoint": 4258,
									"id": 1198,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2314": {
									"entryPoint": 3497,
									"id": 2314,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 5491,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1754": {
									"entryPoint": 6085,
									"id": 1754,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_578": {
									"entryPoint": 3794,
									"id": 578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 3005,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_562": {
									"entryPoint": 3267,
									"id": 562,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_682": {
									"entryPoint": 2554,
									"id": 682,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_447": {
									"entryPoint": 4138,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 4219,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 6145,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_1079": {
									"entryPoint": 3140,
									"id": 1079,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1275": {
									"entryPoint": 2593,
									"id": 1275,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revert_2128": {
									"entryPoint": 6316,
									"id": 2128,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setImplementation_1534": {
									"entryPoint": 5756,
									"id": 1534,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_1246": {
									"entryPoint": 2618,
									"id": 1246,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 3929,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_954": {
									"entryPoint": 2765,
									"id": 954,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1046": {
									"entryPoint": 4735,
									"id": 1046,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_629": {
									"entryPoint": 3508,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowance_851": {
									"entryPoint": 2278,
									"id": 851,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_875": {
									"entryPoint": 1161,
									"id": 875,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_803": {
									"entryPoint": 1374,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_767": {
									"entryPoint": 1264,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@functionDelegateCall_2046": {
									"entryPoint": 5957,
									"id": 2046,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2186": {
									"entryPoint": 5747,
									"id": 2186,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1507": {
									"entryPoint": 5294,
									"id": 1507,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_2304": {
									"entryPoint": 1476,
									"id": 2304,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mint_2330": {
									"entryPoint": 1272,
									"id": 2330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_742": {
									"entryPoint": 1003,
									"id": 742,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 1976,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_520": {
									"entryPoint": 1325,
									"id": 520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1457,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_758": {
									"entryPoint": 2029,
									"id": 758,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_783": {
									"entryPoint": 1195,
									"id": 783,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_907": {
									"entryPoint": 1218,
									"id": 907,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 2422,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_827": {
									"entryPoint": 2187,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@upgradeToAndCall_1570": {
									"entryPoint": 5377,
									"id": 1570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_540": {
									"entryPoint": 1294,
									"id": 540,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2086": {
									"entryPoint": 6175,
									"id": 2086,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 6615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 6839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 7271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 7853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8626,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 7718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 6931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7758,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 7733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6814,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 6946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6528,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 7992,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8262,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 7657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 6919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8228,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 7685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 8399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 8372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7896,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 7555,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6979,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 6975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8037,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 6593,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8197,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17107:16",
										"nodeType": "YulBlock",
										"src": "0:17107:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:16",
													"nodeType": "YulBlock",
													"src": "66:40:16",
													"statements": [
														{
															"nativeSrc": "77:22:16",
															"nodeType": "YulAssignment",
															"src": "77:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:16"
																},
																"nativeSrc": "87:12:16",
																"nodeType": "YulFunctionCall",
																"src": "87:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:16",
														"nodeType": "YulTypedName",
														"src": "49:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:16",
														"nodeType": "YulTypedName",
														"src": "59:6:16",
														"type": ""
													}
												],
												"src": "7:99:16"
											},
											{
												"body": {
													"nativeSrc": "208:73:16",
													"nodeType": "YulBlock",
													"src": "208:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:16"
																},
																"nativeSrc": "218:19:16",
																"nodeType": "YulFunctionCall",
																"src": "218:19:16"
															},
															"nativeSrc": "218:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:16"
														},
														{
															"nativeSrc": "246:29:16",
															"nodeType": "YulAssignment",
															"src": "246:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:16",
																		"nodeType": "YulLiteral",
																		"src": "270:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:16"
																},
																"nativeSrc": "261:14:16",
																"nodeType": "YulFunctionCall",
																"src": "261:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:16",
														"nodeType": "YulTypedName",
														"src": "180:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:16",
														"nodeType": "YulTypedName",
														"src": "185:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:16",
														"nodeType": "YulTypedName",
														"src": "196:11:16",
														"type": ""
													}
												],
												"src": "112:169:16"
											},
											{
												"body": {
													"nativeSrc": "349:77:16",
													"nodeType": "YulBlock",
													"src": "349:77:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:16"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:16"
																},
																"nativeSrc": "360:23:16",
																"nodeType": "YulFunctionCall",
																"src": "360:23:16"
															},
															"nativeSrc": "360:23:16",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:16"
																		},
																		"nativeSrc": "399:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:16",
																		"nodeType": "YulLiteral",
																		"src": "417:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:16"
																},
																"nativeSrc": "392:27:16",
																"nodeType": "YulFunctionCall",
																"src": "392:27:16"
															},
															"nativeSrc": "392:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:16",
														"nodeType": "YulTypedName",
														"src": "331:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:16",
														"nodeType": "YulTypedName",
														"src": "336:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:16",
														"nodeType": "YulTypedName",
														"src": "341:6:16",
														"type": ""
													}
												],
												"src": "287:139:16"
											},
											{
												"body": {
													"nativeSrc": "480:54:16",
													"nodeType": "YulBlock",
													"src": "480:54:16",
													"statements": [
														{
															"nativeSrc": "490:38:16",
															"nodeType": "YulAssignment",
															"src": "490:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:16",
																				"nodeType": "YulLiteral",
																				"src": "515:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:16"
																		},
																		"nativeSrc": "504:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:16",
																				"nodeType": "YulLiteral",
																				"src": "524:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:16"
																		},
																		"nativeSrc": "520:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:16"
																},
																"nativeSrc": "500:28:16",
																"nodeType": "YulFunctionCall",
																"src": "500:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:16",
														"nodeType": "YulTypedName",
														"src": "463:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:16",
														"nodeType": "YulTypedName",
														"src": "473:6:16",
														"type": ""
													}
												],
												"src": "432:102:16"
											},
											{
												"body": {
													"nativeSrc": "632:285:16",
													"nodeType": "YulBlock",
													"src": "632:285:16",
													"statements": [
														{
															"nativeSrc": "642:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:16"
																},
																"nativeSrc": "656:39:16",
																"nodeType": "YulFunctionCall",
																"src": "656:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:16",
																	"nodeType": "YulTypedName",
																	"src": "646:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:16",
															"nodeType": "YulAssignment",
															"src": "704:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:16"
																},
																"nativeSrc": "711:71:16",
																"nodeType": "YulFunctionCall",
																"src": "711:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:16",
																				"nodeType": "YulLiteral",
																				"src": "837:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:16"
																		},
																		"nativeSrc": "826:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:16"
																},
																"nativeSrc": "791:65:16",
																"nodeType": "YulFunctionCall",
																"src": "791:65:16"
															},
															"nativeSrc": "791:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:16"
														},
														{
															"nativeSrc": "865:46:16",
															"nodeType": "YulAssignment",
															"src": "865:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:16"
																		},
																		"nativeSrc": "881:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:16"
																},
																"nativeSrc": "872:39:16",
																"nodeType": "YulFunctionCall",
																"src": "872:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:16",
														"nodeType": "YulTypedName",
														"src": "613:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:16",
														"nodeType": "YulTypedName",
														"src": "620:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:16",
														"nodeType": "YulTypedName",
														"src": "628:3:16",
														"type": ""
													}
												],
												"src": "540:377:16"
											},
											{
												"body": {
													"nativeSrc": "1041:195:16",
													"nodeType": "YulBlock",
													"src": "1041:195:16",
													"statements": [
														{
															"nativeSrc": "1051:26:16",
															"nodeType": "YulAssignment",
															"src": "1051:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:16"
																},
																"nativeSrc": "1059:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:16"
																		},
																		"nativeSrc": "1094:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:16"
																		},
																		"nativeSrc": "1113:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:16"
																},
																"nativeSrc": "1087:47:16",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:16"
															},
															"nativeSrc": "1087:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:16"
														},
														{
															"nativeSrc": "1143:86:16",
															"nodeType": "YulAssignment",
															"src": "1143:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:16"
																},
																"nativeSrc": "1151:78:16",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:16",
														"nodeType": "YulTypedName",
														"src": "1013:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:16",
														"nodeType": "YulTypedName",
														"src": "1025:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:16",
														"nodeType": "YulTypedName",
														"src": "1036:4:16",
														"type": ""
													}
												],
												"src": "923:313:16"
											},
											{
												"body": {
													"nativeSrc": "1282:35:16",
													"nodeType": "YulBlock",
													"src": "1282:35:16",
													"statements": [
														{
															"nativeSrc": "1292:19:16",
															"nodeType": "YulAssignment",
															"src": "1292:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:16"
																},
																"nativeSrc": "1302:9:16",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:16",
														"nodeType": "YulTypedName",
														"src": "1275:6:16",
														"type": ""
													}
												],
												"src": "1242:75:16"
											},
											{
												"body": {
													"nativeSrc": "1412:28:16",
													"nodeType": "YulBlock",
													"src": "1412:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:16"
																},
																"nativeSrc": "1422:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:16"
															},
															"nativeSrc": "1422:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:16"
											},
											{
												"body": {
													"nativeSrc": "1535:28:16",
													"nodeType": "YulBlock",
													"src": "1535:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:16"
																},
																"nativeSrc": "1545:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:16"
															},
															"nativeSrc": "1545:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:16"
											},
											{
												"body": {
													"nativeSrc": "1614:81:16",
													"nodeType": "YulBlock",
													"src": "1614:81:16",
													"statements": [
														{
															"nativeSrc": "1624:65:16",
															"nodeType": "YulAssignment",
															"src": "1624:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:16",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:16"
																},
																"nativeSrc": "1635:54:16",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:16",
														"nodeType": "YulTypedName",
														"src": "1596:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:16",
														"nodeType": "YulTypedName",
														"src": "1606:7:16",
														"type": ""
													}
												],
												"src": "1569:126:16"
											},
											{
												"body": {
													"nativeSrc": "1746:51:16",
													"nodeType": "YulBlock",
													"src": "1746:51:16",
													"statements": [
														{
															"nativeSrc": "1756:35:16",
															"nodeType": "YulAssignment",
															"src": "1756:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:16"
																},
																"nativeSrc": "1767:24:16",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:16",
														"nodeType": "YulTypedName",
														"src": "1728:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:16",
														"nodeType": "YulTypedName",
														"src": "1738:7:16",
														"type": ""
													}
												],
												"src": "1701:96:16"
											},
											{
												"body": {
													"nativeSrc": "1846:79:16",
													"nodeType": "YulBlock",
													"src": "1846:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:16",
																"nodeType": "YulBlock",
																"src": "1903:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:16"
																			},
																			"nativeSrc": "1905:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:16"
																		},
																		"nativeSrc": "1905:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:16"
																				},
																				"nativeSrc": "1876:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:16"
																		},
																		"nativeSrc": "1866:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:16"
																},
																"nativeSrc": "1859:43:16",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:16"
															},
															"nativeSrc": "1856:63:16",
															"nodeType": "YulIf",
															"src": "1856:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:16",
														"nodeType": "YulTypedName",
														"src": "1839:5:16",
														"type": ""
													}
												],
												"src": "1803:122:16"
											},
											{
												"body": {
													"nativeSrc": "1983:87:16",
													"nodeType": "YulBlock",
													"src": "1983:87:16",
													"statements": [
														{
															"nativeSrc": "1993:29:16",
															"nodeType": "YulAssignment",
															"src": "1993:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:16"
																},
																"nativeSrc": "2002:20:16",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:16"
																},
																"nativeSrc": "2031:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:16"
															},
															"nativeSrc": "2031:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:16",
														"nodeType": "YulTypedName",
														"src": "1961:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:16",
														"nodeType": "YulTypedName",
														"src": "1969:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:16",
														"nodeType": "YulTypedName",
														"src": "1977:5:16",
														"type": ""
													}
												],
												"src": "1931:139:16"
											},
											{
												"body": {
													"nativeSrc": "2121:32:16",
													"nodeType": "YulBlock",
													"src": "2121:32:16",
													"statements": [
														{
															"nativeSrc": "2131:16:16",
															"nodeType": "YulAssignment",
															"src": "2131:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:16",
																"nodeType": "YulIdentifier",
																"src": "2142:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:16",
														"nodeType": "YulTypedName",
														"src": "2103:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:16",
														"nodeType": "YulTypedName",
														"src": "2113:7:16",
														"type": ""
													}
												],
												"src": "2076:77:16"
											},
											{
												"body": {
													"nativeSrc": "2202:79:16",
													"nodeType": "YulBlock",
													"src": "2202:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:16",
																"nodeType": "YulBlock",
																"src": "2259:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:16"
																			},
																			"nativeSrc": "2261:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:16"
																		},
																		"nativeSrc": "2261:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:16"
																				},
																				"nativeSrc": "2232:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:16"
																		},
																		"nativeSrc": "2222:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:16"
																},
																"nativeSrc": "2215:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:16"
															},
															"nativeSrc": "2212:63:16",
															"nodeType": "YulIf",
															"src": "2212:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:16",
														"nodeType": "YulTypedName",
														"src": "2195:5:16",
														"type": ""
													}
												],
												"src": "2159:122:16"
											},
											{
												"body": {
													"nativeSrc": "2339:87:16",
													"nodeType": "YulBlock",
													"src": "2339:87:16",
													"statements": [
														{
															"nativeSrc": "2349:29:16",
															"nodeType": "YulAssignment",
															"src": "2349:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:16"
																},
																"nativeSrc": "2358:20:16",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:16"
																},
																"nativeSrc": "2387:33:16",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:16"
															},
															"nativeSrc": "2387:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:16",
														"nodeType": "YulTypedName",
														"src": "2317:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:16",
														"nodeType": "YulTypedName",
														"src": "2325:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:16",
														"nodeType": "YulTypedName",
														"src": "2333:5:16",
														"type": ""
													}
												],
												"src": "2287:139:16"
											},
											{
												"body": {
													"nativeSrc": "2515:391:16",
													"nodeType": "YulBlock",
													"src": "2515:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:16",
																"nodeType": "YulBlock",
																"src": "2561:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:16"
																			},
																			"nativeSrc": "2563:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:16"
																		},
																		"nativeSrc": "2563:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:16"
																		},
																		"nativeSrc": "2532:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:16"
																},
																"nativeSrc": "2528:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:16"
															},
															"nativeSrc": "2525:119:16",
															"nodeType": "YulIf",
															"src": "2525:119:16"
														},
														{
															"nativeSrc": "2654:117:16",
															"nodeType": "YulBlock",
															"src": "2654:117:16",
															"statements": [
																{
																	"nativeSrc": "2669:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:16"
																				},
																				"nativeSrc": "2729:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:16"
																		},
																		"nativeSrc": "2708:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:16",
															"nodeType": "YulBlock",
															"src": "2781:118:16",
															"statements": [
																{
																	"nativeSrc": "2796:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:16",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:16"
																				},
																				"nativeSrc": "2857:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:16"
																		},
																		"nativeSrc": "2836:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:16",
														"nodeType": "YulTypedName",
														"src": "2477:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:16",
														"nodeType": "YulTypedName",
														"src": "2488:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:16",
														"nodeType": "YulTypedName",
														"src": "2500:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:16",
														"nodeType": "YulTypedName",
														"src": "2508:6:16",
														"type": ""
													}
												],
												"src": "2432:474:16"
											},
											{
												"body": {
													"nativeSrc": "2954:48:16",
													"nodeType": "YulBlock",
													"src": "2954:48:16",
													"statements": [
														{
															"nativeSrc": "2964:32:16",
															"nodeType": "YulAssignment",
															"src": "2964:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:16"
																		},
																		"nativeSrc": "2982:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:16"
																},
																"nativeSrc": "2975:21:16",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:16",
														"nodeType": "YulTypedName",
														"src": "2936:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:16",
														"nodeType": "YulTypedName",
														"src": "2946:7:16",
														"type": ""
													}
												],
												"src": "2912:90:16"
											},
											{
												"body": {
													"nativeSrc": "3067:50:16",
													"nodeType": "YulBlock",
													"src": "3067:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:16"
																		},
																		"nativeSrc": "3089:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:16"
																},
																"nativeSrc": "3077:34:16",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:16"
															},
															"nativeSrc": "3077:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:16",
														"nodeType": "YulTypedName",
														"src": "3055:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:16",
														"nodeType": "YulTypedName",
														"src": "3062:3:16",
														"type": ""
													}
												],
												"src": "3008:109:16"
											},
											{
												"body": {
													"nativeSrc": "3215:118:16",
													"nodeType": "YulBlock",
													"src": "3215:118:16",
													"statements": [
														{
															"nativeSrc": "3225:26:16",
															"nodeType": "YulAssignment",
															"src": "3225:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:16"
																},
																"nativeSrc": "3233:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:16"
																		},
																		"nativeSrc": "3308:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:16"
																},
																"nativeSrc": "3261:65:16",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:16"
															},
															"nativeSrc": "3261:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:16",
														"nodeType": "YulTypedName",
														"src": "3187:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:16",
														"nodeType": "YulTypedName",
														"src": "3199:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:16",
														"nodeType": "YulTypedName",
														"src": "3210:4:16",
														"type": ""
													}
												],
												"src": "3123:210:16"
											},
											{
												"body": {
													"nativeSrc": "3404:53:16",
													"nodeType": "YulBlock",
													"src": "3404:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:16"
																		},
																		"nativeSrc": "3426:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:16"
																},
																"nativeSrc": "3414:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:16"
															},
															"nativeSrc": "3414:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:16",
														"nodeType": "YulTypedName",
														"src": "3392:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:16",
														"nodeType": "YulTypedName",
														"src": "3399:3:16",
														"type": ""
													}
												],
												"src": "3339:118:16"
											},
											{
												"body": {
													"nativeSrc": "3561:124:16",
													"nodeType": "YulBlock",
													"src": "3561:124:16",
													"statements": [
														{
															"nativeSrc": "3571:26:16",
															"nodeType": "YulAssignment",
															"src": "3571:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:16"
																},
																"nativeSrc": "3579:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:16"
																		},
																		"nativeSrc": "3660:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:16"
																},
																"nativeSrc": "3607:71:16",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:16"
															},
															"nativeSrc": "3607:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:16",
														"nodeType": "YulTypedName",
														"src": "3533:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:16",
														"nodeType": "YulTypedName",
														"src": "3545:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:16",
														"nodeType": "YulTypedName",
														"src": "3556:4:16",
														"type": ""
													}
												],
												"src": "3463:222:16"
											},
											{
												"body": {
													"nativeSrc": "3791:519:16",
													"nodeType": "YulBlock",
													"src": "3791:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:16",
																"nodeType": "YulBlock",
																"src": "3837:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:16"
																			},
																			"nativeSrc": "3839:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:16"
																		},
																		"nativeSrc": "3839:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:16"
																		},
																		"nativeSrc": "3808:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:16"
																},
																"nativeSrc": "3804:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:16"
															},
															"nativeSrc": "3801:119:16",
															"nodeType": "YulIf",
															"src": "3801:119:16"
														},
														{
															"nativeSrc": "3930:117:16",
															"nodeType": "YulBlock",
															"src": "3930:117:16",
															"statements": [
																{
																	"nativeSrc": "3945:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:16"
																				},
																				"nativeSrc": "4005:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:16"
																		},
																		"nativeSrc": "3984:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:16",
															"nodeType": "YulBlock",
															"src": "4057:118:16",
															"statements": [
																{
																	"nativeSrc": "4072:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:16"
																				},
																				"nativeSrc": "4133:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:16"
																		},
																		"nativeSrc": "4112:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:16",
															"nodeType": "YulBlock",
															"src": "4185:118:16",
															"statements": [
																{
																	"nativeSrc": "4200:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:16"
																				},
																				"nativeSrc": "4261:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:16"
																		},
																		"nativeSrc": "4240:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:16",
														"nodeType": "YulTypedName",
														"src": "3745:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:16",
														"nodeType": "YulTypedName",
														"src": "3756:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:16",
														"nodeType": "YulTypedName",
														"src": "3768:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:16",
														"nodeType": "YulTypedName",
														"src": "3776:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:16",
														"nodeType": "YulTypedName",
														"src": "3784:6:16",
														"type": ""
													}
												],
												"src": "3691:619:16"
											},
											{
												"body": {
													"nativeSrc": "4359:43:16",
													"nodeType": "YulBlock",
													"src": "4359:43:16",
													"statements": [
														{
															"nativeSrc": "4369:27:16",
															"nodeType": "YulAssignment",
															"src": "4369:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:16",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:16"
																},
																"nativeSrc": "4380:16:16",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:16",
														"nodeType": "YulTypedName",
														"src": "4341:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:16",
														"nodeType": "YulTypedName",
														"src": "4351:7:16",
														"type": ""
													}
												],
												"src": "4316:86:16"
											},
											{
												"body": {
													"nativeSrc": "4469:51:16",
													"nodeType": "YulBlock",
													"src": "4469:51:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:16",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:16"
																		},
																		"nativeSrc": "4491:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:16"
																},
																"nativeSrc": "4479:35:16",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:16"
															},
															"nativeSrc": "4479:35:16",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:16"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:16",
														"nodeType": "YulTypedName",
														"src": "4457:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:16",
														"nodeType": "YulTypedName",
														"src": "4464:3:16",
														"type": ""
													}
												],
												"src": "4408:112:16"
											},
											{
												"body": {
													"nativeSrc": "4620:120:16",
													"nodeType": "YulBlock",
													"src": "4620:120:16",
													"statements": [
														{
															"nativeSrc": "4630:26:16",
															"nodeType": "YulAssignment",
															"src": "4630:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:16"
																},
																"nativeSrc": "4638:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:16"
																		},
																		"nativeSrc": "4715:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:16",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:16"
																},
																"nativeSrc": "4666:67:16",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:16"
															},
															"nativeSrc": "4666:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:16",
														"nodeType": "YulTypedName",
														"src": "4592:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:16",
														"nodeType": "YulTypedName",
														"src": "4604:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:16",
														"nodeType": "YulTypedName",
														"src": "4615:4:16",
														"type": ""
													}
												],
												"src": "4526:214:16"
											},
											{
												"body": {
													"nativeSrc": "4835:28:16",
													"nodeType": "YulBlock",
													"src": "4835:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4852:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4852:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4855:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4845:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:16"
																},
																"nativeSrc": "4845:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4845:12:16"
															},
															"nativeSrc": "4845:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "4845:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4746:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4746:117:16"
											},
											{
												"body": {
													"nativeSrc": "4958:28:16",
													"nodeType": "YulBlock",
													"src": "4958:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4975:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4975:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4978:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4978:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4968:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:16"
																},
																"nativeSrc": "4968:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4968:12:16"
															},
															"nativeSrc": "4968:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "4968:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4869:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4869:117:16"
											},
											{
												"body": {
													"nativeSrc": "5020:152:16",
													"nodeType": "YulBlock",
													"src": "5020:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5037:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5037:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:77:16",
																		"nodeType": "YulLiteral",
																		"src": "5040:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5030:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5030:6:16"
																},
																"nativeSrc": "5030:88:16",
																"nodeType": "YulFunctionCall",
																"src": "5030:88:16"
															},
															"nativeSrc": "5030:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "5030:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5134:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5134:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5137:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5137:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5127:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:16"
																},
																"nativeSrc": "5127:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5127:15:16"
															},
															"nativeSrc": "5127:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5127:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5158:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5161:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5161:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5151:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:16"
																},
																"nativeSrc": "5151:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5151:15:16"
															},
															"nativeSrc": "5151:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "5151:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4992:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4992:180:16"
											},
											{
												"body": {
													"nativeSrc": "5221:238:16",
													"nodeType": "YulBlock",
													"src": "5221:238:16",
													"statements": [
														{
															"nativeSrc": "5231:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5231:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5253:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5253:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5283:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "5283:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5261:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "5261:21:16"
																		},
																		"nativeSrc": "5261:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5261:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5249:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5249:3:16"
																},
																"nativeSrc": "5249:40:16",
																"nodeType": "YulFunctionCall",
																"src": "5249:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5235:10:16",
																	"nodeType": "YulTypedName",
																	"src": "5235:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5400:22:16",
																"nodeType": "YulBlock",
																"src": "5400:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5402:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5402:16:16"
																			},
																			"nativeSrc": "5402:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5402:18:16"
																		},
																		"nativeSrc": "5402:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5343:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5343:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5355:18:16",
																				"nodeType": "YulLiteral",
																				"src": "5355:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5340:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5340:2:16"
																		},
																		"nativeSrc": "5340:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5379:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "5379:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5391:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5391:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5376:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "5376:2:16"
																		},
																		"nativeSrc": "5376:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5337:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5337:2:16"
																},
																"nativeSrc": "5337:62:16",
																"nodeType": "YulFunctionCall",
																"src": "5337:62:16"
															},
															"nativeSrc": "5334:88:16",
															"nodeType": "YulIf",
															"src": "5334:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5438:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5438:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5442:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "5442:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5431:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:16"
																},
																"nativeSrc": "5431:22:16",
																"nodeType": "YulFunctionCall",
																"src": "5431:22:16"
															},
															"nativeSrc": "5431:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "5431:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5178:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5207:6:16",
														"nodeType": "YulTypedName",
														"src": "5207:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5215:4:16",
														"nodeType": "YulTypedName",
														"src": "5215:4:16",
														"type": ""
													}
												],
												"src": "5178:281:16"
											},
											{
												"body": {
													"nativeSrc": "5506:88:16",
													"nodeType": "YulBlock",
													"src": "5506:88:16",
													"statements": [
														{
															"nativeSrc": "5516:30:16",
															"nodeType": "YulAssignment",
															"src": "5516:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5526:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "5526:18:16"
																},
																"nativeSrc": "5526:20:16",
																"nodeType": "YulFunctionCall",
																"src": "5526:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5516:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5575:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5575:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5583:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5583:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5555:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "5555:19:16"
																},
																"nativeSrc": "5555:33:16",
																"nodeType": "YulFunctionCall",
																"src": "5555:33:16"
															},
															"nativeSrc": "5555:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "5555:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5465:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5490:4:16",
														"nodeType": "YulTypedName",
														"src": "5490:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5499:6:16",
														"nodeType": "YulTypedName",
														"src": "5499:6:16",
														"type": ""
													}
												],
												"src": "5465:129:16"
											},
											{
												"body": {
													"nativeSrc": "5666:241:16",
													"nodeType": "YulBlock",
													"src": "5666:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5771:22:16",
																"nodeType": "YulBlock",
																"src": "5771:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5773:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "5773:16:16"
																			},
																			"nativeSrc": "5773:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5773:18:16"
																		},
																		"nativeSrc": "5773:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5773:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5743:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5743:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5751:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5751:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5740:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5740:2:16"
																},
																"nativeSrc": "5740:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5740:30:16"
															},
															"nativeSrc": "5737:56:16",
															"nodeType": "YulIf",
															"src": "5737:56:16"
														},
														{
															"nativeSrc": "5803:37:16",
															"nodeType": "YulAssignment",
															"src": "5803:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5833:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5833:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5811:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "5811:21:16"
																},
																"nativeSrc": "5811:29:16",
																"nodeType": "YulFunctionCall",
																"src": "5811:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5803:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5803:4:16"
																}
															]
														},
														{
															"nativeSrc": "5877:23:16",
															"nodeType": "YulAssignment",
															"src": "5877:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5889:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5889:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5895:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5895:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5885:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5885:3:16"
																},
																"nativeSrc": "5885:15:16",
																"nodeType": "YulFunctionCall",
																"src": "5885:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5877:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "5877:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "5600:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5650:6:16",
														"nodeType": "YulTypedName",
														"src": "5650:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5661:4:16",
														"nodeType": "YulTypedName",
														"src": "5661:4:16",
														"type": ""
													}
												],
												"src": "5600:307:16"
											},
											{
												"body": {
													"nativeSrc": "5977:84:16",
													"nodeType": "YulBlock",
													"src": "5977:84:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6001:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6001:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6006:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6006:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6011:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6011:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5988:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "5988:12:16"
																},
																"nativeSrc": "5988:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5988:30:16"
															},
															"nativeSrc": "5988:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "5988:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6038:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6038:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6043:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6043:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6034:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6034:3:16"
																		},
																		"nativeSrc": "6034:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6034:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6052:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6052:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6027:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6027:6:16"
																},
																"nativeSrc": "6027:27:16",
																"nodeType": "YulFunctionCall",
																"src": "6027:27:16"
															},
															"nativeSrc": "6027:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "6027:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5913:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5959:3:16",
														"nodeType": "YulTypedName",
														"src": "5959:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5964:3:16",
														"nodeType": "YulTypedName",
														"src": "5964:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5969:6:16",
														"nodeType": "YulTypedName",
														"src": "5969:6:16",
														"type": ""
													}
												],
												"src": "5913:148:16"
											},
											{
												"body": {
													"nativeSrc": "6150:340:16",
													"nodeType": "YulBlock",
													"src": "6150:340:16",
													"statements": [
														{
															"nativeSrc": "6160:74:16",
															"nodeType": "YulAssignment",
															"src": "6160:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6226:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6226:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "6185:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "6185:40:16"
																		},
																		"nativeSrc": "6185:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6185:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6169:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "6169:15:16"
																},
																"nativeSrc": "6169:65:16",
																"nodeType": "YulFunctionCall",
																"src": "6169:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6160:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6160:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6250:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6250:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6257:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6257:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6243:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6243:6:16"
																},
																"nativeSrc": "6243:21:16",
																"nodeType": "YulFunctionCall",
																"src": "6243:21:16"
															},
															"nativeSrc": "6243:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "6243:21:16"
														},
														{
															"nativeSrc": "6273:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6273:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6288:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6288:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6295:4:16",
																		"nodeType": "YulLiteral",
																		"src": "6295:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6284:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6284:3:16"
																},
																"nativeSrc": "6284:16:16",
																"nodeType": "YulFunctionCall",
																"src": "6284:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6277:3:16",
																	"nodeType": "YulTypedName",
																	"src": "6277:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6338:83:16",
																"nodeType": "YulBlock",
																"src": "6338:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6340:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6340:77:16"
																			},
																			"nativeSrc": "6340:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6340:79:16"
																		},
																		"nativeSrc": "6340:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6340:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6319:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6319:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6324:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6324:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6315:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:16"
																		},
																		"nativeSrc": "6315:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6333:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6333:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6312:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6312:2:16"
																},
																"nativeSrc": "6312:25:16",
																"nodeType": "YulFunctionCall",
																"src": "6312:25:16"
															},
															"nativeSrc": "6309:112:16",
															"nodeType": "YulIf",
															"src": "6309:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6467:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6467:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6472:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6472:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6477:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6477:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6430:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "6430:36:16"
																},
																"nativeSrc": "6430:54:16",
																"nodeType": "YulFunctionCall",
																"src": "6430:54:16"
															},
															"nativeSrc": "6430:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "6430:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "6067:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6123:3:16",
														"nodeType": "YulTypedName",
														"src": "6123:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6128:6:16",
														"nodeType": "YulTypedName",
														"src": "6128:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6136:3:16",
														"nodeType": "YulTypedName",
														"src": "6136:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6144:5:16",
														"nodeType": "YulTypedName",
														"src": "6144:5:16",
														"type": ""
													}
												],
												"src": "6067:423:16"
											},
											{
												"body": {
													"nativeSrc": "6570:277:16",
													"nodeType": "YulBlock",
													"src": "6570:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6619:83:16",
																"nodeType": "YulBlock",
																"src": "6619:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6621:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6621:77:16"
																			},
																			"nativeSrc": "6621:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6621:79:16"
																		},
																		"nativeSrc": "6621:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6621:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6598:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6598:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6606:4:16",
																						"nodeType": "YulLiteral",
																						"src": "6606:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6594:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6594:3:16"
																				},
																				"nativeSrc": "6594:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6594:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6613:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6613:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6590:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6590:3:16"
																		},
																		"nativeSrc": "6590:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6590:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6583:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6583:6:16"
																},
																"nativeSrc": "6583:35:16",
																"nodeType": "YulFunctionCall",
																"src": "6583:35:16"
															},
															"nativeSrc": "6580:122:16",
															"nodeType": "YulIf",
															"src": "6580:122:16"
														},
														{
															"nativeSrc": "6711:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6711:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6738:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6738:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6725:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6725:12:16"
																},
																"nativeSrc": "6725:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6725:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6715:6:16",
																	"nodeType": "YulTypedName",
																	"src": "6715:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6754:87:16",
															"nodeType": "YulAssignment",
															"src": "6754:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6814:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6814:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6822:4:16",
																				"nodeType": "YulLiteral",
																				"src": "6822:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6810:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6810:3:16"
																		},
																		"nativeSrc": "6810:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6810:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6829:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6829:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6837:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6837:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "6763:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "6763:46:16"
																},
																"nativeSrc": "6763:78:16",
																"nodeType": "YulFunctionCall",
																"src": "6763:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6754:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6754:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "6509:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6548:6:16",
														"nodeType": "YulTypedName",
														"src": "6548:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6556:3:16",
														"nodeType": "YulTypedName",
														"src": "6556:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6564:5:16",
														"nodeType": "YulTypedName",
														"src": "6564:5:16",
														"type": ""
													}
												],
												"src": "6509:338:16"
											},
											{
												"body": {
													"nativeSrc": "6945:560:16",
													"nodeType": "YulBlock",
													"src": "6945:560:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6991:83:16",
																"nodeType": "YulBlock",
																"src": "6991:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6993:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6993:77:16"
																			},
																			"nativeSrc": "6993:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6993:79:16"
																		},
																		"nativeSrc": "6993:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6993:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6966:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6966:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6975:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6975:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6962:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6962:3:16"
																		},
																		"nativeSrc": "6962:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6962:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6987:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6987:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6958:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6958:3:16"
																},
																"nativeSrc": "6958:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6958:32:16"
															},
															"nativeSrc": "6955:119:16",
															"nodeType": "YulIf",
															"src": "6955:119:16"
														},
														{
															"nativeSrc": "7084:117:16",
															"nodeType": "YulBlock",
															"src": "7084:117:16",
															"statements": [
																{
																	"nativeSrc": "7099:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7099:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7113:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7113:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7103:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7103:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7128:63:16",
																	"nodeType": "YulAssignment",
																	"src": "7128:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7163:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7163:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7174:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7174:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7159:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7159:3:16"
																				},
																				"nativeSrc": "7159:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7159:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7183:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7183:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7138:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "7138:20:16"
																		},
																		"nativeSrc": "7138:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7138:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7128:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7128:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7211:287:16",
															"nodeType": "YulBlock",
															"src": "7211:287:16",
															"statements": [
																{
																	"nativeSrc": "7226:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7226:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7257:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7257:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7268:2:16",
																						"nodeType": "YulLiteral",
																						"src": "7268:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7253:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7253:3:16"
																				},
																				"nativeSrc": "7253:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7253:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7240:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "7240:12:16"
																		},
																		"nativeSrc": "7240:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7240:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7230:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7230:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7319:83:16",
																		"nodeType": "YulBlock",
																		"src": "7319:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7321:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "7321:77:16"
																					},
																					"nativeSrc": "7321:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7321:79:16"
																				},
																				"nativeSrc": "7321:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "7321:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7291:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7291:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7299:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7299:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7288:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7288:2:16"
																		},
																		"nativeSrc": "7288:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7288:30:16"
																	},
																	"nativeSrc": "7285:117:16",
																	"nodeType": "YulIf",
																	"src": "7285:117:16"
																},
																{
																	"nativeSrc": "7416:72:16",
																	"nodeType": "YulAssignment",
																	"src": "7416:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7460:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7460:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7471:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7471:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7456:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7456:3:16"
																				},
																				"nativeSrc": "7456:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7456:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7480:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7480:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "7426:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "7426:29:16"
																		},
																		"nativeSrc": "7426:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7426:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7416:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7416:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "6853:652:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6907:9:16",
														"nodeType": "YulTypedName",
														"src": "6907:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6918:7:16",
														"nodeType": "YulTypedName",
														"src": "6918:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6930:6:16",
														"nodeType": "YulTypedName",
														"src": "6930:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6938:6:16",
														"nodeType": "YulTypedName",
														"src": "6938:6:16",
														"type": ""
													}
												],
												"src": "6853:652:16"
											},
											{
												"body": {
													"nativeSrc": "7556:32:16",
													"nodeType": "YulBlock",
													"src": "7556:32:16",
													"statements": [
														{
															"nativeSrc": "7566:16:16",
															"nodeType": "YulAssignment",
															"src": "7566:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "7577:5:16",
																"nodeType": "YulIdentifier",
																"src": "7577:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7566:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "7566:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "7511:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7538:5:16",
														"nodeType": "YulTypedName",
														"src": "7538:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7548:7:16",
														"nodeType": "YulTypedName",
														"src": "7548:7:16",
														"type": ""
													}
												],
												"src": "7511:77:16"
											},
											{
												"body": {
													"nativeSrc": "7659:53:16",
													"nodeType": "YulBlock",
													"src": "7659:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7676:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7676:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7699:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "7699:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "7681:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "7681:17:16"
																		},
																		"nativeSrc": "7681:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7681:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7669:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7669:6:16"
																},
																"nativeSrc": "7669:37:16",
																"nodeType": "YulFunctionCall",
																"src": "7669:37:16"
															},
															"nativeSrc": "7669:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "7669:37:16"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "7594:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7647:5:16",
														"nodeType": "YulTypedName",
														"src": "7647:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7654:3:16",
														"nodeType": "YulTypedName",
														"src": "7654:3:16",
														"type": ""
													}
												],
												"src": "7594:118:16"
											},
											{
												"body": {
													"nativeSrc": "7816:124:16",
													"nodeType": "YulBlock",
													"src": "7816:124:16",
													"statements": [
														{
															"nativeSrc": "7826:26:16",
															"nodeType": "YulAssignment",
															"src": "7826:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7838:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7838:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7849:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7849:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7834:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7834:3:16"
																},
																"nativeSrc": "7834:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7834:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7826:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7826:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7906:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7906:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7919:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7919:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7930:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7930:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7915:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7915:3:16"
																		},
																		"nativeSrc": "7915:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7915:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "7862:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "7862:43:16"
																},
																"nativeSrc": "7862:71:16",
																"nodeType": "YulFunctionCall",
																"src": "7862:71:16"
															},
															"nativeSrc": "7862:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "7862:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "7718:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7788:9:16",
														"nodeType": "YulTypedName",
														"src": "7788:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7800:6:16",
														"nodeType": "YulTypedName",
														"src": "7800:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7811:4:16",
														"nodeType": "YulTypedName",
														"src": "7811:4:16",
														"type": ""
													}
												],
												"src": "7718:222:16"
											},
											{
												"body": {
													"nativeSrc": "8012:263:16",
													"nodeType": "YulBlock",
													"src": "8012:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8058:83:16",
																"nodeType": "YulBlock",
																"src": "8058:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8060:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8060:77:16"
																			},
																			"nativeSrc": "8060:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8060:79:16"
																		},
																		"nativeSrc": "8060:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8060:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8033:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8033:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8042:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8042:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8029:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8029:3:16"
																		},
																		"nativeSrc": "8029:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8029:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8054:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8054:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8025:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8025:3:16"
																},
																"nativeSrc": "8025:32:16",
																"nodeType": "YulFunctionCall",
																"src": "8025:32:16"
															},
															"nativeSrc": "8022:119:16",
															"nodeType": "YulIf",
															"src": "8022:119:16"
														},
														{
															"nativeSrc": "8151:117:16",
															"nodeType": "YulBlock",
															"src": "8151:117:16",
															"statements": [
																{
																	"nativeSrc": "8166:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8166:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8180:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8180:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8170:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8170:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8195:63:16",
																	"nodeType": "YulAssignment",
																	"src": "8195:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8230:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8230:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8241:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8241:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8226:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8226:3:16"
																				},
																				"nativeSrc": "8226:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8226:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8250:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8250:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8205:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "8205:20:16"
																		},
																		"nativeSrc": "8205:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8205:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8195:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8195:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7946:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7982:9:16",
														"nodeType": "YulTypedName",
														"src": "7982:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7993:7:16",
														"nodeType": "YulTypedName",
														"src": "7993:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8005:6:16",
														"nodeType": "YulTypedName",
														"src": "8005:6:16",
														"type": ""
													}
												],
												"src": "7946:329:16"
											},
											{
												"body": {
													"nativeSrc": "8346:53:16",
													"nodeType": "YulBlock",
													"src": "8346:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8363:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8363:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8386:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "8386:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8368:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "8368:17:16"
																		},
																		"nativeSrc": "8368:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8368:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8356:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8356:6:16"
																},
																"nativeSrc": "8356:37:16",
																"nodeType": "YulFunctionCall",
																"src": "8356:37:16"
															},
															"nativeSrc": "8356:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "8356:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8281:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8334:5:16",
														"nodeType": "YulTypedName",
														"src": "8334:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8341:3:16",
														"nodeType": "YulTypedName",
														"src": "8341:3:16",
														"type": ""
													}
												],
												"src": "8281:118:16"
											},
											{
												"body": {
													"nativeSrc": "8503:124:16",
													"nodeType": "YulBlock",
													"src": "8503:124:16",
													"statements": [
														{
															"nativeSrc": "8513:26:16",
															"nodeType": "YulAssignment",
															"src": "8513:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8525:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "8525:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8536:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8536:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8521:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8521:3:16"
																},
																"nativeSrc": "8521:18:16",
																"nodeType": "YulFunctionCall",
																"src": "8521:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8513:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8513:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8593:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8593:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8606:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8606:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8617:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8617:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8602:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8602:3:16"
																		},
																		"nativeSrc": "8602:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8602:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8549:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "8549:43:16"
																},
																"nativeSrc": "8549:71:16",
																"nodeType": "YulFunctionCall",
																"src": "8549:71:16"
															},
															"nativeSrc": "8549:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "8549:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8405:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8475:9:16",
														"nodeType": "YulTypedName",
														"src": "8475:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8487:6:16",
														"nodeType": "YulTypedName",
														"src": "8487:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8498:4:16",
														"nodeType": "YulTypedName",
														"src": "8498:4:16",
														"type": ""
													}
												],
												"src": "8405:222:16"
											},
											{
												"body": {
													"nativeSrc": "8716:391:16",
													"nodeType": "YulBlock",
													"src": "8716:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8762:83:16",
																"nodeType": "YulBlock",
																"src": "8762:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8764:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8764:77:16"
																			},
																			"nativeSrc": "8764:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8764:79:16"
																		},
																		"nativeSrc": "8764:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8764:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8737:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8737:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8746:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8746:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8733:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8733:3:16"
																		},
																		"nativeSrc": "8733:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8733:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8758:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8758:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8729:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8729:3:16"
																},
																"nativeSrc": "8729:32:16",
																"nodeType": "YulFunctionCall",
																"src": "8729:32:16"
															},
															"nativeSrc": "8726:119:16",
															"nodeType": "YulIf",
															"src": "8726:119:16"
														},
														{
															"nativeSrc": "8855:117:16",
															"nodeType": "YulBlock",
															"src": "8855:117:16",
															"statements": [
																{
																	"nativeSrc": "8870:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8870:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8884:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8884:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8874:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8874:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8899:63:16",
																	"nodeType": "YulAssignment",
																	"src": "8899:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8934:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8934:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8945:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8945:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8930:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8930:3:16"
																				},
																				"nativeSrc": "8930:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8930:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8954:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8954:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8909:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "8909:20:16"
																		},
																		"nativeSrc": "8909:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8909:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8899:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8899:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8982:118:16",
															"nodeType": "YulBlock",
															"src": "8982:118:16",
															"statements": [
																{
																	"nativeSrc": "8997:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8997:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9011:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9011:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9001:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9001:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9027:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9027:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9062:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9062:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9073:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9073:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9058:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9058:3:16"
																				},
																				"nativeSrc": "9058:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9058:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9082:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9082:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9037:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9037:20:16"
																		},
																		"nativeSrc": "9037:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9037:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9027:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9027:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8633:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8678:9:16",
														"nodeType": "YulTypedName",
														"src": "8678:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8689:7:16",
														"nodeType": "YulTypedName",
														"src": "8689:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8701:6:16",
														"nodeType": "YulTypedName",
														"src": "8701:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8709:6:16",
														"nodeType": "YulTypedName",
														"src": "8709:6:16",
														"type": ""
													}
												],
												"src": "8633:474:16"
											},
											{
												"body": {
													"nativeSrc": "9141:152:16",
													"nodeType": "YulBlock",
													"src": "9141:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9158:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9158:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9161:77:16",
																		"nodeType": "YulLiteral",
																		"src": "9161:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9151:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9151:6:16"
																},
																"nativeSrc": "9151:88:16",
																"nodeType": "YulFunctionCall",
																"src": "9151:88:16"
															},
															"nativeSrc": "9151:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "9151:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9255:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9255:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9258:4:16",
																		"nodeType": "YulLiteral",
																		"src": "9258:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9248:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9248:6:16"
																},
																"nativeSrc": "9248:15:16",
																"nodeType": "YulFunctionCall",
																"src": "9248:15:16"
															},
															"nativeSrc": "9248:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "9248:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9279:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9279:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9282:4:16",
																		"nodeType": "YulLiteral",
																		"src": "9282:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9272:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9272:6:16"
																},
																"nativeSrc": "9272:15:16",
																"nodeType": "YulFunctionCall",
																"src": "9272:15:16"
															},
															"nativeSrc": "9272:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "9272:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9113:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "9113:180:16"
											},
											{
												"body": {
													"nativeSrc": "9350:269:16",
													"nodeType": "YulBlock",
													"src": "9350:269:16",
													"statements": [
														{
															"nativeSrc": "9360:22:16",
															"nodeType": "YulAssignment",
															"src": "9360:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9374:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "9374:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9380:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9380:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9370:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9370:3:16"
																},
																"nativeSrc": "9370:12:16",
																"nodeType": "YulFunctionCall",
																"src": "9370:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9360:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9360:6:16"
																}
															]
														},
														{
															"nativeSrc": "9391:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "9391:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9421:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "9421:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9427:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9427:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9417:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9417:3:16"
																},
																"nativeSrc": "9417:12:16",
																"nodeType": "YulFunctionCall",
																"src": "9417:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9395:18:16",
																	"nodeType": "YulTypedName",
																	"src": "9395:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9468:51:16",
																"nodeType": "YulBlock",
																"src": "9468:51:16",
																"statements": [
																	{
																		"nativeSrc": "9482:27:16",
																		"nodeType": "YulAssignment",
																		"src": "9482:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9496:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "9496:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9504:4:16",
																					"nodeType": "YulLiteral",
																					"src": "9504:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9492:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "9492:3:16"
																			},
																			"nativeSrc": "9492:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9492:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9482:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9482:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9448:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "9448:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9441:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9441:6:16"
																},
																"nativeSrc": "9441:26:16",
																"nodeType": "YulFunctionCall",
																"src": "9441:26:16"
															},
															"nativeSrc": "9438:81:16",
															"nodeType": "YulIf",
															"src": "9438:81:16"
														},
														{
															"body": {
																"nativeSrc": "9571:42:16",
																"nodeType": "YulBlock",
																"src": "9571:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9585:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "9585:16:16"
																			},
																			"nativeSrc": "9585:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9585:18:16"
																		},
																		"nativeSrc": "9585:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9585:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9535:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "9535:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9558:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9558:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9566:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9566:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9555:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "9555:2:16"
																		},
																		"nativeSrc": "9555:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9555:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9532:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "9532:2:16"
																},
																"nativeSrc": "9532:38:16",
																"nodeType": "YulFunctionCall",
																"src": "9532:38:16"
															},
															"nativeSrc": "9529:84:16",
															"nodeType": "YulIf",
															"src": "9529:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9299:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9334:4:16",
														"nodeType": "YulTypedName",
														"src": "9334:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9343:6:16",
														"nodeType": "YulTypedName",
														"src": "9343:6:16",
														"type": ""
													}
												],
												"src": "9299:320:16"
											},
											{
												"body": {
													"nativeSrc": "9678:32:16",
													"nodeType": "YulBlock",
													"src": "9678:32:16",
													"statements": [
														{
															"nativeSrc": "9688:16:16",
															"nodeType": "YulAssignment",
															"src": "9688:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "9699:5:16",
																"nodeType": "YulIdentifier",
																"src": "9699:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9688:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "9688:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "9625:85:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9660:5:16",
														"nodeType": "YulTypedName",
														"src": "9660:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9670:7:16",
														"nodeType": "YulTypedName",
														"src": "9670:7:16",
														"type": ""
													}
												],
												"src": "9625:85:16"
											},
											{
												"body": {
													"nativeSrc": "9760:57:16",
													"nodeType": "YulBlock",
													"src": "9760:57:16",
													"statements": [
														{
															"nativeSrc": "9770:41:16",
															"nodeType": "YulAssignment",
															"src": "9770:41:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9785:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "9785:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9792:18:16",
																		"nodeType": "YulLiteral",
																		"src": "9792:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9781:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9781:3:16"
																},
																"nativeSrc": "9781:30:16",
																"nodeType": "YulFunctionCall",
																"src": "9781:30:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9770:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "9770:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "9716:101:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9742:5:16",
														"nodeType": "YulTypedName",
														"src": "9742:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9752:7:16",
														"nodeType": "YulTypedName",
														"src": "9752:7:16",
														"type": ""
													}
												],
												"src": "9716:101:16"
											},
											{
												"body": {
													"nativeSrc": "9855:28:16",
													"nodeType": "YulBlock",
													"src": "9855:28:16",
													"statements": [
														{
															"nativeSrc": "9865:12:16",
															"nodeType": "YulAssignment",
															"src": "9865:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "9872:5:16",
																"nodeType": "YulIdentifier",
																"src": "9872:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9865:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9865:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9823:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9841:5:16",
														"nodeType": "YulTypedName",
														"src": "9841:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9851:3:16",
														"nodeType": "YulTypedName",
														"src": "9851:3:16",
														"type": ""
													}
												],
												"src": "9823:60:16"
											},
											{
												"body": {
													"nativeSrc": "9956:89:16",
													"nodeType": "YulBlock",
													"src": "9956:89:16",
													"statements": [
														{
															"nativeSrc": "9966:73:16",
															"nodeType": "YulAssignment",
															"src": "9966:73:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10031:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "10031:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "10005:25:16",
																					"nodeType": "YulIdentifier",
																					"src": "10005:25:16"
																				},
																				"nativeSrc": "10005:32:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10005:32:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9996:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "9996:8:16"
																		},
																		"nativeSrc": "9996:42:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9996:42:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "9979:16:16",
																	"nodeType": "YulIdentifier",
																	"src": "9979:16:16"
																},
																"nativeSrc": "9979:60:16",
																"nodeType": "YulFunctionCall",
																"src": "9979:60:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9966:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "9966:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "9889:156:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9936:5:16",
														"nodeType": "YulTypedName",
														"src": "9936:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9946:9:16",
														"nodeType": "YulTypedName",
														"src": "9946:9:16",
														"type": ""
													}
												],
												"src": "9889:156:16"
											},
											{
												"body": {
													"nativeSrc": "10123:73:16",
													"nodeType": "YulBlock",
													"src": "10123:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10140:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10140:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10183:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "10183:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "10145:37:16",
																			"nodeType": "YulIdentifier",
																			"src": "10145:37:16"
																		},
																		"nativeSrc": "10145:44:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10145:44:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10133:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10133:6:16"
																},
																"nativeSrc": "10133:57:16",
																"nodeType": "YulFunctionCall",
																"src": "10133:57:16"
															},
															"nativeSrc": "10133:57:16",
															"nodeType": "YulExpressionStatement",
															"src": "10133:57:16"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "10051:145:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10111:5:16",
														"nodeType": "YulTypedName",
														"src": "10111:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10118:3:16",
														"nodeType": "YulTypedName",
														"src": "10118:3:16",
														"type": ""
													}
												],
												"src": "10051:145:16"
											},
											{
												"body": {
													"nativeSrc": "10307:131:16",
													"nodeType": "YulBlock",
													"src": "10307:131:16",
													"statements": [
														{
															"nativeSrc": "10317:26:16",
															"nodeType": "YulAssignment",
															"src": "10317:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10329:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10329:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10340:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10340:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10325:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10325:3:16"
																},
																"nativeSrc": "10325:18:16",
																"nodeType": "YulFunctionCall",
																"src": "10325:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10317:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10317:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10404:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10404:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10417:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10417:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10428:1:16",
																				"nodeType": "YulLiteral",
																				"src": "10428:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10413:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10413:3:16"
																		},
																		"nativeSrc": "10413:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10413:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "10353:50:16",
																	"nodeType": "YulIdentifier",
																	"src": "10353:50:16"
																},
																"nativeSrc": "10353:78:16",
																"nodeType": "YulFunctionCall",
																"src": "10353:78:16"
															},
															"nativeSrc": "10353:78:16",
															"nodeType": "YulExpressionStatement",
															"src": "10353:78:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "10202:236:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10279:9:16",
														"nodeType": "YulTypedName",
														"src": "10279:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10291:6:16",
														"nodeType": "YulTypedName",
														"src": "10291:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10302:4:16",
														"nodeType": "YulTypedName",
														"src": "10302:4:16",
														"type": ""
													}
												],
												"src": "10202:236:16"
											},
											{
												"body": {
													"nativeSrc": "10598:288:16",
													"nodeType": "YulBlock",
													"src": "10598:288:16",
													"statements": [
														{
															"nativeSrc": "10608:26:16",
															"nodeType": "YulAssignment",
															"src": "10608:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10620:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "10620:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10631:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10631:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10616:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10616:3:16"
																},
																"nativeSrc": "10616:18:16",
																"nodeType": "YulFunctionCall",
																"src": "10616:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10608:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10608:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10688:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10688:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10701:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10701:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10712:1:16",
																				"nodeType": "YulLiteral",
																				"src": "10712:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10697:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10697:3:16"
																		},
																		"nativeSrc": "10697:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10697:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10644:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "10644:43:16"
																},
																"nativeSrc": "10644:71:16",
																"nodeType": "YulFunctionCall",
																"src": "10644:71:16"
															},
															"nativeSrc": "10644:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "10644:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10769:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10769:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10782:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10782:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10793:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10793:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10778:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10778:3:16"
																		},
																		"nativeSrc": "10778:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10778:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10725:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "10725:43:16"
																},
																"nativeSrc": "10725:72:16",
																"nodeType": "YulFunctionCall",
																"src": "10725:72:16"
															},
															"nativeSrc": "10725:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "10725:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10851:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10851:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10864:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10864:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10875:2:16",
																				"nodeType": "YulLiteral",
																				"src": "10875:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10860:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10860:3:16"
																		},
																		"nativeSrc": "10860:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10860:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10807:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "10807:43:16"
																},
																"nativeSrc": "10807:72:16",
																"nodeType": "YulFunctionCall",
																"src": "10807:72:16"
															},
															"nativeSrc": "10807:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "10807:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10444:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10554:9:16",
														"nodeType": "YulTypedName",
														"src": "10554:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10566:6:16",
														"nodeType": "YulTypedName",
														"src": "10566:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10574:6:16",
														"nodeType": "YulTypedName",
														"src": "10574:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10582:6:16",
														"nodeType": "YulTypedName",
														"src": "10582:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10593:4:16",
														"nodeType": "YulTypedName",
														"src": "10593:4:16",
														"type": ""
													}
												],
												"src": "10444:442:16"
											},
											{
												"body": {
													"nativeSrc": "10935:79:16",
													"nodeType": "YulBlock",
													"src": "10935:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10992:16:16",
																"nodeType": "YulBlock",
																"src": "10992:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11001:1:16",
																					"nodeType": "YulLiteral",
																					"src": "11001:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11004:1:16",
																					"nodeType": "YulLiteral",
																					"src": "11004:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10994:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10994:6:16"
																			},
																			"nativeSrc": "10994:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10994:12:16"
																		},
																		"nativeSrc": "10994:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10994:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10958:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "10958:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10983:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "10983:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "10965:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "10965:17:16"
																				},
																				"nativeSrc": "10965:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10965:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10955:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "10955:2:16"
																		},
																		"nativeSrc": "10955:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10955:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10948:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10948:6:16"
																},
																"nativeSrc": "10948:43:16",
																"nodeType": "YulFunctionCall",
																"src": "10948:43:16"
															},
															"nativeSrc": "10945:63:16",
															"nodeType": "YulIf",
															"src": "10945:63:16"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "10892:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10928:5:16",
														"nodeType": "YulTypedName",
														"src": "10928:5:16",
														"type": ""
													}
												],
												"src": "10892:122:16"
											},
											{
												"body": {
													"nativeSrc": "11083:80:16",
													"nodeType": "YulBlock",
													"src": "11083:80:16",
													"statements": [
														{
															"nativeSrc": "11093:22:16",
															"nodeType": "YulAssignment",
															"src": "11093:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11108:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11108:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11102:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11102:5:16"
																},
																"nativeSrc": "11102:13:16",
																"nodeType": "YulFunctionCall",
																"src": "11102:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11093:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11093:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11151:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "11151:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "11124:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "11124:26:16"
																},
																"nativeSrc": "11124:33:16",
																"nodeType": "YulFunctionCall",
																"src": "11124:33:16"
															},
															"nativeSrc": "11124:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "11124:33:16"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "11020:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11061:6:16",
														"nodeType": "YulTypedName",
														"src": "11061:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11069:3:16",
														"nodeType": "YulTypedName",
														"src": "11069:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11077:5:16",
														"nodeType": "YulTypedName",
														"src": "11077:5:16",
														"type": ""
													}
												],
												"src": "11020:143:16"
											},
											{
												"body": {
													"nativeSrc": "11246:274:16",
													"nodeType": "YulBlock",
													"src": "11246:274:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11292:83:16",
																"nodeType": "YulBlock",
																"src": "11292:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11294:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11294:77:16"
																			},
																			"nativeSrc": "11294:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11294:79:16"
																		},
																		"nativeSrc": "11294:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11294:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11267:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11267:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11276:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11276:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11263:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11263:3:16"
																		},
																		"nativeSrc": "11263:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11263:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11288:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11288:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11259:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11259:3:16"
																},
																"nativeSrc": "11259:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11259:32:16"
															},
															"nativeSrc": "11256:119:16",
															"nodeType": "YulIf",
															"src": "11256:119:16"
														},
														{
															"nativeSrc": "11385:128:16",
															"nodeType": "YulBlock",
															"src": "11385:128:16",
															"statements": [
																{
																	"nativeSrc": "11400:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11400:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11414:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11414:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11404:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11404:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11429:74:16",
																	"nodeType": "YulAssignment",
																	"src": "11429:74:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11475:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11475:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11486:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11486:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11471:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11471:3:16"
																				},
																				"nativeSrc": "11471:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11471:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11495:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11495:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "11439:31:16",
																			"nodeType": "YulIdentifier",
																			"src": "11439:31:16"
																		},
																		"nativeSrc": "11439:64:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11439:64:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11429:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11429:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "11169:351:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11216:9:16",
														"nodeType": "YulTypedName",
														"src": "11216:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11227:7:16",
														"nodeType": "YulTypedName",
														"src": "11227:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11239:6:16",
														"nodeType": "YulTypedName",
														"src": "11239:6:16",
														"type": ""
													}
												],
												"src": "11169:351:16"
											},
											{
												"body": {
													"nativeSrc": "11554:152:16",
													"nodeType": "YulBlock",
													"src": "11554:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11571:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11571:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11574:77:16",
																		"nodeType": "YulLiteral",
																		"src": "11574:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11564:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11564:6:16"
																},
																"nativeSrc": "11564:88:16",
																"nodeType": "YulFunctionCall",
																"src": "11564:88:16"
															},
															"nativeSrc": "11564:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "11564:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11668:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11668:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11671:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11671:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11661:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11661:6:16"
																},
																"nativeSrc": "11661:15:16",
																"nodeType": "YulFunctionCall",
																"src": "11661:15:16"
															},
															"nativeSrc": "11661:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "11661:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11692:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11692:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11695:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11695:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11685:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11685:6:16"
																},
																"nativeSrc": "11685:15:16",
																"nodeType": "YulFunctionCall",
																"src": "11685:15:16"
															},
															"nativeSrc": "11685:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "11685:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11526:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "11526:180:16"
											},
											{
												"body": {
													"nativeSrc": "11756:147:16",
													"nodeType": "YulBlock",
													"src": "11756:147:16",
													"statements": [
														{
															"nativeSrc": "11766:25:16",
															"nodeType": "YulAssignment",
															"src": "11766:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11789:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "11789:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11771:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "11771:17:16"
																},
																"nativeSrc": "11771:20:16",
																"nodeType": "YulFunctionCall",
																"src": "11771:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11766:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "11766:1:16"
																}
															]
														},
														{
															"nativeSrc": "11800:25:16",
															"nodeType": "YulAssignment",
															"src": "11800:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11823:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "11823:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11805:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "11805:17:16"
																},
																"nativeSrc": "11805:20:16",
																"nodeType": "YulFunctionCall",
																"src": "11805:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11800:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "11800:1:16"
																}
															]
														},
														{
															"nativeSrc": "11834:16:16",
															"nodeType": "YulAssignment",
															"src": "11834:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11845:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "11845:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11848:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "11848:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11841:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11841:3:16"
																},
																"nativeSrc": "11841:9:16",
																"nodeType": "YulFunctionCall",
																"src": "11841:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11834:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11834:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11874:22:16",
																"nodeType": "YulBlock",
																"src": "11874:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11876:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "11876:16:16"
																			},
																			"nativeSrc": "11876:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11876:18:16"
																		},
																		"nativeSrc": "11876:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11876:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11866:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "11866:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11869:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11869:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11863:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "11863:2:16"
																},
																"nativeSrc": "11863:10:16",
																"nodeType": "YulFunctionCall",
																"src": "11863:10:16"
															},
															"nativeSrc": "11860:36:16",
															"nodeType": "YulIf",
															"src": "11860:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11712:191:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11743:1:16",
														"nodeType": "YulTypedName",
														"src": "11743:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11746:1:16",
														"nodeType": "YulTypedName",
														"src": "11746:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11752:3:16",
														"nodeType": "YulTypedName",
														"src": "11752:3:16",
														"type": ""
													}
												],
												"src": "11712:191:16"
											},
											{
												"body": {
													"nativeSrc": "11963:87:16",
													"nodeType": "YulBlock",
													"src": "11963:87:16",
													"statements": [
														{
															"nativeSrc": "11973:11:16",
															"nodeType": "YulAssignment",
															"src": "11973:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "11981:3:16",
																"nodeType": "YulIdentifier",
																"src": "11981:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11973:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "11973:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12001:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12001:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "12004:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "12004:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11994:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11994:6:16"
																},
																"nativeSrc": "11994:14:16",
																"nodeType": "YulFunctionCall",
																"src": "11994:14:16"
															},
															"nativeSrc": "11994:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "11994:14:16"
														},
														{
															"nativeSrc": "12017:26:16",
															"nodeType": "YulAssignment",
															"src": "12017:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12035:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12035:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12038:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12038:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "12025:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "12025:9:16"
																},
																"nativeSrc": "12025:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12025:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12017:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12017:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "11909:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11950:3:16",
														"nodeType": "YulTypedName",
														"src": "11950:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11958:4:16",
														"nodeType": "YulTypedName",
														"src": "11958:4:16",
														"type": ""
													}
												],
												"src": "11909:141:16"
											},
											{
												"body": {
													"nativeSrc": "12100:49:16",
													"nodeType": "YulBlock",
													"src": "12100:49:16",
													"statements": [
														{
															"nativeSrc": "12110:33:16",
															"nodeType": "YulAssignment",
															"src": "12110:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12128:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "12128:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12135:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12135:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12124:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12124:3:16"
																		},
																		"nativeSrc": "12124:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12124:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12140:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12140:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12120:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12120:3:16"
																},
																"nativeSrc": "12120:23:16",
																"nodeType": "YulFunctionCall",
																"src": "12120:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12110:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12110:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "12056:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12083:5:16",
														"nodeType": "YulTypedName",
														"src": "12083:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12093:6:16",
														"nodeType": "YulTypedName",
														"src": "12093:6:16",
														"type": ""
													}
												],
												"src": "12056:93:16"
											},
											{
												"body": {
													"nativeSrc": "12208:54:16",
													"nodeType": "YulBlock",
													"src": "12208:54:16",
													"statements": [
														{
															"nativeSrc": "12218:37:16",
															"nodeType": "YulAssignment",
															"src": "12218:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "12243:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12243:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12249:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "12249:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "12239:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12239:3:16"
																},
																"nativeSrc": "12239:16:16",
																"nodeType": "YulFunctionCall",
																"src": "12239:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "12218:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "12218:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "12155:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "12183:4:16",
														"nodeType": "YulTypedName",
														"src": "12183:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "12189:5:16",
														"nodeType": "YulTypedName",
														"src": "12189:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "12199:8:16",
														"nodeType": "YulTypedName",
														"src": "12199:8:16",
														"type": ""
													}
												],
												"src": "12155:107:16"
											},
											{
												"body": {
													"nativeSrc": "12344:317:16",
													"nodeType": "YulBlock",
													"src": "12344:317:16",
													"statements": [
														{
															"nativeSrc": "12354:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12354:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "12375:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "12375:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12387:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12387:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12371:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12371:3:16"
																},
																"nativeSrc": "12371:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12371:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "12358:9:16",
																	"nodeType": "YulTypedName",
																	"src": "12358:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12398:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12398:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "12429:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12429:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12440:66:16",
																		"nodeType": "YulLiteral",
																		"src": "12440:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "12410:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "12410:18:16"
																},
																"nativeSrc": "12410:97:16",
																"nodeType": "YulFunctionCall",
																"src": "12410:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "12402:4:16",
																	"nodeType": "YulTypedName",
																	"src": "12402:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12516:51:16",
															"nodeType": "YulAssignment",
															"src": "12516:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "12547:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12547:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "12558:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "12558:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "12528:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "12528:18:16"
																},
																"nativeSrc": "12528:39:16",
																"nodeType": "YulFunctionCall",
																"src": "12528:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "12516:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "12516:8:16"
																}
															]
														},
														{
															"nativeSrc": "12576:30:16",
															"nodeType": "YulAssignment",
															"src": "12576:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12589:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "12589:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "12600:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "12600:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "12596:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12596:3:16"
																		},
																		"nativeSrc": "12596:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12596:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12585:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12585:3:16"
																},
																"nativeSrc": "12585:21:16",
																"nodeType": "YulFunctionCall",
																"src": "12585:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12576:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "12576:5:16"
																}
															]
														},
														{
															"nativeSrc": "12615:40:16",
															"nodeType": "YulAssignment",
															"src": "12615:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12628:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "12628:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "12639:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "12639:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "12649:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "12649:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12635:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12635:3:16"
																		},
																		"nativeSrc": "12635:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12635:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12625:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "12625:2:16"
																},
																"nativeSrc": "12625:30:16",
																"nodeType": "YulFunctionCall",
																"src": "12625:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12615:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12615:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "12268:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12305:5:16",
														"nodeType": "YulTypedName",
														"src": "12305:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "12312:10:16",
														"nodeType": "YulTypedName",
														"src": "12312:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "12324:8:16",
														"nodeType": "YulTypedName",
														"src": "12324:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12337:6:16",
														"nodeType": "YulTypedName",
														"src": "12337:6:16",
														"type": ""
													}
												],
												"src": "12268:393:16"
											},
											{
												"body": {
													"nativeSrc": "12727:82:16",
													"nodeType": "YulBlock",
													"src": "12727:82:16",
													"statements": [
														{
															"nativeSrc": "12737:66:16",
															"nodeType": "YulAssignment",
															"src": "12737:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12795:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "12795:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "12777:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "12777:17:16"
																				},
																				"nativeSrc": "12777:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12777:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "12768:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "12768:8:16"
																		},
																		"nativeSrc": "12768:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12768:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12750:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "12750:17:16"
																},
																"nativeSrc": "12750:53:16",
																"nodeType": "YulFunctionCall",
																"src": "12750:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "12737:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "12737:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "12667:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12707:5:16",
														"nodeType": "YulTypedName",
														"src": "12707:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "12717:9:16",
														"nodeType": "YulTypedName",
														"src": "12717:9:16",
														"type": ""
													}
												],
												"src": "12667:142:16"
											},
											{
												"body": {
													"nativeSrc": "12862:28:16",
													"nodeType": "YulBlock",
													"src": "12862:28:16",
													"statements": [
														{
															"nativeSrc": "12872:12:16",
															"nodeType": "YulAssignment",
															"src": "12872:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "12879:5:16",
																"nodeType": "YulIdentifier",
																"src": "12879:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12872:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12872:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "12815:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12848:5:16",
														"nodeType": "YulTypedName",
														"src": "12848:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12858:3:16",
														"nodeType": "YulTypedName",
														"src": "12858:3:16",
														"type": ""
													}
												],
												"src": "12815:75:16"
											},
											{
												"body": {
													"nativeSrc": "12972:193:16",
													"nodeType": "YulBlock",
													"src": "12972:193:16",
													"statements": [
														{
															"nativeSrc": "12982:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12982:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "13037:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "13037:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "13006:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "13006:30:16"
																},
																"nativeSrc": "13006:39:16",
																"nodeType": "YulFunctionCall",
																"src": "13006:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "12986:16:16",
																	"nodeType": "YulTypedName",
																	"src": "12986:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13061:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13061:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "13101:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "13101:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "13095:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "13095:5:16"
																				},
																				"nativeSrc": "13095:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "13095:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "13108:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13108:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "13140:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "13140:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "13116:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "13116:23:16"
																				},
																				"nativeSrc": "13116:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "13116:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "13067:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "13067:27:16"
																		},
																		"nativeSrc": "13067:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13067:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "13054:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13054:6:16"
																},
																"nativeSrc": "13054:105:16",
																"nodeType": "YulFunctionCall",
																"src": "13054:105:16"
															},
															"nativeSrc": "13054:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "13054:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "12896:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12949:4:16",
														"nodeType": "YulTypedName",
														"src": "12949:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12955:6:16",
														"nodeType": "YulTypedName",
														"src": "12955:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "12963:7:16",
														"nodeType": "YulTypedName",
														"src": "12963:7:16",
														"type": ""
													}
												],
												"src": "12896:269:16"
											},
											{
												"body": {
													"nativeSrc": "13220:24:16",
													"nodeType": "YulBlock",
													"src": "13220:24:16",
													"statements": [
														{
															"nativeSrc": "13230:8:16",
															"nodeType": "YulAssignment",
															"src": "13230:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "13237:1:16",
																"nodeType": "YulLiteral",
																"src": "13237:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13230:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13230:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "13171:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13216:3:16",
														"nodeType": "YulTypedName",
														"src": "13216:3:16",
														"type": ""
													}
												],
												"src": "13171:73:16"
											},
											{
												"body": {
													"nativeSrc": "13303:136:16",
													"nodeType": "YulBlock",
													"src": "13303:136:16",
													"statements": [
														{
															"nativeSrc": "13313:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13313:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "13327:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "13327:30:16"
																},
																"nativeSrc": "13327:32:16",
																"nodeType": "YulFunctionCall",
																"src": "13327:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "13317:6:16",
																	"nodeType": "YulTypedName",
																	"src": "13317:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13412:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "13412:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "13418:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13418:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "13426:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13426:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "13368:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "13368:43:16"
																},
																"nativeSrc": "13368:65:16",
																"nodeType": "YulFunctionCall",
																"src": "13368:65:16"
															},
															"nativeSrc": "13368:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "13368:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "13250:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13289:4:16",
														"nodeType": "YulTypedName",
														"src": "13289:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "13295:6:16",
														"nodeType": "YulTypedName",
														"src": "13295:6:16",
														"type": ""
													}
												],
												"src": "13250:189:16"
											},
											{
												"body": {
													"nativeSrc": "13495:136:16",
													"nodeType": "YulBlock",
													"src": "13495:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "13562:63:16",
																"nodeType": "YulBlock",
																"src": "13562:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13606:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "13606:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13613:1:16",
																					"nodeType": "YulLiteral",
																					"src": "13613:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "13576:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "13576:29:16"
																			},
																			"nativeSrc": "13576:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13576:39:16"
																		},
																		"nativeSrc": "13576:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13576:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "13515:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "13515:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13522:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13522:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13512:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13512:2:16"
																},
																"nativeSrc": "13512:14:16",
																"nodeType": "YulFunctionCall",
																"src": "13512:14:16"
															},
															"nativeSrc": "13505:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13527:26:16",
																"nodeType": "YulBlock",
																"src": "13527:26:16",
																"statements": [
																	{
																		"nativeSrc": "13529:22:16",
																		"nodeType": "YulAssignment",
																		"src": "13529:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13542:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "13542:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13549:1:16",
																					"nodeType": "YulLiteral",
																					"src": "13549:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13538:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13538:3:16"
																			},
																			"nativeSrc": "13538:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13538:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "13529:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "13529:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13509:2:16",
																"nodeType": "YulBlock",
																"src": "13509:2:16",
																"statements": []
															},
															"src": "13505:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "13445:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "13483:5:16",
														"nodeType": "YulTypedName",
														"src": "13483:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13490:3:16",
														"nodeType": "YulTypedName",
														"src": "13490:3:16",
														"type": ""
													}
												],
												"src": "13445:186:16"
											},
											{
												"body": {
													"nativeSrc": "13716:464:16",
													"nodeType": "YulBlock",
													"src": "13716:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "13742:431:16",
																"nodeType": "YulBlock",
																"src": "13742:431:16",
																"statements": [
																	{
																		"nativeSrc": "13756:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13756:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "13804:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "13804:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "13772:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "13772:31:16"
																			},
																			"nativeSrc": "13772:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13772:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "13760:8:16",
																				"nodeType": "YulTypedName",
																				"src": "13760:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "13823:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "13823:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "13846:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "13846:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "13874:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "13874:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "13856:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "13856:17:16"
																					},
																					"nativeSrc": "13856:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "13856:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13842:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "13842:3:16"
																			},
																			"nativeSrc": "13842:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13842:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "13827:11:16",
																				"nodeType": "YulTypedName",
																				"src": "13827:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14043:27:16",
																			"nodeType": "YulBlock",
																			"src": "14043:27:16",
																			"statements": [
																				{
																					"nativeSrc": "14045:23:16",
																					"nodeType": "YulAssignment",
																					"src": "14045:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "14060:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "14060:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "14045:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "14045:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "14027:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "14027:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14039:2:16",
																					"nodeType": "YulLiteral",
																					"src": "14039:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "14024:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "14024:2:16"
																			},
																			"nativeSrc": "14024:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14024:18:16"
																		},
																		"nativeSrc": "14021:49:16",
																		"nodeType": "YulIf",
																		"src": "14021:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "14112:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "14112:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "14129:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "14129:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "14157:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "14157:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "14139:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "14139:17:16"
																							},
																							"nativeSrc": "14139:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "14139:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "14125:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "14125:3:16"
																					},
																					"nativeSrc": "14125:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "14125:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "14083:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "14083:28:16"
																			},
																			"nativeSrc": "14083:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14083:80:16"
																		},
																		"nativeSrc": "14083:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14083:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "13733:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13733:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13738:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13738:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13730:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "13730:2:16"
																},
																"nativeSrc": "13730:11:16",
																"nodeType": "YulFunctionCall",
																"src": "13730:11:16"
															},
															"nativeSrc": "13727:446:16",
															"nodeType": "YulIf",
															"src": "13727:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "13637:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "13692:5:16",
														"nodeType": "YulTypedName",
														"src": "13692:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13699:3:16",
														"nodeType": "YulTypedName",
														"src": "13699:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "13704:10:16",
														"nodeType": "YulTypedName",
														"src": "13704:10:16",
														"type": ""
													}
												],
												"src": "13637:543:16"
											},
											{
												"body": {
													"nativeSrc": "14249:54:16",
													"nodeType": "YulBlock",
													"src": "14249:54:16",
													"statements": [
														{
															"nativeSrc": "14259:37:16",
															"nodeType": "YulAssignment",
															"src": "14259:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14284:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14284:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14290:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14290:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "14280:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14280:3:16"
																},
																"nativeSrc": "14280:16:16",
																"nodeType": "YulFunctionCall",
																"src": "14280:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14259:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "14259:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "14186:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14224:4:16",
														"nodeType": "YulTypedName",
														"src": "14224:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14230:5:16",
														"nodeType": "YulTypedName",
														"src": "14230:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14240:8:16",
														"nodeType": "YulTypedName",
														"src": "14240:8:16",
														"type": ""
													}
												],
												"src": "14186:117:16"
											},
											{
												"body": {
													"nativeSrc": "14360:118:16",
													"nodeType": "YulBlock",
													"src": "14360:118:16",
													"statements": [
														{
															"nativeSrc": "14370:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14370:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14419:1:16",
																						"nodeType": "YulLiteral",
																						"src": "14419:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "14422:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "14422:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "14415:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "14415:3:16"
																				},
																				"nativeSrc": "14415:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "14415:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14434:1:16",
																						"nodeType": "YulLiteral",
																						"src": "14434:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "14430:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "14430:3:16"
																				},
																				"nativeSrc": "14430:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "14430:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "14386:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "14386:28:16"
																		},
																		"nativeSrc": "14386:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14386:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "14382:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14382:3:16"
																},
																"nativeSrc": "14382:56:16",
																"nodeType": "YulFunctionCall",
																"src": "14382:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14374:4:16",
																	"nodeType": "YulTypedName",
																	"src": "14374:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14447:25:16",
															"nodeType": "YulAssignment",
															"src": "14447:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14461:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14461:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "14467:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14467:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14457:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14457:3:16"
																},
																"nativeSrc": "14457:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14457:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14447:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14447:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "14309:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14337:4:16",
														"nodeType": "YulTypedName",
														"src": "14337:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "14343:5:16",
														"nodeType": "YulTypedName",
														"src": "14343:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14353:6:16",
														"nodeType": "YulTypedName",
														"src": "14353:6:16",
														"type": ""
													}
												],
												"src": "14309:169:16"
											},
											{
												"body": {
													"nativeSrc": "14564:214:16",
													"nodeType": "YulBlock",
													"src": "14564:214:16",
													"statements": [
														{
															"nativeSrc": "14697:37:16",
															"nodeType": "YulAssignment",
															"src": "14697:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14724:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14724:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "14730:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14730:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "14705:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "14705:18:16"
																},
																"nativeSrc": "14705:29:16",
																"nodeType": "YulFunctionCall",
																"src": "14705:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "14697:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14697:4:16"
																}
															]
														},
														{
															"nativeSrc": "14743:29:16",
															"nodeType": "YulAssignment",
															"src": "14743:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14754:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14754:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14764:1:16",
																				"nodeType": "YulLiteral",
																				"src": "14764:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "14767:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "14767:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "14760:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14760:3:16"
																		},
																		"nativeSrc": "14760:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14760:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "14751:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "14751:2:16"
																},
																"nativeSrc": "14751:21:16",
																"nodeType": "YulFunctionCall",
																"src": "14751:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "14743:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14743:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "14483:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14545:4:16",
														"nodeType": "YulTypedName",
														"src": "14545:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14551:3:16",
														"nodeType": "YulTypedName",
														"src": "14551:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "14559:4:16",
														"nodeType": "YulTypedName",
														"src": "14559:4:16",
														"type": ""
													}
												],
												"src": "14483:295:16"
											},
											{
												"body": {
													"nativeSrc": "14875:1303:16",
													"nodeType": "YulBlock",
													"src": "14875:1303:16",
													"statements": [
														{
															"nativeSrc": "14886:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14886:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "14933:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14933:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14900:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "14900:32:16"
																},
																"nativeSrc": "14900:37:16",
																"nodeType": "YulFunctionCall",
																"src": "14900:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "14890:6:16",
																	"nodeType": "YulTypedName",
																	"src": "14890:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15022:22:16",
																"nodeType": "YulBlock",
																"src": "15022:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "15024:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "15024:16:16"
																			},
																			"nativeSrc": "15024:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "15024:18:16"
																		},
																		"nativeSrc": "15024:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "15024:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14994:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14994:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15002:18:16",
																		"nodeType": "YulLiteral",
																		"src": "15002:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14991:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "14991:2:16"
																},
																"nativeSrc": "14991:30:16",
																"nodeType": "YulFunctionCall",
																"src": "14991:30:16"
															},
															"nativeSrc": "14988:56:16",
															"nodeType": "YulIf",
															"src": "14988:56:16"
														},
														{
															"nativeSrc": "15054:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15054:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "15100:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15100:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "15094:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "15094:5:16"
																		},
																		"nativeSrc": "15094:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15094:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "15068:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "15068:25:16"
																},
																"nativeSrc": "15068:38:16",
																"nodeType": "YulFunctionCall",
																"src": "15068:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "15058:6:16",
																	"nodeType": "YulTypedName",
																	"src": "15058:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15199:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15199:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "15205:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15205:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "15213:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15213:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "15153:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "15153:45:16"
																},
																"nativeSrc": "15153:67:16",
																"nodeType": "YulFunctionCall",
																"src": "15153:67:16"
															},
															"nativeSrc": "15153:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "15153:67:16"
														},
														{
															"nativeSrc": "15230:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15230:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "15247:1:16",
																"nodeType": "YulLiteral",
																"src": "15247:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15234:9:16",
																	"nodeType": "YulTypedName",
																	"src": "15234:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15258:17:16",
															"nodeType": "YulAssignment",
															"src": "15258:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "15271:4:16",
																"nodeType": "YulLiteral",
																"src": "15271:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15258:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "15258:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15322:611:16",
																		"nodeType": "YulBlock",
																		"src": "15322:611:16",
																		"statements": [
																			{
																				"nativeSrc": "15336:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15336:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "15355:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "15355:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "15367:4:16",
																									"nodeType": "YulLiteral",
																									"src": "15367:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "15363:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "15363:3:16"
																							},
																							"nativeSrc": "15363:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "15363:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "15351:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "15351:3:16"
																					},
																					"nativeSrc": "15351:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "15351:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "15340:7:16",
																						"nodeType": "YulTypedName",
																						"src": "15340:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15387:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15387:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15433:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "15433:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "15401:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "15401:31:16"
																					},
																					"nativeSrc": "15401:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "15401:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "15391:6:16",
																						"nodeType": "YulTypedName",
																						"src": "15391:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15451:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15451:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15460:1:16",
																					"nodeType": "YulLiteral",
																					"src": "15460:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "15455:1:16",
																						"nodeType": "YulTypedName",
																						"src": "15455:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15519:163:16",
																					"nodeType": "YulBlock",
																					"src": "15519:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15544:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "15544:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "15562:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "15562:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "15567:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "15567:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "15558:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "15558:3:16"
																												},
																												"nativeSrc": "15558:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "15558:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "15552:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "15552:5:16"
																										},
																										"nativeSrc": "15552:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "15552:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15537:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "15537:6:16"
																								},
																								"nativeSrc": "15537:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "15537:42:16"
																							},
																							"nativeSrc": "15537:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "15537:42:16"
																						},
																						{
																							"nativeSrc": "15596:24:16",
																							"nodeType": "YulAssignment",
																							"src": "15596:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15610:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "15610:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15618:1:16",
																										"nodeType": "YulLiteral",
																										"src": "15618:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15606:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "15606:3:16"
																								},
																								"nativeSrc": "15606:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "15606:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "15596:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "15596:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "15637:31:16",
																							"nodeType": "YulAssignment",
																							"src": "15637:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "15654:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "15654:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15665:2:16",
																										"nodeType": "YulLiteral",
																										"src": "15665:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15650:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "15650:3:16"
																								},
																								"nativeSrc": "15650:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "15650:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "15637:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "15637:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "15485:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "15485:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15488:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "15488:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15482:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "15482:2:16"
																					},
																					"nativeSrc": "15482:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "15482:14:16"
																				},
																				"nativeSrc": "15474:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "15497:21:16",
																					"nodeType": "YulBlock",
																					"src": "15497:21:16",
																					"statements": [
																						{
																							"nativeSrc": "15499:17:16",
																							"nodeType": "YulAssignment",
																							"src": "15499:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "15508:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "15508:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15511:4:16",
																										"nodeType": "YulLiteral",
																										"src": "15511:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15504:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "15504:3:16"
																								},
																								"nativeSrc": "15504:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "15504:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "15499:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "15499:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "15478:3:16",
																					"nodeType": "YulBlock",
																					"src": "15478:3:16",
																					"statements": []
																				},
																				"src": "15474:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "15718:156:16",
																					"nodeType": "YulBlock",
																					"src": "15718:156:16",
																					"statements": [
																						{
																							"nativeSrc": "15736:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "15736:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15763:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "15763:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15768:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "15768:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15759:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "15759:3:16"
																										},
																										"nativeSrc": "15759:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "15759:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15753:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "15753:5:16"
																								},
																								"nativeSrc": "15753:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "15753:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "15740:9:16",
																									"nodeType": "YulTypedName",
																									"src": "15740:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15803:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "15803:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "15830:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "15830:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "15845:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "15845:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "15853:4:16",
																														"nodeType": "YulLiteral",
																														"src": "15853:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "15841:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "15841:3:16"
																												},
																												"nativeSrc": "15841:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "15841:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "15811:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "15811:18:16"
																										},
																										"nativeSrc": "15811:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "15811:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15796:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "15796:6:16"
																								},
																								"nativeSrc": "15796:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "15796:64:16"
																							},
																							"nativeSrc": "15796:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "15796:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15701:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "15701:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "15710:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "15710:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15698:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "15698:2:16"
																					},
																					"nativeSrc": "15698:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "15698:19:16"
																				},
																				"nativeSrc": "15695:179:16",
																				"nodeType": "YulIf",
																				"src": "15695:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15894:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "15894:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "15908:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "15908:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "15916:1:16",
																											"nodeType": "YulLiteral",
																											"src": "15916:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "15904:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "15904:3:16"
																									},
																									"nativeSrc": "15904:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "15904:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15920:1:16",
																									"nodeType": "YulLiteral",
																									"src": "15920:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15900:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "15900:3:16"
																							},
																							"nativeSrc": "15900:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "15900:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15887:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "15887:6:16"
																					},
																					"nativeSrc": "15887:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "15887:36:16"
																				},
																				"nativeSrc": "15887:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "15887:36:16"
																			}
																		]
																	},
																	"nativeSrc": "15315:618:16",
																	"nodeType": "YulCase",
																	"src": "15315:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15320:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15950:222:16",
																		"nodeType": "YulBlock",
																		"src": "15950:222:16",
																		"statements": [
																			{
																				"nativeSrc": "15964:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15964:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15977:1:16",
																					"nodeType": "YulLiteral",
																					"src": "15977:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "15968:5:16",
																						"nodeType": "YulTypedName",
																						"src": "15968:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16001:67:16",
																					"nodeType": "YulBlock",
																					"src": "16001:67:16",
																					"statements": [
																						{
																							"nativeSrc": "16019:35:16",
																							"nodeType": "YulAssignment",
																							"src": "16019:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16038:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "16038:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16043:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "16043:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16034:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "16034:3:16"
																										},
																										"nativeSrc": "16034:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "16034:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16028:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "16028:5:16"
																								},
																								"nativeSrc": "16028:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "16028:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "16019:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "16019:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "15994:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "15994:6:16"
																				},
																				"nativeSrc": "15991:77:16",
																				"nodeType": "YulIf",
																				"src": "15991:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16088:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "16088:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "16147:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "16147:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "16154:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "16154:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "16094:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "16094:52:16"
																							},
																							"nativeSrc": "16094:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "16094:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16081:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "16081:6:16"
																					},
																					"nativeSrc": "16081:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "16081:81:16"
																				},
																				"nativeSrc": "16081:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "16081:81:16"
																			}
																		]
																	},
																	"nativeSrc": "15942:230:16",
																	"nodeType": "YulCase",
																	"src": "15942:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "15295:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15295:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15303:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15303:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15292:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "15292:2:16"
																},
																"nativeSrc": "15292:14:16",
																"nodeType": "YulFunctionCall",
																"src": "15292:14:16"
															},
															"nativeSrc": "15285:887:16",
															"nodeType": "YulSwitch",
															"src": "15285:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "14783:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "14864:4:16",
														"nodeType": "YulTypedName",
														"src": "14864:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "14870:3:16",
														"nodeType": "YulTypedName",
														"src": "14870:3:16",
														"type": ""
													}
												],
												"src": "14783:1395:16"
											},
											{
												"body": {
													"nativeSrc": "16242:40:16",
													"nodeType": "YulBlock",
													"src": "16242:40:16",
													"statements": [
														{
															"nativeSrc": "16253:22:16",
															"nodeType": "YulAssignment",
															"src": "16253:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16269:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16269:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16263:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16263:5:16"
																},
																"nativeSrc": "16263:12:16",
																"nodeType": "YulFunctionCall",
																"src": "16263:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "16253:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16253:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "16184:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16225:5:16",
														"nodeType": "YulTypedName",
														"src": "16225:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "16235:6:16",
														"nodeType": "YulTypedName",
														"src": "16235:6:16",
														"type": ""
													}
												],
												"src": "16184:98:16"
											},
											{
												"body": {
													"nativeSrc": "16401:34:16",
													"nodeType": "YulBlock",
													"src": "16401:34:16",
													"statements": [
														{
															"nativeSrc": "16411:18:16",
															"nodeType": "YulAssignment",
															"src": "16411:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "16426:3:16",
																"nodeType": "YulIdentifier",
																"src": "16426:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "16411:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "16411:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16288:147:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16373:3:16",
														"nodeType": "YulTypedName",
														"src": "16373:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "16378:6:16",
														"nodeType": "YulTypedName",
														"src": "16378:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "16389:11:16",
														"nodeType": "YulTypedName",
														"src": "16389:11:16",
														"type": ""
													}
												],
												"src": "16288:147:16"
											},
											{
												"body": {
													"nativeSrc": "16549:278:16",
													"nodeType": "YulBlock",
													"src": "16549:278:16",
													"statements": [
														{
															"nativeSrc": "16559:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16559:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16605:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16605:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "16573:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "16573:31:16"
																},
																"nativeSrc": "16573:38:16",
																"nodeType": "YulFunctionCall",
																"src": "16573:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "16563:6:16",
																	"nodeType": "YulTypedName",
																	"src": "16563:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16620:95:16",
															"nodeType": "YulAssignment",
															"src": "16620:95:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16703:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16703:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16708:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16708:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16627:75:16",
																	"nodeType": "YulIdentifier",
																	"src": "16627:75:16"
																},
																"nativeSrc": "16627:88:16",
																"nodeType": "YulFunctionCall",
																"src": "16627:88:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16620:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16620:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16763:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16763:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16770:4:16",
																				"nodeType": "YulLiteral",
																				"src": "16770:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:16"
																		},
																		"nativeSrc": "16759:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "16777:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16777:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16782:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16782:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "16724:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "16724:34:16"
																},
																"nativeSrc": "16724:65:16",
																"nodeType": "YulFunctionCall",
																"src": "16724:65:16"
															},
															"nativeSrc": "16724:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "16724:65:16"
														},
														{
															"nativeSrc": "16798:23:16",
															"nodeType": "YulAssignment",
															"src": "16798:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16809:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16809:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16814:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "16814:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16805:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16805:3:16"
																},
																"nativeSrc": "16805:16:16",
																"nodeType": "YulFunctionCall",
																"src": "16805:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16798:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16798:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "16441:386:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16530:5:16",
														"nodeType": "YulTypedName",
														"src": "16530:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16537:3:16",
														"nodeType": "YulTypedName",
														"src": "16537:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16545:3:16",
														"nodeType": "YulTypedName",
														"src": "16545:3:16",
														"type": ""
													}
												],
												"src": "16441:386:16"
											},
											{
												"body": {
													"nativeSrc": "16967:137:16",
													"nodeType": "YulBlock",
													"src": "16967:137:16",
													"statements": [
														{
															"nativeSrc": "16978:100:16",
															"nodeType": "YulAssignment",
															"src": "16978:100:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17065:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17065:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "17074:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17074:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "16985:79:16",
																	"nodeType": "YulIdentifier",
																	"src": "16985:79:16"
																},
																"nativeSrc": "16985:93:16",
																"nodeType": "YulFunctionCall",
																"src": "16985:93:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16978:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16978:3:16"
																}
															]
														},
														{
															"nativeSrc": "17088:10:16",
															"nodeType": "YulAssignment",
															"src": "17088:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "17095:3:16",
																"nodeType": "YulIdentifier",
																"src": "17095:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17088:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17088:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "16833:271:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16946:3:16",
														"nodeType": "YulTypedName",
														"src": "16946:3:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16952:6:16",
														"nodeType": "YulTypedName",
														"src": "16952:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16963:3:16",
														"nodeType": "YulTypedName",
														"src": "16963:3:16",
														"type": ""
													}
												],
												"src": "16833:271:16"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"468": [
									{
										"length": 32,
										"start": 3269
									},
									{
										"length": 32,
										"start": 3354
									},
									{
										"length": 32,
										"start": 3796
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106100fd575f3560e01c806370a082311161009457806395d89b411161006357806395d89b41146102f7578063a9059cbb14610321578063ad3cb1cc1461035d578063dd62ed3e14610387578063f2fde38b146103c3576100fd565b806370a0823114610265578063715018a6146102a15780638129fc1c146102b75780638da5cb5b146102cd576100fd565b8063313ce567116100d0578063313ce567146101cd57806340c10f19146101f75780634f1ef2861461021f57806352d1902d1461023b576100fd565b806306fdde0314610101578063095ea7b31461012b57806318160ddd1461016757806323b872dd14610191575b5f5ffd5b34801561010c575f5ffd5b506101156103eb565b6040516101229190611960565b60405180910390f35b348015610136575f5ffd5b50610151600480360381019061014c9190611a1e565b610489565b60405161015e9190611a76565b60405180910390f35b348015610172575f5ffd5b5061017b6104ab565b6040516101889190611a9e565b60405180910390f35b34801561019c575f5ffd5b506101b760048036038101906101b29190611ab7565b6104c2565b6040516101c49190611a76565b60405180910390f35b3480156101d8575f5ffd5b506101e16104f0565b6040516101ee9190611b22565b60405180910390f35b348015610202575f5ffd5b5061021d60048036038101906102189190611a1e565b6104f8565b005b61023960048036038101906102349190611c67565b61050e565b005b348015610246575f5ffd5b5061024f61052d565b60405161025c9190611cd9565b60405180910390f35b348015610270575f5ffd5b5061028b60048036038101906102869190611cf2565b61055e565b6040516102989190611a9e565b60405180910390f35b3480156102ac575f5ffd5b506102b56105b1565b005b3480156102c2575f5ffd5b506102cb6105c4565b005b3480156102d8575f5ffd5b506102e16107b8565b6040516102ee9190611d2c565b60405180910390f35b348015610302575f5ffd5b5061030b6107ed565b6040516103189190611960565b60405180910390f35b34801561032c575f5ffd5b5061034760048036038101906103429190611a1e565b61088b565b6040516103549190611a76565b60405180910390f35b348015610368575f5ffd5b506103716108ad565b60405161037e9190611960565b60405180910390f35b348015610392575f5ffd5b506103ad60048036038101906103a89190611d45565b6108e6565b6040516103ba9190611a9e565b60405180910390f35b3480156103ce575f5ffd5b506103e960048036038101906103e49190611cf2565b610976565b005b60605f6103f66109fa565b905080600301805461040790611db0565b80601f016020809104026020016040519081016040528092919081815260200182805461043390611db0565b801561047e5780601f106104555761010080835404028352916020019161047e565b820191905f5260205f20905b81548152906001019060200180831161046157829003601f168201915b505050505091505090565b5f5f610493610a21565b90506104a0818585610a28565b600191505092915050565b5f5f6104b56109fa565b9050806002015491505090565b5f5f6104cc610a21565b90506104d9858285610a3a565b6104e4858585610acd565b60019150509392505050565b5f6012905090565b610500610bbd565b61050a8282610c44565b5050565b610516610cc3565b61051f82610da9565b6105298282610db4565b5050565b5f610536610ed2565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f5f6105686109fa565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6105b9610bbd565b6105c25f610f59565b565b5f6105cd61102a565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff161480156106155750825b90505f60018367ffffffffffffffff1614801561064857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015610656575080155b1561068d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555083156106da576001855f0160086101000a81548160ff0219169083151502179055505b61074e6040518060400160405280600681526020017f55705361666500000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5550530000000000000000000000000000000000000000000000000000000000815250611051565b61075733611067565b83156107b1575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516107a89190611e35565b60405180910390a15b5050505050565b5f5f6107c261107b565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f6107f86109fa565b905080600401805461080990611db0565b80601f016020809104026020016040519081016040528092919081815260200182805461083590611db0565b80156108805780601f1061085757610100808354040283529160200191610880565b820191905f5260205f20905b81548152906001019060200180831161086357829003601f168201915b505050505091505090565b5f5f610895610a21565b90506108a2818585610acd565b600191505092915050565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b5f5f6108f06109fa565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b61097e610bbd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109ee575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016109e59190611d2c565b60405180910390fd5b6109f781610f59565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b610a3583838360016110a2565b505050565b5f610a4584846108e6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610ac75781811015610ab8578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610aaf93929190611e4e565b60405180910390fd5b610ac684848484035f6110a2565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b3d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610b349190611d2c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bad575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610ba49190611d2c565b60405180910390fd5b610bb883838361127f565b505050565b610bc5610a21565b73ffffffffffffffffffffffffffffffffffffffff16610be36107b8565b73ffffffffffffffffffffffffffffffffffffffff1614610c4257610c06610a21565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610c399190611d2c565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610cb4575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610cab9190611d2c565b60405180910390fd5b610cbf5f838361127f565b5050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161480610d7057507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16610d576114ae565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610da7576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b610db1610bbd565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610e1c57506040513d601f19601f82011682018060405250810190610e199190611ead565b60015b610e5d57816040517f4c9c8ce3000000000000000000000000000000000000000000000000000000008152600401610e549190611d2c565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b8114610ec357806040517faa1d49a4000000000000000000000000000000000000000000000000000000008152600401610eba9190611cd9565b60405180910390fd5b610ecd8383611501565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff1614610f57576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f610f6261107b565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b611059611573565b61106382826115b3565b5050565b61106f611573565b611078816115ef565b50565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f6110ab6109fa565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff160361111d575f6040517fe602df050000000000000000000000000000000000000000000000000000000081526004016111149190611d2c565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361118d575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016111849190611d2c565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115611278578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258560405161126f9190611a9e565b60405180910390a35b5050505050565b5f6112886109fa565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036112dc5781816002015f8282546112d09190611f05565b925050819055506113ae565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015611367578481846040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161135e93929190611e4e565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036113f75781816002015f8282540392505081905550611443565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516114a09190611a9e565b60405180910390a350505050565b5f6114da7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611673565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61150a8261167c565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f81511115611566576115608282611745565b5061156f565b61156e6117c5565b5b5050565b61157b611801565b6115b1576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6115bb611573565b5f6115c46109fa565b9050828160030190816115d791906120cf565b50818160040190816115e991906120cf565b50505050565b6115f7611573565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611667575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161165e9190611d2c565b60405180910390fd5b61167081610f59565b50565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b036116d757806040517f4c9c8ce30000000000000000000000000000000000000000000000000000000081526004016116ce9190611d2c565b60405180910390fd5b806117037f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b611673565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f5f8473ffffffffffffffffffffffffffffffffffffffff168460405161176e91906121e2565b5f60405180830381855af49150503d805f81146117a6576040519150601f19603f3d011682016040523d82523d5f602084013e6117ab565b606091505b50915091506117bb85838361181f565b9250505092915050565b5f3411156117ff576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61180a61102a565b5f0160089054906101000a900460ff16905090565b6060826118345761182f826118ac565b6118a4565b5f825114801561185a57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561189c57836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016118939190611d2c565b60405180910390fd5b8190506118a5565b5b9392505050565b5f815111156118be5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611932826118f0565b61193c81856118fa565b935061194c81856020860161190a565b61195581611918565b840191505092915050565b5f6020820190508181035f8301526119788184611928565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6119ba82611991565b9050919050565b6119ca816119b0565b81146119d4575f5ffd5b50565b5f813590506119e5816119c1565b92915050565b5f819050919050565b6119fd816119eb565b8114611a07575f5ffd5b50565b5f81359050611a18816119f4565b92915050565b5f5f60408385031215611a3457611a33611989565b5b5f611a41858286016119d7565b9250506020611a5285828601611a0a565b9150509250929050565b5f8115159050919050565b611a7081611a5c565b82525050565b5f602082019050611a895f830184611a67565b92915050565b611a98816119eb565b82525050565b5f602082019050611ab15f830184611a8f565b92915050565b5f5f5f60608486031215611ace57611acd611989565b5b5f611adb868287016119d7565b9350506020611aec868287016119d7565b9250506040611afd86828701611a0a565b9150509250925092565b5f60ff82169050919050565b611b1c81611b07565b82525050565b5f602082019050611b355f830184611b13565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611b7982611918565b810181811067ffffffffffffffff82111715611b9857611b97611b43565b5b80604052505050565b5f611baa611980565b9050611bb68282611b70565b919050565b5f67ffffffffffffffff821115611bd557611bd4611b43565b5b611bde82611918565b9050602081019050919050565b828183375f83830152505050565b5f611c0b611c0684611bbb565b611ba1565b905082815260208101848484011115611c2757611c26611b3f565b5b611c32848285611beb565b509392505050565b5f82601f830112611c4e57611c4d611b3b565b5b8135611c5e848260208601611bf9565b91505092915050565b5f5f60408385031215611c7d57611c7c611989565b5b5f611c8a858286016119d7565b925050602083013567ffffffffffffffff811115611cab57611caa61198d565b5b611cb785828601611c3a565b9150509250929050565b5f819050919050565b611cd381611cc1565b82525050565b5f602082019050611cec5f830184611cca565b92915050565b5f60208284031215611d0757611d06611989565b5b5f611d14848285016119d7565b91505092915050565b611d26816119b0565b82525050565b5f602082019050611d3f5f830184611d1d565b92915050565b5f5f60408385031215611d5b57611d5a611989565b5b5f611d68858286016119d7565b9250506020611d79858286016119d7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611dc757607f821691505b602082108103611dda57611dd9611d83565b5b50919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f611e1f611e1a611e1584611de0565b611dfc565b611de9565b9050919050565b611e2f81611e05565b82525050565b5f602082019050611e485f830184611e26565b92915050565b5f606082019050611e615f830186611d1d565b611e6e6020830185611a8f565b611e7b6040830184611a8f565b949350505050565b611e8c81611cc1565b8114611e96575f5ffd5b50565b5f81519050611ea781611e83565b92915050565b5f60208284031215611ec257611ec1611989565b5b5f611ecf84828501611e99565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611f0f826119eb565b9150611f1a836119eb565b9250828201905080821115611f3257611f31611ed8565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302611f947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611f59565b611f9e8683611f59565b95508019841693508086168417925050509392505050565b5f611fd0611fcb611fc6846119eb565b611dfc565b6119eb565b9050919050565b5f819050919050565b611fe983611fb6565b611ffd611ff582611fd7565b848454611f65565b825550505050565b5f5f905090565b612014612005565b61201f818484611fe0565b505050565b5b81811015612042576120375f8261200c565b600181019050612025565b5050565b601f8211156120875761205881611f38565b61206184611f4a565b81016020851015612070578190505b61208461207c85611f4a565b830182612024565b50505b505050565b5f82821c905092915050565b5f6120a75f198460080261208c565b1980831691505092915050565b5f6120bf8383612098565b9150826002028217905092915050565b6120d8826118f0565b67ffffffffffffffff8111156120f1576120f0611b43565b5b6120fb8254611db0565b612106828285612046565b5f60209050601f831160018114612137575f8415612125578287015190505b61212f85826120b4565b865550612196565b601f19841661214586611f38565b5f5b8281101561216c57848901518255600182019150602085019450602081019050612147565b868310156121895784890151612185601f891682612098565b8355505b6001600288020188555050505b505050505050565b5f81519050919050565b5f81905092915050565b5f6121bc8261219e565b6121c681856121a8565b93506121d681856020860161190a565b80840191505092915050565b5f6121ed82846121b2565b91508190509291505056fea264697066735822122060e8c4f2fef5204f84f2df059ad2a3bb08aad7a40c54c9f63a5a825bbc6bb8ac64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x94 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x63 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x35D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3C3 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CD JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD0 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x23B JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x115 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x136 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x151 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14C SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x489 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15E SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x17B PUSH2 0x4AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1AB7 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1B22 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x202 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x21D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1C67 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x24F PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x55E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2B5 PUSH2 0x5B1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x5C4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x302 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30B PUSH2 0x7ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x347 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x342 SWAP2 SWAP1 PUSH2 0x1A1E JUMP JUMPDEST PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1A76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x368 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x371 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x1960 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A8 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x1CF2 JUMP JUMPDEST PUSH2 0x976 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x3F6 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x407 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x433 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x47E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x455 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x47E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x461 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x493 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x4A0 DUP2 DUP6 DUP6 PUSH2 0xA28 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4B5 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4CC PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x4D9 DUP6 DUP3 DUP6 PUSH2 0xA3A JUMP JUMPDEST PUSH2 0x4E4 DUP6 DUP6 DUP6 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x500 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x50A DUP3 DUP3 PUSH2 0xC44 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x516 PUSH2 0xCC3 JUMP JUMPDEST PUSH2 0x51F DUP3 PUSH2 0xDA9 JUMP JUMPDEST PUSH2 0x529 DUP3 DUP3 PUSH2 0xDB4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x536 PUSH2 0xED2 JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x568 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5B9 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x5C2 PUSH0 PUSH2 0xF59 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x5CD PUSH2 0x102A JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x615 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x648 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x656 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x68D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x6DA JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x74E PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5570536166650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5550530000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x757 CALLER PUSH2 0x1067 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x7B1 JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x7A8 SWAP2 SWAP1 PUSH2 0x1E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x7C2 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x7F8 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x809 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x835 SWAP1 PUSH2 0x1DB0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x880 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x857 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x880 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x863 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x895 PUSH2 0xA21 JUMP JUMPDEST SWAP1 POP PUSH2 0x8A2 DUP2 DUP6 DUP6 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x8F0 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x97E PUSH2 0xBBD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9EE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E5 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9F7 DUP2 PUSH2 0xF59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xA35 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x10A2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA45 DUP5 DUP5 PUSH2 0x8E6 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xAC7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAAF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAC6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x10A2 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB3D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB34 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBAD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBB8 DUP4 DUP4 DUP4 PUSH2 0x127F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xBC5 PUSH2 0xA21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBE3 PUSH2 0x7B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC42 JUMPI PUSH2 0xC06 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC39 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBF PUSH0 DUP4 DUP4 PUSH2 0x127F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD70 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD57 PUSH2 0x14AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xDA7 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0xDB1 PUSH2 0xBBD JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE1C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE19 SWAP2 SWAP1 PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xE5D JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE54 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0xEC3 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEBA SWAP2 SWAP1 PUSH2 0x1CD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xECD DUP4 DUP4 PUSH2 0x1501 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF57 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xF62 PUSH2 0x107B JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1059 PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x1063 DUP3 DUP3 PUSH2 0x15B3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x106F PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x1078 DUP2 PUSH2 0x15EF JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x10AB PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x111D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1114 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x118D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1184 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0x1278 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0x126F SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1288 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12DC JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x12D0 SWAP2 SWAP1 PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x13AE JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1367 JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x135E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13F7 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1443 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x14A0 SWAP2 SWAP1 PUSH2 0x1A9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14DA PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1673 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x150A DUP3 PUSH2 0x167C JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1566 JUMPI PUSH2 0x1560 DUP3 DUP3 PUSH2 0x1745 JUMP JUMPDEST POP PUSH2 0x156F JUMP JUMPDEST PUSH2 0x156E PUSH2 0x17C5 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x157B PUSH2 0x1801 JUMP JUMPDEST PUSH2 0x15B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x15BB PUSH2 0x1573 JUMP JUMPDEST PUSH0 PUSH2 0x15C4 PUSH2 0x9FA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x15D7 SWAP2 SWAP1 PUSH2 0x20CF JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x15E9 SWAP2 SWAP1 PUSH2 0x20CF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15F7 PUSH2 0x1573 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1667 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x165E SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1670 DUP2 PUSH2 0xF59 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x16D7 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CE SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1703 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x1673 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x176E SWAP2 SWAP1 PUSH2 0x21E2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x17A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17AB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x17BB DUP6 DUP4 DUP4 PUSH2 0x181F JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x17FF JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x180A PUSH2 0x102A JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1834 JUMPI PUSH2 0x182F DUP3 PUSH2 0x18AC JUMP JUMPDEST PUSH2 0x18A4 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x185A JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x189C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x1D2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x18A5 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x18BE JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1932 DUP3 PUSH2 0x18F0 JUMP JUMPDEST PUSH2 0x193C DUP2 DUP6 PUSH2 0x18FA JUMP JUMPDEST SWAP4 POP PUSH2 0x194C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190A JUMP JUMPDEST PUSH2 0x1955 DUP2 PUSH2 0x1918 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1978 DUP2 DUP5 PUSH2 0x1928 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19BA DUP3 PUSH2 0x1991 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19CA DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x19D4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19E5 DUP2 PUSH2 0x19C1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19FD DUP2 PUSH2 0x19EB JUMP JUMPDEST DUP2 EQ PUSH2 0x1A07 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A18 DUP2 PUSH2 0x19F4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A34 JUMPI PUSH2 0x1A33 PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A41 DUP6 DUP3 DUP7 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A52 DUP6 DUP3 DUP7 ADD PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A70 DUP2 PUSH2 0x1A5C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A89 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A98 DUP2 PUSH2 0x19EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AB1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A8F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1ACE JUMPI PUSH2 0x1ACD PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ADB DUP7 DUP3 DUP8 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1AEC DUP7 DUP3 DUP8 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1AFD DUP7 DUP3 DUP8 ADD PUSH2 0x1A0A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B1C DUP2 PUSH2 0x1B07 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B35 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B13 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1B79 DUP3 PUSH2 0x1918 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1B98 JUMPI PUSH2 0x1B97 PUSH2 0x1B43 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1BAA PUSH2 0x1980 JUMP JUMPDEST SWAP1 POP PUSH2 0x1BB6 DUP3 DUP3 PUSH2 0x1B70 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1BD5 JUMPI PUSH2 0x1BD4 PUSH2 0x1B43 JUMP JUMPDEST JUMPDEST PUSH2 0x1BDE DUP3 PUSH2 0x1918 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C0B PUSH2 0x1C06 DUP5 PUSH2 0x1BBB JUMP JUMPDEST PUSH2 0x1BA1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1C27 JUMPI PUSH2 0x1C26 PUSH2 0x1B3F JUMP JUMPDEST JUMPDEST PUSH2 0x1C32 DUP5 DUP3 DUP6 PUSH2 0x1BEB JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1C4E JUMPI PUSH2 0x1C4D PUSH2 0x1B3B JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1C5E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1BF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C7D JUMPI PUSH2 0x1C7C PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C8A DUP6 DUP3 DUP7 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1CAB JUMPI PUSH2 0x1CAA PUSH2 0x198D JUMP JUMPDEST JUMPDEST PUSH2 0x1CB7 DUP6 DUP3 DUP7 ADD PUSH2 0x1C3A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x1CC1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CEC PUSH0 DUP4 ADD DUP5 PUSH2 0x1CCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D07 JUMPI PUSH2 0x1D06 PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D14 DUP5 DUP3 DUP6 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D26 DUP2 PUSH2 0x19B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D3F PUSH0 DUP4 ADD DUP5 PUSH2 0x1D1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D5B JUMPI PUSH2 0x1D5A PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D68 DUP6 DUP3 DUP7 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D79 DUP6 DUP3 DUP7 ADD PUSH2 0x19D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1DC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x1D83 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1F PUSH2 0x1E1A PUSH2 0x1E15 DUP5 PUSH2 0x1DE0 JUMP JUMPDEST PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x1DE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E2F DUP2 PUSH2 0x1E05 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E48 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E26 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1E61 PUSH0 DUP4 ADD DUP7 PUSH2 0x1D1D JUMP JUMPDEST PUSH2 0x1E6E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1A8F JUMP JUMPDEST PUSH2 0x1E7B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1A8F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1E8C DUP2 PUSH2 0x1CC1 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E96 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1EA7 DUP2 PUSH2 0x1E83 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EC2 JUMPI PUSH2 0x1EC1 PUSH2 0x1989 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1ECF DUP5 DUP3 DUP6 ADD PUSH2 0x1E99 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1F0F DUP3 PUSH2 0x19EB JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1A DUP4 PUSH2 0x19EB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1F32 JUMPI PUSH2 0x1F31 PUSH2 0x1ED8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1F94 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1F59 JUMP JUMPDEST PUSH2 0x1F9E DUP7 DUP4 PUSH2 0x1F59 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1FD0 PUSH2 0x1FCB PUSH2 0x1FC6 DUP5 PUSH2 0x19EB JUMP JUMPDEST PUSH2 0x1DFC JUMP JUMPDEST PUSH2 0x19EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FE9 DUP4 PUSH2 0x1FB6 JUMP JUMPDEST PUSH2 0x1FFD PUSH2 0x1FF5 DUP3 PUSH2 0x1FD7 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1F65 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2014 PUSH2 0x2005 JUMP JUMPDEST PUSH2 0x201F DUP2 DUP5 DUP5 PUSH2 0x1FE0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2042 JUMPI PUSH2 0x2037 PUSH0 DUP3 PUSH2 0x200C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2025 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2087 JUMPI PUSH2 0x2058 DUP2 PUSH2 0x1F38 JUMP JUMPDEST PUSH2 0x2061 DUP5 PUSH2 0x1F4A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2070 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2084 PUSH2 0x207C DUP6 PUSH2 0x1F4A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2024 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20A7 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x208C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20BF DUP4 DUP4 PUSH2 0x2098 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20D8 DUP3 PUSH2 0x18F0 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20F1 JUMPI PUSH2 0x20F0 PUSH2 0x1B43 JUMP JUMPDEST JUMPDEST PUSH2 0x20FB DUP3 SLOAD PUSH2 0x1DB0 JUMP JUMPDEST PUSH2 0x2106 DUP3 DUP3 DUP6 PUSH2 0x2046 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2137 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2125 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x212F DUP6 DUP3 PUSH2 0x20B4 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x2196 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2145 DUP7 PUSH2 0x1F38 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x216C JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2147 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2189 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x2185 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2098 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21BC DUP3 PUSH2 0x219E JUMP JUMPDEST PUSH2 0x21C6 DUP2 DUP6 PUSH2 0x21A8 JUMP JUMPDEST SWAP4 POP PUSH2 0x21D6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x190A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21ED DUP3 DUP5 PUSH2 0x21B2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0xE8 0xC4 CALLCODE INVALID CREATE2 KECCAK256 0x4F DUP5 CALLCODE 0xDF SDIV SWAP11 0xD2 LOG3 0xBB ADDMOD 0xAA 0xD7 LOG4 0xC SLOAD 0xC9 0xF6 GASPRICE GAS DUP3 JUMPDEST 0xBC PUSH12 0xB8AC64736F6C634300081D00 CALLER ",
							"sourceMap": "399:612:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5210:186;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3896:152;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5988:244;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3754:82;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;914:95:15;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4106:171:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;;;;;;;;;;;:::i;:::-;;568:161:15;;;;;;;;;;;;;:::i;:::-;;2441:144:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:148:3;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4472:178;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4708:195:3;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2716:144:3;2761:13;2786:22;2811:18;:16;:18::i;:::-;2786:43;;2846:1;:7;;2839:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2716:144;:::o;5210:186::-;5283:4;5299:13;5315:12;:10;:12::i;:::-;5299:28;;5337:31;5346:5;5353:7;5362:5;5337:8;:31::i;:::-;5385:4;5378:11;;;5210:186;;;;:::o;3896:152::-;3948:7;3967:22;3992:18;:16;:18::i;:::-;3967:43;;4027:1;:14;;;4020:21;;;3896:152;:::o;5988:244::-;6075:4;6091:15;6109:12;:10;:12::i;:::-;6091:30;;6131:37;6147:4;6153:7;6162:5;6131:15;:37::i;:::-;6178:26;6188:4;6194:2;6198:5;6178:9;:26::i;:::-;6221:4;6214:11;;;5988:244;;;;;:::o;3754:82::-;3803:5;3827:2;3820:9;;3754:82;:::o;914:95:15:-;2334:13:0;:11;:13::i;:::-;985:17:15::1;991:2;995:6;985:5;:17::i;:::-;914:95:::0;;:::o;4161:214:2:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:8::1;3803:32:2;;3796:39;;3708:134:::0;:::o;4106:171:3:-;4171:7;4190:22;4215:18;:16;:18::i;:::-;4190:43;;4250:1;:11;;:20;4262:7;4250:20;;;;;;;;;;;;;;;;4243:27;;;4106:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;568:161:15:-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4706:17;4741:1;4726:11;:16;;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4805:1;4790:11;:16;;;:50;;;;;4839:1;4818:4;4810:25;;;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;;;;;;;;;;;;;4851:91;4968:1;4951;:14;;;:18;;;;;;;;;;;;;;;;;;4983:14;4979:67;;;5031:4;5013:1;:15;;;:22;;;;;;;;;;;;;;;;;;4979:67;621:29:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;::::0;:12:::1;:29::i;:::-;660:26;675:10;660:14;:26::i;:::-;5070:14:1::0;5066:101;;;5118:5;5100:1;:15;;;:23;;;;;;;;;;;;;;;;;;5142:14;5154:1;5142:14;;;;;;:::i;:::-;;;;;;;;5066:101;4092:1081;;;;;568:161:15:o;2441:144:0:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2973:148:3:-;3020:13;3045:22;3070:18;:16;:18::i;:::-;3045:43;;3105:1;:9;;3098:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2973:148;:::o;4472:178::-;4541:4;4557:13;4573:12;:10;:12::i;:::-;4557:28;;4595:27;4605:5;4612:2;4616:5;4595:9;:27::i;:::-;4639:4;4632:11;;;4472:178;;;;:::o;1819:58:2:-;;;;;;;;;;;;;;;;;;;:::o;4708:195:3:-;4788:7;4807:22;4832:18;:16;:18::i;:::-;4807:43;;4867:1;:13;;:20;4881:5;4867:20;;;;;;;;;;;;;;;:29;4888:7;4867:29;;;;;;;;;;;;;;;;4860:36;;;4708:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1947:153:3:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:4:-;940:7;966:10;959:17;;887:96;:::o;10001:128:3:-;10085:37;10094:5;10101:7;10110:5;10117:4;10085:8;:37::i;:::-;10001:128;;;:::o;11745:476::-;11844:24;11871:25;11881:5;11888:7;11871:9;:25::i;:::-;11844:52;;11929:17;11910:16;:36;11906:309;;;11985:5;11966:16;:24;11962:130;;;12044:7;12053:16;12071:5;12017:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11962:130;12133:57;12142:5;12149:7;12177:5;12158:16;:24;12184:5;12133:8;:57::i;:::-;11906:309;11834:387;11745:476;;;:::o;6605:300::-;6704:1;6688:18;;:4;:18;;;6684:86;;6756:1;6729:30;;;;;;;;;;;:::i;:::-;;;;;;;;6684:86;6797:1;6783:16;;:2;:16;;;6779:86;;6851:1;6822:32;;;;;;;;;;;:::i;:::-;;;;;;;;6779:86;6874:24;6882:4;6888:2;6892:5;6874:7;:24::i;:::-;6605:300;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;8733:208:3:-;8822:1;8803:21;;:7;:21;;;8799:91;;8876:1;8847:32;;;;;;;;;;;:::i;:::-;;;;;;;;8799:91;8899:35;8915:1;8919:7;8928:5;8899:7;:35::i;:::-;8733:208;;:::o;4603:312:2:-;4692:6;4675:23;;4683:4;4675:23;;;:120;;;;4789:6;4753:42;;:32;:30;:32::i;:::-;:42;;;;4675:120;4658:251;;;4869:29;;;;;;;;;;;;;;4658:251;4603:312::o;791:66:15:-;2334:13:0;:11;:13::i;:::-;791:66:15;:::o;6057:538:2:-;6174:17;6156:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6152:437;;6560:17;6518:60;;;;;;;;;;;:::i;:::-;;;;;;;;6152:437;811:66:8;6258:32:2;;6250:4;:40;6246:120;;6346:4;6317:34;;;;;;;;;;;:::i;:::-;;;;;;;;6246:120;6379:54;6409:17;6428:4;6379:29;:54::i;:::-;6209:235;6057:538;;:::o;5032:213::-;5115:6;5098:23;;5106:4;5098:23;;;5094:145;;5199:29;;;;;;;;;;;;;;5094:145;5032:213::o;3774:248:0:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;8737:170:1:-;8795:30;8870:21;8860:31;;8737:170;:::o;2282:147:3:-;6931:20:1;:18;:20::i;:::-;2384:38:3::1;2407:5;2414:7;2384:22;:38::i;:::-;2282:147:::0;;:::o;1847:127:0:-;6931:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;10976:487:3:-;11084:22;11109:18;:16;:18::i;:::-;11084:43;;11158:1;11141:19;;:5;:19;;;11137:89;;11212:1;11183:32;;;;;;;;;;;:::i;:::-;;;;;;;;11137:89;11258:1;11239:21;;:7;:21;;;11235:90;;11311:1;11283:31;;;;;;;;;;;:::i;:::-;;;;;;;;11235:90;11366:5;11334:1;:13;;:20;11348:5;11334:20;;;;;;;;;;;;;;;:29;11355:7;11334:29;;;;;;;;;;;;;;;:37;;;;11385:9;11381:76;;;11431:7;11415:31;;11424:5;11415:31;;;11440:5;11415:31;;;;;;:::i;:::-;;;;;;;;11381:76;11074:389;10976:487;;;;:::o;7220:1170::-;7305:22;7330:18;:16;:18::i;:::-;7305:43;;7378:1;7362:18;;:4;:18;;;7358:546;;7516:5;7498:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7358:546;;;7552:19;7574:1;:11;;:17;7586:4;7574:17;;;;;;;;;;;;;;;;7552:39;;7623:5;7609:11;:19;7605:115;;;7680:4;7686:11;7699:5;7655:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7605:115;7874:5;7860:11;:19;7840:1;:11;;:17;7852:4;7840:17;;;;;;;;;;;;;;;:39;;;;7538:366;7358:546;7932:1;7918:16;;:2;:16;;;7914:429;;8099:5;8081:1;:14;;;:23;;;;;;;;;;;7914:429;;;8313:5;8294:1;:11;;:15;8306:2;8294:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7914:429;8373:2;8358:25;;8367:4;8358:25;;;8377:5;8358:25;;;;;;:::i;:::-;;;;;;;;7295:1095;7220:1170;;;:::o;1441:138:8:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;7084:141:1:-;7151:17;:15;:17::i;:::-;7146:73;;7191:17;;;;;;;;;;;;;;7146:73;7084:141::o;2435:216:3:-;6931:20:1;:18;:20::i;:::-;2547:22:3::1;2572:18;:16;:18::i;:::-;2547:43;;2610:5;2600:1;:7;;:15;;;;;;:::i;:::-;;2637:7;2625:1;:9;;:19;;;;;;:::i;:::-;;2537:114;2435:216:::0;;:::o;1980:235:0:-;6931:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1899:163:14:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:8:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:12:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:8:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8487:120:1:-;8537:4;8560:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8553:47;;8487:120;:::o;4437:582:12:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:99:16;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:117::-;4855:1;4852;4845:12;4869:117;4978:1;4975;4968:12;4992:180;5040:77;5037:1;5030:88;5137:4;5134:1;5127:15;5161:4;5158:1;5151:15;5178:281;5261:27;5283:4;5261:27;:::i;:::-;5253:6;5249:40;5391:6;5379:10;5376:22;5355:18;5343:10;5340:34;5337:62;5334:88;;;5402:18;;:::i;:::-;5334:88;5442:10;5438:2;5431:22;5221:238;5178:281;;:::o;5465:129::-;5499:6;5526:20;;:::i;:::-;5516:30;;5555:33;5583:4;5575:6;5555:33;:::i;:::-;5465:129;;;:::o;5600:307::-;5661:4;5751:18;5743:6;5740:30;5737:56;;;5773:18;;:::i;:::-;5737:56;5811:29;5833:6;5811:29;:::i;:::-;5803:37;;5895:4;5889;5885:15;5877:23;;5600:307;;;:::o;5913:148::-;6011:6;6006:3;6001;5988:30;6052:1;6043:6;6038:3;6034:16;6027:27;5913:148;;;:::o;6067:423::-;6144:5;6169:65;6185:48;6226:6;6185:48;:::i;:::-;6169:65;:::i;:::-;6160:74;;6257:6;6250:5;6243:21;6295:4;6288:5;6284:16;6333:3;6324:6;6319:3;6315:16;6312:25;6309:112;;;6340:79;;:::i;:::-;6309:112;6430:54;6477:6;6472:3;6467;6430:54;:::i;:::-;6150:340;6067:423;;;;;:::o;6509:338::-;6564:5;6613:3;6606:4;6598:6;6594:17;6590:27;6580:122;;6621:79;;:::i;:::-;6580:122;6738:6;6725:20;6763:78;6837:3;6829:6;6822:4;6814:6;6810:17;6763:78;:::i;:::-;6754:87;;6570:277;6509:338;;;;:::o;6853:652::-;6930:6;6938;6987:2;6975:9;6966:7;6962:23;6958:32;6955:119;;;6993:79;;:::i;:::-;6955:119;7113:1;7138:53;7183:7;7174:6;7163:9;7159:22;7138:53;:::i;:::-;7128:63;;7084:117;7268:2;7257:9;7253:18;7240:32;7299:18;7291:6;7288:30;7285:117;;;7321:79;;:::i;:::-;7285:117;7426:62;7480:7;7471:6;7460:9;7456:22;7426:62;:::i;:::-;7416:72;;7211:287;6853:652;;;;;:::o;7511:77::-;7548:7;7577:5;7566:16;;7511:77;;;:::o;7594:118::-;7681:24;7699:5;7681:24;:::i;:::-;7676:3;7669:37;7594:118;;:::o;7718:222::-;7811:4;7849:2;7838:9;7834:18;7826:26;;7862:71;7930:1;7919:9;7915:17;7906:6;7862:71;:::i;:::-;7718:222;;;;:::o;7946:329::-;8005:6;8054:2;8042:9;8033:7;8029:23;8025:32;8022:119;;;8060:79;;:::i;:::-;8022:119;8180:1;8205:53;8250:7;8241:6;8230:9;8226:22;8205:53;:::i;:::-;8195:63;;8151:117;7946:329;;;;:::o;8281:118::-;8368:24;8386:5;8368:24;:::i;:::-;8363:3;8356:37;8281:118;;:::o;8405:222::-;8498:4;8536:2;8525:9;8521:18;8513:26;;8549:71;8617:1;8606:9;8602:17;8593:6;8549:71;:::i;:::-;8405:222;;;;:::o;8633:474::-;8701:6;8709;8758:2;8746:9;8737:7;8733:23;8729:32;8726:119;;;8764:79;;:::i;:::-;8726:119;8884:1;8909:53;8954:7;8945:6;8934:9;8930:22;8909:53;:::i;:::-;8899:63;;8855:117;9011:2;9037:53;9082:7;9073:6;9062:9;9058:22;9037:53;:::i;:::-;9027:63;;8982:118;8633:474;;;;;:::o;9113:180::-;9161:77;9158:1;9151:88;9258:4;9255:1;9248:15;9282:4;9279:1;9272:15;9299:320;9343:6;9380:1;9374:4;9370:12;9360:22;;9427:1;9421:4;9417:12;9448:18;9438:81;;9504:4;9496:6;9492:17;9482:27;;9438:81;9566:2;9558:6;9555:14;9535:18;9532:38;9529:84;;9585:18;;:::i;:::-;9529:84;9350:269;9299:320;;;:::o;9625:85::-;9670:7;9699:5;9688:16;;9625:85;;;:::o;9716:101::-;9752:7;9792:18;9785:5;9781:30;9770:41;;9716:101;;;:::o;9823:60::-;9851:3;9872:5;9865:12;;9823:60;;;:::o;9889:156::-;9946:9;9979:60;9996:42;10005:32;10031:5;10005:32;:::i;:::-;9996:42;:::i;:::-;9979:60;:::i;:::-;9966:73;;9889:156;;;:::o;10051:145::-;10145:44;10183:5;10145:44;:::i;:::-;10140:3;10133:57;10051:145;;:::o;10202:236::-;10302:4;10340:2;10329:9;10325:18;10317:26;;10353:78;10428:1;10417:9;10413:17;10404:6;10353:78;:::i;:::-;10202:236;;;;:::o;10444:442::-;10593:4;10631:2;10620:9;10616:18;10608:26;;10644:71;10712:1;10701:9;10697:17;10688:6;10644:71;:::i;:::-;10725:72;10793:2;10782:9;10778:18;10769:6;10725:72;:::i;:::-;10807;10875:2;10864:9;10860:18;10851:6;10807:72;:::i;:::-;10444:442;;;;;;:::o;10892:122::-;10965:24;10983:5;10965:24;:::i;:::-;10958:5;10955:35;10945:63;;11004:1;11001;10994:12;10945:63;10892:122;:::o;11020:143::-;11077:5;11108:6;11102:13;11093:22;;11124:33;11151:5;11124:33;:::i;:::-;11020:143;;;;:::o;11169:351::-;11239:6;11288:2;11276:9;11267:7;11263:23;11259:32;11256:119;;;11294:79;;:::i;:::-;11256:119;11414:1;11439:64;11495:7;11486:6;11475:9;11471:22;11439:64;:::i;:::-;11429:74;;11385:128;11169:351;;;;:::o;11526:180::-;11574:77;11571:1;11564:88;11671:4;11668:1;11661:15;11695:4;11692:1;11685:15;11712:191;11752:3;11771:20;11789:1;11771:20;:::i;:::-;11766:25;;11805:20;11823:1;11805:20;:::i;:::-;11800:25;;11848:1;11845;11841:9;11834:16;;11869:3;11866:1;11863:10;11860:36;;;11876:18;;:::i;:::-;11860:36;11712:191;;;;:::o;11909:141::-;11958:4;11981:3;11973:11;;12004:3;12001:1;11994:14;12038:4;12035:1;12025:18;12017:26;;11909:141;;;:::o;12056:93::-;12093:6;12140:2;12135;12128:5;12124:14;12120:23;12110:33;;12056:93;;;:::o;12155:107::-;12199:8;12249:5;12243:4;12239:16;12218:37;;12155:107;;;;:::o;12268:393::-;12337:6;12387:1;12375:10;12371:18;12410:97;12440:66;12429:9;12410:97;:::i;:::-;12528:39;12558:8;12547:9;12528:39;:::i;:::-;12516:51;;12600:4;12596:9;12589:5;12585:21;12576:30;;12649:4;12639:8;12635:19;12628:5;12625:30;12615:40;;12344:317;;12268:393;;;;;:::o;12667:142::-;12717:9;12750:53;12768:34;12777:24;12795:5;12777:24;:::i;:::-;12768:34;:::i;:::-;12750:53;:::i;:::-;12737:66;;12667:142;;;:::o;12815:75::-;12858:3;12879:5;12872:12;;12815:75;;;:::o;12896:269::-;13006:39;13037:7;13006:39;:::i;:::-;13067:91;13116:41;13140:16;13116:41;:::i;:::-;13108:6;13101:4;13095:11;13067:91;:::i;:::-;13061:4;13054:105;12972:193;12896:269;;;:::o;13171:73::-;13216:3;13237:1;13230:8;;13171:73;:::o;13250:189::-;13327:32;;:::i;:::-;13368:65;13426:6;13418;13412:4;13368:65;:::i;:::-;13303:136;13250:189;;:::o;13445:186::-;13505:120;13522:3;13515:5;13512:14;13505:120;;;13576:39;13613:1;13606:5;13576:39;:::i;:::-;13549:1;13542:5;13538:13;13529:22;;13505:120;;;13445:186;;:::o;13637:543::-;13738:2;13733:3;13730:11;13727:446;;;13772:38;13804:5;13772:38;:::i;:::-;13856:29;13874:10;13856:29;:::i;:::-;13846:8;13842:44;14039:2;14027:10;14024:18;14021:49;;;14060:8;14045:23;;14021:49;14083:80;14139:22;14157:3;14139:22;:::i;:::-;14129:8;14125:37;14112:11;14083:80;:::i;:::-;13742:431;;13727:446;13637:543;;;:::o;14186:117::-;14240:8;14290:5;14284:4;14280:16;14259:37;;14186:117;;;;:::o;14309:169::-;14353:6;14386:51;14434:1;14430:6;14422:5;14419:1;14415:13;14386:51;:::i;:::-;14382:56;14467:4;14461;14457:15;14447:25;;14360:118;14309:169;;;;:::o;14483:295::-;14559:4;14705:29;14730:3;14724:4;14705:29;:::i;:::-;14697:37;;14767:3;14764:1;14760:11;14754:4;14751:21;14743:29;;14483:295;;;;:::o;14783:1395::-;14900:37;14933:3;14900:37;:::i;:::-;15002:18;14994:6;14991:30;14988:56;;;15024:18;;:::i;:::-;14988:56;15068:38;15100:4;15094:11;15068:38;:::i;:::-;15153:67;15213:6;15205;15199:4;15153:67;:::i;:::-;15247:1;15271:4;15258:17;;15303:2;15295:6;15292:14;15320:1;15315:618;;;;15977:1;15994:6;15991:77;;;16043:9;16038:3;16034:19;16028:26;16019:35;;15991:77;16094:67;16154:6;16147:5;16094:67;:::i;:::-;16088:4;16081:81;15950:222;15285:887;;15315:618;15367:4;15363:9;15355:6;15351:22;15401:37;15433:4;15401:37;:::i;:::-;15460:1;15474:208;15488:7;15485:1;15482:14;15474:208;;;15567:9;15562:3;15558:19;15552:26;15544:6;15537:42;15618:1;15610:6;15606:14;15596:24;;15665:2;15654:9;15650:18;15637:31;;15511:4;15508:1;15504:12;15499:17;;15474:208;;;15710:6;15701:7;15698:19;15695:179;;;15768:9;15763:3;15759:19;15753:26;15811:48;15853:4;15845:6;15841:17;15830:9;15811:48;:::i;:::-;15803:6;15796:64;15718:156;15695:179;15920:1;15916;15908:6;15904:14;15900:22;15894:4;15887:36;15322:611;;;15285:887;;14875:1303;;;14783:1395;;:::o;16184:98::-;16235:6;16269:5;16263:12;16253:22;;16184:98;;;:::o;16288:147::-;16389:11;16426:3;16411:18;;16288:147;;;;:::o;16441:386::-;16545:3;16573:38;16605:5;16573:38;:::i;:::-;16627:88;16708:6;16703:3;16627:88;:::i;:::-;16620:95;;16724:65;16782:6;16777:3;16770:4;16763:5;16759:16;16724:65;:::i;:::-;16814:6;16809:3;16805:16;16798:23;;16549:278;16441:386;;;;:::o;16833:271::-;16963:3;16985:93;17074:3;17065:6;16985:93;:::i;:::-;16978:100;;17095:3;17088:10;;16833:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1750000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2903",
								"decimals()": "361",
								"initialize()": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2655",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2552",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH",
									"source": 15,
									"value": "A0"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "ASSIGNIMMUTABLE",
									"source": 15,
									"value": "468"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 399,
									"end": 1011,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122060e8c4f2fef5204f84f2df059ad2a3bb08aad7a40c54c9f63a5a825bbc6bb8ac64736f6c634300081d0033",
									".code": [
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "A9059CBB"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "AD3CB1CC"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "DD62ED3E"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "F2FDE38B"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "715018A6"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "8129FC1C"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "8DA5CB5B"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "tag",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "40C10F19"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "4F1EF286"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "52D1902D"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "18160DDD"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 399,
											"end": 1011,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "29"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "28"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "49"
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 914,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "tag",
											"source": 15,
											"value": "52"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 914,
											"end": 1009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "tag",
											"source": 15,
											"value": "51"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 729,
											"name": "tag",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 568,
											"end": 729,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 568,
											"end": 729,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 729,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 568,
											"end": 729,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "tag",
											"source": 15,
											"value": "72"
										},
										{
											"begin": 568,
											"end": 729,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 568,
											"end": 729,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 568,
											"end": 729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "tag",
											"source": 15,
											"value": "73"
										},
										{
											"begin": 568,
											"end": 729,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 568,
											"end": 729,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "83"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "84"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "85"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "88"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "96"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "98"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2774,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2786,
											"end": 2808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2811,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2811,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "104"
										},
										{
											"begin": 2811,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2786,
											"end": 2829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2846,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 2839,
											"end": 2853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "108"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "110"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "111"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2839,
											"end": 2853,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2716,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "tag",
											"source": 3,
											"value": "31"
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5299,
											"end": 5312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5315,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 5315,
											"end": 5327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "tag",
											"source": 3,
											"value": "113"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5299,
											"end": 5327,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5346,
											"end": 5351,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5353,
											"end": 5360,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5362,
											"end": 5367,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5337,
											"end": 5345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 5337,
											"end": 5368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 5337,
											"end": 5368,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5385,
											"end": 5389,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5378,
											"end": 5389,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5210,
											"end": 5396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3948,
											"end": 3955,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3967,
											"end": 3989,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3992,
											"end": 4008,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3992,
											"end": 4010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 3992,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3967,
											"end": 4010,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4027,
											"end": 4041,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4020,
											"end": 4041,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3896,
											"end": 4048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6075,
											"end": 6079,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6091,
											"end": 6106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6109,
											"end": 6119,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 6109,
											"end": 6121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 6109,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6091,
											"end": 6121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6147,
											"end": 6151,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6153,
											"end": 6160,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6162,
											"end": 6167,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6131,
											"end": 6146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 6131,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 6131,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6194,
											"end": 6196,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6198,
											"end": 6203,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6178,
											"end": 6204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "tag",
											"source": 3,
											"value": "123"
										},
										{
											"begin": 6178,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6225,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5988,
											"end": 6232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3808,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3829,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3820,
											"end": 3829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3754,
											"end": 3836,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "tag",
											"source": 15,
											"value": "53"
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 985,
											"end": 1002,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 991,
											"end": 993,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 995,
											"end": 1001,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 985,
											"end": 990,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 985,
											"end": 1002,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 985,
											"end": 1002,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 985,
											"end": 1002,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 914,
											"end": 1009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4171,
											"end": 4178,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4212,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4215,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4215,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 4215,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4190,
											"end": 4233,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4251,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4269,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4250,
											"end": 4270,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4243,
											"end": 4270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 568,
											"end": 729,
											"name": "tag",
											"source": 15,
											"value": "74"
										},
										{
											"begin": 568,
											"end": 729,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4741,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4952,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5570536166650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 15,
											"value": "5550530000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 621,
											"end": 633,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "161"
										},
										{
											"begin": 621,
											"end": 650,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "160"
										},
										{
											"begin": 621,
											"end": 650,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 660,
											"end": 686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 675,
											"end": 685,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 15
										},
										{
											"begin": 660,
											"end": 674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "163"
										},
										{
											"begin": 660,
											"end": 686,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 660,
											"end": 686,
											"modifierDepth": 1,
											"name": "tag",
											"source": 15,
											"value": "162"
										},
										{
											"begin": 660,
											"end": 686,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5118,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5101,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5115,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5142,
											"end": 5156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 568,
											"end": 729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "tag",
											"source": 3,
											"value": "82"
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3020,
											"end": 3033,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3045,
											"end": 3067,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3070,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 3070,
											"end": 3088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "tag",
											"source": 3,
											"value": "171"
										},
										{
											"begin": 3070,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3045,
											"end": 3088,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3106,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3105,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "172"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3098,
											"end": 3114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "173"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "175"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "tag",
											"source": 3,
											"value": "174"
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3098,
											"end": 3114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2973,
											"end": 3121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4541,
											"end": 4545,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4557,
											"end": 4570,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4573,
											"end": 4583,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "114"
										},
										{
											"begin": 4573,
											"end": 4585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 4573,
											"end": 4585,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 4585,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4605,
											"end": 4610,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4612,
											"end": 4614,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4604,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4595,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "tag",
											"source": 3,
											"value": "179"
										},
										{
											"begin": 4595,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4639,
											"end": 4643,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4632,
											"end": 4643,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4472,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "tag",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4795,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4807,
											"end": 4829,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4832,
											"end": 4848,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 4832,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "tag",
											"source": 3,
											"value": "181"
										},
										{
											"begin": 4832,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4807,
											"end": 4850,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4868,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4867,
											"end": 4880,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4886,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4887,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4888,
											"end": 4895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 4867,
											"end": 4896,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4860,
											"end": 4896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4708,
											"end": 4903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 3,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "tag",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 10117,
											"end": 10121,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10085,
											"end": 10093,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 10085,
											"end": 10122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "tag",
											"source": 3,
											"value": "191"
										},
										{
											"begin": 10085,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10129,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10001,
											"end": 10129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12221,
											"name": "tag",
											"source": 3,
											"value": "122"
										},
										{
											"begin": 11745,
											"end": 12221,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11844,
											"end": 11868,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 11881,
											"end": 11886,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11888,
											"end": 11895,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11871,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "97"
										},
										{
											"begin": 11871,
											"end": 11896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 11871,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11844,
											"end": 11896,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11929,
											"end": 11946,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11910,
											"end": 11926,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11910,
											"end": 11946,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11906,
											"end": 12215,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11906,
											"end": 12215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 11906,
											"end": 12215,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11985,
											"end": 11990,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11966,
											"end": 11982,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11966,
											"end": 11990,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11962,
											"end": 12092,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11962,
											"end": 12092,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 11962,
											"end": 12092,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12044,
											"end": 12051,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12053,
											"end": 12069,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12071,
											"end": 12076,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 12017,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12017,
											"end": 12077,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11962,
											"end": 12092,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 11962,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12133,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12142,
											"end": 12147,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12149,
											"end": 12156,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12177,
											"end": 12182,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12158,
											"end": 12174,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 12158,
											"end": 12182,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 12184,
											"end": 12189,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12133,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 12133,
											"end": 12190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12133,
											"end": 12190,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 12133,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11906,
											"end": 12215,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 11906,
											"end": 12215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11834,
											"end": 12221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12221,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11745,
											"end": 12221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6692,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6756,
											"end": 6757,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6729,
											"end": 6759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "tag",
											"source": 3,
											"value": "202"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6729,
											"end": 6759,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 6684,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6797,
											"end": 6798,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6785,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6783,
											"end": 6799,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6851,
											"end": 6852,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 6822,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "tag",
											"source": 3,
											"value": "204"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6822,
											"end": 6854,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "tag",
											"source": 3,
											"value": "203"
										},
										{
											"begin": 6779,
											"end": 6865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6882,
											"end": 6886,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6888,
											"end": 6890,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6892,
											"end": 6897,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6881,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 6874,
											"end": 6898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "tag",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 6874,
											"end": 6898,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8822,
											"end": 8823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8803,
											"end": 8824,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8876,
											"end": 8877,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 3,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 8847,
											"end": 8879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "tag",
											"source": 3,
											"value": "215"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8847,
											"end": 8879,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "tag",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 8799,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8915,
											"end": 8916,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8928,
											"end": 8933,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8906,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 8899,
											"end": 8934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 8899,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8941,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8733,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 4603,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4698,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4683,
											"end": 4687,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4698,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 4753,
											"end": 4783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 4753,
											"end": 4785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 4753,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4753,
											"end": 4795,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 4675,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4869,
											"end": 4898,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 4658,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4603,
											"end": 4915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 791,
											"end": 857,
											"name": "tag",
											"source": 15,
											"value": "137"
										},
										{
											"begin": 791,
											"end": 857,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 791,
											"end": 857,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 791,
											"end": 857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6174,
											"end": 6191,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6206,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6156,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 6156,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6560,
											"end": 6577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 6518,
											"end": 6578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6518,
											"end": 6578,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 6152,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6258,
											"end": 6290,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6250,
											"end": 6290,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6346,
											"end": 6350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 6317,
											"end": 6351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6317,
											"end": 6351,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 6246,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6409,
											"end": 6426,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6428,
											"end": 6432,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 6379,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "tag",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 6379,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6209,
											"end": 6444,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 5032,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "468"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5106,
											"end": 5110,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5199,
											"end": 5228,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 5094,
											"end": 5239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5032,
											"end": 5245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8795,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8891,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8737,
											"end": 8907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "tag",
											"source": 3,
											"value": "161"
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2407,
											"end": 2412,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2414,
											"end": 2421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2384,
											"end": 2422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "248"
										},
										{
											"begin": 2384,
											"end": 2422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2429,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2282,
											"end": 2429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "tag",
											"source": 3,
											"value": "192"
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11084,
											"end": 11106,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 11109,
											"end": 11125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 11109,
											"end": 11127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "tag",
											"source": 3,
											"value": "257"
										},
										{
											"begin": 11109,
											"end": 11127,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11084,
											"end": 11127,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11158,
											"end": 11159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11141,
											"end": 11146,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11141,
											"end": 11160,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11212,
											"end": 11213,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 11183,
											"end": 11215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11183,
											"end": 11215,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "tag",
											"source": 3,
											"value": "258"
										},
										{
											"begin": 11137,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11258,
											"end": 11259,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11239,
											"end": 11260,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11311,
											"end": 11312,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 11283,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "tag",
											"source": 3,
											"value": "261"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11283,
											"end": 11314,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "tag",
											"source": 3,
											"value": "260"
										},
										{
											"begin": 11235,
											"end": 11325,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11366,
											"end": 11371,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11335,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11334,
											"end": 11347,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11354,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11355,
											"end": 11362,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11334,
											"end": 11363,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11334,
											"end": 11371,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11385,
											"end": 11394,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11431,
											"end": 11438,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11440,
											"end": 11445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 11415,
											"end": 11446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "tag",
											"source": 3,
											"value": "263"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11415,
											"end": 11446,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "tag",
											"source": 3,
											"value": "262"
										},
										{
											"begin": 11381,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11074,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10976,
											"end": 11463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "tag",
											"source": 3,
											"value": "206"
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7327,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7330,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 7330,
											"end": 7348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "tag",
											"source": 3,
											"value": "265"
										},
										{
											"begin": 7330,
											"end": 7348,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7305,
											"end": 7348,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7378,
											"end": 7379,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7366,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7362,
											"end": 7380,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7516,
											"end": 7521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7499,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7512,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "268"
										},
										{
											"begin": 7498,
											"end": 7521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "tag",
											"source": 3,
											"value": "267"
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7498,
											"end": 7521,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 3,
											"value": "266"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7571,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7575,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7586,
											"end": 7590,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7574,
											"end": 7591,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7552,
											"end": 7591,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7609,
											"end": 7620,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7609,
											"end": 7628,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7680,
											"end": 7684,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7686,
											"end": 7697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 7655,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "tag",
											"source": 3,
											"value": "271"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7655,
											"end": 7705,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "tag",
											"source": 3,
											"value": "270"
										},
										{
											"begin": 7605,
											"end": 7720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7874,
											"end": 7879,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 7871,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7860,
											"end": 7879,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7857,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 7840,
											"end": 7879,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7538,
											"end": 7904,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "tag",
											"source": 3,
											"value": "269"
										},
										{
											"begin": 7358,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7932,
											"end": 7933,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7920,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7918,
											"end": 7934,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8099,
											"end": 8104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8082,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8095,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8081,
											"end": 8104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 3,
											"value": "272"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8313,
											"end": 8318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8295,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8306,
											"end": 8308,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8309,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 8294,
											"end": 8318,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 7914,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8373,
											"end": 8375,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8367,
											"end": 8371,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8377,
											"end": 8382,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 8358,
											"end": 8383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "tag",
											"source": 3,
											"value": "274"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8358,
											"end": 8383,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 7295,
											"end": 8390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7220,
											"end": 8390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 8,
											"value": "238"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 7151,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 7151,
											"end": 7168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 7151,
											"end": 7168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7084,
											"end": 7225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "tag",
											"source": 3,
											"value": "249"
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 2572,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "105"
										},
										{
											"begin": 2572,
											"end": 2590,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "294"
										},
										{
											"begin": 2572,
											"end": 2590,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2547,
											"end": 2590,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2610,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2601,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 2600,
											"end": 2607,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 2600,
											"end": 2615,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "295"
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2600,
											"end": 2615,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2637,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2626,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2625,
											"end": 2634,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 2625,
											"end": 2644,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "297"
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2625,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2537,
											"end": 2651,
											"modifierDepth": 1,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2651,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2435,
											"end": 2651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 8,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "308"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "310"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "314"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8537,
											"end": 8541,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 8560,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 8560,
											"end": 8586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 8560,
											"end": 8586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8553,
											"end": 8600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "316"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 4933,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "tag",
											"source": 12,
											"value": "328"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 12,
											"value": "325"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 12,
											"value": "324"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 12,
											"value": "330"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 16
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 16,
											"value": "426"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 16,
											"value": "428"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4746,
											"end": 4863,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 4746,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4869,
											"end": 4986,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 4869,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4980,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4992,
											"end": 5172,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 4992,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5040,
											"end": 5117,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5037,
											"end": 5038,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5118,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5127,
											"end": 5142,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5161,
											"end": 5165,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5178,
											"end": 5459,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 5178,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5261,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5261,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 5261,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5261,
											"end": 5288,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 5261,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5253,
											"end": 5259,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5249,
											"end": 5289,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5379,
											"end": 5389,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5376,
											"end": 5398,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5355,
											"end": 5373,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5343,
											"end": 5353,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5340,
											"end": 5374,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5337,
											"end": 5399,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 5402,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5442,
											"end": 5452,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5438,
											"end": 5440,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5431,
											"end": 5453,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5221,
											"end": 5459,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5178,
											"end": 5459,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5178,
											"end": 5459,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5178,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "tag",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 5526,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5516,
											"end": 5546,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5516,
											"end": 5546,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5555,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 5583,
											"end": 5587,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5555,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 5555,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5555,
											"end": 5588,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 5555,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5600,
											"end": 5907,
											"name": "tag",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 5600,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5769,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5743,
											"end": 5749,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5740,
											"end": 5770,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5737,
											"end": 5793,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5737,
											"end": 5793,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 5737,
											"end": 5793,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 5773,
											"end": 5791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 5773,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5737,
											"end": 5793,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 5737,
											"end": 5793,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5811,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 5833,
											"end": 5839,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5811,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 5811,
											"end": 5840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5811,
											"end": 5840,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 5811,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5803,
											"end": 5840,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5803,
											"end": 5840,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5895,
											"end": 5899,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5889,
											"end": 5893,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5885,
											"end": 5900,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5877,
											"end": 5900,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5877,
											"end": 5900,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5600,
											"end": 5907,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5600,
											"end": 5907,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5600,
											"end": 5907,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5600,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5913,
											"end": 6061,
											"name": "tag",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 5913,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6011,
											"end": 6017,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6006,
											"end": 6009,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6001,
											"end": 6004,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5988,
											"end": 6018,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 6052,
											"end": 6053,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6034,
											"end": 6050,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6027,
											"end": 6054,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5913,
											"end": 6061,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5913,
											"end": 6061,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5913,
											"end": 6061,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5913,
											"end": 6061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6490,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 6067,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6144,
											"end": 6149,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 6185,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 6226,
											"end": 6232,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6185,
											"end": 6233,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "357"
										},
										{
											"begin": 6185,
											"end": 6233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6185,
											"end": 6233,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 6185,
											"end": 6233,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "356"
										},
										{
											"begin": 6169,
											"end": 6234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 6169,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6160,
											"end": 6234,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6160,
											"end": 6234,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6257,
											"end": 6263,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6250,
											"end": 6255,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6243,
											"end": 6264,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6295,
											"end": 6299,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6293,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6284,
											"end": 6300,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6333,
											"end": 6336,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6330,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6322,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6315,
											"end": 6331,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6312,
											"end": 6337,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6309,
											"end": 6421,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6309,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 6309,
											"end": 6421,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6340,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 6340,
											"end": 6419,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 6340,
											"end": 6419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6340,
											"end": 6419,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 6340,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6309,
											"end": 6421,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 6309,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6430,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 6477,
											"end": 6483,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6472,
											"end": 6475,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6467,
											"end": 6470,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6430,
											"end": 6484,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "358"
										},
										{
											"begin": 6430,
											"end": 6484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6430,
											"end": 6484,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 6430,
											"end": 6484,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6150,
											"end": 6490,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6490,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6490,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6490,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6490,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6490,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6509,
											"end": 6847,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 6509,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6564,
											"end": 6569,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6613,
											"end": 6616,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6606,
											"end": 6610,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6598,
											"end": 6604,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6594,
											"end": 6611,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6590,
											"end": 6617,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6580,
											"end": 6702,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 6580,
											"end": 6702,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6621,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 6621,
											"end": 6700,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 6621,
											"end": 6700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6621,
											"end": 6700,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 6621,
											"end": 6700,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6580,
											"end": 6702,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 6580,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6738,
											"end": 6744,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6763,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 6837,
											"end": 6840,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6829,
											"end": 6835,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6822,
											"end": 6826,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6814,
											"end": 6820,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6810,
											"end": 6827,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6763,
											"end": 6841,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 6763,
											"end": 6841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6763,
											"end": 6841,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 6763,
											"end": 6841,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6754,
											"end": 6841,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6754,
											"end": 6841,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6570,
											"end": 6847,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6509,
											"end": 6847,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6509,
											"end": 6847,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6509,
											"end": 6847,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6509,
											"end": 6847,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6509,
											"end": 6847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 7505,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 6853,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6930,
											"end": 6936,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6938,
											"end": 6944,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6987,
											"end": 6989,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6975,
											"end": 6984,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 6973,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6962,
											"end": 6985,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6958,
											"end": 6990,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 6993,
											"end": 7072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 6993,
											"end": 7072,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 6955,
											"end": 7074,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7113,
											"end": 7114,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 7183,
											"end": 7190,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7174,
											"end": 7180,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7163,
											"end": 7172,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7159,
											"end": 7181,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 7138,
											"end": 7191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 7138,
											"end": 7191,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7128,
											"end": 7191,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7084,
											"end": 7201,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7268,
											"end": 7270,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7253,
											"end": 7271,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7240,
											"end": 7272,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 7299,
											"end": 7317,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7288,
											"end": 7318,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7285,
											"end": 7402,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7285,
											"end": 7402,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 7285,
											"end": 7402,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7321,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 7321,
											"end": 7400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 7321,
											"end": 7400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7321,
											"end": 7400,
											"name": "tag",
											"source": 16,
											"value": "474"
										},
										{
											"begin": 7321,
											"end": 7400,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7285,
											"end": 7402,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 7285,
											"end": 7402,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7426,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 7480,
											"end": 7487,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7471,
											"end": 7477,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7460,
											"end": 7469,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7456,
											"end": 7478,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7426,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 7426,
											"end": 7488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7426,
											"end": 7488,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 7426,
											"end": 7488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7416,
											"end": 7488,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7416,
											"end": 7488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7211,
											"end": 7498,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 7505,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 7505,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 7505,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 7505,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 7505,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6853,
											"end": 7505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7511,
											"end": 7588,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 7511,
											"end": 7588,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7548,
											"end": 7555,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7582,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7566,
											"end": 7582,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7566,
											"end": 7582,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7511,
											"end": 7588,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7511,
											"end": 7588,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7511,
											"end": 7588,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7511,
											"end": 7588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7594,
											"end": 7712,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 7594,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7681,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 7699,
											"end": 7704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7681,
											"end": 7705,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 7681,
											"end": 7705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7681,
											"end": 7705,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 7681,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7676,
											"end": 7679,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7669,
											"end": 7706,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7594,
											"end": 7712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7594,
											"end": 7712,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7594,
											"end": 7712,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7718,
											"end": 7940,
											"name": "tag",
											"source": 16,
											"value": "62"
										},
										{
											"begin": 7718,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7811,
											"end": 7815,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7849,
											"end": 7851,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7838,
											"end": 7847,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7834,
											"end": 7852,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7826,
											"end": 7852,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7826,
											"end": 7852,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7862,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 7930,
											"end": 7931,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7919,
											"end": 7928,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7915,
											"end": 7932,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7906,
											"end": 7912,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7862,
											"end": 7933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 7862,
											"end": 7933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7862,
											"end": 7933,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 7862,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7718,
											"end": 7940,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7718,
											"end": 7940,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7718,
											"end": 7940,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7718,
											"end": 7940,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7718,
											"end": 7940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8275,
											"name": "tag",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 7946,
											"end": 8275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8005,
											"end": 8011,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8056,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8042,
											"end": 8051,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8033,
											"end": 8040,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8029,
											"end": 8052,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8025,
											"end": 8057,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8022,
											"end": 8141,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8022,
											"end": 8141,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 8022,
											"end": 8141,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8060,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 8060,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 8060,
											"end": 8139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8060,
											"end": 8139,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 8060,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8022,
											"end": 8141,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 8022,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8180,
											"end": 8181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 8250,
											"end": 8257,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8241,
											"end": 8247,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8230,
											"end": 8239,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8226,
											"end": 8248,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8205,
											"end": 8258,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 8205,
											"end": 8258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8205,
											"end": 8258,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 8205,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8195,
											"end": 8258,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8195,
											"end": 8258,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8151,
											"end": 8268,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8275,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8275,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8399,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 8281,
											"end": 8399,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 8386,
											"end": 8391,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 8368,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 8368,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8363,
											"end": 8366,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8356,
											"end": 8393,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8399,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8399,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8281,
											"end": 8399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8502,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8538,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8525,
											"end": 8534,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8521,
											"end": 8539,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8513,
											"end": 8539,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8513,
											"end": 8539,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8549,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8615,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8602,
											"end": 8619,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8593,
											"end": 8599,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8549,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 8549,
											"end": 8620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8549,
											"end": 8620,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 8549,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8405,
											"end": 8627,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8405,
											"end": 8627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "tag",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8701,
											"end": 8707,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8709,
											"end": 8715,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8758,
											"end": 8760,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8746,
											"end": 8755,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8737,
											"end": 8744,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8733,
											"end": 8756,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8729,
											"end": 8761,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8764,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 8764,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 8764,
											"end": 8843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8764,
											"end": 8843,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 8764,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 8726,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8884,
											"end": 8885,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8909,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 8954,
											"end": 8961,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8945,
											"end": 8951,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8934,
											"end": 8943,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8930,
											"end": 8952,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8909,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 8909,
											"end": 8962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8909,
											"end": 8962,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 8909,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8899,
											"end": 8962,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8899,
											"end": 8962,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8855,
											"end": 8972,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9037,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 9082,
											"end": 9089,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9073,
											"end": 9079,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9062,
											"end": 9071,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 9058,
											"end": 9080,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 9037,
											"end": 9090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9037,
											"end": 9090,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 9037,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9027,
											"end": 9090,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9027,
											"end": 9090,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8982,
											"end": 9100,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8633,
											"end": 9107,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8633,
											"end": 9107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9113,
											"end": 9293,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 9113,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9161,
											"end": 9238,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9158,
											"end": 9159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9151,
											"end": 9239,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9258,
											"end": 9262,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 9255,
											"end": 9256,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9248,
											"end": 9263,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9282,
											"end": 9286,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9279,
											"end": 9280,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9287,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9299,
											"end": 9619,
											"name": "tag",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 9299,
											"end": 9619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9343,
											"end": 9349,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 9374,
											"end": 9378,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9370,
											"end": 9382,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 9360,
											"end": 9382,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9360,
											"end": 9382,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9427,
											"end": 9428,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 9421,
											"end": 9425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9417,
											"end": 9429,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9448,
											"end": 9466,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9438,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 9438,
											"end": 9519,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9504,
											"end": 9508,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 9496,
											"end": 9502,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9492,
											"end": 9509,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9482,
											"end": 9509,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9482,
											"end": 9509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9438,
											"end": 9519,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 9438,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9566,
											"end": 9568,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9558,
											"end": 9564,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9555,
											"end": 9569,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 9535,
											"end": 9553,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9532,
											"end": 9570,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9529,
											"end": 9613,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 9529,
											"end": 9613,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9585,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 9585,
											"end": 9603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 9585,
											"end": 9603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9585,
											"end": 9603,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 9585,
											"end": 9603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9529,
											"end": 9613,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 9529,
											"end": 9613,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9350,
											"end": 9619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9299,
											"end": 9619,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9299,
											"end": 9619,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9299,
											"end": 9619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9299,
											"end": 9619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9625,
											"end": 9710,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 9625,
											"end": 9710,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9670,
											"end": 9677,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9699,
											"end": 9704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9688,
											"end": 9704,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9688,
											"end": 9704,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9625,
											"end": 9710,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9625,
											"end": 9710,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9625,
											"end": 9710,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9625,
											"end": 9710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9716,
											"end": 9817,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 9716,
											"end": 9817,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9752,
											"end": 9759,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9792,
											"end": 9810,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9785,
											"end": 9790,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9781,
											"end": 9811,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 9770,
											"end": 9811,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9770,
											"end": 9811,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9716,
											"end": 9817,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9716,
											"end": 9817,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9716,
											"end": 9817,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9716,
											"end": 9817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9823,
											"end": 9883,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 9823,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9851,
											"end": 9854,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9872,
											"end": 9877,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9865,
											"end": 9877,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9865,
											"end": 9877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9823,
											"end": 9883,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9823,
											"end": 9883,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9823,
											"end": 9883,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9823,
											"end": 9883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9889,
											"end": 10045,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 9889,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9946,
											"end": 9955,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9979,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 9996,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 10005,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 10031,
											"end": 10036,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10005,
											"end": 10037,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 10005,
											"end": 10037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10005,
											"end": 10037,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 10005,
											"end": 10037,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9996,
											"end": 10038,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 9996,
											"end": 10038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9996,
											"end": 10038,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 9996,
											"end": 10038,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9979,
											"end": 10039,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 9979,
											"end": 10039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9979,
											"end": 10039,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 9979,
											"end": 10039,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9966,
											"end": 10039,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9966,
											"end": 10039,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9889,
											"end": 10045,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9889,
											"end": 10045,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9889,
											"end": 10045,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9889,
											"end": 10045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10051,
											"end": 10196,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 10051,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10145,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 10183,
											"end": 10188,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10145,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 10145,
											"end": 10189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10145,
											"end": 10189,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 10145,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10140,
											"end": 10143,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10133,
											"end": 10190,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10051,
											"end": 10196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10051,
											"end": 10196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10051,
											"end": 10196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10202,
											"end": 10438,
											"name": "tag",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 10202,
											"end": 10438,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10302,
											"end": 10306,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10340,
											"end": 10342,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10329,
											"end": 10338,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10325,
											"end": 10343,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10317,
											"end": 10343,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10317,
											"end": 10343,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10353,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 10428,
											"end": 10429,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10417,
											"end": 10426,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10413,
											"end": 10430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10404,
											"end": 10410,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10353,
											"end": 10431,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 10353,
											"end": 10431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10353,
											"end": 10431,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 10353,
											"end": 10431,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10202,
											"end": 10438,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10202,
											"end": 10438,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10202,
											"end": 10438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10202,
											"end": 10438,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10202,
											"end": 10438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10886,
											"name": "tag",
											"source": 16,
											"value": "198"
										},
										{
											"begin": 10444,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10593,
											"end": 10597,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10631,
											"end": 10633,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 10620,
											"end": 10629,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10616,
											"end": 10634,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10608,
											"end": 10634,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10608,
											"end": 10634,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10644,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 10712,
											"end": 10713,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10701,
											"end": 10710,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10697,
											"end": 10714,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10688,
											"end": 10694,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 10644,
											"end": 10715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 10644,
											"end": 10715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10644,
											"end": 10715,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 10644,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10725,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 10793,
											"end": 10795,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10782,
											"end": 10791,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10778,
											"end": 10796,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10769,
											"end": 10775,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 10725,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 10725,
											"end": 10797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10725,
											"end": 10797,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 10725,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10807,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 10875,
											"end": 10877,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10860,
											"end": 10878,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10851,
											"end": 10857,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10807,
											"end": 10879,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 10807,
											"end": 10879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10807,
											"end": 10879,
											"name": "tag",
											"source": 16,
											"value": "513"
										},
										{
											"begin": 10807,
											"end": 10879,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10886,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10886,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10886,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10886,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10886,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10886,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10444,
											"end": 10886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10892,
											"end": 11014,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 10892,
											"end": 11014,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10965,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 10983,
											"end": 10988,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10965,
											"end": 10989,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 10965,
											"end": 10989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10965,
											"end": 10989,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 10965,
											"end": 10989,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10958,
											"end": 10963,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10955,
											"end": 10990,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 10945,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 10945,
											"end": 11008,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11004,
											"end": 11005,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11001,
											"end": 11002,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10994,
											"end": 11006,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10945,
											"end": 11008,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 10945,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10892,
											"end": 11014,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10892,
											"end": 11014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11163,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 11020,
											"end": 11163,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11077,
											"end": 11082,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11108,
											"end": 11114,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11102,
											"end": 11115,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 11093,
											"end": 11115,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11093,
											"end": 11115,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11124,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 11151,
											"end": 11156,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11124,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 11124,
											"end": 11157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11124,
											"end": 11157,
											"name": "tag",
											"source": 16,
											"value": "518"
										},
										{
											"begin": 11124,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11163,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11163,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11163,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11020,
											"end": 11163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11169,
											"end": 11520,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 11169,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11239,
											"end": 11245,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11288,
											"end": 11290,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11276,
											"end": 11285,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11267,
											"end": 11274,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11263,
											"end": 11286,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11259,
											"end": 11291,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11294,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 11294,
											"end": 11373,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 11294,
											"end": 11373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11294,
											"end": 11373,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 11294,
											"end": 11373,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 11256,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11414,
											"end": 11415,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 11495,
											"end": 11502,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11486,
											"end": 11492,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11475,
											"end": 11484,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11471,
											"end": 11493,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11439,
											"end": 11503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 11439,
											"end": 11503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11439,
											"end": 11503,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 11439,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11429,
											"end": 11503,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11429,
											"end": 11503,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11385,
											"end": 11513,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11169,
											"end": 11520,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11169,
											"end": 11520,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11169,
											"end": 11520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11169,
											"end": 11520,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11169,
											"end": 11520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11526,
											"end": 11706,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 11526,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11574,
											"end": 11651,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11571,
											"end": 11572,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11564,
											"end": 11652,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11671,
											"end": 11675,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 11668,
											"end": 11669,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 11661,
											"end": 11676,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11695,
											"end": 11699,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 11692,
											"end": 11693,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11685,
											"end": 11700,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 11712,
											"end": 11903,
											"name": "tag",
											"source": 16,
											"value": "268"
										},
										{
											"begin": 11712,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11752,
											"end": 11755,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11771,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 11789,
											"end": 11790,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11771,
											"end": 11791,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 11771,
											"end": 11791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11771,
											"end": 11791,
											"name": "tag",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 11771,
											"end": 11791,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11766,
											"end": 11791,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11766,
											"end": 11791,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11805,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 11823,
											"end": 11824,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11805,
											"end": 11825,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 11805,
											"end": 11825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11805,
											"end": 11825,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 11805,
											"end": 11825,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11800,
											"end": 11825,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11800,
											"end": 11825,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11848,
											"end": 11849,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11845,
											"end": 11846,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11841,
											"end": 11850,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11834,
											"end": 11850,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11834,
											"end": 11850,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11869,
											"end": 11872,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11866,
											"end": 11867,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11863,
											"end": 11873,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11860,
											"end": 11896,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11860,
											"end": 11896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 11860,
											"end": 11896,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 11876,
											"end": 11894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 11876,
											"end": 11894,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11860,
											"end": 11896,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 11860,
											"end": 11896,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11712,
											"end": 11903,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11712,
											"end": 11903,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11712,
											"end": 11903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11712,
											"end": 11903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11712,
											"end": 11903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11909,
											"end": 12050,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 11909,
											"end": 12050,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11958,
											"end": 11962,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11981,
											"end": 11984,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11973,
											"end": 11984,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11973,
											"end": 11984,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12004,
											"end": 12007,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12001,
											"end": 12002,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11994,
											"end": 12008,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12038,
											"end": 12042,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12035,
											"end": 12036,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12025,
											"end": 12043,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 12017,
											"end": 12043,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12017,
											"end": 12043,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11909,
											"end": 12050,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11909,
											"end": 12050,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11909,
											"end": 12050,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11909,
											"end": 12050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12056,
											"end": 12149,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 12056,
											"end": 12149,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12093,
											"end": 12099,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12140,
											"end": 12142,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12135,
											"end": 12137,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 12128,
											"end": 12133,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12124,
											"end": 12138,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12120,
											"end": 12143,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 12143,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12110,
											"end": 12143,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12056,
											"end": 12149,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12056,
											"end": 12149,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12056,
											"end": 12149,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12056,
											"end": 12149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12155,
											"end": 12262,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 12155,
											"end": 12262,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12199,
											"end": 12207,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12249,
											"end": 12254,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12243,
											"end": 12247,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12239,
											"end": 12255,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 12218,
											"end": 12255,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12218,
											"end": 12255,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12155,
											"end": 12262,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12155,
											"end": 12262,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12155,
											"end": 12262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12155,
											"end": 12262,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12155,
											"end": 12262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12268,
											"end": 12661,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 12268,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12337,
											"end": 12343,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12387,
											"end": 12388,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 12375,
											"end": 12385,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12371,
											"end": 12389,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 12410,
											"end": 12507,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 12440,
											"end": 12506,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12429,
											"end": 12438,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12410,
											"end": 12507,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 12410,
											"end": 12507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12410,
											"end": 12507,
											"name": "tag",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 12410,
											"end": 12507,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12528,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 12558,
											"end": 12566,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12547,
											"end": 12556,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12528,
											"end": 12567,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 12528,
											"end": 12567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12528,
											"end": 12567,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 12528,
											"end": 12567,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12516,
											"end": 12567,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 12516,
											"end": 12567,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12600,
											"end": 12604,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12596,
											"end": 12605,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 12589,
											"end": 12594,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12585,
											"end": 12606,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12576,
											"end": 12606,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12576,
											"end": 12606,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12649,
											"end": 12653,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12639,
											"end": 12647,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12635,
											"end": 12654,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12628,
											"end": 12633,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12625,
											"end": 12655,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 12615,
											"end": 12655,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12615,
											"end": 12655,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12344,
											"end": 12661,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12344,
											"end": 12661,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12268,
											"end": 12661,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12268,
											"end": 12661,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12268,
											"end": 12661,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12268,
											"end": 12661,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12268,
											"end": 12661,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12268,
											"end": 12661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12667,
											"end": 12809,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 12667,
											"end": 12809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12717,
											"end": 12726,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12750,
											"end": 12803,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 12768,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 12777,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 12795,
											"end": 12800,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12777,
											"end": 12801,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 12777,
											"end": 12801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12777,
											"end": 12801,
											"name": "tag",
											"source": 16,
											"value": "538"
										},
										{
											"begin": 12777,
											"end": 12801,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12768,
											"end": 12802,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 12768,
											"end": 12802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12768,
											"end": 12802,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 12768,
											"end": 12802,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12750,
											"end": 12803,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 12750,
											"end": 12803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12750,
											"end": 12803,
											"name": "tag",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 12750,
											"end": 12803,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12737,
											"end": 12803,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12737,
											"end": 12803,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12667,
											"end": 12809,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12667,
											"end": 12809,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12667,
											"end": 12809,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12667,
											"end": 12809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12815,
											"end": 12890,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 12815,
											"end": 12890,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12858,
											"end": 12861,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12879,
											"end": 12884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12872,
											"end": 12884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12872,
											"end": 12884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12815,
											"end": 12890,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12815,
											"end": 12890,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12815,
											"end": 12890,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12815,
											"end": 12890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12896,
											"end": 13165,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 12896,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13006,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13006,
											"end": 13045,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 13006,
											"end": 13045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13006,
											"end": 13045,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 13006,
											"end": 13045,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13067,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 13116,
											"end": 13157,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 13140,
											"end": 13156,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13116,
											"end": 13157,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 13116,
											"end": 13157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13116,
											"end": 13157,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 13116,
											"end": 13157,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13108,
											"end": 13114,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13101,
											"end": 13105,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13095,
											"end": 13106,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 13067,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 13067,
											"end": 13158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13067,
											"end": 13158,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 13067,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13061,
											"end": 13065,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13054,
											"end": 13159,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 12972,
											"end": 13165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12896,
											"end": 13165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12896,
											"end": 13165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12896,
											"end": 13165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12896,
											"end": 13165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13171,
											"end": 13244,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 13171,
											"end": 13244,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13216,
											"end": 13219,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13237,
											"end": 13238,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13230,
											"end": 13238,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13230,
											"end": 13238,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13171,
											"end": 13244,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13171,
											"end": 13244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13250,
											"end": 13439,
											"name": "tag",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 13250,
											"end": 13439,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13327,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 13327,
											"end": 13359,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 13327,
											"end": 13359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13327,
											"end": 13359,
											"name": "tag",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 13327,
											"end": 13359,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 13426,
											"end": 13432,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13418,
											"end": 13424,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13412,
											"end": 13416,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13433,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 13368,
											"end": 13433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13368,
											"end": 13433,
											"name": "tag",
											"source": 16,
											"value": "547"
										},
										{
											"begin": 13368,
											"end": 13433,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13303,
											"end": 13439,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13250,
											"end": 13439,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13250,
											"end": 13439,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13250,
											"end": 13439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13445,
											"end": 13631,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 13445,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13522,
											"end": 13525,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13515,
											"end": 13520,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13512,
											"end": 13526,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13615,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 13613,
											"end": 13614,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13606,
											"end": 13611,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13615,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 13576,
											"end": 13615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13576,
											"end": 13615,
											"name": "tag",
											"source": 16,
											"value": "552"
										},
										{
											"begin": 13576,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13549,
											"end": 13550,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 13542,
											"end": 13547,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13538,
											"end": 13551,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13529,
											"end": 13551,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13529,
											"end": 13551,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "tag",
											"source": 16,
											"value": "551"
										},
										{
											"begin": 13505,
											"end": 13625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13445,
											"end": 13631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13445,
											"end": 13631,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13445,
											"end": 13631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13637,
											"end": 14180,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 13637,
											"end": 14180,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13738,
											"end": 13740,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 13733,
											"end": 13736,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13730,
											"end": 13741,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 13727,
											"end": 14173,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13727,
											"end": 14173,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 13727,
											"end": 14173,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13772,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 13804,
											"end": 13809,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13772,
											"end": 13810,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 13772,
											"end": 13810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13772,
											"end": 13810,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 13772,
											"end": 13810,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13856,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 13874,
											"end": 13884,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13856,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 13856,
											"end": 13885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13856,
											"end": 13885,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 13856,
											"end": 13885,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13846,
											"end": 13854,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13842,
											"end": 13886,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14039,
											"end": 14041,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14027,
											"end": 14037,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14024,
											"end": 14042,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 14021,
											"end": 14070,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14021,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 14021,
											"end": 14070,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14060,
											"end": 14068,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14045,
											"end": 14068,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14045,
											"end": 14068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14021,
											"end": 14070,
											"name": "tag",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 14021,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14083,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 14139,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 14157,
											"end": 14160,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14139,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 14139,
											"end": 14161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14139,
											"end": 14161,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 14139,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14129,
											"end": 14137,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14125,
											"end": 14162,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14112,
											"end": 14123,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14083,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 14083,
											"end": 14163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14083,
											"end": 14163,
											"name": "tag",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 14083,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13742,
											"end": 14173,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13742,
											"end": 14173,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13727,
											"end": 14173,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 13727,
											"end": 14173,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13637,
											"end": 14180,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13637,
											"end": 14180,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13637,
											"end": 14180,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13637,
											"end": 14180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14303,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 14186,
											"end": 14303,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14240,
											"end": 14248,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14290,
											"end": 14295,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14284,
											"end": 14288,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14280,
											"end": 14296,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 14259,
											"end": 14296,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14259,
											"end": 14296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14303,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14303,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14303,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14186,
											"end": 14303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14353,
											"end": 14359,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14386,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 14434,
											"end": 14435,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14430,
											"end": 14436,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 14422,
											"end": 14427,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14419,
											"end": 14420,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 14415,
											"end": 14428,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 14386,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 14386,
											"end": 14437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14386,
											"end": 14437,
											"name": "tag",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 14386,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14382,
											"end": 14438,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 14467,
											"end": 14471,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 14461,
											"end": 14465,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14457,
											"end": 14472,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 14447,
											"end": 14472,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14447,
											"end": 14472,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14360,
											"end": 14478,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14309,
											"end": 14478,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14309,
											"end": 14478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14778,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 14483,
											"end": 14778,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14559,
											"end": 14563,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14705,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 14730,
											"end": 14733,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14724,
											"end": 14728,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14705,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 14705,
											"end": 14734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14705,
											"end": 14734,
											"name": "tag",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 14705,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14697,
											"end": 14734,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14697,
											"end": 14734,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14767,
											"end": 14770,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14764,
											"end": 14765,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 14760,
											"end": 14771,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 14754,
											"end": 14758,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14751,
											"end": 14772,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 14743,
											"end": 14772,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14743,
											"end": 14772,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14778,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14778,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14778,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14778,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14483,
											"end": 14778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14783,
											"end": 16178,
											"name": "tag",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 14783,
											"end": 16178,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 14933,
											"end": 14936,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 14900,
											"end": 14937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "tag",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 14900,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15002,
											"end": 15020,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14994,
											"end": 15000,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14991,
											"end": 15021,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 14988,
											"end": 15044,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14988,
											"end": 15044,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 14988,
											"end": 15044,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 15024,
											"end": 15042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "tag",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14988,
											"end": 15044,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 14988,
											"end": 15044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 15100,
											"end": 15104,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15094,
											"end": 15105,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15106,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 15068,
											"end": 15106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15068,
											"end": 15106,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 15068,
											"end": 15106,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15153,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 15213,
											"end": 15219,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15205,
											"end": 15211,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15199,
											"end": 15203,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15153,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 15153,
											"end": 15220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15153,
											"end": 15220,
											"name": "tag",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 15153,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15247,
											"end": 15248,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15271,
											"end": 15275,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15258,
											"end": 15275,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15258,
											"end": 15275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15303,
											"end": 15305,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 15295,
											"end": 15301,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15292,
											"end": 15306,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 15320,
											"end": 15321,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 15315,
											"end": 15933,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15315,
											"end": 15933,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 15315,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 15315,
											"end": 15933,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15977,
											"end": 15978,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15994,
											"end": 16000,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15991,
											"end": 16068,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15991,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 15991,
											"end": 16068,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 16043,
											"end": 16052,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16038,
											"end": 16041,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 16034,
											"end": 16053,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16028,
											"end": 16054,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16019,
											"end": 16054,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16019,
											"end": 16054,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15991,
											"end": 16068,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 15991,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16094,
											"end": 16161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 16154,
											"end": 16160,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16147,
											"end": 16152,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16094,
											"end": 16161,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 16094,
											"end": 16161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16094,
											"end": 16161,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 16094,
											"end": 16161,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16088,
											"end": 16092,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16081,
											"end": 16162,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 15950,
											"end": 16172,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15285,
											"end": 16172,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 15285,
											"end": 16172,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15315,
											"end": 15933,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 15315,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15367,
											"end": 15371,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 15363,
											"end": 15372,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 15355,
											"end": 15361,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15351,
											"end": 15373,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15401,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 15433,
											"end": 15437,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15401,
											"end": 15438,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 15401,
											"end": 15438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15401,
											"end": 15438,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 15401,
											"end": 15438,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15460,
											"end": 15461,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15488,
											"end": 15495,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15485,
											"end": 15486,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15482,
											"end": 15496,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15567,
											"end": 15576,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15562,
											"end": 15565,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15558,
											"end": 15577,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15552,
											"end": 15578,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 15544,
											"end": 15550,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15537,
											"end": 15579,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 15618,
											"end": 15619,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 15610,
											"end": 15616,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15606,
											"end": 15620,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15596,
											"end": 15620,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15665,
											"end": 15667,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15654,
											"end": 15663,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15650,
											"end": 15668,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15637,
											"end": 15668,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 15637,
											"end": 15668,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15511,
											"end": 15515,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15508,
											"end": 15509,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15504,
											"end": 15516,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15499,
											"end": 15516,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15499,
											"end": 15516,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 15474,
											"end": 15682,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15710,
											"end": 15716,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15701,
											"end": 15708,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15698,
											"end": 15717,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 15695,
											"end": 15874,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15695,
											"end": 15874,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 15695,
											"end": 15874,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15768,
											"end": 15777,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15763,
											"end": 15766,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15759,
											"end": 15778,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15753,
											"end": 15779,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 15811,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 15853,
											"end": 15857,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 15845,
											"end": 15851,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 15841,
											"end": 15858,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15830,
											"end": 15839,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15811,
											"end": 15859,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 15811,
											"end": 15859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15811,
											"end": 15859,
											"name": "tag",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 15811,
											"end": 15859,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15803,
											"end": 15809,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 15860,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 15718,
											"end": 15874,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15695,
											"end": 15874,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 15695,
											"end": 15874,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15920,
											"end": 15921,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 15916,
											"end": 15917,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 15908,
											"end": 15914,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 15904,
											"end": 15918,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 15900,
											"end": 15922,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15894,
											"end": 15898,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 15887,
											"end": 15923,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 15322,
											"end": 15933,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15322,
											"end": 15933,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15322,
											"end": 15933,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15285,
											"end": 16172,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 15285,
											"end": 16172,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15285,
											"end": 16172,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14875,
											"end": 16178,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14875,
											"end": 16178,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14875,
											"end": 16178,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14783,
											"end": 16178,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14783,
											"end": 16178,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14783,
											"end": 16178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16184,
											"end": 16282,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 16184,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16235,
											"end": 16241,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16269,
											"end": 16274,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16263,
											"end": 16275,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 16253,
											"end": 16275,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16253,
											"end": 16275,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16184,
											"end": 16282,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16184,
											"end": 16282,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16184,
											"end": 16282,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16184,
											"end": 16282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16435,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 16288,
											"end": 16435,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16389,
											"end": 16400,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16426,
											"end": 16429,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16411,
											"end": 16429,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16411,
											"end": 16429,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16435,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16435,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16435,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16435,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16288,
											"end": 16435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16441,
											"end": 16827,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 16441,
											"end": 16827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16545,
											"end": 16548,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16573,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 16605,
											"end": 16610,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16573,
											"end": 16611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 16573,
											"end": 16611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16573,
											"end": 16611,
											"name": "tag",
											"source": 16,
											"value": "584"
										},
										{
											"begin": 16573,
											"end": 16611,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16627,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 16708,
											"end": 16714,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16703,
											"end": 16706,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16627,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 16627,
											"end": 16715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16627,
											"end": 16715,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 16627,
											"end": 16715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16620,
											"end": 16715,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16620,
											"end": 16715,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16724,
											"end": 16789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 16782,
											"end": 16788,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16777,
											"end": 16780,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16770,
											"end": 16774,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16763,
											"end": 16768,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16759,
											"end": 16775,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16724,
											"end": 16789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 16724,
											"end": 16789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16724,
											"end": 16789,
											"name": "tag",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 16724,
											"end": 16789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16814,
											"end": 16820,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16809,
											"end": 16812,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16805,
											"end": 16821,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16798,
											"end": 16821,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16798,
											"end": 16821,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16549,
											"end": 16827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16441,
											"end": 16827,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16441,
											"end": 16827,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16441,
											"end": 16827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16441,
											"end": 16827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16441,
											"end": 16827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16833,
											"end": 17104,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 16833,
											"end": 17104,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16963,
											"end": 16966,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16985,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 17074,
											"end": 17077,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17065,
											"end": 17071,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16985,
											"end": 17078,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 16985,
											"end": 17078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16985,
											"end": 17078,
											"name": "tag",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 16985,
											"end": 17078,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16978,
											"end": 17078,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16978,
											"end": 17078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17095,
											"end": 17098,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17088,
											"end": 17098,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17088,
											"end": 17098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16833,
											"end": 17104,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16833,
											"end": 17104,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16833,
											"end": 17104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16833,
											"end": 17104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16833,
											"end": 17104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"initialize()": "8129fc1c",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"title\":\"SecureUpgradeableToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize()\":{\"notice\":\"Initializer replaces constructor in upgradeable contracts\"},\"mint(address,uint256)\":{\"notice\":\"Only the owner can mint new tokens\"}},\"notice\":\"UUPS upgradeable token with protected mint and upgrade logic\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":\"SecureUpgradeableToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xd861907d1168dcaec2a7846edbaed12feb8bad2d6781dba987be01374f90b495\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12ff809243040419e2fc2aa7ef0aaa60b3e6ebc901553ba1de970ceeef208c4c\",\"dweb:/ipfs/QmX2dwMVNrQAahqVzEx94gqcVB6Z8ovifPYdEfHZzj7aEb\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x5c54228bbb2f1f8616179c51bdb90b7960f4a3414c390ad5c6ead6763eb55a59\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://745fe72596bb8fde5f294d9d6b943db942202e4445536ee00da3ba011f876e86\",\"dweb:/ipfs/QmcjeESkk4rbhUVaSBfyq5f8rY56Jms1TwcJXaRD55K3UH\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol\":{\"keccak256\":\"0xc42b9827addecb30528d90959618e6eb192f6787bfe81fa55032d81adda8544e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16d4c5a15763c0a51bd1ea15eea088f94a3ece31ca43dae49b510bed448223d7\",\"dweb:/ipfs/QmdbZeyMz9MDu7r28UAyftnR4uT7MH1QAXKjC7venU97Rz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"initialize()": {
								"notice": "Initializer replaces constructor in upgradeable contracts"
							},
							"mint(address,uint256)": {
								"notice": "Only the owner can mint new tokens"
							}
						},
						"notice": "UUPS upgradeable token with protected mint and upgrade logic",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1293
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1294,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 449,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1293,
								448
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1275,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							448
						]
					},
					"id": 449,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 448,
							"linearizedBaseContracts": [
								448
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 448,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 448,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$448",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 448,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 448,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 448,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 448,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 443,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 208,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 445,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 442,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 441,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 205,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 448,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 449,
							"src": "2349:6560:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1755
						],
						"IERC1822Proxiable": [
							1324
						],
						"Initializable": [
							448
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 631,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 450,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 452,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1325,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 451,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1324,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 1756,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 453,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1755,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 456,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 631,
							"sourceUnit": 449,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 455,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 458,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1023:13:2"
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 460,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1324,
										"src": "1038:17:2"
									},
									"id": 461,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 457,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630,
								1324,
								448
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 468,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 463,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 466,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 465,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 464,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 467,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 472,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 630,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 470,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 475,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 480,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 477,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "2645:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 483,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "2655:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 485,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:2"
											},
											{
												"id": 486,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 488,
									"name": "onlyProxy",
									"nameLocation": "2633:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:2"
									},
									"src": "2624:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2916:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 491,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "2926:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:2"
											},
											{
												"id": 494,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:2"
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 496,
									"name": "notDelegated",
									"nameLocation": "2901:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:2"
									},
									"src": "2892:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 501,
										"nodeType": "Block",
										"src": "3030:7:2",
										"statements": []
									},
									"id": 502,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 499,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 498,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3013:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:2"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:2"
									},
									"scope": 630,
									"src": "2970:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 507,
										"nodeType": "Block",
										"src": "3113:7:2",
										"statements": []
									},
									"id": 508,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 504,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "3096:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:2"
									},
									"scope": 630,
									"src": "3043:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1323
									],
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "3786:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 516,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1755,
														"src": "3803:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1755_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1476,
													"src": "3803:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 515,
												"id": 518,
												"nodeType": "Return",
												"src": "3796:39:2"
											}
										]
									},
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:2",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 512,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 511,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 496,
												"src": "3755:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:2"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "3777:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 513,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:2"
									},
									"scope": 630,
									"src": "3708:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "4266:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4294:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 530,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4276:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "4344:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "4363:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 534,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 629,
														"src": "4322:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 488,
												"src": "4256:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4187:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "4214:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:2"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:2"
									},
									"scope": 630,
									"src": "4161:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "4648:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 546,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4683:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4675:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 544,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4675:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4675:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 548,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4692:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4675:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 550,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1755,
																	"src": "4753:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1755_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4766:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1507,
																"src": "4753:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4753:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 553,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 468,
															"src": "4789:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4753:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4675:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "4658:251:2",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "4848:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 556,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "4869:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4869:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 558,
															"nodeType": "RevertStatement",
															"src": "4862:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "4381:217:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4612:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:2:2"
									},
									"returnParameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4648:0:2"
									},
									"scope": 630,
									"src": "4603:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5084:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 568,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5106:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$630",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5098:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 566,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5098:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5098:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 570,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 468,
														"src": "5115:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5098:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 576,
												"nodeType": "IfStatement",
												"src": "5094:145:2",
												"trueBody": {
													"id": 575,
													"nodeType": "Block",
													"src": "5123:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 572,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "5199:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 573,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5199:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 574,
															"nodeType": "RevertStatement",
															"src": "5192:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "4921:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5041:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:2:2"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5084:0:2"
									},
									"scope": 630,
									"src": "5032:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5251:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5637:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5663:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "5655:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:27:2"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5698:0:2"
									},
									"scope": 630,
									"src": "5628:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6142:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 617,
															"nodeType": "Block",
															"src": "6232:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 600,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 598,
																			"src": "6250:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 601,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1755,
																				"src": "6258:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1755_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 602,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6271:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1476,
																			"src": "6258:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6250:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 609,
																	"nodeType": "IfStatement",
																	"src": "6246:120:2",
																	"trueBody": {
																		"id": 608,
																		"nodeType": "Block",
																		"src": "6292:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 605,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 598,
																							"src": "6346:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 604,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 480,
																						"src": "6317:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 606,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6317:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 607,
																				"nodeType": "RevertStatement",
																				"src": "6310:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 613,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6409:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 614,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 589,
																				"src": "6428:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1755,
																				"src": "6379:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1755_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 612,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6392:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1570,
																			"src": "6379:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6379:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "6379:54:2"
																}
															]
														},
														"errorName": "",
														"id": 618,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 599,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 598,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6226:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 618,
																	"src": "6218:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 597,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6218:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6217:14:2"
														},
														"src": "6209:235:2"
													},
													{
														"block": {
															"id": 625,
															"nodeType": "Block",
															"src": "6451:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 622,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 587,
																				"src": "6560:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 619,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1755,
																				"src": "6518:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1755_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6531:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1481,
																			"src": "6518:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 623,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6518:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 624,
																	"nodeType": "RevertStatement",
																	"src": "6511:67:2"
																}
															]
														},
														"errorName": "",
														"id": 626,
														"nodeType": "TryCatchClause",
														"src": "6445:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "6174:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 592,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "6156:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1324_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6156:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1324",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6193:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1323,
														"src": "6156:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6156:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 627,
												"nodeType": "TryStatement",
												"src": "6152:437:2"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "5705:347:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6066:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6096:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6088:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6128:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6115:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 588,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6087:46:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6142:0:2"
									},
									"scope": 630,
									"src": "6057:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 631,
							"src": "986:5611:2",
							"usedErrors": [
								211,
								214,
								475,
								480,
								1481,
								1494,
								1879,
								2142
							],
							"usedEvents": [
								219,
								1301
							]
						}
					],
					"src": "115:6483:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1293
						],
						"ERC20Upgradeable": [
							1247
						],
						"IERC20": [
							1843
						],
						"IERC20Errors": [
							1366
						],
						"IERC20Metadata": [
							1869
						],
						"Initializable": [
							448
						]
					},
					"id": 1248,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 632,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 634,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1844,
							"src": "131:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 633,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1843,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 636,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1870,
							"src": "202:97:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 635,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1869,
										"src": "210:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 638,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1294,
							"src": "300:70:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 637,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1293,
										"src": "308:18:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 640,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 1462,
							"src": "371:83:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 639,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "379:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 642,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1248,
							"sourceUnit": 449,
							"src": "455:66:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 641,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "463:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 644,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "1319:13:3"
									},
									"id": 645,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:3"
								},
								{
									"baseName": {
										"id": 646,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1293,
										"src": "1334:18:3"
									},
									"id": 647,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:3"
								},
								{
									"baseName": {
										"id": 648,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1843,
										"src": "1354:6:3"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:3"
								},
								{
									"baseName": {
										"id": 650,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1869,
										"src": "1362:14:3"
									},
									"id": 651,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:3"
								},
								{
									"baseName": {
										"id": 652,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1366,
										"src": "1378:12:3"
									},
									"id": 653,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:3"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 643,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1247,
							"linearizedBaseContracts": [
								1247,
								1366,
								1869,
								1843,
								1293,
								448
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 654,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:3",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 671,
									"members": [
										{
											"constant": false,
											"id": 658,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1495:45:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 657,
												"keyName": "account",
												"keyNameLocation": "1511:7:3",
												"keyType": {
													"id": 655,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 664,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1551:75:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 663,
												"keyName": "account",
												"keyNameLocation": "1567:7:3",
												"keyType": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:3",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 662,
													"keyName": "spender",
													"keyNameLocation": "1594:7:3",
													"keyType": {
														"id": 660,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 661,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 666,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1637:20:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 665,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 668,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1668:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 667,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 670,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 671,
											"src": "1690:14:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 669,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:3",
									"nodeType": "StructDefinition",
									"scope": 1247,
									"src": "1465:246:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 674,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:3",
									"nodeType": "VariableDeclaration",
									"scope": 1247,
									"src": "1826:114:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 672,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 673,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "2021:79:3",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:3",
													"nodeType": "YulBlock",
													"src": "2040:54:3",
													"statements": [
														{
															"nativeSrc": "2054:30:3",
															"nodeType": "YulAssignment",
															"src": "2054:30:3",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:3",
																"nodeType": "YulIdentifier",
																"src": "2064:20:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 678,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 674,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:3",
														"valueSize": 1
													}
												],
												"id": 680,
												"nodeType": "InlineAssembly",
												"src": "2031:63:3"
											}
										]
									},
									"id": 682,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:3"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 682,
												"src": "1997:22:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 677,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 676,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 671,
														"src": "1997:12:3"
													},
													"referencedDeclaration": 671,
													"src": "1997:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:3"
									},
									"scope": 1247,
									"src": "1947:153:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "2374:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 693,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "2407:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 694,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "2414:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 692,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 726,
														"src": "2384:22:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2384:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 696,
												"nodeType": "ExpressionStatement",
												"src": "2384:38:3"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2106:171:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 690,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 689,
												"name": "onlyInitializing",
												"nameLocations": [
													"2357:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2357:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2357:16:3"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2291:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2318:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "2304:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 684,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2304:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2339:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "2325:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 686,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2325:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2303:44:3"
									},
									"returnParameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2374:0:3"
									},
									"scope": 1247,
									"src": "2282:147:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "2537:114:3",
										"statements": [
											{
												"assignments": [
													709
												],
												"declarations": [
													{
														"constant": false,
														"id": 709,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2568:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 725,
														"src": "2547:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 708,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 707,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2547:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "2547:12:3"
															},
															"referencedDeclaration": 671,
															"src": "2547:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 710,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2572:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2572:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2547:43:3"
											},
											{
												"expression": {
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 713,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2600:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2602:5:3",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 668,
														"src": "2600:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 716,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "2610:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2600:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 718,
												"nodeType": "ExpressionStatement",
												"src": "2600:15:3"
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 719,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "2625:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2627:7:3",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 670,
														"src": "2625:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "2637:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2625:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "2625:19:3"
											}
										]
									},
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 705,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 704,
												"name": "onlyInitializing",
												"nameLocations": [
													"2520:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2520:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2520:16:3"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2444:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2481:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2467:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 699,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2467:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2502:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "2488:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2488:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:44:3"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2537:0:3"
									},
									"scope": 1247,
									"src": "2435:216:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1856
									],
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "2776:84:3",
										"statements": [
											{
												"assignments": [
													734
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2807:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 741,
														"src": "2786:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 733,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 732,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2786:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "2786:12:3"
															},
															"referencedDeclaration": 671,
															"src": "2786:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 737,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 735,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "2811:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2786:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 738,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "2846:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 739,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2848:5:3",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 668,
													"src": "2846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 731,
												"id": 740,
												"nodeType": "Return",
												"src": "2839:14:3"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "2657:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2725:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:2:3"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "2761:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 729,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2761:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2760:15:3"
									},
									"scope": 1247,
									"src": "2716:144:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1862
									],
									"body": {
										"id": 757,
										"nodeType": "Block",
										"src": "3035:86:3",
										"statements": [
											{
												"assignments": [
													750
												],
												"declarations": [
													{
														"constant": false,
														"id": 750,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3066:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 757,
														"src": "3045:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 749,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 748,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3045:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "3045:12:3"
															},
															"referencedDeclaration": 671,
															"src": "3045:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 751,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "3070:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3070:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3045:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 754,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "3105:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 755,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3107:7:3",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 670,
													"src": "3105:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 747,
												"id": 756,
												"nodeType": "Return",
												"src": "3098:16:3"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "2866:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2982:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2988:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "3020:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3020:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3019:15:3"
									},
									"scope": 1247,
									"src": "2973:148:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1868
									],
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "3810:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3827:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 763,
												"id": 765,
												"nodeType": "Return",
												"src": "3820:9:3"
											}
										]
									},
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "3127:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3763:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3771:2:3"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3803:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 761,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3803:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3802:7:3"
									},
									"scope": 1247,
									"src": "3754:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1792
									],
									"body": {
										"id": 782,
										"nodeType": "Block",
										"src": "3957:91:3",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3988:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 782,
														"src": "3967:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 774,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 773,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3967:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "3967:12:3"
															},
															"referencedDeclaration": 671,
															"src": "3967:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "3992:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3992:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3967:43:3"
											},
											{
												"expression": {
													"expression": {
														"id": 779,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "4027:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 780,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4029:12:3",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 666,
													"src": "4027:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 772,
												"id": 781,
												"nodeType": "Return",
												"src": "4020:21:3"
											}
										]
									},
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "3842:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3905:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3916:2:3"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "3948:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3948:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:9:3"
									},
									"scope": 1247,
									"src": "3896:152:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "4180:97:3",
										"statements": [
											{
												"assignments": [
													793
												],
												"declarations": [
													{
														"constant": false,
														"id": 793,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4211:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 802,
														"src": "4190:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 792,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 791,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4190:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "4190:12:3"
															},
															"referencedDeclaration": 671,
															"src": "4190:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 794,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "4215:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4190:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 797,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "4250:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4252:9:3",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 658,
														"src": "4250:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 800,
													"indexExpression": {
														"id": 799,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "4262:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4250:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 790,
												"id": 801,
												"nodeType": "Return",
												"src": "4243:27:3"
											}
										]
									},
									"documentation": {
										"id": 784,
										"nodeType": "StructuredDocumentation",
										"src": "4054:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4115:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4133:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4125:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:17:3"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "4171:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4171:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4170:9:3"
									},
									"scope": 1247,
									"src": "4106:171:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1810
									],
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "4547:103:3",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4565:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "4557:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4557:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 815,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "4573:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4573:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4557:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "4605:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "4612:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4616:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "4595:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4595:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "4595:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4639:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 812,
												"id": 825,
												"nodeType": "Return",
												"src": "4632:11:3"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "4283:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4481:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4498:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4490:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4510:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4502:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4502:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:27:3"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "4541:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4541:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4540:6:3"
									},
									"scope": 1247,
									"src": "4472:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1820
									],
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "4797:106:3",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4828:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 850,
														"src": "4807:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 838,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 837,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4807:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "4807:12:3"
															},
															"referencedDeclaration": 671,
															"src": "4807:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 842,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 840,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "4832:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4832:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4807:43:3"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 843,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 839,
																"src": "4867:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 844,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4869:11:3",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 664,
															"src": "4867:13:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 846,
														"indexExpression": {
															"id": 845,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "4881:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4867:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 848,
													"indexExpression": {
														"id": 847,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "4888:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4867:29:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 849,
												"nodeType": "Return",
												"src": "4860:36:3"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "4656:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4717:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4735:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4727:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4727:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4750:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4742:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4742:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4726:32:3"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "4788:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4788:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4787:9:3"
									},
									"scope": 1247,
									"src": "4708:195:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1830
									],
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "5289:107:3",
										"statements": [
											{
												"assignments": [
													862
												],
												"declarations": [
													{
														"constant": false,
														"id": 862,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5307:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 874,
														"src": "5299:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 861,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5299:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 865,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 863,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "5315:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5315:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 867,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "5346:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 868,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 854,
															"src": "5353:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 869,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "5362:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 866,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1130,
															1198
														],
														"referencedDeclaration": 1130,
														"src": "5337:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5337:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "5337:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5385:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 860,
												"id": 873,
												"nodeType": "Return",
												"src": "5378:11:3"
											}
										]
									},
									"documentation": {
										"id": 852,
										"nodeType": "StructuredDocumentation",
										"src": "4909:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5219:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5235:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5227:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 853,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5227:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5252:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5244:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5226:32:3"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "5283:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5283:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5282:6:3"
									},
									"scope": 1247,
									"src": "5210:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1842
									],
									"body": {
										"id": 906,
										"nodeType": "Block",
										"src": "6081:151:3",
										"statements": [
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6099:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 906,
														"src": "6091:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 887,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6091:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 891,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 889,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "6109:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6091:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 893,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "6147:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 888,
															"src": "6153:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "6162:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 892,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "6131:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "6131:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 878,
															"src": "6188:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "6194:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 901,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "6198:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 898,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "6178:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6178:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "6178:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6221:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 886,
												"id": 905,
												"nodeType": "Return",
												"src": "6214:11:3"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "5402:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 907,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5997:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6018:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6010:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6010:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6032:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6024:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6044:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6036:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6036:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6009:41:3"
									},
									"returnParameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "6075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6074:6:3"
									},
									"scope": 1247,
									"src": "5988:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 953,
										"nodeType": "Block",
										"src": "6674:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 917,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 910,
														"src": "6688:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 920,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6704:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 919,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6696:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 918,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6696:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6696:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6688:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 931,
												"nodeType": "IfStatement",
												"src": "6684:86:3",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "6708:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 926,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6756:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 925,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6748:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 924,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6748:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6748:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 923,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "6729:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6729:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 929,
															"nodeType": "RevertStatement",
															"src": "6722:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 932,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 912,
														"src": "6783:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6797:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6789:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 933,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6789:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6789:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6783:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 946,
												"nodeType": "IfStatement",
												"src": "6779:86:3",
												"trueBody": {
													"id": 945,
													"nodeType": "Block",
													"src": "6801:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6851:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6843:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 939,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6843:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6843:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 938,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "6822:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6822:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 944,
															"nodeType": "RevertStatement",
															"src": "6815:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 948,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "6882:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 949,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "6888:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "6892:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 947,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "6874:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6874:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "6874:24:3"
											}
										]
									},
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "6238:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 954,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6614:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6632:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "6624:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6624:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6646:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "6638:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6658:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "6650:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6650:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6623:41:3"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6674:0:3"
									},
									"scope": 1247,
									"src": "6605:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "7295:1095:3",
										"statements": [
											{
												"assignments": [
													966
												],
												"declarations": [
													{
														"constant": false,
														"id": 966,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7326:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1045,
														"src": "7305:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 965,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 964,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7305:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "7305:12:3"
															},
															"referencedDeclaration": 671,
															"src": "7305:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 967,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "7330:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7330:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7305:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 970,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "7362:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7378:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7370:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 971,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7370:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7370:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7362:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1012,
													"nodeType": "Block",
													"src": "7538:366:3",
													"statements": [
														{
															"assignments": [
																984
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 984,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7560:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 1012,
																	"src": "7552:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 983,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7552:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 989,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 985,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "7574:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7576:9:3",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 658,
																	"src": "7574:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 988,
																"indexExpression": {
																	"id": 987,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "7586:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7574:17:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7552:39:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 990,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 984,
																	"src": "7609:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 991,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "7623:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7609:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1000,
															"nodeType": "IfStatement",
															"src": "7605:115:3",
															"trueBody": {
																"id": 999,
																"nodeType": "Block",
																"src": "7630:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 994,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 957,
																					"src": "7680:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 995,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 984,
																					"src": "7686:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 996,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 961,
																					"src": "7699:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 993,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1336,
																				"src": "7655:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7655:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 998,
																		"nodeType": "RevertStatement",
																		"src": "7648:57:3"
																	}
																]
															}
														},
														{
															"id": 1011,
															"nodeType": "UncheckedBlock",
															"src": "7733:161:3",
															"statements": [
																{
																	"expression": {
																		"id": 1009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1001,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 966,
																					"src": "7840:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1004,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7842:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 658,
																				"src": "7840:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1005,
																			"indexExpression": {
																				"id": 1003,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 957,
																				"src": "7852:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7840:17:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1006,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "7860:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1007,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 961,
																				"src": "7874:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7860:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7840:39:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1010,
																	"nodeType": "ExpressionStatement",
																	"src": "7840:39:3"
																}
															]
														}
													]
												},
												"id": 1013,
												"nodeType": "IfStatement",
												"src": "7358:546:3",
												"trueBody": {
													"id": 982,
													"nodeType": "Block",
													"src": "7382:150:3",
													"statements": [
														{
															"expression": {
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 976,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 966,
																		"src": "7498:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 978,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7500:12:3",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 666,
																	"src": "7498:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 979,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "7516:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7498:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 981,
															"nodeType": "ExpressionStatement",
															"src": "7498:23:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1014,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "7918:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7932:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7924:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1015,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7924:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1018,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7924:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7918:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "8135:208:3",
													"statements": [
														{
															"id": 1036,
															"nodeType": "UncheckedBlock",
															"src": "8149:184:3",
															"statements": [
																{
																	"expression": {
																		"id": 1034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 1028,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 966,
																					"src": "8294:1:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8296:9:3",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 658,
																				"src": "8294:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1032,
																			"indexExpression": {
																				"id": 1030,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "8306:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8294:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1033,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "8313:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8294:24:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1035,
																	"nodeType": "ExpressionStatement",
																	"src": "8294:24:3"
																}
															]
														}
													]
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "7914:429:3",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "7936:193:3",
													"statements": [
														{
															"id": 1026,
															"nodeType": "UncheckedBlock",
															"src": "7950:169:3",
															"statements": [
																{
																	"expression": {
																		"id": 1024,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 1020,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 966,
																				"src": "8081:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 1022,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "8083:12:3",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 666,
																			"src": "8081:14:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1023,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 961,
																			"src": "8099:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8081:23:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1025,
																	"nodeType": "ExpressionStatement",
																	"src": "8081:23:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1040,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 957,
															"src": "8367:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1041,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "8373:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1042,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "8377:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1039,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "8358:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8358:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "EmitStatement",
												"src": "8353:30:3"
											}
										]
									},
									"documentation": {
										"id": 955,
										"nodeType": "StructuredDocumentation",
										"src": "6911:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7229:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7245:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "7237:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7259:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "7251:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7251:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7271:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "7263:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7263:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7236:41:3"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7295:0:3"
									},
									"scope": 1247,
									"src": "7220:1170:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1078,
										"nodeType": "Block",
										"src": "8789:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "8803:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1057,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8822:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8814:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1055,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8814:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8814:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8803:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1068,
												"nodeType": "IfStatement",
												"src": "8799:91:3",
												"trueBody": {
													"id": 1067,
													"nodeType": "Block",
													"src": "8826:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1063,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8876:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1062,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8868:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1061,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8868:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8868:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1060,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1346,
																	"src": "8847:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8847:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1066,
															"nodeType": "RevertStatement",
															"src": "8840:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8915:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8907:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8907:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8907:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1074,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "8919:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1075,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "8928:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1069,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "8899:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8899:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "8899:35:3"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "8396:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8742:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8756:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "8748:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8748:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8773:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "8765:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8765:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8747:32:3"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8789:0:3"
									},
									"scope": 1247,
									"src": "8733:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "9315:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1087,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "9329:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1089,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9340:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1088,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9340:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1091,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9340:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9329:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "9325:89:3",
												"trueBody": {
													"id": 1100,
													"nodeType": "Block",
													"src": "9352:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1096,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9400:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9392:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1094,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9392:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9392:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1093,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1341,
																	"src": "9373:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1098,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9373:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1099,
															"nodeType": "RevertStatement",
															"src": "9366:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1103,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1082,
															"src": "9431:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9448:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9440:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1104,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9440:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9440:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "9452:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1102,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9423:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9423:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "9423:35:3"
											}
										]
									},
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "8947:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9268:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9282:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "9274:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9274:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9299:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "9291:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9291:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9273:32:3"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9315:0:3"
									},
									"scope": 1247,
									"src": "9259:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1129,
										"nodeType": "Block",
										"src": "10075:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1123,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "10094:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "10101:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "10110:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10117:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1122,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1130,
															1198
														],
														"referencedDeclaration": 1198,
														"src": "10085:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10085:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "10085:37:3"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "9471:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10010:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10027:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10019:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10042:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10034:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10034:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1130,
												"src": "10051:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:47:3"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10075:0:3"
									},
									"scope": 1247,
									"src": "10001:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "11074:389:3",
										"statements": [
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11105:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1197,
														"src": "11084:22:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 1143,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1142,
																"name": "ERC20Storage",
																"nameLocations": [
																	"11084:12:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 671,
																"src": "11084:12:3"
															},
															"referencedDeclaration": 671,
															"src": "11084:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1145,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "11109:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$671_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11109:18:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11084:43:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1148,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1133,
														"src": "11141:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11158:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11150:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1149,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11150:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1152,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11150:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11141:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1162,
												"nodeType": "IfStatement",
												"src": "11137:89:3",
												"trueBody": {
													"id": 1161,
													"nodeType": "Block",
													"src": "11162:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1157,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11212:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11204:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1155,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11204:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11204:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1154,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "11183:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11183:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1160,
															"nodeType": "RevertStatement",
															"src": "11176:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1163,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "11239:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11258:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11250:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11250:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11250:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11239:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1177,
												"nodeType": "IfStatement",
												"src": "11235:90:3",
												"trueBody": {
													"id": 1176,
													"nodeType": "Block",
													"src": "11262:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1172,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11311:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11303:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1170,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11303:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11303:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1169,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "11283:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11283:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1175,
															"nodeType": "RevertStatement",
															"src": "11276:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1178,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "11334:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$671_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11336:11:3",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 664,
																"src": "11334:13:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1183,
															"indexExpression": {
																"id": 1180,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "11348:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11334:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1184,
														"indexExpression": {
															"id": 1181,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "11355:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11334:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1185,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1137,
														"src": "11366:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11334:37:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "11334:37:3"
											},
											{
												"condition": {
													"id": 1188,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1139,
													"src": "11385:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "11381:76:3",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "11396:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1190,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1133,
																		"src": "11424:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1191,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1135,
																		"src": "11431:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1192,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "11440:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1189,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1786,
																	"src": "11415:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11415:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1194,
															"nodeType": "EmitStatement",
															"src": "11410:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1131,
										"nodeType": "StructuredDocumentation",
										"src": "10135:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10985:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11002:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "10994:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10994:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11017:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "11009:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11009:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11034:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "11026:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11026:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "11046:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "11041:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1138,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11041:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10993:63:3"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11074:0:3"
									},
									"scope": 1247,
									"src": "10976:487:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1245,
										"nodeType": "Block",
										"src": "11834:387:3",
										"statements": [
											{
												"assignments": [
													1209
												],
												"declarations": [
													{
														"constant": false,
														"id": 1209,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11852:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1245,
														"src": "11844:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11844:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"arguments": [
														{
															"id": 1211,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "11881:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1212,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "11888:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1210,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "11871:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11871:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11844:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1215,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "11910:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11934:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1217,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11934:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1216,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11929:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11929:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1220,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11943:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11929:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11910:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1244,
												"nodeType": "IfStatement",
												"src": "11906:309:3",
												"trueBody": {
													"id": 1243,
													"nodeType": "Block",
													"src": "11948:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1224,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1222,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1209,
																	"src": "11966:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1223,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1205,
																	"src": "11985:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11966:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1232,
															"nodeType": "IfStatement",
															"src": "11962:130:3",
															"trueBody": {
																"id": 1231,
																"nodeType": "Block",
																"src": "11992:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1226,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1203,
																					"src": "12044:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1227,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "12053:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1228,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "12071:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1225,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1355,
																				"src": "12017:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12017:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1230,
																		"nodeType": "RevertStatement",
																		"src": "12010:67:3"
																	}
																]
															}
														},
														{
															"id": 1242,
															"nodeType": "UncheckedBlock",
															"src": "12105:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1234,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1201,
																				"src": "12142:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1235,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1203,
																				"src": "12149:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1236,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "12158:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1237,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1205,
																					"src": "12177:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12158:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1239,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12184:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1233,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1130,
																				1198
																			],
																			"referencedDeclaration": 1198,
																			"src": "12133:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12133:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1241,
																	"nodeType": "ExpressionStatement",
																	"src": "12133:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "11469:271:3",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11754:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11778:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "11770:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11770:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11793:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "11785:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11785:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11810:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1246,
												"src": "11802:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11802:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11769:47:3"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11834:0:3"
									},
									"scope": 1247,
									"src": "11745:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1248,
							"src": "1281:10942:3",
							"usedErrors": [
								211,
								214,
								1336,
								1341,
								1346,
								1355,
								1360,
								1365
							],
							"usedEvents": [
								219,
								1777,
								1786
							]
						}
					],
					"src": "105:12119:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1293
						],
						"Initializable": [
							448
						]
					},
					"id": 1294,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1249,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1294,
							"sourceUnit": 449,
							"src": "126:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1250,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 448,
										"src": "134:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1253,
										"name": "Initializable",
										"nameLocations": [
											"728:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 448,
										"src": "728:13:4"
									},
									"id": 1254,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:4"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1252,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1293,
							"linearizedBaseContracts": [
								1293,
								448
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "800:7:4",
										"statements": []
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1257,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1256,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:4"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:4"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:4"
									},
									"scope": 1293,
									"src": "748:59:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "875:7:4",
										"statements": []
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1262,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:4"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:4"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:4"
									},
									"scope": 1293,
									"src": "813:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "949:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1271,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1270,
												"id": 1273,
												"nodeType": "Return",
												"src": "959:17:4"
											}
										]
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:4"
									},
									"returnParameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "940:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:4"
									},
									"scope": 1293,
									"src": "887:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1283,
										"nodeType": "Block",
										"src": "1056:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1280,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1279,
												"id": 1282,
												"nodeType": "Return",
												"src": "1066:15:4"
											}
										]
									},
									"id": 1284,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:4"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1284,
												"src": "1040:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1277,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:4"
									},
									"scope": 1293,
									"src": "989:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "1166:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1288,
												"id": 1290,
												"nodeType": "Return",
												"src": "1176:8:4"
											}
										]
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:4"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "1157:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:4"
									},
									"scope": 1293,
									"src": "1094:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1294,
							"src": "688:505:4",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1314
						]
					},
					"id": 1315,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1295,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1296,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:5",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1314,
							"linearizedBaseContracts": [
								1314
							],
							"name": "IERC1967",
							"nameLocation": "245:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1297,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:5",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1301,
									"name": "Upgraded",
									"nameLocation": "339:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "348:30:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1298,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:5"
									},
									"src": "333:47:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:5",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1308,
									"name": "AdminChanged",
									"nameLocation": "464:12:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "477:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "500:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:5"
									},
									"src": "458:60:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:5",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1313,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "609:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:5"
									},
									"src": "588:45:5"
								}
							],
							"scope": 1315,
							"src": "235:400:5",
							"usedErrors": [],
							"usedEvents": [
								1301,
								1308,
								1313
							]
						}
					],
					"src": "107:529:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1324
						]
					},
					"id": 1325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1316,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1317,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:6",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1324,
							"linearizedBaseContracts": [
								1324
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:6",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1323,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:6"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "869:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:6"
									},
									"scope": 1324,
									"src": "821:57:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1325,
							"src": "344:536:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1461
						],
						"IERC20Errors": [
							1366
						],
						"IERC721Errors": [
							1414
						]
					},
					"id": 1462,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1327,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:7",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1366,
							"linearizedBaseContracts": [
								1366
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1336,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "654:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "670:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1336,
												"src": "687:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:7"
									},
									"src": "623:80:7"
								},
								{
									"documentation": {
										"id": 1337,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1341,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1341,
												"src": "891:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:7"
									},
									"src": "866:41:7"
								},
								{
									"documentation": {
										"id": 1342,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1346,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1344,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1346,
												"src": "1104:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1343,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:7"
									},
									"src": "1077:45:7"
								},
								{
									"documentation": {
										"id": 1347,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:7",
										"text": " @dev Indicates a failure with the `spender`â€™s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1355,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1511:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1528:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "1547:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:7"
									},
									"src": "1478:85:7"
								},
								{
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1360,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "1775:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:7"
									},
									"src": "1748:45:7"
								},
								{
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:7",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1365,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "2025:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:7"
									},
									"src": "1999:43:7"
								}
							],
							"scope": 1462,
							"src": "280:1764:7",
							"usedErrors": [
								1336,
								1341,
								1346,
								1355,
								1360,
								1365
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1367,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:7",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1414,
							"linearizedBaseContracts": [
								1414
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1368,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:7",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1372,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1372,
												"src": "2469:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:7"
									},
									"src": "2444:40:7"
								},
								{
									"documentation": {
										"id": 1373,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:7",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1377,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "2656:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:7"
									},
									"src": "2627:46:7"
								},
								{
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:7",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1386,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "3000:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "3016:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "3033:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:7"
									},
									"src": "2973:75:7"
								},
								{
									"documentation": {
										"id": 1387,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1391,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1391,
												"src": "3237:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:7"
									},
									"src": "3211:42:7"
								},
								{
									"documentation": {
										"id": 1392,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1396,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1394,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "3451:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:7"
									},
									"src": "3423:46:7"
								},
								{
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:7",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1403,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "3760:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "3778:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:7"
									},
									"src": "3727:68:7"
								},
								{
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1408,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "4008:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:7"
									},
									"src": "3980:46:7"
								},
								{
									"documentation": {
										"id": 1409,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1413,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "4262:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:7"
									},
									"src": "4234:46:7"
								}
							],
							"scope": 1462,
							"src": "2190:2092:7",
							"usedErrors": [
								1372,
								1377,
								1386,
								1391,
								1396,
								1403,
								1408,
								1413
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1415,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:7",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1461,
							"linearizedBaseContracts": [
								1461
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1416,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:7",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1426,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4860:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4876:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4893:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1426,
												"src": "4909:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:7"
									},
									"src": "4827:99:7"
								},
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:7",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1431,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1431,
												"src": "5116:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:7"
									},
									"src": "5089:43:7"
								},
								{
									"documentation": {
										"id": 1432,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:7",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1436,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "5331:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:7"
									},
									"src": "5302:47:7"
								},
								{
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:7",
										"text": " @dev Indicates a failure with the `operator`â€™s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1443,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "5651:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1443,
												"src": "5669:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:7"
									},
									"src": "5616:68:7"
								},
								{
									"documentation": {
										"id": 1444,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:7",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1448,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1446,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "5898:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:7"
									},
									"src": "5869:47:7"
								},
								{
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:7",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1453,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "6153:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:7"
									},
									"src": "6124:47:7"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:7",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1460,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "6494:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1455,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "6513:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1457,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:7"
									},
									"src": "6462:73:7"
								}
							],
							"scope": 1462,
							"src": "4430:2107:7",
							"usedErrors": [
								1426,
								1431,
								1436,
								1443,
								1448,
								1453,
								1460
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2129
						],
						"ERC1967Utils": [
							1755
						],
						"IBeacon": [
							1765
						],
						"IERC1967": [
							1314
						],
						"StorageSlot": [
							2275
						]
					},
					"id": 1756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1463,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1756,
							"sourceUnit": 1766,
							"src": "140:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1464,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1765,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1756,
							"sourceUnit": 1315,
							"src": "187:55:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1466,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1314,
										"src": "195:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1756,
							"sourceUnit": 2130,
							"src": "243:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1468,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2129,
										"src": "251:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1756,
							"sourceUnit": 2276,
							"src": "292:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1470,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2275,
										"src": "300:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1472,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:8",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1755,
							"linearizedBaseContracts": [
								1755
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1473,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:8",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1476,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1755,
									"src": "763:114:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1474,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1475,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:8",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1481,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "993:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:8"
									},
									"src": "958:59:8"
								},
								{
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:8",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1486,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1485,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1484,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "1114:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:8"
									},
									"src": "1088:41:8"
								},
								{
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:8",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1491,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "1228:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:8"
									},
									"src": "1201:43:8"
								},
								{
									"documentation": {
										"id": 1492,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:8",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1494,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:8"
									},
									"src": "1337:26:8"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "1502:77:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1502,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1476,
																"src": "1546:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1500,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "1519:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2275_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2186,
															"src": "1519:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2157_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2157_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2156,
													"src": "1519:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1499,
												"id": 1505,
												"nodeType": "Return",
												"src": "1512:60:8"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:8",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:8"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1493:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:8"
									},
									"scope": 1755,
									"src": "1441:138:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "1734:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1513,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "1748:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1523,
												"nodeType": "IfStatement",
												"src": "1744:119:8",
												"trueBody": {
													"id": 1522,
													"nodeType": "Block",
													"src": "1784:79:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1519,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "1834:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1518,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "1805:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1521,
															"nodeType": "RevertStatement",
															"src": "1798:54:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1527,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1476,
																	"src": "1899:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1524,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "1872:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2275_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1526,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2186,
																"src": "1872:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2157_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2157_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2156,
														"src": "1872:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1530,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "1928:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:8"
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:8",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "1699:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:8"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:8"
									},
									"scope": 1755,
									"src": "1671:281:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "2345:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1543,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "2374:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1542,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1534,
														"src": "2355:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1549,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "2425:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1546,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "2407:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1314_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:8",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1301,
														"src": "2407:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1551,
												"nodeType": "EmitStatement",
												"src": "2402:41:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1552,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "2458:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1567,
													"nodeType": "Block",
													"src": "2559:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1564,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "2573:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1566,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:8"
														}
													]
												},
												"id": 1568,
												"nodeType": "IfStatement",
												"src": "2454:148:8",
												"trueBody": {
													"id": 1563,
													"nodeType": "Block",
													"src": "2475:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1559,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "2518:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1560,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1539,
																		"src": "2537:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1556,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2129,
																		"src": "2489:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2129_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2046,
																	"src": "2489:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1562,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:8",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2290:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "2317:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:8"
									},
									"returnParameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:8"
									},
									"scope": 1755,
									"src": "2264:344:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1571,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:8",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1574,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1755,
									"src": "2829:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1572,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1573,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "3339:68:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1582,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1574,
																"src": "3383:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1580,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "3356:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2275_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2186,
															"src": "3356:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2157_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2157_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2156,
													"src": "3356:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1579,
												"id": 1585,
												"nodeType": "Return",
												"src": "3349:51:8"
											}
										]
									},
									"documentation": {
										"id": 1575,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:8",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:8"
									},
									"returnParameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "3330:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:8"
									},
									"scope": 1755,
									"src": "3287:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "3535:172:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1593,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "3549:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1594,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "3545:91:8",
												"trueBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "3573:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1600,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1599,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "3594:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1605,
															"nodeType": "RevertStatement",
															"src": "3587:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1611,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1574,
																	"src": "3672:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1608,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "3645:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2275_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2186,
																"src": "3645:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2157_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2157_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1613,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2156,
														"src": "3645:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1614,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "3692:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:8"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:8",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "3509:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:8"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:8"
									},
									"scope": 1755,
									"src": "3490:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "3875:94:8",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1627,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1587,
																"src": "3912:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1629,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "3924:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1624,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "3890:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1314_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:8",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1308,
														"src": "3890:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1631,
												"nodeType": "EmitStatement",
												"src": "3885:48:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1633,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "3953:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1632,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "3943:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:8"
											}
										]
									},
									"documentation": {
										"id": 1619,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:8",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "3848:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:8"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:8"
									},
									"scope": 1755,
									"src": "3827:142:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:8",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1641,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1755,
									"src": "4246:106:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1639,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1640,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1653,
										"nodeType": "Block",
										"src": "4468:69:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1649,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "4512:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1647,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2275,
																"src": "4485:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2275_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2186,
															"src": "4485:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2157_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2157_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1651,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2156,
													"src": "4485:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1646,
												"id": 1652,
												"nodeType": "Return",
												"src": "4478:52:8"
											}
										]
									},
									"documentation": {
										"id": 1642,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:8",
										"text": " @dev Returns the current beacon."
									},
									"id": 1654,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:8"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "4459:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:8"
									},
									"scope": 1755,
									"src": "4415:122:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "4667:390:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1660,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1657,
																"src": "4681:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1670,
												"nodeType": "IfStatement",
												"src": "4677:95:8",
												"trueBody": {
													"id": 1669,
													"nodeType": "Block",
													"src": "4709:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1666,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1657,
																		"src": "4751:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1665,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1491,
																	"src": "4730:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1667,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1668,
															"nodeType": "RevertStatement",
															"src": "4723:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1674,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "4809:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1671,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2275,
																	"src": "4782:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2275_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2186,
																"src": "4782:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2157_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2157_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1676,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2156,
														"src": "4782:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1677,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1657,
														"src": "4830:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:8"
											},
											{
												"assignments": [
													1681
												],
												"declarations": [
													{
														"constant": false,
														"id": 1681,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "4850:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1680,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1687,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1683,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "4889:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1682,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "4881:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1765_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1765",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:8",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1764,
														"src": "4881:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1688,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1681,
																"src": "4930:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1690,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1691,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "4926:125:8",
												"trueBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "4969:82:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1694,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1681,
																		"src": "5019:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1693,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "4990:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1696,
															"nodeType": "RevertStatement",
															"src": "4983:57:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:8",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "4640:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:8"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:8"
									},
									"scope": 1755,
									"src": "4620:437:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "5661:263:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1709,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "5682:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1708,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1700,
														"src": "5671:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1711,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1715,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "5731:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1712,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1314,
															"src": "5707:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1314_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:8",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1313,
														"src": "5707:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1717,
												"nodeType": "EmitStatement",
												"src": "5702:39:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1718,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "5756:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1737,
													"nodeType": "Block",
													"src": "5875:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1734,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "5889:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1736,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:8"
														}
													]
												},
												"id": 1738,
												"nodeType": "IfStatement",
												"src": "5752:166:8",
												"trueBody": {
													"id": 1733,
													"nodeType": "Block",
													"src": "5773:96:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1726,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1703,
																						"src": "5824:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1725,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1765,
																					"src": "5816:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1765_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1727,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1765",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:8",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1764,
																			"src": "5816:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1730,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "5853:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1722,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2129,
																		"src": "5787:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2129_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2046,
																	"src": "5787:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1732,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:8",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5614:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "5633:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:8"
									},
									"returnParameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:8"
									},
									"scope": 1755,
									"src": "5582:342:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "6149:86:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1744,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1752,
												"nodeType": "IfStatement",
												"src": "6159:70:8",
												"trueBody": {
													"id": 1751,
													"nodeType": "Block",
													"src": "6178:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1748,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1494,
																	"src": "6199:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1750,
															"nodeType": "RevertStatement",
															"src": "6192:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:8",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:8"
									},
									"returnParameters": {
										"id": 1743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:8"
									},
									"scope": 1755,
									"src": "6113:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1756,
							"src": "496:5741:8",
							"usedErrors": [
								1481,
								1486,
								1491,
								1494
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1765
						]
					},
					"id": 1766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1758,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:9",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1765,
							"linearizedBaseContracts": [
								1765
							],
							"name": "IBeacon",
							"nameLocation": "224:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:9",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:9"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1764,
												"src": "460:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:9"
									},
									"scope": 1765,
									"src": "411:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1766,
							"src": "214:257:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1843
						]
					},
					"id": 1844,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1767,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1768,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:10",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1843,
							"linearizedBaseContracts": [
								1843
							],
							"name": "IERC20",
							"nameLocation": "214:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1769,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:10",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1777,
									"name": "Transfer",
									"nameLocation": "396:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "405:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1773,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "427:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1777,
												"src": "447:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:10"
									},
									"src": "390:72:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1778,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:10",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1786,
									"name": "Approval",
									"nameLocation": "627:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "636:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1782,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "659:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "684:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:10"
									},
									"src": "621:78:10"
								},
								{
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:10",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1792,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:10"
									},
									"returnParameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "821:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:10"
									},
									"scope": 1843,
									"src": "775:55:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:10",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "931:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:10"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "971:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1797,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:10"
									},
									"scope": 1843,
									"src": "912:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:10",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1810,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1222:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1802,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1805,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1234:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:10"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1810,
												"src": "1267:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1807,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:10"
									},
									"scope": 1843,
									"src": "1204:69:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:10",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "1567:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "1582:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:10"
									},
									"returnParameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "1622:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:10"
									},
									"scope": 1843,
									"src": "1548:83:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:10",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "2326:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "2343:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:10"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "2376:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:10"
									},
									"scope": 1843,
									"src": "2309:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:10",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "2712:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "2726:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "2738:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:10"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1842,
												"src": "2771:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:10"
									},
									"scope": 1843,
									"src": "2690:87:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1844,
							"src": "204:2575:10",
							"usedErrors": [],
							"usedEvents": [
								1777,
								1786
							]
						}
					],
					"src": "106:2674:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1843
						],
						"IERC20Metadata": [
							1869
						]
					},
					"id": 1870,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1845,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1870,
							"sourceUnit": 1844,
							"src": "151:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1846,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1843,
										"src": "159:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1849,
										"name": "IERC20",
										"nameLocations": [
											"306:6:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1843,
										"src": "306:6:11"
									},
									"id": 1850,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:11"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1848,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:11",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1869,
							"linearizedBaseContracts": [
								1869,
								1843
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:11",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:11"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "417:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1853,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:11"
									},
									"scope": 1869,
									"src": "378:54:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:11",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:11"
									},
									"returnParameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "540:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1859,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:11"
									},
									"scope": 1869,
									"src": "499:56:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:11",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1868,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:11"
									},
									"returnParameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "674:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1865,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:11"
									},
									"scope": 1869,
									"src": "631:50:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1870,
							"src": "278:405:11",
							"usedErrors": [],
							"usedEvents": [
								1777,
								1786
							]
						}
					],
					"src": "125:559:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2129
						],
						"Errors": [
							2151
						]
					},
					"id": 2130,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1871,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1873,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2130,
							"sourceUnit": 2152,
							"src": "127:36:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1872,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2151,
										"src": "135:6:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1874,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:12",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2129,
							"linearizedBaseContracts": [
								2129
							],
							"name": "Address",
							"nameLocation": "241:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:12",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1879,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1879,
												"src": "358:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:12"
									},
									"src": "335:39:12"
								},
								{
									"body": {
										"id": 1926,
										"nodeType": "Block",
										"src": "1361:294:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1889,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2129",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2129",
																		"typeString": "library Address"
																	}
																],
																"id": 1888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1887,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:12",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1892,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "1399:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "1371:125:12",
												"trueBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "1407:89:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1899,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2129",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2129",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1897,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:12",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1902,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1884,
																		"src": "1478:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1894,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "1428:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2151_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:12",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2139,
																	"src": "1428:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1904,
															"nodeType": "RevertStatement",
															"src": "1421:64:12"
														}
													]
												}
											},
											{
												"assignments": [
													1908,
													1910
												],
												"declarations": [
													{
														"constant": false,
														"id": 1908,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1926,
														"src": "1507:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1907,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1910,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1926,
														"src": "1521:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1909,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1917,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1911,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1882,
																"src": "1548:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1912,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1913,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "1570:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:12"
											},
											{
												"condition": {
													"id": 1919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:12",
													"subExpression": {
														"id": 1918,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1908,
														"src": "1596:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1925,
												"nodeType": "IfStatement",
												"src": "1591:58:12",
												"trueBody": {
													"id": 1924,
													"nodeType": "Block",
													"src": "1605:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1921,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1910,
																		"src": "1627:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1920,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "1619:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1923,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:12",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1309:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:12",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1927,
												"src": "1336:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:12"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:12"
									},
									"scope": 2129,
									"src": "1290:365:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1943,
										"nodeType": "Block",
										"src": "2589:62:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1938,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1930,
															"src": "2628:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1939,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "2636:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1937,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "2606:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1936,
												"id": 1942,
												"nodeType": "Return",
												"src": "2599:45:12"
											}
										]
									},
									"documentation": {
										"id": 1928,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:12",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "2522:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "2538:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1931,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:12"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1944,
												"src": "2575:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1934,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:12"
									},
									"scope": 2129,
									"src": "2500:151:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1993,
										"nodeType": "Block",
										"src": "3088:294:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1958,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2129",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2129",
																		"typeString": "library Address"
																	}
																],
																"id": 1957,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1956,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:12",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1961,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1951,
														"src": "3126:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1975,
												"nodeType": "IfStatement",
												"src": "3098:123:12",
												"trueBody": {
													"id": 1974,
													"nodeType": "Block",
													"src": "3133:88:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1968,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2129",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2129",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1966,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1969,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1970,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:12",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1971,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "3204:5:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1963,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "3154:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2151_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:12",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2139,
																	"src": "3154:26:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1973,
															"nodeType": "RevertStatement",
															"src": "3147:63:12"
														}
													]
												}
											},
											{
												"assignments": [
													1977,
													1979
												],
												"declarations": [
													{
														"constant": false,
														"id": 1977,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1993,
														"src": "3231:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1976,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1979,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 1993,
														"src": "3245:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1978,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1986,
												"initialValue": {
													"arguments": [
														{
															"id": 1984,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1949,
															"src": "3298:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1980,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1947,
																"src": "3272:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1983,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1982,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "3291:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1988,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1947,
															"src": "3347:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1989,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "3355:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1990,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "3364:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1987,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2086,
														"src": "3320:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1955,
												"id": 1992,
												"nodeType": "Return",
												"src": "3313:62:12"
											}
										]
									},
									"documentation": {
										"id": 1945,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3006:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3022:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3041:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:12"
									},
									"returnParameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1994,
												"src": "3074:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1953,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:12"
									},
									"scope": 2129,
									"src": "2975:407:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "3621:154:12",
										"statements": [
											{
												"assignments": [
													2005,
													2007
												],
												"declarations": [
													{
														"constant": false,
														"id": 2005,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2019,
														"src": "3632:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2004,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2007,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2019,
														"src": "3646:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2006,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2012,
												"initialValue": {
													"arguments": [
														{
															"id": 2010,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "3691:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2008,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "3673:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:12",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2014,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "3740:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2015,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2005,
															"src": "3748:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2016,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2007,
															"src": "3757:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2013,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2086,
														"src": "3713:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2003,
												"id": 2018,
												"nodeType": "Return",
												"src": "3706:62:12"
											}
										]
									},
									"documentation": {
										"id": 1995,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "3549:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "3565:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1998,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:12"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2020,
												"src": "3607:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:12"
									},
									"scope": 2129,
									"src": "3521:254:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2045,
										"nodeType": "Block",
										"src": "4013:156:12",
										"statements": [
											{
												"assignments": [
													2031,
													2033
												],
												"declarations": [
													{
														"constant": false,
														"id": 2031,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 2045,
														"src": "4024:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2030,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2033,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:12",
														"nodeType": "VariableDeclaration",
														"scope": 2045,
														"src": "4038:23:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2032,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2038,
												"initialValue": {
													"arguments": [
														{
															"id": 2036,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "4085:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2034,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "4065:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:12",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2040,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2023,
															"src": "4134:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2041,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2031,
															"src": "4142:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2042,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "4151:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2039,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2086,
														"src": "4107:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2029,
												"id": 2044,
												"nodeType": "Return",
												"src": "4100:62:12"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:12",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "3946:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2025,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "3962:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2024,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:12"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "3999:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:12"
									},
									"scope": 2129,
									"src": "3916:253:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "4595:424:12",
										"statements": [
											{
												"condition": {
													"id": 2059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:12",
													"subExpression": {
														"id": 2058,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2051,
														"src": "4610:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2083,
													"nodeType": "Block",
													"src": "4669:344:12",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2065,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2053,
																			"src": "4857:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2066,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2069,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2049,
																				"src": "4883:6:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:12",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2071,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:12",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2080,
															"nodeType": "IfStatement",
															"src": "4853:119:12",
															"trueBody": {
																"id": 2079,
																"nodeType": "Block",
																"src": "4908:64:12",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2076,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2049,
																					"src": "4950:6:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2075,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1879,
																				"src": "4933:16:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2077,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2078,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:12"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2081,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2053,
																"src": "4992:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2057,
															"id": 2082,
															"nodeType": "Return",
															"src": "4985:17:12"
														}
													]
												},
												"id": 2084,
												"nodeType": "IfStatement",
												"src": "4605:408:12",
												"trueBody": {
													"id": 2064,
													"nodeType": "Block",
													"src": "4619:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2061,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2053,
																		"src": "4641:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2060,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "4633:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2063,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2047,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:12",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "4482:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "4506:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2053,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "4528:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:12"
									},
									"returnParameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "4581:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2055,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:12"
									},
									"scope": 2129,
									"src": "4437:582:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "5323:122:12",
										"statements": [
											{
												"condition": {
													"id": 2097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:12",
													"subExpression": {
														"id": 2096,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2089,
														"src": "5338:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2105,
													"nodeType": "Block",
													"src": "5397:42:12",
													"statements": [
														{
															"expression": {
																"id": 2103,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2091,
																"src": "5418:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2095,
															"id": 2104,
															"nodeType": "Return",
															"src": "5411:17:12"
														}
													]
												},
												"id": 2106,
												"nodeType": "IfStatement",
												"src": "5333:106:12",
												"trueBody": {
													"id": 2102,
													"nodeType": "Block",
													"src": "5347:44:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2099,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2091,
																		"src": "5369:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2098,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2128,
																	"src": "5361:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2101,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:12",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "5247:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "5261:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2090,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:12"
									},
									"returnParameters": {
										"id": 2095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "5309:12:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2093,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:12"
									},
									"scope": 2129,
									"src": "5221:224:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2127,
										"nodeType": "Block",
										"src": "5614:432:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2114,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "5690:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2116,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2125,
													"nodeType": "Block",
													"src": "5989:51:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2120,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2151,
																		"src": "6010:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2151_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:12",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2142,
																	"src": "6010:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2124,
															"nodeType": "RevertStatement",
															"src": "6003:26:12"
														}
													]
												},
												"id": 2126,
												"nodeType": "IfStatement",
												"src": "5686:354:12",
												"trueBody": {
													"id": 2119,
													"nodeType": "Block",
													"src": "5713:270:12",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:12",
																"nodeType": "YulBlock",
																"src": "5840:133:12",
																"statements": [
																	{
																		"nativeSrc": "5858:40:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:12"
																			},
																			"nativeSrc": "5881:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:12"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:12",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:12",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:12",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:12",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:12"
																					},
																					"nativeSrc": "5922:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:12"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:12",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:12"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:12"
																			},
																			"nativeSrc": "5915:44:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:12"
																		},
																		"nativeSrc": "5915:44:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:12"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2111,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:12",
																	"valueSize": 1
																},
																{
																	"declaration": 2111,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:12",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2118,
															"nodeType": "InlineAssembly",
															"src": "5815:158:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2109,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:12",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "5576:23:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2110,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:12"
									},
									"returnParameters": {
										"id": 2113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:12"
									},
									"scope": 2129,
									"src": "5559:487:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2130,
							"src": "233:5815:12",
							"usedErrors": [
								1879
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2151
						]
					},
					"id": 2152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2131,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2132,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:13",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2151,
							"linearizedBaseContracts": [
								2151
							],
							"name": "Errors",
							"nameLocation": "419:6:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2133,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:13",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2139,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "557:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2137,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2139,
												"src": "574:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:13"
									},
									"src": "531:59:13"
								},
								{
									"documentation": {
										"id": 2140,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:13",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2142,
									"name": "FailedCall",
									"nameLocation": "696:10:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:13"
									},
									"src": "690:19:13"
								},
								{
									"documentation": {
										"id": 2143,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:13",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2145,
									"name": "FailedDeployment",
									"nameLocation": "772:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:13"
									},
									"src": "766:25:13"
								},
								{
									"documentation": {
										"id": 2146,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:13",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2150,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2150,
												"src": "884:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:13"
									},
									"src": "860:33:13"
								}
							],
							"scope": 2152,
							"src": "411:484:13",
							"usedErrors": [
								2139,
								2142,
								2145,
								2150
							],
							"usedEvents": []
						}
					],
					"src": "100:796:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2275
						]
					},
					"id": 2276,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2154,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:14",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2275,
							"linearizedBaseContracts": [
								2275
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2157,
									"members": [
										{
											"constant": false,
											"id": 2156,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2157,
											"src": "1462:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2155,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:14",
									"nodeType": "StructDefinition",
									"scope": 2275,
									"src": "1433:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2160,
									"members": [
										{
											"constant": false,
											"id": 2159,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2160,
											"src": "1517:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2158,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:14",
									"nodeType": "StructDefinition",
									"scope": 2275,
									"src": "1488:46:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2163,
									"members": [
										{
											"constant": false,
											"id": 2162,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2163,
											"src": "1569:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2161,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:14",
									"nodeType": "StructDefinition",
									"scope": 2275,
									"src": "1540:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2166,
									"members": [
										{
											"constant": false,
											"id": 2165,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2166,
											"src": "1624:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2164,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:14",
									"nodeType": "StructDefinition",
									"scope": 2275,
									"src": "1595:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2169,
									"members": [
										{
											"constant": false,
											"id": 2168,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2169,
											"src": "1678:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2167,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:14",
									"nodeType": "StructDefinition",
									"scope": 2275,
									"src": "1650:47:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2172,
									"members": [
										{
											"constant": false,
											"id": 2171,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2172,
											"src": "1731:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2170,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:14",
									"nodeType": "StructDefinition",
									"scope": 2275,
									"src": "1703:47:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2175,
									"members": [
										{
											"constant": false,
											"id": 2174,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 2175,
											"src": "1783:11:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2173,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:14",
									"nodeType": "StructDefinition",
									"scope": 2275,
									"src": "1756:45:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2185,
										"nodeType": "Block",
										"src": "1983:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:14",
													"nodeType": "YulBlock",
													"src": "2018:38:14",
													"statements": [
														{
															"nativeSrc": "2032:14:14",
															"nodeType": "YulAssignment",
															"src": "2032:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:14",
																"nodeType": "YulIdentifier",
																"src": "2042:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2182,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2178,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2184,
												"nodeType": "InlineAssembly",
												"src": "1993:63:14"
											}
										]
									},
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:14",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1923:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:14"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "1960:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2157_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2181,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2180,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2157,
														"src": "1960:11:14"
													},
													"referencedDeclaration": 2157,
													"src": "1960:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2157_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:14"
									},
									"scope": 2275,
									"src": "1899:163:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2196,
										"nodeType": "Block",
										"src": "2243:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:14",
													"nodeType": "YulBlock",
													"src": "2278:38:14",
													"statements": [
														{
															"nativeSrc": "2292:14:14",
															"nodeType": "YulAssignment",
															"src": "2292:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:14",
																"nodeType": "YulIdentifier",
																"src": "2302:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2193,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2189,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2195,
												"nodeType": "InlineAssembly",
												"src": "2253:63:14"
											}
										]
									},
									"documentation": {
										"id": 2187,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:14",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "2183:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:14"
									},
									"returnParameters": {
										"id": 2194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2193,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2197,
												"src": "2220:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2160_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2191,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2160,
														"src": "2220:11:14"
													},
													"referencedDeclaration": 2160,
													"src": "2220:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2160_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:14"
									},
									"scope": 2275,
									"src": "2159:163:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2207,
										"nodeType": "Block",
										"src": "2503:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:14",
													"nodeType": "YulBlock",
													"src": "2538:38:14",
													"statements": [
														{
															"nativeSrc": "2552:14:14",
															"nodeType": "YulAssignment",
															"src": "2552:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:14",
																"nodeType": "YulIdentifier",
																"src": "2562:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2204,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2200,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2206,
												"nodeType": "InlineAssembly",
												"src": "2513:63:14"
											}
										]
									},
									"documentation": {
										"id": 2198,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:14",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "2443:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2199,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:14"
									},
									"returnParameters": {
										"id": 2205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "2480:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2163_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2203,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2202,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2163,
														"src": "2480:11:14"
													},
													"referencedDeclaration": 2163,
													"src": "2480:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2163_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:14"
									},
									"scope": 2275,
									"src": "2419:163:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2218,
										"nodeType": "Block",
										"src": "2763:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:14",
													"nodeType": "YulBlock",
													"src": "2798:38:14",
													"statements": [
														{
															"nativeSrc": "2812:14:14",
															"nodeType": "YulAssignment",
															"src": "2812:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:14",
																"nodeType": "YulIdentifier",
																"src": "2822:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2215,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2211,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2217,
												"nodeType": "InlineAssembly",
												"src": "2773:63:14"
											}
										]
									},
									"documentation": {
										"id": 2209,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:14",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2219,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2211,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "2703:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:14"
									},
									"returnParameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2219,
												"src": "2740:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2166_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2214,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2213,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2166,
														"src": "2740:11:14"
													},
													"referencedDeclaration": 2166,
													"src": "2740:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2166_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:14"
									},
									"scope": 2275,
									"src": "2679:163:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2229,
										"nodeType": "Block",
										"src": "3020:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:14",
													"nodeType": "YulBlock",
													"src": "3055:38:14",
													"statements": [
														{
															"nativeSrc": "3069:14:14",
															"nodeType": "YulAssignment",
															"src": "3069:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:14",
																"nodeType": "YulIdentifier",
																"src": "3079:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2226,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2222,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2228,
												"nodeType": "InlineAssembly",
												"src": "3030:63:14"
											}
										]
									},
									"documentation": {
										"id": 2220,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:14",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2230,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "2961:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2221,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:14"
									},
									"returnParameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2230,
												"src": "2998:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2169_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2225,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2224,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2169,
														"src": "2998:10:14"
													},
													"referencedDeclaration": 2169,
													"src": "2998:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2169_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:14"
									},
									"scope": 2275,
									"src": "2938:161:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2240,
										"nodeType": "Block",
										"src": "3277:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:14",
													"nodeType": "YulBlock",
													"src": "3312:38:14",
													"statements": [
														{
															"nativeSrc": "3326:14:14",
															"nodeType": "YulAssignment",
															"src": "3326:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:14",
																"nodeType": "YulIdentifier",
																"src": "3336:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2237,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2233,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2239,
												"nodeType": "InlineAssembly",
												"src": "3287:63:14"
											}
										]
									},
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:14",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "3218:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2232,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:14"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2241,
												"src": "3255:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2172_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2236,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2235,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2172,
														"src": "3255:10:14"
													},
													"referencedDeclaration": 2172,
													"src": "3255:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2172_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:14"
									},
									"scope": 2275,
									"src": "3195:161:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2251,
										"nodeType": "Block",
										"src": "3558:85:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:14",
													"nodeType": "YulBlock",
													"src": "3593:44:14",
													"statements": [
														{
															"nativeSrc": "3607:20:14",
															"nodeType": "YulAssignment",
															"src": "3607:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:14",
																"nodeType": "YulIdentifier",
																"src": "3617:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2248,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2244,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2250,
												"nodeType": "InlineAssembly",
												"src": "3568:69:14"
											}
										]
									},
									"documentation": {
										"id": 2242,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:14",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "3491:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:14"
									},
									"returnParameters": {
										"id": 2249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2252,
												"src": "3536:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2172_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2247,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2246,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2172,
														"src": "3536:10:14"
													},
													"referencedDeclaration": 2172,
													"src": "3536:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2172_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:14"
									},
									"scope": 2275,
									"src": "3468:175:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2262,
										"nodeType": "Block",
										"src": "3818:79:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:14",
													"nodeType": "YulBlock",
													"src": "3853:38:14",
													"statements": [
														{
															"nativeSrc": "3867:14:14",
															"nodeType": "YulAssignment",
															"src": "3867:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:14",
																"nodeType": "YulIdentifier",
																"src": "3877:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2259,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2255,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:14",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2261,
												"nodeType": "InlineAssembly",
												"src": "3828:63:14"
											}
										]
									},
									"documentation": {
										"id": 2253,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:14",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2263,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2255,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3760:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2254,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:14"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2263,
												"src": "3797:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2175_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2258,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2257,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2175,
														"src": "3797:9:14"
													},
													"referencedDeclaration": 2175,
													"src": "3797:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2175_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:14"
									},
									"scope": 2275,
									"src": "3738:159:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "4094:85:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:14",
													"nodeType": "YulBlock",
													"src": "4129:44:14",
													"statements": [
														{
															"nativeSrc": "4143:20:14",
															"nodeType": "YulAssignment",
															"src": "4143:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:14",
																"nodeType": "YulIdentifier",
																"src": "4153:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:14"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2270,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2266,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2272,
												"nodeType": "InlineAssembly",
												"src": "4104:69:14"
											}
										]
									},
									"documentation": {
										"id": 2264,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:14",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2266,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "4029:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2265,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:14"
									},
									"returnParameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "4073:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2175_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2269,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2268,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2175,
														"src": "4073:9:14"
													},
													"referencedDeclaration": 2175,
													"src": "4073:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2175_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:14"
									},
									"scope": 2275,
									"src": "4007:172:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2276,
							"src": "1407:2774:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:14"
				},
				"id": 14
			},
			"I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol": {
				"ast": {
					"absolutePath": "I/How to preventInfiniteMintAttack/Protect Upgrade Logic (UUPS Example).sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1293
						],
						"ERC1967Utils": [
							1755
						],
						"ERC20Upgradeable": [
							1247
						],
						"IERC1822Proxiable": [
							1324
						],
						"IERC20": [
							1843
						],
						"IERC20Errors": [
							1366
						],
						"IERC20Metadata": [
							1869
						],
						"Initializable": [
							448
						],
						"OwnableUpgradeable": [
							194
						],
						"SecureUpgradeableToken": [
							2331
						],
						"UUPSUpgradeable": [
							630
						]
					},
					"id": 2332,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2277,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 2278,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2332,
							"sourceUnit": 1248,
							"src": "58:78:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2279,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2332,
							"sourceUnit": 631,
							"src": "137:77:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 2280,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2332,
							"sourceUnit": 195,
							"src": "215:75:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2282,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"434:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1247,
										"src": "434:16:15"
									},
									"id": 2283,
									"nodeType": "InheritanceSpecifier",
									"src": "434:16:15"
								},
								{
									"baseName": {
										"id": 2284,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"452:15:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 630,
										"src": "452:15:15"
									},
									"id": 2285,
									"nodeType": "InheritanceSpecifier",
									"src": "452:15:15"
								},
								{
									"baseName": {
										"id": 2286,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"469:18:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "469:18:15"
									},
									"id": 2287,
									"nodeType": "InheritanceSpecifier",
									"src": "469:18:15"
								}
							],
							"canonicalName": "SecureUpgradeableToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2281,
								"nodeType": "StructuredDocumentation",
								"src": "292:107:15",
								"text": "@title SecureUpgradeableToken\n @notice UUPS upgradeable token with protected mint and upgrade logic"
							},
							"fullyImplemented": true,
							"id": 2331,
							"linearizedBaseContracts": [
								2331,
								194,
								630,
								1324,
								1247,
								1366,
								1869,
								1843,
								1293,
								448
							],
							"name": "SecureUpgradeableToken",
							"nameLocation": "408:22:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "611:118:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "557053616665",
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "634:8:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9690391218d095dc7dadec5d6f8a88400b17206b23f2b51c2fe1f1a5f7f14b90",
																"typeString": "literal_string \"UpSafe\""
															},
															"value": "UpSafe"
														},
														{
															"hexValue": "555053",
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "644:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_153e9d6ed89c96f0b6c224c0b032cce412fe0d65e70a3cdfb652fcde3c778a7f",
																"typeString": "literal_string \"UPS\""
															},
															"value": "UPS"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_9690391218d095dc7dadec5d6f8a88400b17206b23f2b51c2fe1f1a5f7f14b90",
																"typeString": "literal_string \"UpSafe\""
															},
															{
																"typeIdentifier": "t_stringliteral_153e9d6ed89c96f0b6c224c0b032cce412fe0d65e70a3cdfb652fcde3c778a7f",
																"typeString": "literal_string \"UPS\""
															}
														],
														"id": 2293,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "621:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "621:29:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "621:29:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2299,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "675:3:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "679:6:15",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "675:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2298,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "660:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "660:26:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2302,
												"nodeType": "ExpressionStatement",
												"src": "660:26:15"
											}
										]
									},
									"documentation": {
										"id": 2288,
										"nodeType": "StructuredDocumentation",
										"src": "494:69:15",
										"text": "@notice Initializer replaces constructor in upgradeable contracts"
									},
									"functionSelector": "8129fc1c",
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2291,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2290,
												"name": "initializer",
												"nameLocations": [
													"599:11:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "599:11:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "599:11:15"
										}
									],
									"name": "initialize",
									"nameLocation": "577:10:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:15"
									},
									"returnParameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "611:0:15"
									},
									"scope": 2331,
									"src": "568:161:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										584
									],
									"body": {
										"id": 2313,
										"nodeType": "Block",
										"src": "855:2:15",
										"statements": []
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "735:51:15",
										"text": "@notice Only the owner can authorize an upgrade"
									},
									"id": 2314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2311,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2310,
												"name": "onlyOwner",
												"nameLocations": [
													"845:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "845:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "845:9:15"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "800:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2309,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "836:8:15"
									},
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2314,
												"src": "818:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:9:15"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "855:0:15"
									},
									"scope": 2331,
									"src": "791:66:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "975:34:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2325,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2317,
															"src": "991:2:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2326,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2319,
															"src": "995:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2324,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "985:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "985:17:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2328,
												"nodeType": "ExpressionStatement",
												"src": "985:17:15"
											}
										]
									},
									"documentation": {
										"id": 2315,
										"nodeType": "StructuredDocumentation",
										"src": "863:46:15",
										"text": "@notice Only the owner can mint new tokens"
									},
									"functionSelector": "40c10f19",
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2321,
												"name": "onlyOwner",
												"nameLocations": [
													"965:9:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "965:9:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "965:9:15"
										}
									],
									"name": "mint",
									"nameLocation": "923:4:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2317,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "936:2:15",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "928:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "928:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2319,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "948:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "940:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:28:15"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "975:0:15"
									},
									"scope": 2331,
									"src": "914:95:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2332,
							"src": "399:612:15",
							"usedErrors": [
								30,
								35,
								211,
								214,
								475,
								480,
								1336,
								1341,
								1346,
								1355,
								1360,
								1365,
								1481,
								1494,
								1879,
								2142
							],
							"usedEvents": [
								41,
								219,
								1301,
								1777,
								1786
							]
						}
					],
					"src": "32:980:15"
				},
				"id": 15
			}
		}
	}
}