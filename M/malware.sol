// SPDX-License-Identifier: MIT
pragma solidity ^0.8.21;

/// @notice Basic ERC-20 interface for demo purposes
interface IERC20 {
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
    function approve(address spender, uint256 amount) external returns (bool);
    function transfer(address to, uint256 amount) external returns (bool);
}

//////////////////////////////////////////////////////
// ⚠️ Malicious Contract Example – Do NOT trust this //
//////////////////////////////////////////////////////
contract MalwareContract {
    function approveAndDrain(address token) external {
        // Abuses user's prior approval to steal tokens
        IERC20(token).transferFrom(msg.sender, address(this), 100_000e18); // Drains funds
    }
}

//////////////////////////////////////////////////////
// ✅ Protective Wallet – Whitelists approved spenders //
//////////////////////////////////////////////////////
contract SafeWallet {
    mapping(address => bool) public trustedContracts;

    function approve(address token, address spender, uint256 amount) external {
        require(trustedContracts[spender], "Untrusted contract: potential malware");
        IERC20(token).approve(spender, amount);
    }

    function setTrusted(address contractAddr, bool approved) external {
        trustedContracts[contractAddr] = approved;
    }
}
