{
	"id": "373a206b4eb8edfb497d6f2dd175e835",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\ncontract ForkChoiceCheckpointRule {\n    struct Checkpoint {\n        bytes32 forkId;\n        uint256 epoch;\n        bool justified;\n    }\n\n    mapping(bytes32 => Checkpoint) public checkpoints;\n    bytes32 public latestJustified;\n\n    event CheckpointSubmitted(bytes32 indexed forkId, uint256 epoch);\n    event Justified(bytes32 indexed forkId);\n\n    function submitCheckpoint(bytes32 forkId, uint256 epoch) external {\n        checkpoints[forkId] = Checkpoint(forkId, epoch, false);\n        emit CheckpointSubmitted(forkId, epoch);\n    }\n\n    function justify(bytes32 forkId) external {\n        checkpoints[forkId].justified = true;\n\n        if (\n            checkpoints[forkId].epoch >\n            checkpoints[latestJustified].epoch\n        ) {\n            latestJustified = forkId;\n            emit Justified(forkId);\n        }\n    }\n\n    function getLatestJustified() external view returns (bytes32) {\n        return latestJustified;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol": {
				"ForkChoiceCheckpointRule": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "forkId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								}
							],
							"name": "CheckpointSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "forkId",
									"type": "bytes32"
								}
							],
							"name": "Justified",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "checkpoints",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "forkId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "justified",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestJustified",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "forkId",
									"type": "bytes32"
								}
							],
							"name": "justify",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestJustified",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "forkId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "epoch",
									"type": "uint256"
								}
							],
							"name": "submitCheckpoint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":58:1001  contract ForkChoiceCheckpointRule {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":58:1001  contract ForkChoiceCheckpointRule {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x042789fd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9f7a497a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xa8c35de4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdf25ea60\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xeb5e91ff\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":600:892  function justify(bytes32 forkId) external {... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":408:594  function submitCheckpoint(bytes32 forkId, uint256 epoch) external {... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":255:285  bytes32 public latestJustified */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":898:999  function getLatestJustified() external view returns (bytes32) {... */\n    tag_6:\n      tag_20\n      tag_21\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":200:249  mapping(bytes32 => Checkpoint) public checkpoints */\n    tag_7:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_26\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":600:892  function justify(bytes32 forkId) external {... */\n    tag_11:\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":684:688  true */\n      0x01\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":652:663  checkpoints */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":652:671  checkpoints[forkId] */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":664:670  forkId */\n      dup4\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":652:671  checkpoints[forkId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":652:681  checkpoints[forkId].justified */\n      0x02\n      add\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":652:688  checkpoints[forkId].justified = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":756:767  checkpoints */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":756:784  checkpoints[latestJustified] */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":768:783  latestJustified */\n      sload(0x01)\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":756:784  checkpoints[latestJustified] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":756:790  checkpoints[latestJustified].epoch */\n      0x01\n      add\n      sload\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":716:727  checkpoints */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":716:735  checkpoints[forkId] */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":728:734  forkId */\n      dup4\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":716:735  checkpoints[forkId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":716:741  checkpoints[forkId].epoch */\n      0x01\n      add\n      sload\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":716:790  checkpoints[forkId].epoch >... */\n      gt\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":699:886  if (... */\n      iszero\n      tag_29\n      jumpi\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":833:839  forkId */\n      dup1\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":815:830  latestJustified */\n      0x01\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":815:839  latestJustified = forkId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":868:874  forkId */\n      dup1\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":858:875  Justified(forkId) */\n      0x3a57ed2fb9dfbafe509434b45866445d708cae846cad3338fc2ed4b6b1f264d1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":699:886  if (... */\n    tag_29:\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":600:892  function justify(bytes32 forkId) external {... */\n      pop\n      jump\t// out\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":408:594  function submitCheckpoint(bytes32 forkId, uint256 epoch) external {... */\n    tag_15:\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":506:538  Checkpoint(forkId, epoch, false) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":517:523  forkId */\n      dup4\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":506:538  Checkpoint(forkId, epoch, false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":525:530  epoch */\n      dup3\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":506:538  Checkpoint(forkId, epoch, false) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":532:537  false */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":506:538  Checkpoint(forkId, epoch, false) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":484:495  checkpoints */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":484:503  checkpoints[forkId] */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":496:502  forkId */\n      dup5\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":484:503  checkpoints[forkId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":484:538  checkpoints[forkId] = Checkpoint(forkId, epoch, false) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":573:579  forkId */\n      dup2\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":553:587  CheckpointSubmitted(forkId, epoch) */\n      0xb671b0a0a792edb35a44f167aa2e3889dc850776bbd09d90d120295db88f48c2\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":581:586  epoch */\n      dup3\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":553:587  CheckpointSubmitted(forkId, epoch) */\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":408:594  function submitCheckpoint(bytes32 forkId, uint256 epoch) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":255:285  bytes32 public latestJustified */\n    tag_17:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":898:999  function getLatestJustified() external view returns (bytes32) {... */\n    tag_21:\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":951:958  bytes32 */\n      0x00\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":977:992  latestJustified */\n      sload(0x01)\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":970:992  return latestJustified */\n      swap1\n      pop\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":898:999  function getLatestJustified() external view returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":200:249  mapping(bytes32 => Checkpoint) public checkpoints */\n    tag_25:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_35:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_37:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_38:\n        /* \"#utility.yul\":490:514   */\n      tag_53\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_37\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_54\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_54:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_39:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_56\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_38\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_10:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_58\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_59\n      tag_35\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":766:885   */\n    tag_58:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_60\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_39\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1102   */\n    tag_40:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1091:1096   */\n      dup2\n        /* \"#utility.yul\":1080:1096   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1108:1230   */\n    tag_41:\n        /* \"#utility.yul\":1181:1205   */\n      tag_63\n        /* \"#utility.yul\":1199:1204   */\n      dup2\n        /* \"#utility.yul\":1181:1205   */\n      tag_40\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1174:1179   */\n      dup2\n        /* \"#utility.yul\":1171:1206   */\n      eq\n        /* \"#utility.yul\":1161:1224   */\n      tag_64\n      jumpi\n        /* \"#utility.yul\":1220:1221   */\n      0x00\n        /* \"#utility.yul\":1217:1218   */\n      0x00\n        /* \"#utility.yul\":1210:1222   */\n      revert\n        /* \"#utility.yul\":1161:1224   */\n    tag_64:\n        /* \"#utility.yul\":1108:1230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1375   */\n    tag_42:\n        /* \"#utility.yul\":1282:1287   */\n      0x00\n        /* \"#utility.yul\":1320:1326   */\n      dup2\n        /* \"#utility.yul\":1307:1327   */\n      calldataload\n        /* \"#utility.yul\":1298:1327   */\n      swap1\n      pop\n        /* \"#utility.yul\":1336:1369   */\n      tag_66\n        /* \"#utility.yul\":1363:1368   */\n      dup2\n        /* \"#utility.yul\":1336:1369   */\n      tag_41\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1236:1375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1381:1855   */\n    tag_14:\n        /* \"#utility.yul\":1449:1455   */\n      0x00\n        /* \"#utility.yul\":1457:1463   */\n      0x00\n        /* \"#utility.yul\":1506:1508   */\n      0x40\n        /* \"#utility.yul\":1494:1503   */\n      dup4\n        /* \"#utility.yul\":1485:1492   */\n      dup6\n        /* \"#utility.yul\":1481:1504   */\n      sub\n        /* \"#utility.yul\":1477:1509   */\n      slt\n        /* \"#utility.yul\":1474:1593   */\n      iszero\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1512:1591   */\n      tag_69\n      tag_35\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1474:1593   */\n    tag_68:\n        /* \"#utility.yul\":1632:1633   */\n      0x00\n        /* \"#utility.yul\":1657:1710   */\n      tag_70\n        /* \"#utility.yul\":1702:1709   */\n      dup6\n        /* \"#utility.yul\":1693:1699   */\n      dup3\n        /* \"#utility.yul\":1682:1691   */\n      dup7\n        /* \"#utility.yul\":1678:1700   */\n      add\n        /* \"#utility.yul\":1657:1710   */\n      tag_39\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1647:1710   */\n      swap3\n      pop\n        /* \"#utility.yul\":1603:1720   */\n      pop\n        /* \"#utility.yul\":1759:1761   */\n      0x20\n        /* \"#utility.yul\":1785:1838   */\n      tag_71\n        /* \"#utility.yul\":1830:1837   */\n      dup6\n        /* \"#utility.yul\":1821:1827   */\n      dup3\n        /* \"#utility.yul\":1810:1819   */\n      dup7\n        /* \"#utility.yul\":1806:1828   */\n      add\n        /* \"#utility.yul\":1785:1838   */\n      tag_42\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1775:1838   */\n      swap2\n      pop\n        /* \"#utility.yul\":1730:1848   */\n      pop\n        /* \"#utility.yul\":1381:1855   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1861:1979   */\n    tag_43:\n        /* \"#utility.yul\":1948:1972   */\n      tag_73\n        /* \"#utility.yul\":1966:1971   */\n      dup2\n        /* \"#utility.yul\":1948:1972   */\n      tag_37\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1943:1946   */\n      dup3\n        /* \"#utility.yul\":1936:1973   */\n      mstore\n        /* \"#utility.yul\":1861:1979   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1985:2207   */\n    tag_19:\n        /* \"#utility.yul\":2078:2082   */\n      0x00\n        /* \"#utility.yul\":2116:2118   */\n      0x20\n        /* \"#utility.yul\":2105:2114   */\n      dup3\n        /* \"#utility.yul\":2101:2119   */\n      add\n        /* \"#utility.yul\":2093:2119   */\n      swap1\n      pop\n        /* \"#utility.yul\":2129:2200   */\n      tag_75\n        /* \"#utility.yul\":2197:2198   */\n      0x00\n        /* \"#utility.yul\":2186:2195   */\n      dup4\n        /* \"#utility.yul\":2182:2199   */\n      add\n        /* \"#utility.yul\":2173:2179   */\n      dup5\n        /* \"#utility.yul\":2129:2200   */\n      tag_43\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1985:2207   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2213:2331   */\n    tag_44:\n        /* \"#utility.yul\":2300:2324   */\n      tag_77\n        /* \"#utility.yul\":2318:2323   */\n      dup2\n        /* \"#utility.yul\":2300:2324   */\n      tag_40\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":2295:2298   */\n      dup3\n        /* \"#utility.yul\":2288:2325   */\n      mstore\n        /* \"#utility.yul\":2213:2331   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2337:2427   */\n    tag_45:\n        /* \"#utility.yul\":2371:2378   */\n      0x00\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2407:2420   */\n      iszero\n        /* \"#utility.yul\":2400:2421   */\n      iszero\n        /* \"#utility.yul\":2389:2421   */\n      swap1\n      pop\n        /* \"#utility.yul\":2337:2427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2433:2542   */\n    tag_46:\n        /* \"#utility.yul\":2514:2535   */\n      tag_80\n        /* \"#utility.yul\":2529:2534   */\n      dup2\n        /* \"#utility.yul\":2514:2535   */\n      tag_45\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2509:2512   */\n      dup3\n        /* \"#utility.yul\":2502:2536   */\n      mstore\n        /* \"#utility.yul\":2433:2542   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2548:2978   */\n    tag_27:\n        /* \"#utility.yul\":2691:2695   */\n      0x00\n        /* \"#utility.yul\":2729:2731   */\n      0x60\n        /* \"#utility.yul\":2718:2727   */\n      dup3\n        /* \"#utility.yul\":2714:2732   */\n      add\n        /* \"#utility.yul\":2706:2732   */\n      swap1\n      pop\n        /* \"#utility.yul\":2742:2813   */\n      tag_82\n        /* \"#utility.yul\":2810:2811   */\n      0x00\n        /* \"#utility.yul\":2799:2808   */\n      dup4\n        /* \"#utility.yul\":2795:2812   */\n      add\n        /* \"#utility.yul\":2786:2792   */\n      dup7\n        /* \"#utility.yul\":2742:2813   */\n      tag_43\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2823:2895   */\n      tag_83\n        /* \"#utility.yul\":2891:2893   */\n      0x20\n        /* \"#utility.yul\":2880:2889   */\n      dup4\n        /* \"#utility.yul\":2876:2894   */\n      add\n        /* \"#utility.yul\":2867:2873   */\n      dup6\n        /* \"#utility.yul\":2823:2895   */\n      tag_44\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":2905:2971   */\n      tag_84\n        /* \"#utility.yul\":2967:2969   */\n      0x40\n        /* \"#utility.yul\":2956:2965   */\n      dup4\n        /* \"#utility.yul\":2952:2970   */\n      add\n        /* \"#utility.yul\":2943:2949   */\n      dup5\n        /* \"#utility.yul\":2905:2971   */\n      tag_46\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2548:2978   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2984:3206   */\n    tag_32:\n        /* \"#utility.yul\":3077:3081   */\n      0x00\n        /* \"#utility.yul\":3115:3117   */\n      0x20\n        /* \"#utility.yul\":3104:3113   */\n      dup3\n        /* \"#utility.yul\":3100:3118   */\n      add\n        /* \"#utility.yul\":3092:3118   */\n      swap1\n      pop\n        /* \"#utility.yul\":3128:3199   */\n      tag_86\n        /* \"#utility.yul\":3196:3197   */\n      0x00\n        /* \"#utility.yul\":3185:3194   */\n      dup4\n        /* \"#utility.yul\":3181:3198   */\n      add\n        /* \"#utility.yul\":3172:3178   */\n      dup5\n        /* \"#utility.yul\":3128:3199   */\n      tag_44\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2984:3206   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209c67b3d1cd44899f51671c44cb9a85b72b510c68fbdcbde21b0c396dc39b613d64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b506104178061001c5f395ff3fe608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063042789fd146100595780639f7a497a14610075578063a8c35de414610091578063df25ea60146100af578063eb5e91ff146100cd575b5f5ffd5b610073600480360381019061006e91906102a6565b6100ff565b005b61008f600480360381019061008a9190610304565b610192565b005b61009961022f565b6040516100a69190610351565b60405180910390f35b6100b7610235565b6040516100c49190610351565b60405180910390f35b6100e760048036038101906100e291906102a6565b61023e565b6040516100f693929190610393565b60405180910390f35b60015f5f8381526020019081526020015f206002015f6101000a81548160ff0219169083151502179055505f5f60015481526020019081526020015f20600101545f5f8381526020019081526020015f2060010154111561018f5780600181905550807f3a57ed2fb9dfbafe509434b45866445d708cae846cad3338fc2ed4b6b1f264d160405160405180910390a25b50565b60405180606001604052808381526020018281526020015f15158152505f5f8481526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548160ff021916908315150217905550905050817fb671b0a0a792edb35a44f167aa2e3889dc850776bbd09d90d120295db88f48c28260405161022391906103c8565b60405180910390a25050565b60015481565b5f600154905090565b5f602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff16905083565b5f5ffd5b5f819050919050565b61028581610273565b811461028f575f5ffd5b50565b5f813590506102a08161027c565b92915050565b5f602082840312156102bb576102ba61026f565b5b5f6102c884828501610292565b91505092915050565b5f819050919050565b6102e3816102d1565b81146102ed575f5ffd5b50565b5f813590506102fe816102da565b92915050565b5f5f6040838503121561031a5761031961026f565b5b5f61032785828601610292565b9250506020610338858286016102f0565b9150509250929050565b61034b81610273565b82525050565b5f6020820190506103645f830184610342565b92915050565b610373816102d1565b82525050565b5f8115159050919050565b61038d81610379565b82525050565b5f6060820190506103a65f830186610342565b6103b3602083018561036a565b6103c06040830184610384565b949350505050565b5f6020820190506103db5f83018461036a565b9291505056fea26469706673582212209c67b3d1cd44899f51671c44cb9a85b72b510c68fbdcbde21b0c396dc39b613d64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x417 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42789FD EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x9F7A497A EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xA8C35DE4 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xDF25EA60 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xEB5E91FF EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x304 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x18F JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH32 0x3A57ED2FB9DFBAFE509434B45866445D708CAE846CAD3338FC2ED4B6B1F264D1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH32 0xB671B0A0A792EDB35A44F167AA2E3889DC850776BBD09D90D120295DB88F48C2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP2 EQ PUSH2 0x28F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A0 DUP2 PUSH2 0x27C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C8 DUP5 DUP3 DUP6 ADD PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FE DUP2 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x327 DUP6 DUP3 DUP7 ADD PUSH2 0x292 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x338 DUP6 DUP3 DUP7 ADD PUSH2 0x2F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x34B DUP2 PUSH2 0x273 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x364 PUSH0 DUP4 ADD DUP5 PUSH2 0x342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x373 DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38D DUP2 PUSH2 0x379 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3A6 PUSH0 DUP4 ADD DUP7 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x36A JUMP JUMPDEST PUSH2 0x3C0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x384 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DB PUSH0 DUP4 ADD DUP5 PUSH2 0x36A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 PUSH8 0xB3D1CD44899F5167 SHR PREVRANDAO 0xCB SWAP11 DUP6 0xB7 0x2B MLOAD 0xC PUSH9 0xFBDCBDE21B0C396DC3 SWAP12 PUSH2 0x3D64 PUSH20 0x6F6C634300081D00330000000000000000000000 ",
							"sourceMap": "58:943:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@checkpoints_13": {
									"entryPoint": 574,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getLatestJustified_88": {
									"entryPoint": 565,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@justify_80": {
									"entryPoint": 255,
									"id": 80,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@latestJustified_15": {
									"entryPoint": 559,
									"id": 15,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@submitCheckpoint_48": {
									"entryPoint": 402,
									"id": 48,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint256_t_bool__to_t_bytes32_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 636,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3209:1",
										"nodeType": "YulBlock",
										"src": "0:3209:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "756:263:1",
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:1",
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nativeSrc": "804:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nativeSrc": "804:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nativeSrc": "773:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:1",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nativeSrc": "769:32:1",
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nativeSrc": "766:119:1",
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nativeSrc": "895:117:1",
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nativeSrc": "910:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:1",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:1",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:1",
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nativeSrc": "970:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "949:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nativeSrc": "949:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "690:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:1",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:1",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:1",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nativeSrc": "1070:32:1",
													"nodeType": "YulBlock",
													"src": "1070:32:1",
													"statements": [
														{
															"nativeSrc": "1080:16:1",
															"nodeType": "YulAssignment",
															"src": "1080:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "1091:5:1",
																"nodeType": "YulIdentifier",
																"src": "1091:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1025:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:1",
														"nodeType": "YulTypedName",
														"src": "1052:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:1",
														"nodeType": "YulTypedName",
														"src": "1062:7:1",
														"type": ""
													}
												],
												"src": "1025:77:1"
											},
											{
												"body": {
													"nativeSrc": "1151:79:1",
													"nodeType": "YulBlock",
													"src": "1151:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1208:16:1",
																"nodeType": "YulBlock",
																"src": "1208:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1217:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1217:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1220:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1220:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1210:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1210:6:1"
																			},
																			"nativeSrc": "1210:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1210:12:1"
																		},
																		"nativeSrc": "1210:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1210:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1174:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1174:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1199:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1199:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1181:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1181:17:1"
																				},
																				"nativeSrc": "1181:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1171:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1171:2:1"
																		},
																		"nativeSrc": "1171:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1171:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1164:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1164:6:1"
																},
																"nativeSrc": "1164:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1164:43:1"
															},
															"nativeSrc": "1161:63:1",
															"nodeType": "YulIf",
															"src": "1161:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1108:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1144:5:1",
														"nodeType": "YulTypedName",
														"src": "1144:5:1",
														"type": ""
													}
												],
												"src": "1108:122:1"
											},
											{
												"body": {
													"nativeSrc": "1288:87:1",
													"nodeType": "YulBlock",
													"src": "1288:87:1",
													"statements": [
														{
															"nativeSrc": "1298:29:1",
															"nodeType": "YulAssignment",
															"src": "1298:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1320:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1320:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1307:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1307:12:1"
																},
																"nativeSrc": "1307:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1307:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1298:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1298:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1363:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1363:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1336:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1336:26:1"
																},
																"nativeSrc": "1336:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1336:33:1"
															},
															"nativeSrc": "1336:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1336:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1236:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1266:6:1",
														"nodeType": "YulTypedName",
														"src": "1266:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1274:3:1",
														"nodeType": "YulTypedName",
														"src": "1274:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1282:5:1",
														"nodeType": "YulTypedName",
														"src": "1282:5:1",
														"type": ""
													}
												],
												"src": "1236:139:1"
											},
											{
												"body": {
													"nativeSrc": "1464:391:1",
													"nodeType": "YulBlock",
													"src": "1464:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1510:83:1",
																"nodeType": "YulBlock",
																"src": "1510:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1512:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1512:77:1"
																			},
																			"nativeSrc": "1512:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1512:79:1"
																		},
																		"nativeSrc": "1512:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1512:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1485:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1485:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1494:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1494:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1481:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1481:3:1"
																		},
																		"nativeSrc": "1481:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1481:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1506:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1506:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1477:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:3:1"
																},
																"nativeSrc": "1477:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1477:32:1"
															},
															"nativeSrc": "1474:119:1",
															"nodeType": "YulIf",
															"src": "1474:119:1"
														},
														{
															"nativeSrc": "1603:117:1",
															"nodeType": "YulBlock",
															"src": "1603:117:1",
															"statements": [
																{
																	"nativeSrc": "1618:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1618:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1632:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1632:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1622:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1622:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1647:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1647:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1682:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1682:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1693:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1693:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1678:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1678:3:1"
																				},
																				"nativeSrc": "1678:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1678:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1702:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1702:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "1657:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1657:20:1"
																		},
																		"nativeSrc": "1657:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1657:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1647:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1647:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1730:118:1",
															"nodeType": "YulBlock",
															"src": "1730:118:1",
															"statements": [
																{
																	"nativeSrc": "1745:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1745:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1759:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1759:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1749:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1749:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1775:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1775:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1810:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1810:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1821:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1821:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1806:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1806:3:1"
																				},
																				"nativeSrc": "1806:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1806:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1830:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1830:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1785:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1785:20:1"
																		},
																		"nativeSrc": "1785:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1785:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1775:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1775:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nativeSrc": "1381:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1426:9:1",
														"nodeType": "YulTypedName",
														"src": "1426:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1437:7:1",
														"nodeType": "YulTypedName",
														"src": "1437:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1449:6:1",
														"nodeType": "YulTypedName",
														"src": "1449:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1457:6:1",
														"nodeType": "YulTypedName",
														"src": "1457:6:1",
														"type": ""
													}
												],
												"src": "1381:474:1"
											},
											{
												"body": {
													"nativeSrc": "1926:53:1",
													"nodeType": "YulBlock",
													"src": "1926:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1943:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1943:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1966:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1966:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "1948:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1948:17:1"
																		},
																		"nativeSrc": "1948:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1948:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1936:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1936:6:1"
																},
																"nativeSrc": "1936:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1936:37:1"
															},
															"nativeSrc": "1936:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1936:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "1861:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1914:5:1",
														"nodeType": "YulTypedName",
														"src": "1914:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1921:3:1",
														"nodeType": "YulTypedName",
														"src": "1921:3:1",
														"type": ""
													}
												],
												"src": "1861:118:1"
											},
											{
												"body": {
													"nativeSrc": "2083:124:1",
													"nodeType": "YulBlock",
													"src": "2083:124:1",
													"statements": [
														{
															"nativeSrc": "2093:26:1",
															"nodeType": "YulAssignment",
															"src": "2093:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2105:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2105:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2116:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2116:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2101:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2101:3:1"
																},
																"nativeSrc": "2101:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2101:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2093:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2093:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2173:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2173:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2186:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2186:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2197:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2197:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2182:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2182:3:1"
																		},
																		"nativeSrc": "2182:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2182:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2129:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2129:43:1"
																},
																"nativeSrc": "2129:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2129:71:1"
															},
															"nativeSrc": "2129:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2129:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1985:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2055:9:1",
														"nodeType": "YulTypedName",
														"src": "2055:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2067:6:1",
														"nodeType": "YulTypedName",
														"src": "2067:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2078:4:1",
														"nodeType": "YulTypedName",
														"src": "2078:4:1",
														"type": ""
													}
												],
												"src": "1985:222:1"
											},
											{
												"body": {
													"nativeSrc": "2278:53:1",
													"nodeType": "YulBlock",
													"src": "2278:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2295:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2295:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2318:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2318:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2300:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "2300:17:1"
																		},
																		"nativeSrc": "2300:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2300:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2288:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2288:6:1"
																},
																"nativeSrc": "2288:37:1",
																"nodeType": "YulFunctionCall",
																"src": "2288:37:1"
															},
															"nativeSrc": "2288:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "2288:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2213:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2266:5:1",
														"nodeType": "YulTypedName",
														"src": "2266:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2273:3:1",
														"nodeType": "YulTypedName",
														"src": "2273:3:1",
														"type": ""
													}
												],
												"src": "2213:118:1"
											},
											{
												"body": {
													"nativeSrc": "2379:48:1",
													"nodeType": "YulBlock",
													"src": "2379:48:1",
													"statements": [
														{
															"nativeSrc": "2389:32:1",
															"nodeType": "YulAssignment",
															"src": "2389:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2414:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2414:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2407:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2407:6:1"
																		},
																		"nativeSrc": "2407:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2407:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2400:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2400:6:1"
																},
																"nativeSrc": "2400:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2400:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2337:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2361:5:1",
														"nodeType": "YulTypedName",
														"src": "2361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2371:7:1",
														"nodeType": "YulTypedName",
														"src": "2371:7:1",
														"type": ""
													}
												],
												"src": "2337:90:1"
											},
											{
												"body": {
													"nativeSrc": "2492:50:1",
													"nodeType": "YulBlock",
													"src": "2492:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2509:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2509:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2529:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2529:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2514:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "2514:14:1"
																		},
																		"nativeSrc": "2514:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2514:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2502:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2502:6:1"
																},
																"nativeSrc": "2502:34:1",
																"nodeType": "YulFunctionCall",
																"src": "2502:34:1"
															},
															"nativeSrc": "2502:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "2502:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "2433:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2480:5:1",
														"nodeType": "YulTypedName",
														"src": "2480:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2487:3:1",
														"nodeType": "YulTypedName",
														"src": "2487:3:1",
														"type": ""
													}
												],
												"src": "2433:109:1"
											},
											{
												"body": {
													"nativeSrc": "2696:282:1",
													"nodeType": "YulBlock",
													"src": "2696:282:1",
													"statements": [
														{
															"nativeSrc": "2706:26:1",
															"nodeType": "YulAssignment",
															"src": "2706:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2718:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2718:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2729:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2729:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2714:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2714:3:1"
																},
																"nativeSrc": "2714:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2714:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2706:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2706:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2786:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2799:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2799:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2810:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2810:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2795:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2795:3:1"
																		},
																		"nativeSrc": "2795:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2795:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2742:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2742:43:1"
																},
																"nativeSrc": "2742:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2742:71:1"
															},
															"nativeSrc": "2742:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "2742:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "2867:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2867:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2880:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2880:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2891:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2891:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2876:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2876:3:1"
																		},
																		"nativeSrc": "2876:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2823:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "2823:43:1"
																},
																"nativeSrc": "2823:72:1",
																"nodeType": "YulFunctionCall",
																"src": "2823:72:1"
															},
															"nativeSrc": "2823:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "2823:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "2943:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2943:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2956:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2956:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2967:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2967:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2952:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2952:3:1"
																		},
																		"nativeSrc": "2952:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2952:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2905:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "2905:37:1"
																},
																"nativeSrc": "2905:66:1",
																"nodeType": "YulFunctionCall",
																"src": "2905:66:1"
															},
															"nativeSrc": "2905:66:1",
															"nodeType": "YulExpressionStatement",
															"src": "2905:66:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint256_t_bool__to_t_bytes32_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "2548:430:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2652:9:1",
														"nodeType": "YulTypedName",
														"src": "2652:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2664:6:1",
														"nodeType": "YulTypedName",
														"src": "2664:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2672:6:1",
														"nodeType": "YulTypedName",
														"src": "2672:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2680:6:1",
														"nodeType": "YulTypedName",
														"src": "2680:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2691:4:1",
														"nodeType": "YulTypedName",
														"src": "2691:4:1",
														"type": ""
													}
												],
												"src": "2548:430:1"
											},
											{
												"body": {
													"nativeSrc": "3082:124:1",
													"nodeType": "YulBlock",
													"src": "3082:124:1",
													"statements": [
														{
															"nativeSrc": "3092:26:1",
															"nodeType": "YulAssignment",
															"src": "3092:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3104:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "3104:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3115:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3115:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3100:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3100:3:1"
																},
																"nativeSrc": "3100:18:1",
																"nodeType": "YulFunctionCall",
																"src": "3100:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3092:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "3092:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3172:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3172:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3185:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3185:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3196:1:1",
																				"nodeType": "YulLiteral",
																				"src": "3196:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3181:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3181:3:1"
																		},
																		"nativeSrc": "3181:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3181:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3128:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3128:43:1"
																},
																"nativeSrc": "3128:71:1",
																"nodeType": "YulFunctionCall",
																"src": "3128:71:1"
															},
															"nativeSrc": "3128:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "3128:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2984:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3054:9:1",
														"nodeType": "YulTypedName",
														"src": "3054:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3066:6:1",
														"nodeType": "YulTypedName",
														"src": "3066:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3077:4:1",
														"nodeType": "YulTypedName",
														"src": "3077:4:1",
														"type": ""
													}
												],
												"src": "2984:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint256_t_bool__to_t_bytes32_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610055575f3560e01c8063042789fd146100595780639f7a497a14610075578063a8c35de414610091578063df25ea60146100af578063eb5e91ff146100cd575b5f5ffd5b610073600480360381019061006e91906102a6565b6100ff565b005b61008f600480360381019061008a9190610304565b610192565b005b61009961022f565b6040516100a69190610351565b60405180910390f35b6100b7610235565b6040516100c49190610351565b60405180910390f35b6100e760048036038101906100e291906102a6565b61023e565b6040516100f693929190610393565b60405180910390f35b60015f5f8381526020019081526020015f206002015f6101000a81548160ff0219169083151502179055505f5f60015481526020019081526020015f20600101545f5f8381526020019081526020015f2060010154111561018f5780600181905550807f3a57ed2fb9dfbafe509434b45866445d708cae846cad3338fc2ed4b6b1f264d160405160405180910390a25b50565b60405180606001604052808381526020018281526020015f15158152505f5f8481526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548160ff021916908315150217905550905050817fb671b0a0a792edb35a44f167aa2e3889dc850776bbd09d90d120295db88f48c28260405161022391906103c8565b60405180910390a25050565b60015481565b5f600154905090565b5f602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900460ff16905083565b5f5ffd5b5f819050919050565b61028581610273565b811461028f575f5ffd5b50565b5f813590506102a08161027c565b92915050565b5f602082840312156102bb576102ba61026f565b5b5f6102c884828501610292565b91505092915050565b5f819050919050565b6102e3816102d1565b81146102ed575f5ffd5b50565b5f813590506102fe816102da565b92915050565b5f5f6040838503121561031a5761031961026f565b5b5f61032785828601610292565b9250506020610338858286016102f0565b9150509250929050565b61034b81610273565b82525050565b5f6020820190506103645f830184610342565b92915050565b610373816102d1565b82525050565b5f8115159050919050565b61038d81610379565b82525050565b5f6060820190506103a65f830186610342565b6103b3602083018561036a565b6103c06040830184610384565b949350505050565b5f6020820190506103db5f83018461036a565b9291505056fea26469706673582212209c67b3d1cd44899f51671c44cb9a85b72b510c68fbdcbde21b0c396dc39b613d64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42789FD EQ PUSH2 0x59 JUMPI DUP1 PUSH4 0x9F7A497A EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0xA8C35DE4 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xDF25EA60 EQ PUSH2 0xAF JUMPI DUP1 PUSH4 0xEB5E91FF EQ PUSH2 0xCD JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xFF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8A SWAP2 SWAP1 PUSH2 0x304 JUMP JUMPDEST PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x99 PUSH2 0x22F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB7 PUSH2 0x235 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC4 SWAP2 SWAP1 PUSH2 0x351 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE2 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x23E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH0 PUSH1 0x1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH0 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x18F JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP DUP1 PUSH32 0x3A57ED2FB9DFBAFE509434B45866445D708CAE846CAD3338FC2ED4B6B1F264D1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH0 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP2 PUSH32 0xB671B0A0A792EDB35A44F167AA2E3889DC850776BBD09D90D120295DB88F48C2 DUP3 PUSH1 0x40 MLOAD PUSH2 0x223 SWAP2 SWAP1 PUSH2 0x3C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285 DUP2 PUSH2 0x273 JUMP JUMPDEST DUP2 EQ PUSH2 0x28F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2A0 DUP2 PUSH2 0x27C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BB JUMPI PUSH2 0x2BA PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C8 DUP5 DUP3 DUP6 ADD PUSH2 0x292 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E3 DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2ED JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2FE DUP2 PUSH2 0x2DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x31A JUMPI PUSH2 0x319 PUSH2 0x26F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x327 DUP6 DUP3 DUP7 ADD PUSH2 0x292 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x338 DUP6 DUP3 DUP7 ADD PUSH2 0x2F0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x34B DUP2 PUSH2 0x273 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x364 PUSH0 DUP4 ADD DUP5 PUSH2 0x342 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x373 DUP2 PUSH2 0x2D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38D DUP2 PUSH2 0x379 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3A6 PUSH0 DUP4 ADD DUP7 PUSH2 0x342 JUMP JUMPDEST PUSH2 0x3B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x36A JUMP JUMPDEST PUSH2 0x3C0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x384 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3DB PUSH0 DUP4 ADD DUP5 PUSH2 0x36A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 PUSH8 0xB3D1CD44899F5167 SHR PREVRANDAO 0xCB SWAP11 DUP6 0xB7 0x2B MLOAD 0xC PUSH9 0xFBDCBDE21B0C396DC3 SWAP12 PUSH2 0x3D64 PUSH20 0x6F6C634300081D00330000000000000000000000 ",
							"sourceMap": "58:943:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;408:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;255:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;898:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;200:49;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;600:292;684:4;652:11;:19;664:6;652:19;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;756:11;:28;768:15;;756:28;;;;;;;;;;;:34;;;716:11;:19;728:6;716:19;;;;;;;;;;;:25;;;:74;699:187;;;833:6;815:15;:24;;;;868:6;858:17;;;;;;;;;;699:187;600:292;:::o;408:186::-;506:32;;;;;;;;517:6;506:32;;;;525:5;506:32;;;;532:5;506:32;;;;;484:11;:19;496:6;484:19;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:6;553:34;581:5;553:34;;;;;;:::i;:::-;;;;;;;;408:186;;:::o;255:30::-;;;;:::o;898:101::-;951:7;977:15;;970:22;;898:101;:::o;200:49::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:77::-;1062:7;1091:5;1080:16;;1025:77;;;:::o;1108:122::-;1181:24;1199:5;1181:24;:::i;:::-;1174:5;1171:35;1161:63;;1220:1;1217;1210:12;1161:63;1108:122;:::o;1236:139::-;1282:5;1320:6;1307:20;1298:29;;1336:33;1363:5;1336:33;:::i;:::-;1236:139;;;;:::o;1381:474::-;1449:6;1457;1506:2;1494:9;1485:7;1481:23;1477:32;1474:119;;;1512:79;;:::i;:::-;1474:119;1632:1;1657:53;1702:7;1693:6;1682:9;1678:22;1657:53;:::i;:::-;1647:63;;1603:117;1759:2;1785:53;1830:7;1821:6;1810:9;1806:22;1785:53;:::i;:::-;1775:63;;1730:118;1381:474;;;;;:::o;1861:118::-;1948:24;1966:5;1948:24;:::i;:::-;1943:3;1936:37;1861:118;;:::o;1985:222::-;2078:4;2116:2;2105:9;2101:18;2093:26;;2129:71;2197:1;2186:9;2182:17;2173:6;2129:71;:::i;:::-;1985:222;;;;:::o;2213:118::-;2300:24;2318:5;2300:24;:::i;:::-;2295:3;2288:37;2213:118;;:::o;2337:90::-;2371:7;2414:5;2407:13;2400:21;2389:32;;2337:90;;;:::o;2433:109::-;2514:21;2529:5;2514:21;:::i;:::-;2509:3;2502:34;2433:109;;:::o;2548:430::-;2691:4;2729:2;2718:9;2714:18;2706:26;;2742:71;2810:1;2799:9;2795:17;2786:6;2742:71;:::i;:::-;2823:72;2891:2;2880:9;2876:18;2867:6;2823:72;:::i;:::-;2905:66;2967:2;2956:9;2952:18;2943:6;2905:66;:::i;:::-;2548:430;;;;;;:::o;2984:222::-;3077:4;3115:2;3104:9;3100:18;3092:26;;3128:71;3196:1;3185:9;3181:17;3172:6;3128:71;:::i;:::-;2984:222;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "209400",
								"executionCost": "249",
								"totalCost": "209649"
							},
							"external": {
								"checkpoints(bytes32)": "infinite",
								"getLatestJustified()": "2476",
								"justify(bytes32)": "54483",
								"latestJustified()": "2447",
								"submitCheckpoint(bytes32,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 58,
									"end": 1001,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209c67b3d1cd44899f51671c44cb9a85b72b510c68fbdcbde21b0c396dc39b613d64736f6c634300081d0033",
									".code": [
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "42789FD"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "9F7A497A"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "A8C35DE4"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "DF25EA60"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "EB5E91FF"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58,
											"end": 1001,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 600,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 600,
											"end": 892,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 600,
											"end": 892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 600,
											"end": 892,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 600,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 600,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 600,
											"end": 892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 600,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 408,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 594,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 408,
											"end": 594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 408,
											"end": 594,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 408,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 408,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 408,
											"end": 594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 408,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 255,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 255,
											"end": 285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 898,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 898,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 898,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 898,
											"end": 999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 898,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 898,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 898,
											"end": 999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 200,
											"end": 249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 200,
											"end": 249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 200,
											"end": 249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 600,
											"end": 892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 684,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 652,
											"end": 663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 670,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 671,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 671,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 652,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 652,
											"end": 681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 652,
											"end": 688,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 652,
											"end": 688,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 756,
											"end": 767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 768,
											"end": 783,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 756,
											"end": 784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 756,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 784,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 756,
											"end": 784,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 756,
											"end": 784,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 756,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 784,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 784,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 756,
											"end": 790,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 756,
											"end": 790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 790,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 727,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 716,
											"end": 735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 716,
											"end": 741,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 716,
											"end": 741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 741,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 716,
											"end": 790,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 699,
											"end": 886,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 699,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 699,
											"end": 886,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 833,
											"end": 839,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 815,
											"end": 830,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 815,
											"end": 839,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 815,
											"end": 839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 815,
											"end": 839,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 815,
											"end": 839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 868,
											"end": 874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "PUSH",
											"source": 0,
											"value": "3A57ED2FB9DFBAFE509434B45866445D708CAE846CAD3338FC2ED4B6B1F264D1"
										},
										{
											"begin": 858,
											"end": 875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 858,
											"end": 875,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 858,
											"end": 875,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 699,
											"end": 886,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 699,
											"end": 886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 600,
											"end": 892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 408,
											"end": 594,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 506,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 506,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 530,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 532,
											"end": 537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 506,
											"end": 538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 506,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 502,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 484,
											"end": 503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 484,
											"end": 538,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 484,
											"end": 538,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 573,
											"end": 579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "B671B0A0A792EDB35A44F167AA2E3889DC850776BBD09D90D120295DB88F48C2"
										},
										{
											"begin": 581,
											"end": 586,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 553,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 553,
											"end": 587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 553,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 553,
											"end": 587,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 408,
											"end": 594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 255,
											"end": 285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 255,
											"end": 285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 898,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 951,
											"end": 958,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 992,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 977,
											"end": 992,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 970,
											"end": 992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 970,
											"end": 992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 898,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 200,
											"end": 249,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 200,
											"end": 249,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1230,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1108,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1199,
											"end": 1204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1181,
											"end": 1205,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1181,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1174,
											"end": 1179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1171,
											"end": 1206,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1161,
											"end": 1224,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1220,
											"end": 1221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1218,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1222,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1224,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1161,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1375,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1236,
											"end": 1375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1282,
											"end": 1287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1363,
											"end": 1368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1336,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1369,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1336,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1375,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1855,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1381,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1449,
											"end": 1455,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1463,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1506,
											"end": 1508,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1494,
											"end": 1503,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1485,
											"end": 1492,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1481,
											"end": 1504,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1477,
											"end": 1509,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1474,
											"end": 1593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1512,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1512,
											"end": 1591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1512,
											"end": 1591,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 1512,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1593,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 1474,
											"end": 1593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1657,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1657,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1710,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1785,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1830,
											"end": 1837,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1821,
											"end": 1827,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1819,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1806,
											"end": 1828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1785,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1838,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1785,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1775,
											"end": 1838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1730,
											"end": 1848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1979,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1861,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1966,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1948,
											"end": 1972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 1972,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 1948,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1943,
											"end": 1946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2207,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1985,
											"end": 2207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2078,
											"end": 2082,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2116,
											"end": 2118,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2119,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2119,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2197,
											"end": 2198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2195,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2179,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2129,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2200,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2129,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2207,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2331,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2213,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2318,
											"end": 2323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2300,
											"end": 2324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2300,
											"end": 2324,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2300,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2295,
											"end": 2298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2325,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2427,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2337,
											"end": 2427,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2371,
											"end": 2378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2407,
											"end": 2420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2421,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2389,
											"end": 2421,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2427,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2427,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2427,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2542,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2433,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2529,
											"end": 2534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2514,
											"end": 2535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2514,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2512,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2978,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2548,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2729,
											"end": 2731,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2718,
											"end": 2727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2732,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2706,
											"end": 2732,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2810,
											"end": 2811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2799,
											"end": 2808,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2795,
											"end": 2812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2742,
											"end": 2813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2742,
											"end": 2813,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2742,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2891,
											"end": 2893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2880,
											"end": 2889,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2894,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2873,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2823,
											"end": 2895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 2895,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2823,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2967,
											"end": 2969,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2956,
											"end": 2965,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2943,
											"end": 2949,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2905,
											"end": 2971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2971,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2905,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2978,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2978,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2548,
											"end": 2978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3206,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2984,
											"end": 3206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3077,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3117,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3104,
											"end": 3113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3118,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3092,
											"end": 3118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3185,
											"end": 3194,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3181,
											"end": 3198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3172,
											"end": 3178,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3128,
											"end": 3199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3199,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3128,
											"end": 3199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3206,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"checkpoints(bytes32)": "eb5e91ff",
							"getLatestJustified()": "df25ea60",
							"justify(bytes32)": "042789fd",
							"latestJustified()": "a8c35de4",
							"submitCheckpoint(bytes32,uint256)": "9f7a497a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"forkId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"CheckpointSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"forkId\",\"type\":\"bytes32\"}],\"name\":\"Justified\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"forkId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"justified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestJustified\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"forkId\",\"type\":\"bytes32\"}],\"name\":\"justify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestJustified\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"forkId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"}],\"name\":\"submitCheckpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":\"ForkChoiceCheckpointRule\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol\":{\"keccak256\":\"0x06920a1fbba5db4d5e3cfaf78bf8e52ea38723bec5ff51a2d5005969d5533f52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ce86caa341185d2bde48093a2d49161599e782159c2e8f91564c20685661aef\",\"dweb:/ipfs/QmYdmhV34QPcfwK11VSaojkpiAZw5fzTGeCz5mmS6na4Du\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "F/ForkChoiceRule/ForkChoiceCheckpointRule.sol:ForkChoiceCheckpointRule",
								"label": "checkpoints",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(Checkpoint)8_storage)"
							},
							{
								"astId": 15,
								"contract": "F/ForkChoiceRule/ForkChoiceCheckpointRule.sol:ForkChoiceCheckpointRule",
								"label": "latestJustified",
								"offset": 0,
								"slot": "1",
								"type": "t_bytes32"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_struct(Checkpoint)8_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct ForkChoiceCheckpointRule.Checkpoint)",
								"numberOfBytes": "32",
								"value": "t_struct(Checkpoint)8_storage"
							},
							"t_struct(Checkpoint)8_storage": {
								"encoding": "inplace",
								"label": "struct ForkChoiceCheckpointRule.Checkpoint",
								"members": [
									{
										"astId": 3,
										"contract": "F/ForkChoiceRule/ForkChoiceCheckpointRule.sol:ForkChoiceCheckpointRule",
										"label": "forkId",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 5,
										"contract": "F/ForkChoiceRule/ForkChoiceCheckpointRule.sol:ForkChoiceCheckpointRule",
										"label": "epoch",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 7,
										"contract": "F/ForkChoiceRule/ForkChoiceCheckpointRule.sol:ForkChoiceCheckpointRule",
										"label": "justified",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"F/ForkChoiceRule/ForkChoiceCheckpointRule.sol": {
				"ast": {
					"absolutePath": "F/ForkChoiceRule/ForkChoiceCheckpointRule.sol",
					"exportedSymbols": {
						"ForkChoiceCheckpointRule": [
							89
						]
					},
					"id": 90,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ForkChoiceCheckpointRule",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "ForkChoiceCheckpointRule",
							"nameLocation": "67:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ForkChoiceCheckpointRule.Checkpoint",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "forkId",
											"nameLocation": "134:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "126:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "126:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "epoch",
											"nameLocation": "158:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "150:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "150:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "justified",
											"nameLocation": "178:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "173:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 6,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "173:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Checkpoint",
									"nameLocation": "105:10:0",
									"nodeType": "StructDefinition",
									"scope": 89,
									"src": "98:96:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eb5e91ff",
									"id": 13,
									"mutability": "mutable",
									"name": "checkpoints",
									"nameLocation": "238:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 89,
									"src": "200:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Checkpoint_$8_storage_$",
										"typeString": "mapping(bytes32 => struct ForkChoiceCheckpointRule.Checkpoint)"
									},
									"typeName": {
										"id": 12,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 9,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "208:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "200:30:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Checkpoint_$8_storage_$",
											"typeString": "mapping(bytes32 => struct ForkChoiceCheckpointRule.Checkpoint)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 11,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 10,
												"name": "Checkpoint",
												"nameLocations": [
													"219:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 8,
												"src": "219:10:0"
											},
											"referencedDeclaration": 8,
											"src": "219:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Checkpoint_$8_storage_ptr",
												"typeString": "struct ForkChoiceCheckpointRule.Checkpoint"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a8c35de4",
									"id": 15,
									"mutability": "mutable",
									"name": "latestJustified",
									"nameLocation": "270:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 89,
									"src": "255:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 14,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "255:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "b671b0a0a792edb35a44f167aa2e3889dc850776bbd09d90d120295db88f48c2",
									"id": 21,
									"name": "CheckpointSubmitted",
									"nameLocation": "298:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "forkId",
												"nameLocation": "334:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "318:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 16,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "318:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": false,
												"mutability": "mutable",
												"name": "epoch",
												"nameLocation": "350:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "342:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "342:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "317:39:0"
									},
									"src": "292:65:0"
								},
								{
									"anonymous": false,
									"eventSelector": "3a57ed2fb9dfbafe509434b45866445d708cae846cad3338fc2ed4b6b1f264d1",
									"id": 25,
									"name": "Justified",
									"nameLocation": "368:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"indexed": true,
												"mutability": "mutable",
												"name": "forkId",
												"nameLocation": "394:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "378:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 22,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "377:24:0"
									},
									"src": "362:40:0"
								},
								{
									"body": {
										"id": 47,
										"nodeType": "Block",
										"src": "474:120:0",
										"statements": [
											{
												"expression": {
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 32,
															"name": "checkpoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "484:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Checkpoint_$8_storage_$",
																"typeString": "mapping(bytes32 => struct ForkChoiceCheckpointRule.Checkpoint storage ref)"
															}
														},
														"id": 34,
														"indexExpression": {
															"id": 33,
															"name": "forkId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "496:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "484:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$8_storage",
															"typeString": "struct ForkChoiceCheckpointRule.Checkpoint storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 36,
																"name": "forkId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "517:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 37,
																"name": "epoch",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "525:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 38,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "532:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 35,
															"name": "Checkpoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "506:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Checkpoint_$8_storage_ptr_$",
																"typeString": "type(struct ForkChoiceCheckpointRule.Checkpoint storage pointer)"
															}
														},
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "506:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Checkpoint_$8_memory_ptr",
															"typeString": "struct ForkChoiceCheckpointRule.Checkpoint memory"
														}
													},
													"src": "484:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Checkpoint_$8_storage",
														"typeString": "struct ForkChoiceCheckpointRule.Checkpoint storage ref"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "484:54:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 43,
															"name": "forkId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "573:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 44,
															"name": "epoch",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "581:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 42,
														"name": "CheckpointSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "553:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "553:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "EmitStatement",
												"src": "548:39:0"
											}
										]
									},
									"functionSelector": "9f7a497a",
									"id": 48,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "submitCheckpoint",
									"nameLocation": "417:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "forkId",
												"nameLocation": "442:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "434:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 26,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "epoch",
												"nameLocation": "458:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "450:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 28,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "433:31:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "474:0:0"
									},
									"scope": 89,
									"src": "408:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "642:250:0",
										"statements": [
											{
												"expression": {
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 53,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "652:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Checkpoint_$8_storage_$",
																	"typeString": "mapping(bytes32 => struct ForkChoiceCheckpointRule.Checkpoint storage ref)"
																}
															},
															"id": 55,
															"indexExpression": {
																"id": 54,
																"name": "forkId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "664:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "652:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$8_storage",
																"typeString": "struct ForkChoiceCheckpointRule.Checkpoint storage ref"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "672:9:0",
														"memberName": "justified",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "652:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "684:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "652:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "652:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 60,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "716:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Checkpoint_$8_storage_$",
																	"typeString": "mapping(bytes32 => struct ForkChoiceCheckpointRule.Checkpoint storage ref)"
																}
															},
															"id": 62,
															"indexExpression": {
																"id": 61,
																"name": "forkId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 50,
																"src": "728:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "716:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$8_storage",
																"typeString": "struct ForkChoiceCheckpointRule.Checkpoint storage ref"
															}
														},
														"id": 63,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "736:5:0",
														"memberName": "epoch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "716:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 64,
																"name": "checkpoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "756:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Checkpoint_$8_storage_$",
																	"typeString": "mapping(bytes32 => struct ForkChoiceCheckpointRule.Checkpoint storage ref)"
																}
															},
															"id": 66,
															"indexExpression": {
																"id": 65,
																"name": "latestJustified",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "768:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "756:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Checkpoint_$8_storage",
																"typeString": "struct ForkChoiceCheckpointRule.Checkpoint storage ref"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "785:5:0",
														"memberName": "epoch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "756:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "716:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 78,
												"nodeType": "IfStatement",
												"src": "699:187:0",
												"trueBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "801:85:0",
													"statements": [
														{
															"expression": {
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 69,
																	"name": "latestJustified",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "815:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 70,
																	"name": "forkId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "833:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "815:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 72,
															"nodeType": "ExpressionStatement",
															"src": "815:24:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 74,
																		"name": "forkId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 50,
																		"src": "868:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 73,
																	"name": "Justified",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "858:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "858:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 76,
															"nodeType": "EmitStatement",
															"src": "853:22:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "042789fd",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "justify",
									"nameLocation": "609:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "forkId",
												"nameLocation": "625:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "617:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 49,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "616:16:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "642:0:0"
									},
									"scope": 89,
									"src": "600:292:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "960:39:0",
										"statements": [
											{
												"expression": {
													"id": 85,
													"name": "latestJustified",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 15,
													"src": "977:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 84,
												"id": 86,
												"nodeType": "Return",
												"src": "970:22:0"
											}
										]
									},
									"functionSelector": "df25ea60",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestJustified",
									"nameLocation": "907:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "925:2:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "951:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "950:9:0"
									},
									"scope": 89,
									"src": "898:101:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 90,
							"src": "58:943:0",
							"usedErrors": [],
							"usedEvents": [
								21,
								25
							]
						}
					],
					"src": "32:970:0"
				},
				"id": 0
			}
		}
	}
}