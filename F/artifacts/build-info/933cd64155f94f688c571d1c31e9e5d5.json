{
	"id": "933cd64155f94f688c571d1c31e9e5d5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"F/FallingWedgeToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title FallingWedgeToken\n * @dev ERC20 token with a dynamic burn fee that increases over time.\n * The burn fee is calculated in basis points (1% = 100 basis points) using:\n *\n *     currentBurnFee = minBurnFee + (elapsedDays * burnFeeIncreaseRate)\n *\n * The fee is capped at maxBurnFee. On every transfer, the calculated burn fee is applied—\n * burning a portion of the transferred tokens.\n */\ncontract FallingWedgeToken is ERC20, Ownable {\n    // Minimum burn fee in basis points (e.g., 50 = 0.5%)\n    uint256 public minBurnFee;\n    // Maximum burn fee in basis points (e.g., 1000 = 10%)\n    uint256 public maxBurnFee;\n    // Burn fee increase rate per day in basis points (e.g., 10 basis points per day)\n    uint256 public burnFeeIncreaseRate;\n    // Timestamp at deployment (used to compute elapsed days)\n    uint256 public deploymentTime;\n\n    event BurnFeeApplied(uint256 currentFee, uint256 burnAmount);\n\n    /**\n     * @dev Constructor sets token details, initial supply, and burn fee parameters.\n     * @param initialSupply Total token supply in the smallest unit.\n     * @param _minBurnFee Minimum burn fee in basis points.\n     * @param _maxBurnFee Maximum burn fee in basis points.\n     * @param _burnFeeIncreaseRate Burn fee increase rate per day in basis points.\n     */\n    constructor(\n        uint256 initialSupply,\n        uint256 _minBurnFee,\n        uint256 _maxBurnFee,\n        uint256 _burnFeeIncreaseRate\n    ) ERC20(\"Falling Wedge Token\", \"FWT\") Ownable(msg.sender) {\n        require(_minBurnFee <= _maxBurnFee, \"Min burn fee must be <= max burn fee\");\n        minBurnFee = _minBurnFee;\n        maxBurnFee = _maxBurnFee;\n        burnFeeIncreaseRate = _burnFeeIncreaseRate;\n        deploymentTime = block.timestamp;\n        _mint(msg.sender, initialSupply);\n    }\n\n    /**\n     * @dev Returns the current burn fee (in basis points) based on elapsed days since deployment.\n     */\n    function currentBurnFee() public view returns (uint256) {\n        uint256 elapsedDays = (block.timestamp - deploymentTime) / 1 days;\n        uint256 fee = minBurnFee + (elapsedDays * burnFeeIncreaseRate);\n        if (fee > maxBurnFee) {\n            fee = maxBurnFee;\n        }\n        return fee;\n    }\n\n    /**\n     * @dev Overrides transfer to apply a dynamic burn fee.\n     * The sender sends (amount - burnAmount) to the recipient and burnAmount is burned.\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        uint256 fee = currentBurnFee();\n        uint256 burnAmount = (amount * fee) / 10000;\n        uint256 sendAmount = amount - burnAmount;\n\n        // Transfer the net amount\n        bool success = super.transfer(recipient, sendAmount);\n        require(success, \"Transfer failed\");\n\n        // Burn the fee from the sender's balance\n        _burn(_msgSender(), burnAmount);\n        emit BurnFeeApplied(fee, burnAmount);\n        return true;\n    }\n\n    /**\n     * @dev Overrides transferFrom to apply a dynamic burn fee.\n     * The sender’s tokens are reduced by the burn fee before transfer.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        uint256 fee = currentBurnFee();\n        uint256 burnAmount = (amount * fee) / 10000;\n        uint256 sendAmount = amount - burnAmount;\n\n        // Transfer the net amount\n        bool success = super.transferFrom(sender, recipient, sendAmount);\n        require(success, \"Transfer failed\");\n\n        // Burn the fee from the sender's balance\n        _burn(sender, burnAmount);\n        emit BurnFeeApplied(fee, burnAmount);\n        return true;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"F/FallingWedgeToken.sol": {
				"FallingWedgeToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minBurnFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_maxBurnFee",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_burnFeeIncreaseRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "currentFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "burnAmount",
									"type": "uint256"
								}
							],
							"name": "BurnFeeApplied",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "burnFeeIncreaseRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentBurnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deploymentTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxBurnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minBurnFee",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with a dynamic burn fee that increases over time. The burn fee is calculated in basis points (1% = 100 basis points) using:     currentBurnFee = minBurnFee + (elapsedDays * burnFeeIncreaseRate) The fee is capped at maxBurnFee. On every transfer, the calculated burn fee is applied— burning a portion of the transferred tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor sets token details, initial supply, and burn fee parameters.",
								"params": {
									"_burnFeeIncreaseRate": "Burn fee increase rate per day in basis points.",
									"_maxBurnFee": "Maximum burn fee in basis points.",
									"_minBurnFee": "Minimum burn fee in basis points.",
									"initialSupply": "Total token supply in the smallest unit."
								}
							},
							"currentBurnFee()": {
								"details": "Returns the current burn fee (in basis points) based on elapsed days since deployment."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Overrides transfer to apply a dynamic burn fee. The sender sends (amount - burnAmount) to the recipient and burnAmount is burned."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Overrides transferFrom to apply a dynamic burn fee. The sender’s tokens are reduced by the burn fee before transfer."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "FallingWedgeToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"F/FallingWedgeToken.sol\":571:3816  contract FallingWedgeToken is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"F/FallingWedgeToken.sol\":1465:1962  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"F/FallingWedgeToken.sol\":1654:1664  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x13\n  dup2\n  mstore\n  0x20\n  add\n  0x46616c6c696e6720576564676520546f6b656e00000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x4657540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"F/FallingWedgeToken.sol\":1699:1710  _maxBurnFee */\n  dup2\n    /* \"F/FallingWedgeToken.sol\":1684:1695  _minBurnFee */\n  dup4\n    /* \"F/FallingWedgeToken.sol\":1684:1710  _minBurnFee <= _maxBurnFee */\n  gt\n  iszero\n    /* \"F/FallingWedgeToken.sol\":1676:1751  require(_minBurnFee <= _maxBurnFee, \"Min burn fee must be <= max burn fee\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"F/FallingWedgeToken.sol\":1774:1785  _minBurnFee */\n  dup3\n    /* \"F/FallingWedgeToken.sol\":1761:1771  minBurnFee */\n  0x06\n    /* \"F/FallingWedgeToken.sol\":1761:1785  minBurnFee = _minBurnFee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"F/FallingWedgeToken.sol\":1808:1819  _maxBurnFee */\n  dup2\n    /* \"F/FallingWedgeToken.sol\":1795:1805  maxBurnFee */\n  0x07\n    /* \"F/FallingWedgeToken.sol\":1795:1819  maxBurnFee = _maxBurnFee */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"F/FallingWedgeToken.sol\":1851:1871  _burnFeeIncreaseRate */\n  dup1\n    /* \"F/FallingWedgeToken.sol\":1829:1848  burnFeeIncreaseRate */\n  0x08\n    /* \"F/FallingWedgeToken.sol\":1829:1871  burnFeeIncreaseRate = _burnFeeIncreaseRate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"F/FallingWedgeToken.sol\":1898:1913  block.timestamp */\n  timestamp\n    /* \"F/FallingWedgeToken.sol\":1881:1895  deploymentTime */\n  0x09\n    /* \"F/FallingWedgeToken.sol\":1881:1913  deploymentTime = block.timestamp */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"F/FallingWedgeToken.sol\":1923:1955  _mint(msg.sender, initialSupply) */\n  tag_21\n    /* \"F/FallingWedgeToken.sol\":1929:1939  msg.sender */\n  caller\n    /* \"F/FallingWedgeToken.sol\":1941:1954  initialSupply */\n  dup6\n    /* \"F/FallingWedgeToken.sol\":1923:1928  _mint */\n  shl(0x20, tag_22)\n    /* \"F/FallingWedgeToken.sol\":1923:1955  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"F/FallingWedgeToken.sol\":1465:1962  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"F/FallingWedgeToken.sol\":571:3816  contract FallingWedgeToken is ERC20, Ownable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_28\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_39)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_43:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_45:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_46:\n    /* \"#utility.yul\":490:514   */\n  tag_81\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_45\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_82\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_82:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_47:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_84\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_46\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1514   */\ntag_3:\n    /* \"#utility.yul\":791:797   */\n  0x00\n    /* \"#utility.yul\":799:805   */\n  0x00\n    /* \"#utility.yul\":807:813   */\n  0x00\n    /* \"#utility.yul\":815:821   */\n  0x00\n    /* \"#utility.yul\":864:867   */\n  0x80\n    /* \"#utility.yul\":852:861   */\n  dup6\n    /* \"#utility.yul\":843:850   */\n  dup8\n    /* \"#utility.yul\":839:862   */\n  sub\n    /* \"#utility.yul\":835:868   */\n  slt\n    /* \"#utility.yul\":832:952   */\n  iszero\n  tag_86\n  jumpi\n    /* \"#utility.yul\":871:950   */\n  tag_87\n  tag_43\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":832:952   */\ntag_86:\n    /* \"#utility.yul\":991:992   */\n  0x00\n    /* \"#utility.yul\":1016:1080   */\n  tag_88\n    /* \"#utility.yul\":1072:1079   */\n  dup8\n    /* \"#utility.yul\":1063:1069   */\n  dup3\n    /* \"#utility.yul\":1052:1061   */\n  dup9\n    /* \"#utility.yul\":1048:1070   */\n  add\n    /* \"#utility.yul\":1016:1080   */\n  tag_47\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1006:1080   */\n  swap5\n  pop\n    /* \"#utility.yul\":962:1090   */\n  pop\n    /* \"#utility.yul\":1129:1131   */\n  0x20\n    /* \"#utility.yul\":1155:1219   */\n  tag_89\n    /* \"#utility.yul\":1211:1218   */\n  dup8\n    /* \"#utility.yul\":1202:1208   */\n  dup3\n    /* \"#utility.yul\":1191:1200   */\n  dup9\n    /* \"#utility.yul\":1187:1209   */\n  add\n    /* \"#utility.yul\":1155:1219   */\n  tag_47\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":1145:1219   */\n  swap4\n  pop\n    /* \"#utility.yul\":1100:1229   */\n  pop\n    /* \"#utility.yul\":1268:1270   */\n  0x40\n    /* \"#utility.yul\":1294:1358   */\n  tag_90\n    /* \"#utility.yul\":1350:1357   */\n  dup8\n    /* \"#utility.yul\":1341:1347   */\n  dup3\n    /* \"#utility.yul\":1330:1339   */\n  dup9\n    /* \"#utility.yul\":1326:1348   */\n  add\n    /* \"#utility.yul\":1294:1358   */\n  tag_47\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":1284:1358   */\n  swap3\n  pop\n    /* \"#utility.yul\":1239:1368   */\n  pop\n    /* \"#utility.yul\":1407:1409   */\n  0x60\n    /* \"#utility.yul\":1433:1497   */\n  tag_91\n    /* \"#utility.yul\":1489:1496   */\n  dup8\n    /* \"#utility.yul\":1480:1486   */\n  dup3\n    /* \"#utility.yul\":1469:1478   */\n  dup9\n    /* \"#utility.yul\":1465:1487   */\n  add\n    /* \"#utility.yul\":1433:1497   */\n  tag_47\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1423:1497   */\n  swap2\n  pop\n    /* \"#utility.yul\":1378:1507   */\n  pop\n    /* \"#utility.yul\":694:1514   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1520:1619   */\ntag_48:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1606:1611   */\n  dup2\n    /* \"#utility.yul\":1600:1612   */\n  mload\n    /* \"#utility.yul\":1590:1612   */\n  swap1\n  pop\n    /* \"#utility.yul\":1520:1619   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1625:1805   */\ntag_49:\n    /* \"#utility.yul\":1673:1750   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1670:1671   */\n  0x00\n    /* \"#utility.yul\":1663:1751   */\n  mstore\n    /* \"#utility.yul\":1770:1774   */\n  0x41\n    /* \"#utility.yul\":1767:1768   */\n  0x04\n    /* \"#utility.yul\":1760:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x24\n    /* \"#utility.yul\":1791:1792   */\n  0x00\n    /* \"#utility.yul\":1784:1799   */\n  revert\n    /* \"#utility.yul\":1811:1991   */\ntag_50:\n    /* \"#utility.yul\":1859:1936   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1856:1857   */\n  0x00\n    /* \"#utility.yul\":1849:1937   */\n  mstore\n    /* \"#utility.yul\":1956:1960   */\n  0x22\n    /* \"#utility.yul\":1953:1954   */\n  0x04\n    /* \"#utility.yul\":1946:1961   */\n  mstore\n    /* \"#utility.yul\":1980:1984   */\n  0x24\n    /* \"#utility.yul\":1977:1978   */\n  0x00\n    /* \"#utility.yul\":1970:1985   */\n  revert\n    /* \"#utility.yul\":1997:2317   */\ntag_51:\n    /* \"#utility.yul\":2041:2047   */\n  0x00\n    /* \"#utility.yul\":2078:2079   */\n  0x02\n    /* \"#utility.yul\":2072:2076   */\n  dup3\n    /* \"#utility.yul\":2068:2080   */\n  div\n    /* \"#utility.yul\":2058:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2125:2126   */\n  0x01\n    /* \"#utility.yul\":2119:2123   */\n  dup3\n    /* \"#utility.yul\":2115:2127   */\n  and\n    /* \"#utility.yul\":2146:2164   */\n  dup1\n    /* \"#utility.yul\":2136:2217   */\n  tag_96\n  jumpi\n    /* \"#utility.yul\":2202:2206   */\n  0x7f\n    /* \"#utility.yul\":2194:2200   */\n  dup3\n    /* \"#utility.yul\":2190:2207   */\n  and\n    /* \"#utility.yul\":2180:2207   */\n  swap2\n  pop\n    /* \"#utility.yul\":2136:2217   */\ntag_96:\n    /* \"#utility.yul\":2264:2266   */\n  0x20\n    /* \"#utility.yul\":2256:2262   */\n  dup3\n    /* \"#utility.yul\":2253:2267   */\n  lt\n    /* \"#utility.yul\":2233:2251   */\n  dup2\n    /* \"#utility.yul\":2230:2268   */\n  sub\n    /* \"#utility.yul\":2227:2311   */\n  tag_97\n  jumpi\n    /* \"#utility.yul\":2283:2301   */\n  tag_98\n  tag_50\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2227:2311   */\ntag_97:\n    /* \"#utility.yul\":2048:2317   */\n  pop\n    /* \"#utility.yul\":1997:2317   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2323:2464   */\ntag_52:\n    /* \"#utility.yul\":2372:2376   */\n  0x00\n    /* \"#utility.yul\":2395:2398   */\n  dup2\n    /* \"#utility.yul\":2387:2398   */\n  swap1\n  pop\n    /* \"#utility.yul\":2418:2421   */\n  dup2\n    /* \"#utility.yul\":2415:2416   */\n  0x00\n    /* \"#utility.yul\":2408:2422   */\n  mstore\n    /* \"#utility.yul\":2452:2456   */\n  0x20\n    /* \"#utility.yul\":2449:2450   */\n  0x00\n    /* \"#utility.yul\":2439:2457   */\n  keccak256\n    /* \"#utility.yul\":2431:2457   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2464   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2470:2563   */\ntag_53:\n    /* \"#utility.yul\":2507:2513   */\n  0x00\n    /* \"#utility.yul\":2554:2556   */\n  0x20\n    /* \"#utility.yul\":2549:2551   */\n  0x1f\n    /* \"#utility.yul\":2542:2547   */\n  dup4\n    /* \"#utility.yul\":2538:2552   */\n  add\n    /* \"#utility.yul\":2534:2557   */\n  div\n    /* \"#utility.yul\":2524:2557   */\n  swap1\n  pop\n    /* \"#utility.yul\":2470:2563   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2569:2676   */\ntag_54:\n    /* \"#utility.yul\":2613:2621   */\n  0x00\n    /* \"#utility.yul\":2663:2668   */\n  dup3\n    /* \"#utility.yul\":2657:2661   */\n  dup3\n    /* \"#utility.yul\":2653:2669   */\n  shl\n    /* \"#utility.yul\":2632:2669   */\n  swap1\n  pop\n    /* \"#utility.yul\":2569:2676   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2682:3075   */\ntag_55:\n    /* \"#utility.yul\":2751:2757   */\n  0x00\n    /* \"#utility.yul\":2801:2802   */\n  0x08\n    /* \"#utility.yul\":2789:2799   */\n  dup4\n    /* \"#utility.yul\":2785:2803   */\n  mul\n    /* \"#utility.yul\":2824:2921   */\n  tag_103\n    /* \"#utility.yul\":2854:2920   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2843:2852   */\n  dup3\n    /* \"#utility.yul\":2824:2921   */\n  tag_54\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2942:2981   */\n  tag_104\n    /* \"#utility.yul\":2972:2980   */\n  dup7\n    /* \"#utility.yul\":2961:2970   */\n  dup4\n    /* \"#utility.yul\":2942:2981   */\n  tag_54\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2930:2981   */\n  swap6\n  pop\n    /* \"#utility.yul\":3014:3018   */\n  dup1\n    /* \"#utility.yul\":3010:3019   */\n  not\n    /* \"#utility.yul\":3003:3008   */\n  dup5\n    /* \"#utility.yul\":2999:3020   */\n  and\n    /* \"#utility.yul\":2990:3020   */\n  swap4\n  pop\n    /* \"#utility.yul\":3063:3067   */\n  dup1\n    /* \"#utility.yul\":3053:3061   */\n  dup7\n    /* \"#utility.yul\":3049:3068   */\n  and\n    /* \"#utility.yul\":3042:3047   */\n  dup5\n    /* \"#utility.yul\":3039:3069   */\n  or\n    /* \"#utility.yul\":3029:3069   */\n  swap3\n  pop\n    /* \"#utility.yul\":2758:3075   */\n  pop\n  pop\n    /* \"#utility.yul\":2682:3075   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3081:3141   */\ntag_56:\n    /* \"#utility.yul\":3109:3112   */\n  0x00\n    /* \"#utility.yul\":3130:3135   */\n  dup2\n    /* \"#utility.yul\":3123:3135   */\n  swap1\n  pop\n    /* \"#utility.yul\":3081:3141   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3147:3289   */\ntag_57:\n    /* \"#utility.yul\":3197:3206   */\n  0x00\n    /* \"#utility.yul\":3230:3283   */\n  tag_107\n    /* \"#utility.yul\":3248:3282   */\n  tag_108\n    /* \"#utility.yul\":3257:3281   */\n  tag_109\n    /* \"#utility.yul\":3275:3280   */\n  dup5\n    /* \"#utility.yul\":3257:3281   */\n  tag_45\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3248:3282   */\n  tag_56\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3230:3283   */\n  tag_45\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3217:3283   */\n  swap1\n  pop\n    /* \"#utility.yul\":3147:3289   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3295:3370   */\ntag_58:\n    /* \"#utility.yul\":3338:3341   */\n  0x00\n    /* \"#utility.yul\":3359:3364   */\n  dup2\n    /* \"#utility.yul\":3352:3364   */\n  swap1\n  pop\n    /* \"#utility.yul\":3295:3370   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3376:3645   */\ntag_59:\n    /* \"#utility.yul\":3486:3525   */\n  tag_112\n    /* \"#utility.yul\":3517:3524   */\n  dup4\n    /* \"#utility.yul\":3486:3525   */\n  tag_57\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3547:3638   */\n  tag_113\n    /* \"#utility.yul\":3596:3637   */\n  tag_114\n    /* \"#utility.yul\":3620:3636   */\n  dup3\n    /* \"#utility.yul\":3596:3637   */\n  tag_58\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3588:3594   */\n  dup5\n    /* \"#utility.yul\":3581:3585   */\n  dup5\n    /* \"#utility.yul\":3575:3586   */\n  sload\n    /* \"#utility.yul\":3547:3638   */\n  tag_55\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3541:3545   */\n  dup3\n    /* \"#utility.yul\":3534:3639   */\n  sstore\n    /* \"#utility.yul\":3452:3645   */\n  pop\n    /* \"#utility.yul\":3376:3645   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3651:3724   */\ntag_60:\n    /* \"#utility.yul\":3696:3699   */\n  0x00\n    /* \"#utility.yul\":3717:3718   */\n  0x00\n    /* \"#utility.yul\":3710:3718   */\n  swap1\n  pop\n    /* \"#utility.yul\":3651:3724   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3730:3919   */\ntag_61:\n    /* \"#utility.yul\":3807:3839   */\n  tag_117\n  tag_60\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3848:3913   */\n  tag_118\n    /* \"#utility.yul\":3906:3912   */\n  dup2\n    /* \"#utility.yul\":3898:3904   */\n  dup5\n    /* \"#utility.yul\":3892:3896   */\n  dup5\n    /* \"#utility.yul\":3848:3913   */\n  tag_59\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3783:3919   */\n  pop\n    /* \"#utility.yul\":3730:3919   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3925:4111   */\ntag_62:\n    /* \"#utility.yul\":3985:4105   */\ntag_120:\n    /* \"#utility.yul\":4002:4005   */\n  dup2\n    /* \"#utility.yul\":3995:4000   */\n  dup2\n    /* \"#utility.yul\":3992:4006   */\n  lt\n    /* \"#utility.yul\":3985:4105   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4056:4095   */\n  tag_123\n    /* \"#utility.yul\":4093:4094   */\n  0x00\n    /* \"#utility.yul\":4086:4091   */\n  dup3\n    /* \"#utility.yul\":4056:4095   */\n  tag_61\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":4029:4030   */\n  0x01\n    /* \"#utility.yul\":4022:4027   */\n  dup2\n    /* \"#utility.yul\":4018:4031   */\n  add\n    /* \"#utility.yul\":4009:4031   */\n  swap1\n  pop\n    /* \"#utility.yul\":3985:4105   */\n  jump(tag_120)\ntag_122:\n    /* \"#utility.yul\":3925:4111   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4117:4660   */\ntag_63:\n    /* \"#utility.yul\":4218:4220   */\n  0x1f\n    /* \"#utility.yul\":4213:4216   */\n  dup3\n    /* \"#utility.yul\":4210:4221   */\n  gt\n    /* \"#utility.yul\":4207:4653   */\n  iszero\n  tag_125\n  jumpi\n    /* \"#utility.yul\":4252:4290   */\n  tag_126\n    /* \"#utility.yul\":4284:4289   */\n  dup2\n    /* \"#utility.yul\":4252:4290   */\n  tag_52\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4336:4365   */\n  tag_127\n    /* \"#utility.yul\":4354:4364   */\n  dup5\n    /* \"#utility.yul\":4336:4365   */\n  tag_53\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4326:4334   */\n  dup2\n    /* \"#utility.yul\":4322:4366   */\n  add\n    /* \"#utility.yul\":4519:4521   */\n  0x20\n    /* \"#utility.yul\":4507:4517   */\n  dup6\n    /* \"#utility.yul\":4504:4522   */\n  lt\n    /* \"#utility.yul\":4501:4550   */\n  iszero\n  tag_128\n  jumpi\n    /* \"#utility.yul\":4540:4548   */\n  dup2\n    /* \"#utility.yul\":4525:4548   */\n  swap1\n  pop\n    /* \"#utility.yul\":4501:4550   */\ntag_128:\n    /* \"#utility.yul\":4563:4643   */\n  tag_129\n    /* \"#utility.yul\":4619:4641   */\n  tag_130\n    /* \"#utility.yul\":4637:4640   */\n  dup6\n    /* \"#utility.yul\":4619:4641   */\n  tag_53\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":4609:4617   */\n  dup4\n    /* \"#utility.yul\":4605:4642   */\n  add\n    /* \"#utility.yul\":4592:4603   */\n  dup3\n    /* \"#utility.yul\":4563:4643   */\n  tag_62\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4222:4653   */\n  pop\n  pop\n    /* \"#utility.yul\":4207:4653   */\ntag_125:\n    /* \"#utility.yul\":4117:4660   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4666:4783   */\ntag_64:\n    /* \"#utility.yul\":4720:4728   */\n  0x00\n    /* \"#utility.yul\":4770:4775   */\n  dup3\n    /* \"#utility.yul\":4764:4768   */\n  dup3\n    /* \"#utility.yul\":4760:4776   */\n  shr\n    /* \"#utility.yul\":4739:4776   */\n  swap1\n  pop\n    /* \"#utility.yul\":4666:4783   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4789:4958   */\ntag_65:\n    /* \"#utility.yul\":4833:4839   */\n  0x00\n    /* \"#utility.yul\":4866:4917   */\n  tag_133\n    /* \"#utility.yul\":4914:4915   */\n  0x00\n    /* \"#utility.yul\":4910:4916   */\n  not\n    /* \"#utility.yul\":4902:4907   */\n  dup5\n    /* \"#utility.yul\":4899:4900   */\n  0x08\n    /* \"#utility.yul\":4895:4908   */\n  mul\n    /* \"#utility.yul\":4866:4917   */\n  tag_64\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":4862:4918   */\n  not\n    /* \"#utility.yul\":4947:4951   */\n  dup1\n    /* \"#utility.yul\":4941:4945   */\n  dup4\n    /* \"#utility.yul\":4937:4952   */\n  and\n    /* \"#utility.yul\":4927:4952   */\n  swap2\n  pop\n    /* \"#utility.yul\":4840:4958   */\n  pop\n    /* \"#utility.yul\":4789:4958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4963:5258   */\ntag_66:\n    /* \"#utility.yul\":5039:5043   */\n  0x00\n    /* \"#utility.yul\":5185:5214   */\n  tag_135\n    /* \"#utility.yul\":5210:5213   */\n  dup4\n    /* \"#utility.yul\":5204:5208   */\n  dup4\n    /* \"#utility.yul\":5185:5214   */\n  tag_65\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5177:5214   */\n  swap2\n  pop\n    /* \"#utility.yul\":5247:5250   */\n  dup3\n    /* \"#utility.yul\":5244:5245   */\n  0x02\n    /* \"#utility.yul\":5240:5251   */\n  mul\n    /* \"#utility.yul\":5234:5238   */\n  dup3\n    /* \"#utility.yul\":5231:5252   */\n  or\n    /* \"#utility.yul\":5223:5252   */\n  swap1\n  pop\n    /* \"#utility.yul\":4963:5258   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5263:6658   */\ntag_9:\n    /* \"#utility.yul\":5380:5417   */\n  tag_137\n    /* \"#utility.yul\":5413:5416   */\n  dup3\n    /* \"#utility.yul\":5380:5417   */\n  tag_48\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5482:5500   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5474:5480   */\n  dup2\n    /* \"#utility.yul\":5471:5501   */\n  gt\n    /* \"#utility.yul\":5468:5524   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":5504:5522   */\n  tag_139\n  tag_49\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5468:5524   */\ntag_138:\n    /* \"#utility.yul\":5548:5586   */\n  tag_140\n    /* \"#utility.yul\":5580:5584   */\n  dup3\n    /* \"#utility.yul\":5574:5585   */\n  sload\n    /* \"#utility.yul\":5548:5586   */\n  tag_51\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5633:5700   */\n  tag_141\n    /* \"#utility.yul\":5693:5699   */\n  dup3\n    /* \"#utility.yul\":5685:5691   */\n  dup3\n    /* \"#utility.yul\":5679:5683   */\n  dup6\n    /* \"#utility.yul\":5633:5700   */\n  tag_63\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5727:5728   */\n  0x00\n    /* \"#utility.yul\":5751:5755   */\n  0x20\n    /* \"#utility.yul\":5738:5755   */\n  swap1\n  pop\n    /* \"#utility.yul\":5783:5785   */\n  0x1f\n    /* \"#utility.yul\":5775:5781   */\n  dup4\n    /* \"#utility.yul\":5772:5786   */\n  gt\n    /* \"#utility.yul\":5800:5801   */\n  0x01\n    /* \"#utility.yul\":5795:6413   */\n  dup2\n  eq\n  tag_143\n  jumpi\n    /* \"#utility.yul\":6457:6458   */\n  0x00\n    /* \"#utility.yul\":6474:6480   */\n  dup5\n    /* \"#utility.yul\":6471:6548   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6523:6532   */\n  dup3\n    /* \"#utility.yul\":6518:6521   */\n  dup8\n    /* \"#utility.yul\":6514:6533   */\n  add\n    /* \"#utility.yul\":6508:6534   */\n  mload\n    /* \"#utility.yul\":6499:6534   */\n  swap1\n  pop\n    /* \"#utility.yul\":6471:6548   */\ntag_144:\n    /* \"#utility.yul\":6574:6641   */\n  tag_145\n    /* \"#utility.yul\":6634:6640   */\n  dup6\n    /* \"#utility.yul\":6627:6632   */\n  dup3\n    /* \"#utility.yul\":6574:6641   */\n  tag_66\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6568:6572   */\n  dup7\n    /* \"#utility.yul\":6561:6642   */\n  sstore\n    /* \"#utility.yul\":6430:6652   */\n  pop\n    /* \"#utility.yul\":5765:6652   */\n  jump(tag_142)\n    /* \"#utility.yul\":5795:6413   */\ntag_143:\n    /* \"#utility.yul\":5847:5851   */\n  0x1f\n    /* \"#utility.yul\":5843:5852   */\n  not\n    /* \"#utility.yul\":5835:5841   */\n  dup5\n    /* \"#utility.yul\":5831:5853   */\n  and\n    /* \"#utility.yul\":5881:5918   */\n  tag_146\n    /* \"#utility.yul\":5913:5917   */\n  dup7\n    /* \"#utility.yul\":5881:5918   */\n  tag_52\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":5940:5941   */\n  0x00\n    /* \"#utility.yul\":5954:6162   */\ntag_147:\n    /* \"#utility.yul\":5968:5975   */\n  dup3\n    /* \"#utility.yul\":5965:5966   */\n  dup2\n    /* \"#utility.yul\":5962:5976   */\n  lt\n    /* \"#utility.yul\":5954:6162   */\n  iszero\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6047:6056   */\n  dup5\n    /* \"#utility.yul\":6042:6045   */\n  dup10\n    /* \"#utility.yul\":6038:6057   */\n  add\n    /* \"#utility.yul\":6032:6058   */\n  mload\n    /* \"#utility.yul\":6024:6030   */\n  dup3\n    /* \"#utility.yul\":6017:6059   */\n  sstore\n    /* \"#utility.yul\":6098:6099   */\n  0x01\n    /* \"#utility.yul\":6090:6096   */\n  dup3\n    /* \"#utility.yul\":6086:6100   */\n  add\n    /* \"#utility.yul\":6076:6100   */\n  swap2\n  pop\n    /* \"#utility.yul\":6145:6147   */\n  0x20\n    /* \"#utility.yul\":6134:6143   */\n  dup6\n    /* \"#utility.yul\":6130:6148   */\n  add\n    /* \"#utility.yul\":6117:6148   */\n  swap5\n  pop\n    /* \"#utility.yul\":5991:5995   */\n  0x20\n    /* \"#utility.yul\":5988:5989   */\n  dup2\n    /* \"#utility.yul\":5984:5996   */\n  add\n    /* \"#utility.yul\":5979:5996   */\n  swap1\n  pop\n    /* \"#utility.yul\":5954:6162   */\n  jump(tag_147)\ntag_149:\n    /* \"#utility.yul\":6190:6196   */\n  dup7\n    /* \"#utility.yul\":6181:6188   */\n  dup4\n    /* \"#utility.yul\":6178:6197   */\n  lt\n    /* \"#utility.yul\":6175:6354   */\n  iszero\n  tag_150\n  jumpi\n    /* \"#utility.yul\":6248:6257   */\n  dup5\n    /* \"#utility.yul\":6243:6246   */\n  dup10\n    /* \"#utility.yul\":6239:6258   */\n  add\n    /* \"#utility.yul\":6233:6259   */\n  mload\n    /* \"#utility.yul\":6291:6339   */\n  tag_151\n    /* \"#utility.yul\":6333:6337   */\n  0x1f\n    /* \"#utility.yul\":6325:6331   */\n  dup10\n    /* \"#utility.yul\":6321:6338   */\n  and\n    /* \"#utility.yul\":6310:6319   */\n  dup3\n    /* \"#utility.yul\":6291:6339   */\n  tag_65\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":6283:6289   */\n  dup4\n    /* \"#utility.yul\":6276:6340   */\n  sstore\n    /* \"#utility.yul\":6198:6354   */\n  pop\n    /* \"#utility.yul\":6175:6354   */\ntag_150:\n    /* \"#utility.yul\":6400:6401   */\n  0x01\n    /* \"#utility.yul\":6396:6397   */\n  0x02\n    /* \"#utility.yul\":6388:6394   */\n  dup9\n    /* \"#utility.yul\":6384:6398   */\n  mul\n    /* \"#utility.yul\":6380:6402   */\n  add\n    /* \"#utility.yul\":6374:6378   */\n  dup9\n    /* \"#utility.yul\":6367:6403   */\n  sstore\n    /* \"#utility.yul\":5802:6413   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5765:6652   */\ntag_142:\n  pop\n    /* \"#utility.yul\":5355:6658   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5263:6658   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6664:6790   */\ntag_67:\n    /* \"#utility.yul\":6701:6708   */\n  0x00\n    /* \"#utility.yul\":6741:6783   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6734:6739   */\n  dup3\n    /* \"#utility.yul\":6730:6784   */\n  and\n    /* \"#utility.yul\":6719:6784   */\n  swap1\n  pop\n    /* \"#utility.yul\":6664:6790   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6796:6892   */\ntag_68:\n    /* \"#utility.yul\":6833:6840   */\n  0x00\n    /* \"#utility.yul\":6862:6886   */\n  tag_154\n    /* \"#utility.yul\":6880:6885   */\n  dup3\n    /* \"#utility.yul\":6862:6886   */\n  tag_67\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6851:6886   */\n  swap1\n  pop\n    /* \"#utility.yul\":6796:6892   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6898:7016   */\ntag_69:\n    /* \"#utility.yul\":6985:7009   */\n  tag_156\n    /* \"#utility.yul\":7003:7008   */\n  dup2\n    /* \"#utility.yul\":6985:7009   */\n  tag_68\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6980:6983   */\n  dup3\n    /* \"#utility.yul\":6973:7010   */\n  mstore\n    /* \"#utility.yul\":6898:7016   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7022:7244   */\ntag_14:\n    /* \"#utility.yul\":7115:7119   */\n  0x00\n    /* \"#utility.yul\":7153:7155   */\n  0x20\n    /* \"#utility.yul\":7142:7151   */\n  dup3\n    /* \"#utility.yul\":7138:7156   */\n  add\n    /* \"#utility.yul\":7130:7156   */\n  swap1\n  pop\n    /* \"#utility.yul\":7166:7237   */\n  tag_158\n    /* \"#utility.yul\":7234:7235   */\n  0x00\n    /* \"#utility.yul\":7223:7232   */\n  dup4\n    /* \"#utility.yul\":7219:7236   */\n  add\n    /* \"#utility.yul\":7210:7216   */\n  dup5\n    /* \"#utility.yul\":7166:7237   */\n  tag_69\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7022:7244   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7250:7419   */\ntag_70:\n    /* \"#utility.yul\":7334:7345   */\n  0x00\n    /* \"#utility.yul\":7368:7374   */\n  dup3\n    /* \"#utility.yul\":7363:7366   */\n  dup3\n    /* \"#utility.yul\":7356:7375   */\n  mstore\n    /* \"#utility.yul\":7408:7412   */\n  0x20\n    /* \"#utility.yul\":7403:7406   */\n  dup3\n    /* \"#utility.yul\":7399:7413   */\n  add\n    /* \"#utility.yul\":7384:7413   */\n  swap1\n  pop\n    /* \"#utility.yul\":7250:7419   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7425:7648   */\ntag_71:\n    /* \"#utility.yul\":7565:7599   */\n  0x4d696e206275726e20666565206d757374206265203c3d206d6178206275726e\n    /* \"#utility.yul\":7561:7562   */\n  0x00\n    /* \"#utility.yul\":7553:7559   */\n  dup3\n    /* \"#utility.yul\":7549:7563   */\n  add\n    /* \"#utility.yul\":7542:7600   */\n  mstore\n    /* \"#utility.yul\":7634:7640   */\n  0x2066656500000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":7629:7631   */\n  0x20\n    /* \"#utility.yul\":7621:7627   */\n  dup3\n    /* \"#utility.yul\":7617:7632   */\n  add\n    /* \"#utility.yul\":7610:7641   */\n  mstore\n    /* \"#utility.yul\":7425:7648   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7654:8020   */\ntag_72:\n    /* \"#utility.yul\":7796:7799   */\n  0x00\n    /* \"#utility.yul\":7817:7884   */\n  tag_162\n    /* \"#utility.yul\":7881:7883   */\n  0x24\n    /* \"#utility.yul\":7876:7879   */\n  dup4\n    /* \"#utility.yul\":7817:7884   */\n  tag_70\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7810:7884   */\n  swap2\n  pop\n    /* \"#utility.yul\":7893:7986   */\n  tag_163\n    /* \"#utility.yul\":7982:7985   */\n  dup3\n    /* \"#utility.yul\":7893:7986   */\n  tag_71\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":8011:8013   */\n  0x40\n    /* \"#utility.yul\":8006:8009   */\n  dup3\n    /* \"#utility.yul\":8002:8014   */\n  add\n    /* \"#utility.yul\":7995:8014   */\n  swap1\n  pop\n    /* \"#utility.yul\":7654:8020   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8026:8445   */\ntag_20:\n    /* \"#utility.yul\":8192:8196   */\n  0x00\n    /* \"#utility.yul\":8230:8232   */\n  0x20\n    /* \"#utility.yul\":8219:8228   */\n  dup3\n    /* \"#utility.yul\":8215:8233   */\n  add\n    /* \"#utility.yul\":8207:8233   */\n  swap1\n  pop\n    /* \"#utility.yul\":8279:8288   */\n  dup2\n    /* \"#utility.yul\":8273:8277   */\n  dup2\n    /* \"#utility.yul\":8269:8289   */\n  sub\n    /* \"#utility.yul\":8265:8266   */\n  0x00\n    /* \"#utility.yul\":8254:8263   */\n  dup4\n    /* \"#utility.yul\":8250:8267   */\n  add\n    /* \"#utility.yul\":8243:8290   */\n  mstore\n    /* \"#utility.yul\":8307:8438   */\n  tag_165\n    /* \"#utility.yul\":8433:8437   */\n  dup2\n    /* \"#utility.yul\":8307:8438   */\n  tag_72\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":8299:8438   */\n  swap1\n  pop\n    /* \"#utility.yul\":8026:8445   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8451:8631   */\ntag_73:\n    /* \"#utility.yul\":8499:8576   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8496:8497   */\n  0x00\n    /* \"#utility.yul\":8489:8577   */\n  mstore\n    /* \"#utility.yul\":8596:8600   */\n  0x11\n    /* \"#utility.yul\":8593:8594   */\n  0x04\n    /* \"#utility.yul\":8586:8601   */\n  mstore\n    /* \"#utility.yul\":8620:8624   */\n  0x24\n    /* \"#utility.yul\":8617:8618   */\n  0x00\n    /* \"#utility.yul\":8610:8625   */\n  revert\n    /* \"#utility.yul\":8637:8828   */\ntag_33:\n    /* \"#utility.yul\":8677:8680   */\n  0x00\n    /* \"#utility.yul\":8696:8716   */\n  tag_168\n    /* \"#utility.yul\":8714:8715   */\n  dup3\n    /* \"#utility.yul\":8696:8716   */\n  tag_45\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":8691:8716   */\n  swap2\n  pop\n    /* \"#utility.yul\":8730:8750   */\n  tag_169\n    /* \"#utility.yul\":8748:8749   */\n  dup4\n    /* \"#utility.yul\":8730:8750   */\n  tag_45\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":8725:8750   */\n  swap3\n  pop\n    /* \"#utility.yul\":8773:8774   */\n  dup3\n    /* \"#utility.yul\":8770:8771   */\n  dup3\n    /* \"#utility.yul\":8766:8775   */\n  add\n    /* \"#utility.yul\":8759:8775   */\n  swap1\n  pop\n    /* \"#utility.yul\":8794:8797   */\n  dup1\n    /* \"#utility.yul\":8791:8792   */\n  dup3\n    /* \"#utility.yul\":8788:8798   */\n  gt\n    /* \"#utility.yul\":8785:8821   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":8801:8819   */\n  tag_171\n  tag_73\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":8785:8821   */\ntag_170:\n    /* \"#utility.yul\":8637:8828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8834:8952   */\ntag_74:\n    /* \"#utility.yul\":8921:8945   */\n  tag_173\n    /* \"#utility.yul\":8939:8944   */\n  dup2\n    /* \"#utility.yul\":8921:8945   */\n  tag_45\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8916:8919   */\n  dup3\n    /* \"#utility.yul\":8909:8946   */\n  mstore\n    /* \"#utility.yul\":8834:8952   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8958:9400   */\ntag_37:\n    /* \"#utility.yul\":9107:9111   */\n  0x00\n    /* \"#utility.yul\":9145:9147   */\n  0x60\n    /* \"#utility.yul\":9134:9143   */\n  dup3\n    /* \"#utility.yul\":9130:9148   */\n  add\n    /* \"#utility.yul\":9122:9148   */\n  swap1\n  pop\n    /* \"#utility.yul\":9158:9229   */\n  tag_175\n    /* \"#utility.yul\":9226:9227   */\n  0x00\n    /* \"#utility.yul\":9215:9224   */\n  dup4\n    /* \"#utility.yul\":9211:9228   */\n  add\n    /* \"#utility.yul\":9202:9208   */\n  dup7\n    /* \"#utility.yul\":9158:9229   */\n  tag_69\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":9239:9311   */\n  tag_176\n    /* \"#utility.yul\":9307:9309   */\n  0x20\n    /* \"#utility.yul\":9296:9305   */\n  dup4\n    /* \"#utility.yul\":9292:9310   */\n  add\n    /* \"#utility.yul\":9283:9289   */\n  dup6\n    /* \"#utility.yul\":9239:9311   */\n  tag_74\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":9321:9393   */\n  tag_177\n    /* \"#utility.yul\":9389:9391   */\n  0x40\n    /* \"#utility.yul\":9378:9387   */\n  dup4\n    /* \"#utility.yul\":9374:9392   */\n  add\n    /* \"#utility.yul\":9365:9371   */\n  dup5\n    /* \"#utility.yul\":9321:9393   */\n  tag_74\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":8958:9400   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9406:9628   */\ntag_41:\n    /* \"#utility.yul\":9499:9503   */\n  0x00\n    /* \"#utility.yul\":9537:9539   */\n  0x20\n    /* \"#utility.yul\":9526:9535   */\n  dup3\n    /* \"#utility.yul\":9522:9540   */\n  add\n    /* \"#utility.yul\":9514:9540   */\n  swap1\n  pop\n    /* \"#utility.yul\":9550:9621   */\n  tag_179\n    /* \"#utility.yul\":9618:9619   */\n  0x00\n    /* \"#utility.yul\":9607:9616   */\n  dup4\n    /* \"#utility.yul\":9603:9620   */\n  add\n    /* \"#utility.yul\":9594:9600   */\n  dup5\n    /* \"#utility.yul\":9550:9621   */\n  tag_74\n  jump\t// in\ntag_179:\n    /* \"#utility.yul\":9406:9628   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"F/FallingWedgeToken.sol\":571:3816  contract FallingWedgeToken is ERC20, Ownable {... */\ntag_23:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"F/FallingWedgeToken.sol\":571:3816  contract FallingWedgeToken is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7d158101\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xd5b78d77\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xd5b78d77\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe17ac3d5\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xecda10f5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x7d158101\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x313ce567\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c81385c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_23\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FallingWedgeToken.sol\":3252:3814  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FallingWedgeToken.sol\":770:795  uint256 public maxBurnFee */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"F/FallingWedgeToken.sol\":887:921  uint256 public burnFeeIncreaseRate */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FallingWedgeToken.sol\":2556:3092  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FallingWedgeToken.sol\":680:705  uint256 public minBurnFee */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FallingWedgeToken.sol\":2083:2385  function currentBurnFee() public view returns (uint256) {... */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FallingWedgeToken.sol\":989:1018  uint256 public deploymentTime */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_89\n      jump\t// in\n    tag_90:\n      dup1\n      iszero\n      tag_91\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_92\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_91)\n    tag_92:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"F/FallingWedgeToken.sol\":3252:3814  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_40:\n        /* \"F/FallingWedgeToken.sol\":3350:3354  bool */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":3366:3377  uint256 fee */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":3380:3396  currentBurnFee() */\n      tag_101\n        /* \"F/FallingWedgeToken.sol\":3380:3394  currentBurnFee */\n      tag_79\n        /* \"F/FallingWedgeToken.sol\":3380:3396  currentBurnFee() */\n      jump\t// in\n    tag_101:\n        /* \"F/FallingWedgeToken.sol\":3366:3396  uint256 fee = currentBurnFee() */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":3406:3424  uint256 burnAmount */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":3444:3449  10000 */\n      0x2710\n        /* \"F/FallingWedgeToken.sol\":3437:3440  fee */\n      dup3\n        /* \"F/FallingWedgeToken.sol\":3428:3434  amount */\n      dup6\n        /* \"F/FallingWedgeToken.sol\":3428:3440  amount * fee */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"F/FallingWedgeToken.sol\":3427:3449  (amount * fee) / 10000 */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"F/FallingWedgeToken.sol\":3406:3449  uint256 burnAmount = (amount * fee) / 10000 */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":3459:3477  uint256 sendAmount */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":3489:3499  burnAmount */\n      dup2\n        /* \"F/FallingWedgeToken.sol\":3480:3486  amount */\n      dup6\n        /* \"F/FallingWedgeToken.sol\":3480:3499  amount - burnAmount */\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"F/FallingWedgeToken.sol\":3459:3499  uint256 sendAmount = amount - burnAmount */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":3545:3557  bool success */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":3560:3609  super.transferFrom(sender, recipient, sendAmount) */\n      tag_108\n        /* \"F/FallingWedgeToken.sol\":3579:3585  sender */\n      dup9\n        /* \"F/FallingWedgeToken.sol\":3587:3596  recipient */\n      dup9\n        /* \"F/FallingWedgeToken.sol\":3598:3608  sendAmount */\n      dup5\n        /* \"F/FallingWedgeToken.sol\":3560:3578  super.transferFrom */\n      tag_109\n        /* \"F/FallingWedgeToken.sol\":3560:3609  super.transferFrom(sender, recipient, sendAmount) */\n      jump\t// in\n    tag_108:\n        /* \"F/FallingWedgeToken.sol\":3545:3609  bool success = super.transferFrom(sender, recipient, sendAmount) */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":3627:3634  success */\n      dup1\n        /* \"F/FallingWedgeToken.sol\":3619:3654  require(success, \"Transfer failed\") */\n      tag_110\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n        /* \"F/FallingWedgeToken.sol\":3715:3740  _burn(sender, burnAmount) */\n      tag_113\n        /* \"F/FallingWedgeToken.sol\":3721:3727  sender */\n      dup9\n        /* \"F/FallingWedgeToken.sol\":3729:3739  burnAmount */\n      dup5\n        /* \"F/FallingWedgeToken.sol\":3715:3720  _burn */\n      tag_114\n        /* \"F/FallingWedgeToken.sol\":3715:3740  _burn(sender, burnAmount) */\n      jump\t// in\n    tag_113:\n        /* \"F/FallingWedgeToken.sol\":3755:3786  BurnFeeApplied(fee, burnAmount) */\n      0x1d84b60620d560a5bd3488e3ff622e0142d7ce33ecf7c5d24c17637ac97e048e\n        /* \"F/FallingWedgeToken.sol\":3770:3773  fee */\n      dup5\n        /* \"F/FallingWedgeToken.sol\":3775:3785  burnAmount */\n      dup5\n        /* \"F/FallingWedgeToken.sol\":3755:3786  BurnFeeApplied(fee, burnAmount) */\n      mload(0x40)\n      tag_115\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"F/FallingWedgeToken.sol\":3803:3807  true */\n      0x01\n        /* \"F/FallingWedgeToken.sol\":3796:3807  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"F/FallingWedgeToken.sol\":3252:3814  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"F/FallingWedgeToken.sol\":770:795  uint256 public maxBurnFee */\n    tag_47:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"F/FallingWedgeToken.sol\":887:921  uint256 public burnFeeIncreaseRate */\n    tag_57:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_89\n      jump\t// in\n    tag_127:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_89\n      jump\t// in\n    tag_128:\n      dup1\n      iszero\n      tag_129\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_130\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_129)\n    tag_130:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_131:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_131\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_129:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"F/FallingWedgeToken.sol\":2556:3092  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_68:\n        /* \"F/FallingWedgeToken.sol\":2634:2638  bool */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":2650:2661  uint256 fee */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":2664:2680  currentBurnFee() */\n      tag_133\n        /* \"F/FallingWedgeToken.sol\":2664:2678  currentBurnFee */\n      tag_79\n        /* \"F/FallingWedgeToken.sol\":2664:2680  currentBurnFee() */\n      jump\t// in\n    tag_133:\n        /* \"F/FallingWedgeToken.sol\":2650:2680  uint256 fee = currentBurnFee() */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":2690:2708  uint256 burnAmount */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":2728:2733  10000 */\n      0x2710\n        /* \"F/FallingWedgeToken.sol\":2721:2724  fee */\n      dup3\n        /* \"F/FallingWedgeToken.sol\":2712:2718  amount */\n      dup6\n        /* \"F/FallingWedgeToken.sol\":2712:2724  amount * fee */\n      tag_134\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_134:\n        /* \"F/FallingWedgeToken.sol\":2711:2733  (amount * fee) / 10000 */\n      tag_135\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_135:\n        /* \"F/FallingWedgeToken.sol\":2690:2733  uint256 burnAmount = (amount * fee) / 10000 */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":2743:2761  uint256 sendAmount */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":2773:2783  burnAmount */\n      dup2\n        /* \"F/FallingWedgeToken.sol\":2764:2770  amount */\n      dup6\n        /* \"F/FallingWedgeToken.sol\":2764:2783  amount - burnAmount */\n      tag_136\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_136:\n        /* \"F/FallingWedgeToken.sol\":2743:2783  uint256 sendAmount = amount - burnAmount */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":2829:2841  bool success */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":2844:2881  super.transfer(recipient, sendAmount) */\n      tag_137\n        /* \"F/FallingWedgeToken.sol\":2859:2868  recipient */\n      dup8\n        /* \"F/FallingWedgeToken.sol\":2870:2880  sendAmount */\n      dup4\n        /* \"F/FallingWedgeToken.sol\":2844:2858  super.transfer */\n      tag_138\n        /* \"F/FallingWedgeToken.sol\":2844:2881  super.transfer(recipient, sendAmount) */\n      jump\t// in\n    tag_137:\n        /* \"F/FallingWedgeToken.sol\":2829:2881  bool success = super.transfer(recipient, sendAmount) */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":2899:2906  success */\n      dup1\n        /* \"F/FallingWedgeToken.sol\":2891:2926  require(success, \"Transfer failed\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_112\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"F/FallingWedgeToken.sol\":2987:3018  _burn(_msgSender(), burnAmount) */\n      tag_141\n        /* \"F/FallingWedgeToken.sol\":2993:3005  _msgSender() */\n      tag_142\n        /* \"F/FallingWedgeToken.sol\":2993:3003  _msgSender */\n      tag_96\n        /* \"F/FallingWedgeToken.sol\":2993:3005  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"F/FallingWedgeToken.sol\":3007:3017  burnAmount */\n      dup5\n        /* \"F/FallingWedgeToken.sol\":2987:2992  _burn */\n      tag_114\n        /* \"F/FallingWedgeToken.sol\":2987:3018  _burn(_msgSender(), burnAmount) */\n      jump\t// in\n    tag_141:\n        /* \"F/FallingWedgeToken.sol\":3033:3064  BurnFeeApplied(fee, burnAmount) */\n      0x1d84b60620d560a5bd3488e3ff622e0142d7ce33ecf7c5d24c17637ac97e048e\n        /* \"F/FallingWedgeToken.sol\":3048:3051  fee */\n      dup5\n        /* \"F/FallingWedgeToken.sol\":3053:3063  burnAmount */\n      dup5\n        /* \"F/FallingWedgeToken.sol\":3033:3064  BurnFeeApplied(fee, burnAmount) */\n      mload(0x40)\n      tag_143\n      swap3\n      swap2\n      swap1\n      tag_116\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"F/FallingWedgeToken.sol\":3081:3085  true */\n      0x01\n        /* \"F/FallingWedgeToken.sol\":3074:3085  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"F/FallingWedgeToken.sol\":2556:3092  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"F/FallingWedgeToken.sol\":680:705  uint256 public minBurnFee */\n    tag_71:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"F/FallingWedgeToken.sol\":2083:2385  function currentBurnFee() public view returns (uint256) {... */\n    tag_79:\n        /* \"F/FallingWedgeToken.sol\":2130:2137  uint256 */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":2149:2168  uint256 elapsedDays */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":2208:2214  1 days */\n      0x015180\n        /* \"F/FallingWedgeToken.sol\":2190:2204  deploymentTime */\n      sload(0x09)\n        /* \"F/FallingWedgeToken.sol\":2172:2187  block.timestamp */\n      timestamp\n        /* \"F/FallingWedgeToken.sol\":2172:2204  block.timestamp - deploymentTime */\n      tag_146\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_146:\n        /* \"F/FallingWedgeToken.sol\":2171:2214  (block.timestamp - deploymentTime) / 1 days */\n      tag_147\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_147:\n        /* \"F/FallingWedgeToken.sol\":2149:2214  uint256 elapsedDays = (block.timestamp - deploymentTime) / 1 days */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":2224:2235  uint256 fee */\n      0x00\n        /* \"F/FallingWedgeToken.sol\":2266:2285  burnFeeIncreaseRate */\n      sload(0x08)\n        /* \"F/FallingWedgeToken.sol\":2252:2263  elapsedDays */\n      dup3\n        /* \"F/FallingWedgeToken.sol\":2252:2285  elapsedDays * burnFeeIncreaseRate */\n      tag_148\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_148:\n        /* \"F/FallingWedgeToken.sol\":2238:2248  minBurnFee */\n      sload(0x06)\n        /* \"F/FallingWedgeToken.sol\":2238:2286  minBurnFee + (elapsedDays * burnFeeIncreaseRate) */\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n        /* \"F/FallingWedgeToken.sol\":2224:2286  uint256 fee = minBurnFee + (elapsedDays * burnFeeIncreaseRate) */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":2306:2316  maxBurnFee */\n      sload(0x07)\n        /* \"F/FallingWedgeToken.sol\":2300:2303  fee */\n      dup2\n        /* \"F/FallingWedgeToken.sol\":2300:2316  fee > maxBurnFee */\n      gt\n        /* \"F/FallingWedgeToken.sol\":2296:2359  if (fee > maxBurnFee) {... */\n      iszero\n      tag_151\n      jumpi\n        /* \"F/FallingWedgeToken.sol\":2338:2348  maxBurnFee */\n      sload(0x07)\n        /* \"F/FallingWedgeToken.sol\":2332:2348  fee = maxBurnFee */\n      swap1\n      pop\n        /* \"F/FallingWedgeToken.sol\":2296:2359  if (fee > maxBurnFee) {... */\n    tag_151:\n        /* \"F/FallingWedgeToken.sol\":2375:2378  fee */\n      dup1\n        /* \"F/FallingWedgeToken.sol\":2368:2378  return fee */\n      swap3\n      pop\n      pop\n      pop\n        /* \"F/FallingWedgeToken.sol\":2083:2385  function currentBurnFee() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"F/FallingWedgeToken.sol\":989:1018  uint256 public deploymentTime */\n    tag_82:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_160\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_60\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_176\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_177\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_176:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_182\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_167\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_188\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_189\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_188:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_76\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_193\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_161\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_198\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_199\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_199:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_198:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_200:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_202\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_205\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_205:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_206)\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_210)\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_211\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_212:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_213:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_214:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_215:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_216:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_244\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_212\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":711:782   */\n      tag_245\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_213\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_246\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_214\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":881:910   */\n      tag_247\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_215\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_26:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_249\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_216\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_218:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_220:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_221:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_255\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_220\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_222:\n        /* \"#utility.yul\":1876:1900   */\n      tag_257\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_221\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_258:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_223:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_260\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_222\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_224:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_225:\n        /* \"#utility.yul\":2232:2256   */\n      tag_263\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_224\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_264:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_226:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_266\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_225\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_29:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_269\n      tag_218\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":2525:2644   */\n    tag_268:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_270\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_223\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_271\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_226\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_227:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_228:\n        /* \"#utility.yul\":3089:3110   */\n      tag_274\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_227\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_32:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_276\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_228\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_229:\n        /* \"#utility.yul\":3426:3450   */\n      tag_278\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_224\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_36:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_280\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_229\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_39:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_283\n      tag_218\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":3801:3920   */\n    tag_282:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_284\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_223\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_285\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_223\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_286\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_226\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_230:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_231:\n        /* \"#utility.yul\":4491:4513   */\n      tag_289\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_230\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_45:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_291\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_231\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_51:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_294\n      tag_218\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":4822:4941   */\n    tag_293:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_295\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_223\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5199   */\n    tag_232:\n        /* \"#utility.yul\":5168:5192   */\n      tag_297\n        /* \"#utility.yul\":5186:5191   */\n      dup2\n        /* \"#utility.yul\":5168:5192   */\n      tag_221\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5163:5166   */\n      dup3\n        /* \"#utility.yul\":5156:5193   */\n      mstore\n        /* \"#utility.yul\":5081:5199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5205:5427   */\n    tag_62:\n        /* \"#utility.yul\":5298:5302   */\n      0x00\n        /* \"#utility.yul\":5336:5338   */\n      0x20\n        /* \"#utility.yul\":5325:5334   */\n      dup3\n        /* \"#utility.yul\":5321:5339   */\n      add\n        /* \"#utility.yul\":5313:5339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5349:5420   */\n      tag_299\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5406:5415   */\n      dup4\n        /* \"#utility.yul\":5402:5419   */\n      add\n        /* \"#utility.yul\":5393:5399   */\n      dup5\n        /* \"#utility.yul\":5349:5420   */\n      tag_232\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":5205:5427   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5433:5907   */\n    tag_75:\n        /* \"#utility.yul\":5501:5507   */\n      0x00\n        /* \"#utility.yul\":5509:5515   */\n      0x00\n        /* \"#utility.yul\":5558:5560   */\n      0x40\n        /* \"#utility.yul\":5546:5555   */\n      dup4\n        /* \"#utility.yul\":5537:5544   */\n      dup6\n        /* \"#utility.yul\":5533:5556   */\n      sub\n        /* \"#utility.yul\":5529:5561   */\n      slt\n        /* \"#utility.yul\":5526:5645   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_302\n      tag_218\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":5526:5645   */\n    tag_301:\n        /* \"#utility.yul\":5684:5685   */\n      0x00\n        /* \"#utility.yul\":5709:5762   */\n      tag_303\n        /* \"#utility.yul\":5754:5761   */\n      dup6\n        /* \"#utility.yul\":5745:5751   */\n      dup3\n        /* \"#utility.yul\":5734:5743   */\n      dup7\n        /* \"#utility.yul\":5730:5752   */\n      add\n        /* \"#utility.yul\":5709:5762   */\n      tag_223\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":5699:5762   */\n      swap3\n      pop\n        /* \"#utility.yul\":5655:5772   */\n      pop\n        /* \"#utility.yul\":5811:5813   */\n      0x20\n        /* \"#utility.yul\":5837:5890   */\n      tag_304\n        /* \"#utility.yul\":5882:5889   */\n      dup6\n        /* \"#utility.yul\":5873:5879   */\n      dup3\n        /* \"#utility.yul\":5862:5871   */\n      dup7\n        /* \"#utility.yul\":5858:5880   */\n      add\n        /* \"#utility.yul\":5837:5890   */\n      tag_223\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":5827:5890   */\n      swap2\n      pop\n        /* \"#utility.yul\":5782:5900   */\n      pop\n        /* \"#utility.yul\":5433:5907   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5913:6093   */\n    tag_233:\n        /* \"#utility.yul\":5961:6038   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5958:5959   */\n      0x00\n        /* \"#utility.yul\":5951:6039   */\n      mstore\n        /* \"#utility.yul\":6058:6062   */\n      0x22\n        /* \"#utility.yul\":6055:6056   */\n      0x04\n        /* \"#utility.yul\":6048:6063   */\n      mstore\n        /* \"#utility.yul\":6082:6086   */\n      0x24\n        /* \"#utility.yul\":6079:6080   */\n      0x00\n        /* \"#utility.yul\":6072:6087   */\n      revert\n        /* \"#utility.yul\":6099:6419   */\n    tag_89:\n        /* \"#utility.yul\":6143:6149   */\n      0x00\n        /* \"#utility.yul\":6180:6181   */\n      0x02\n        /* \"#utility.yul\":6174:6178   */\n      dup3\n        /* \"#utility.yul\":6170:6182   */\n      div\n        /* \"#utility.yul\":6160:6182   */\n      swap1\n      pop\n        /* \"#utility.yul\":6227:6228   */\n      0x01\n        /* \"#utility.yul\":6221:6225   */\n      dup3\n        /* \"#utility.yul\":6217:6229   */\n      and\n        /* \"#utility.yul\":6248:6266   */\n      dup1\n        /* \"#utility.yul\":6238:6319   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":6304:6308   */\n      0x7f\n        /* \"#utility.yul\":6296:6302   */\n      dup3\n        /* \"#utility.yul\":6292:6309   */\n      and\n        /* \"#utility.yul\":6282:6309   */\n      swap2\n      pop\n        /* \"#utility.yul\":6238:6319   */\n    tag_307:\n        /* \"#utility.yul\":6366:6368   */\n      0x20\n        /* \"#utility.yul\":6358:6364   */\n      dup3\n        /* \"#utility.yul\":6355:6369   */\n      lt\n        /* \"#utility.yul\":6335:6353   */\n      dup2\n        /* \"#utility.yul\":6332:6370   */\n      sub\n        /* \"#utility.yul\":6329:6413   */\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6385:6403   */\n      tag_309\n      tag_233\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6329:6413   */\n    tag_308:\n        /* \"#utility.yul\":6150:6419   */\n      pop\n        /* \"#utility.yul\":6099:6419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6425:6605   */\n    tag_234:\n        /* \"#utility.yul\":6473:6550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6470:6471   */\n      0x00\n        /* \"#utility.yul\":6463:6551   */\n      mstore\n        /* \"#utility.yul\":6570:6574   */\n      0x11\n        /* \"#utility.yul\":6567:6568   */\n      0x04\n        /* \"#utility.yul\":6560:6575   */\n      mstore\n        /* \"#utility.yul\":6594:6598   */\n      0x24\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6584:6599   */\n      revert\n        /* \"#utility.yul\":6611:7021   */\n    tag_103:\n        /* \"#utility.yul\":6651:6658   */\n      0x00\n        /* \"#utility.yul\":6674:6694   */\n      tag_312\n        /* \"#utility.yul\":6692:6693   */\n      dup3\n        /* \"#utility.yul\":6674:6694   */\n      tag_224\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":6669:6694   */\n      swap2\n      pop\n        /* \"#utility.yul\":6708:6728   */\n      tag_313\n        /* \"#utility.yul\":6726:6727   */\n      dup4\n        /* \"#utility.yul\":6708:6728   */\n      tag_224\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":6703:6728   */\n      swap3\n      pop\n        /* \"#utility.yul\":6763:6764   */\n      dup3\n        /* \"#utility.yul\":6760:6761   */\n      dup3\n        /* \"#utility.yul\":6756:6765   */\n      mul\n        /* \"#utility.yul\":6785:6815   */\n      tag_314\n        /* \"#utility.yul\":6803:6814   */\n      dup2\n        /* \"#utility.yul\":6785:6815   */\n      tag_224\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":6774:6815   */\n      swap2\n      pop\n        /* \"#utility.yul\":6964:6965   */\n      dup3\n        /* \"#utility.yul\":6955:6962   */\n      dup3\n        /* \"#utility.yul\":6951:6966   */\n      div\n        /* \"#utility.yul\":6948:6949   */\n      dup5\n        /* \"#utility.yul\":6945:6967   */\n      eq\n        /* \"#utility.yul\":6925:6926   */\n      dup4\n        /* \"#utility.yul\":6918:6927   */\n      iszero\n        /* \"#utility.yul\":6898:6981   */\n      or\n        /* \"#utility.yul\":6875:7014   */\n      tag_315\n      jumpi\n        /* \"#utility.yul\":6994:7012   */\n      tag_316\n      tag_234\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":6875:7014   */\n    tag_315:\n        /* \"#utility.yul\":6659:7021   */\n      pop\n        /* \"#utility.yul\":6611:7021   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7027:7207   */\n    tag_235:\n        /* \"#utility.yul\":7075:7152   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7072:7073   */\n      0x00\n        /* \"#utility.yul\":7065:7153   */\n      mstore\n        /* \"#utility.yul\":7172:7176   */\n      0x12\n        /* \"#utility.yul\":7169:7170   */\n      0x04\n        /* \"#utility.yul\":7162:7177   */\n      mstore\n        /* \"#utility.yul\":7196:7200   */\n      0x24\n        /* \"#utility.yul\":7193:7194   */\n      0x00\n        /* \"#utility.yul\":7186:7201   */\n      revert\n        /* \"#utility.yul\":7213:7398   */\n    tag_105:\n        /* \"#utility.yul\":7253:7254   */\n      0x00\n        /* \"#utility.yul\":7270:7290   */\n      tag_319\n        /* \"#utility.yul\":7288:7289   */\n      dup3\n        /* \"#utility.yul\":7270:7290   */\n      tag_224\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":7265:7290   */\n      swap2\n      pop\n        /* \"#utility.yul\":7304:7324   */\n      tag_320\n        /* \"#utility.yul\":7322:7323   */\n      dup4\n        /* \"#utility.yul\":7304:7324   */\n      tag_224\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":7299:7324   */\n      swap3\n      pop\n        /* \"#utility.yul\":7343:7344   */\n      dup3\n        /* \"#utility.yul\":7333:7368   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":7348:7366   */\n      tag_322\n      tag_235\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":7333:7368   */\n    tag_321:\n        /* \"#utility.yul\":7390:7391   */\n      dup3\n        /* \"#utility.yul\":7387:7388   */\n      dup3\n        /* \"#utility.yul\":7383:7392   */\n      div\n        /* \"#utility.yul\":7378:7392   */\n      swap1\n      pop\n        /* \"#utility.yul\":7213:7398   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7404:7598   */\n    tag_107:\n        /* \"#utility.yul\":7444:7448   */\n      0x00\n        /* \"#utility.yul\":7464:7484   */\n      tag_324\n        /* \"#utility.yul\":7482:7483   */\n      dup3\n        /* \"#utility.yul\":7464:7484   */\n      tag_224\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":7459:7484   */\n      swap2\n      pop\n        /* \"#utility.yul\":7498:7518   */\n      tag_325\n        /* \"#utility.yul\":7516:7517   */\n      dup4\n        /* \"#utility.yul\":7498:7518   */\n      tag_224\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":7493:7518   */\n      swap3\n      pop\n        /* \"#utility.yul\":7542:7543   */\n      dup3\n        /* \"#utility.yul\":7539:7540   */\n      dup3\n        /* \"#utility.yul\":7535:7544   */\n      sub\n        /* \"#utility.yul\":7527:7544   */\n      swap1\n      pop\n        /* \"#utility.yul\":7566:7567   */\n      dup2\n        /* \"#utility.yul\":7560:7564   */\n      dup2\n        /* \"#utility.yul\":7557:7568   */\n      gt\n        /* \"#utility.yul\":7554:7591   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":7571:7589   */\n      tag_327\n      tag_234\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":7554:7591   */\n    tag_326:\n        /* \"#utility.yul\":7404:7598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7604:7769   */\n    tag_236:\n        /* \"#utility.yul\":7744:7761   */\n      0x5472616e73666572206661696c65640000000000000000000000000000000000\n        /* \"#utility.yul\":7740:7741   */\n      0x00\n        /* \"#utility.yul\":7732:7738   */\n      dup3\n        /* \"#utility.yul\":7728:7742   */\n      add\n        /* \"#utility.yul\":7721:7762   */\n      mstore\n        /* \"#utility.yul\":7604:7769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8141   */\n    tag_237:\n        /* \"#utility.yul\":7917:7920   */\n      0x00\n        /* \"#utility.yul\":7938:8005   */\n      tag_330\n        /* \"#utility.yul\":8002:8004   */\n      0x0f\n        /* \"#utility.yul\":7997:8000   */\n      dup4\n        /* \"#utility.yul\":7938:8005   */\n      tag_213\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":7931:8005   */\n      swap2\n      pop\n        /* \"#utility.yul\":8014:8107   */\n      tag_331\n        /* \"#utility.yul\":8103:8106   */\n      dup3\n        /* \"#utility.yul\":8014:8107   */\n      tag_236\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":8132:8134   */\n      0x20\n        /* \"#utility.yul\":8127:8130   */\n      dup3\n        /* \"#utility.yul\":8123:8135   */\n      add\n        /* \"#utility.yul\":8116:8135   */\n      swap1\n      pop\n        /* \"#utility.yul\":7775:8141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8147:8566   */\n    tag_112:\n        /* \"#utility.yul\":8313:8317   */\n      0x00\n        /* \"#utility.yul\":8351:8353   */\n      0x20\n        /* \"#utility.yul\":8340:8349   */\n      dup3\n        /* \"#utility.yul\":8336:8354   */\n      add\n        /* \"#utility.yul\":8328:8354   */\n      swap1\n      pop\n        /* \"#utility.yul\":8400:8409   */\n      dup2\n        /* \"#utility.yul\":8394:8398   */\n      dup2\n        /* \"#utility.yul\":8390:8410   */\n      sub\n        /* \"#utility.yul\":8386:8387   */\n      0x00\n        /* \"#utility.yul\":8375:8384   */\n      dup4\n        /* \"#utility.yul\":8371:8388   */\n      add\n        /* \"#utility.yul\":8364:8411   */\n      mstore\n        /* \"#utility.yul\":8428:8559   */\n      tag_333\n        /* \"#utility.yul\":8554:8558   */\n      dup2\n        /* \"#utility.yul\":8428:8559   */\n      tag_237\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":8420:8559   */\n      swap1\n      pop\n        /* \"#utility.yul\":8147:8566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8572:8904   */\n    tag_116:\n        /* \"#utility.yul\":8693:8697   */\n      0x00\n        /* \"#utility.yul\":8731:8733   */\n      0x40\n        /* \"#utility.yul\":8720:8729   */\n      dup3\n        /* \"#utility.yul\":8716:8734   */\n      add\n        /* \"#utility.yul\":8708:8734   */\n      swap1\n      pop\n        /* \"#utility.yul\":8744:8815   */\n      tag_335\n        /* \"#utility.yul\":8812:8813   */\n      0x00\n        /* \"#utility.yul\":8801:8810   */\n      dup4\n        /* \"#utility.yul\":8797:8814   */\n      add\n        /* \"#utility.yul\":8788:8794   */\n      dup6\n        /* \"#utility.yul\":8744:8815   */\n      tag_229\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":8825:8897   */\n      tag_336\n        /* \"#utility.yul\":8893:8895   */\n      0x20\n        /* \"#utility.yul\":8882:8891   */\n      dup4\n        /* \"#utility.yul\":8878:8896   */\n      add\n        /* \"#utility.yul\":8869:8875   */\n      dup5\n        /* \"#utility.yul\":8825:8897   */\n      tag_229\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":8572:8904   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8910:9101   */\n    tag_150:\n        /* \"#utility.yul\":8950:8953   */\n      0x00\n        /* \"#utility.yul\":8969:8989   */\n      tag_338\n        /* \"#utility.yul\":8987:8988   */\n      dup3\n        /* \"#utility.yul\":8969:8989   */\n      tag_224\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":8964:8989   */\n      swap2\n      pop\n        /* \"#utility.yul\":9003:9023   */\n      tag_339\n        /* \"#utility.yul\":9021:9022   */\n      dup4\n        /* \"#utility.yul\":9003:9023   */\n      tag_224\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":8998:9023   */\n      swap3\n      pop\n        /* \"#utility.yul\":9046:9047   */\n      dup3\n        /* \"#utility.yul\":9043:9044   */\n      dup3\n        /* \"#utility.yul\":9039:9048   */\n      add\n        /* \"#utility.yul\":9032:9048   */\n      swap1\n      pop\n        /* \"#utility.yul\":9067:9070   */\n      dup1\n        /* \"#utility.yul\":9064:9065   */\n      dup3\n        /* \"#utility.yul\":9061:9071   */\n      gt\n        /* \"#utility.yul\":9058:9094   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":9074:9092   */\n      tag_341\n      tag_234\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":9058:9094   */\n    tag_340:\n        /* \"#utility.yul\":8910:9101   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9107:9549   */\n    tag_195:\n        /* \"#utility.yul\":9256:9260   */\n      0x00\n        /* \"#utility.yul\":9294:9296   */\n      0x60\n        /* \"#utility.yul\":9283:9292   */\n      dup3\n        /* \"#utility.yul\":9279:9297   */\n      add\n        /* \"#utility.yul\":9271:9297   */\n      swap1\n      pop\n        /* \"#utility.yul\":9307:9378   */\n      tag_343\n        /* \"#utility.yul\":9375:9376   */\n      0x00\n        /* \"#utility.yul\":9364:9373   */\n      dup4\n        /* \"#utility.yul\":9360:9377   */\n      add\n        /* \"#utility.yul\":9351:9357   */\n      dup7\n        /* \"#utility.yul\":9307:9378   */\n      tag_232\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":9388:9460   */\n      tag_344\n        /* \"#utility.yul\":9456:9458   */\n      0x20\n        /* \"#utility.yul\":9445:9454   */\n      dup4\n        /* \"#utility.yul\":9441:9459   */\n      add\n        /* \"#utility.yul\":9432:9438   */\n      dup6\n        /* \"#utility.yul\":9388:9460   */\n      tag_229\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":9470:9542   */\n      tag_345\n        /* \"#utility.yul\":9538:9540   */\n      0x40\n        /* \"#utility.yul\":9527:9536   */\n      dup4\n        /* \"#utility.yul\":9523:9541   */\n      add\n        /* \"#utility.yul\":9514:9520   */\n      dup5\n        /* \"#utility.yul\":9470:9542   */\n      tag_229\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":9107:9549   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220dcd4f0d6d3ff705ce5b2ceabe8c293c2a5f967183545a915e354930126912c7b64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1007": {
									"entryPoint": null,
									"id": 1007,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 635,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 440,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 768,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 1360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2573,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2588,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1887,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1309,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1470,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1653,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1822,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9631:7",
										"nodeType": "YulBlock",
										"src": "0:9631:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "608:80:7",
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nativeSrc": "618:22:7",
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nativeSrc": "627:13:7",
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nativeSrc": "649:33:7",
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nativeSrc": "649:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:7",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:7",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:7",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nativeSrc": "822:692:7",
													"nodeType": "YulBlock",
													"src": "822:692:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:7",
																"nodeType": "YulBlock",
																"src": "869:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:7"
																			},
																			"nativeSrc": "871:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:7"
																		},
																		"nativeSrc": "871:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "843:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "843:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "852:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "852:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "839:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "839:3:7"
																		},
																		"nativeSrc": "839:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "839:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "864:3:7",
																		"nodeType": "YulLiteral",
																		"src": "864:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "835:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:7"
																},
																"nativeSrc": "835:33:7",
																"nodeType": "YulFunctionCall",
																"src": "835:33:7"
															},
															"nativeSrc": "832:120:7",
															"nodeType": "YulIf",
															"src": "832:120:7"
														},
														{
															"nativeSrc": "962:128:7",
															"nodeType": "YulBlock",
															"src": "962:128:7",
															"statements": [
																{
																	"nativeSrc": "977:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:7",
																		"nodeType": "YulLiteral",
																		"src": "991:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:7",
																			"nodeType": "YulTypedName",
																			"src": "981:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1006:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1052:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1052:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1063:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1063:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1048:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1048:3:7"
																				},
																				"nativeSrc": "1048:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1048:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1072:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1072:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1016:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1016:31:7"
																		},
																		"nativeSrc": "1016:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1100:129:7",
															"nodeType": "YulBlock",
															"src": "1100:129:7",
															"statements": [
																{
																	"nativeSrc": "1115:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1115:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1129:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1129:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1119:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1119:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1145:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1145:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1191:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1191:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1202:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1202:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1187:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1187:3:7"
																				},
																				"nativeSrc": "1187:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1187:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1211:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1211:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1155:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1155:31:7"
																		},
																		"nativeSrc": "1155:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1155:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1145:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1145:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1239:129:7",
															"nodeType": "YulBlock",
															"src": "1239:129:7",
															"statements": [
																{
																	"nativeSrc": "1254:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1254:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1268:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1268:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1258:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1258:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1284:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1284:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1330:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1330:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1341:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1341:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1326:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1326:3:7"
																				},
																				"nativeSrc": "1326:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1326:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1350:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1350:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1294:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1294:31:7"
																		},
																		"nativeSrc": "1294:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1294:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1284:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1284:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1378:129:7",
															"nodeType": "YulBlock",
															"src": "1378:129:7",
															"statements": [
																{
																	"nativeSrc": "1393:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1393:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1407:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1407:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1397:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1397:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1423:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1423:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1469:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1469:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1480:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1480:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1465:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1465:3:7"
																				},
																				"nativeSrc": "1465:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1465:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1489:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1489:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1433:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1433:31:7"
																		},
																		"nativeSrc": "1433:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1433:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1423:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1423:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256_fromMemory",
												"nativeSrc": "694:820:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "768:9:7",
														"nodeType": "YulTypedName",
														"src": "768:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "779:7:7",
														"nodeType": "YulTypedName",
														"src": "779:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "791:6:7",
														"nodeType": "YulTypedName",
														"src": "791:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "799:6:7",
														"nodeType": "YulTypedName",
														"src": "799:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "807:6:7",
														"nodeType": "YulTypedName",
														"src": "807:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "815:6:7",
														"nodeType": "YulTypedName",
														"src": "815:6:7",
														"type": ""
													}
												],
												"src": "694:820:7"
											},
											{
												"body": {
													"nativeSrc": "1579:40:7",
													"nodeType": "YulBlock",
													"src": "1579:40:7",
													"statements": [
														{
															"nativeSrc": "1590:22:7",
															"nodeType": "YulAssignment",
															"src": "1590:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1606:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1606:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1600:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1600:5:7"
																},
																"nativeSrc": "1600:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1600:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1590:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1590:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1520:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1562:5:7",
														"nodeType": "YulTypedName",
														"src": "1562:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:7",
														"nodeType": "YulTypedName",
														"src": "1572:6:7",
														"type": ""
													}
												],
												"src": "1520:99:7"
											},
											{
												"body": {
													"nativeSrc": "1653:152:7",
													"nodeType": "YulBlock",
													"src": "1653:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1670:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1670:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1673:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1673:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1663:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1663:6:7"
																},
																"nativeSrc": "1663:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1663:88:7"
															},
															"nativeSrc": "1663:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1663:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1767:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1767:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1770:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1770:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1760:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:7"
																},
																"nativeSrc": "1760:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1760:15:7"
															},
															"nativeSrc": "1760:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1760:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1784:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:7"
																},
																"nativeSrc": "1784:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:7"
															},
															"nativeSrc": "1784:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1625:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1625:180:7"
											},
											{
												"body": {
													"nativeSrc": "1839:152:7",
													"nodeType": "YulBlock",
													"src": "1839:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1856:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1856:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1859:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1859:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1849:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1849:6:7"
																},
																"nativeSrc": "1849:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1849:88:7"
															},
															"nativeSrc": "1849:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1849:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1953:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1953:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1956:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1956:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1946:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1946:6:7"
																},
																"nativeSrc": "1946:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1946:15:7"
															},
															"nativeSrc": "1946:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1946:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1977:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1977:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1980:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1980:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1970:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1970:6:7"
																},
																"nativeSrc": "1970:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1970:15:7"
															},
															"nativeSrc": "1970:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1970:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1811:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1811:180:7"
											},
											{
												"body": {
													"nativeSrc": "2048:269:7",
													"nodeType": "YulBlock",
													"src": "2048:269:7",
													"statements": [
														{
															"nativeSrc": "2058:22:7",
															"nodeType": "YulAssignment",
															"src": "2058:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2072:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2072:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2078:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2078:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2068:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2068:3:7"
																},
																"nativeSrc": "2068:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2068:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2058:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2058:6:7"
																}
															]
														},
														{
															"nativeSrc": "2089:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2089:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2119:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2119:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2125:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2125:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2115:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2115:3:7"
																},
																"nativeSrc": "2115:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2115:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2093:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2093:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2166:51:7",
																"nodeType": "YulBlock",
																"src": "2166:51:7",
																"statements": [
																	{
																		"nativeSrc": "2180:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2180:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2194:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2194:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2202:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2202:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2190:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2190:3:7"
																			},
																			"nativeSrc": "2190:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2190:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2180:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2180:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2146:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2146:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2139:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2139:6:7"
																},
																"nativeSrc": "2139:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2139:26:7"
															},
															"nativeSrc": "2136:81:7",
															"nodeType": "YulIf",
															"src": "2136:81:7"
														},
														{
															"body": {
																"nativeSrc": "2269:42:7",
																"nodeType": "YulBlock",
																"src": "2269:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2283:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2283:16:7"
																			},
																			"nativeSrc": "2283:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2283:18:7"
																		},
																		"nativeSrc": "2283:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2283:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2233:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2233:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2256:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2256:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2264:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2264:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2253:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2253:2:7"
																		},
																		"nativeSrc": "2253:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2253:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2230:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2230:2:7"
																},
																"nativeSrc": "2230:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2230:38:7"
															},
															"nativeSrc": "2227:84:7",
															"nodeType": "YulIf",
															"src": "2227:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1997:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2032:4:7",
														"nodeType": "YulTypedName",
														"src": "2032:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2041:6:7",
														"nodeType": "YulTypedName",
														"src": "2041:6:7",
														"type": ""
													}
												],
												"src": "1997:320:7"
											},
											{
												"body": {
													"nativeSrc": "2377:87:7",
													"nodeType": "YulBlock",
													"src": "2377:87:7",
													"statements": [
														{
															"nativeSrc": "2387:11:7",
															"nodeType": "YulAssignment",
															"src": "2387:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2395:3:7",
																"nodeType": "YulIdentifier",
																"src": "2395:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2387:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2415:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2415:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2418:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2418:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2408:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2408:6:7"
																},
																"nativeSrc": "2408:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2408:14:7"
															},
															"nativeSrc": "2408:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2408:14:7"
														},
														{
															"nativeSrc": "2431:26:7",
															"nodeType": "YulAssignment",
															"src": "2431:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2449:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2449:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2452:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2452:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2439:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2439:9:7"
																},
																"nativeSrc": "2439:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2439:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2431:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2431:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2323:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2364:3:7",
														"nodeType": "YulTypedName",
														"src": "2364:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2372:4:7",
														"nodeType": "YulTypedName",
														"src": "2372:4:7",
														"type": ""
													}
												],
												"src": "2323:141:7"
											},
											{
												"body": {
													"nativeSrc": "2514:49:7",
													"nodeType": "YulBlock",
													"src": "2514:49:7",
													"statements": [
														{
															"nativeSrc": "2524:33:7",
															"nodeType": "YulAssignment",
															"src": "2524:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2542:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2542:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2549:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2549:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2538:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2538:3:7"
																		},
																		"nativeSrc": "2538:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2538:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2554:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2554:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2534:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2534:3:7"
																},
																"nativeSrc": "2534:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2534:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2524:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2524:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2470:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2497:5:7",
														"nodeType": "YulTypedName",
														"src": "2497:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2507:6:7",
														"nodeType": "YulTypedName",
														"src": "2507:6:7",
														"type": ""
													}
												],
												"src": "2470:93:7"
											},
											{
												"body": {
													"nativeSrc": "2622:54:7",
													"nodeType": "YulBlock",
													"src": "2622:54:7",
													"statements": [
														{
															"nativeSrc": "2632:37:7",
															"nodeType": "YulAssignment",
															"src": "2632:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2657:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2657:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2663:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2663:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2653:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2653:3:7"
																},
																"nativeSrc": "2653:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2653:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2632:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2632:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2569:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2597:4:7",
														"nodeType": "YulTypedName",
														"src": "2597:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2603:5:7",
														"nodeType": "YulTypedName",
														"src": "2603:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2613:8:7",
														"nodeType": "YulTypedName",
														"src": "2613:8:7",
														"type": ""
													}
												],
												"src": "2569:107:7"
											},
											{
												"body": {
													"nativeSrc": "2758:317:7",
													"nodeType": "YulBlock",
													"src": "2758:317:7",
													"statements": [
														{
															"nativeSrc": "2768:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2768:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2789:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2789:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2801:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2801:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2785:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2785:3:7"
																},
																"nativeSrc": "2785:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2785:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2772:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2772:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2812:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2812:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2843:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2843:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2854:66:7",
																		"nodeType": "YulLiteral",
																		"src": "2854:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2824:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2824:18:7"
																},
																"nativeSrc": "2824:97:7",
																"nodeType": "YulFunctionCall",
																"src": "2824:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2816:4:7",
																	"nodeType": "YulTypedName",
																	"src": "2816:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2930:51:7",
															"nodeType": "YulAssignment",
															"src": "2930:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2961:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "2961:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2972:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "2972:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2942:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "2942:18:7"
																},
																"nativeSrc": "2942:39:7",
																"nodeType": "YulFunctionCall",
																"src": "2942:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2930:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2930:8:7"
																}
															]
														},
														{
															"nativeSrc": "2990:30:7",
															"nodeType": "YulAssignment",
															"src": "2990:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3003:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3003:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3014:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3014:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3010:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:7"
																		},
																		"nativeSrc": "3010:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3010:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2999:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2999:3:7"
																},
																"nativeSrc": "2999:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2999:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2990:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2990:5:7"
																}
															]
														},
														{
															"nativeSrc": "3029:40:7",
															"nodeType": "YulAssignment",
															"src": "3029:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3042:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3042:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3053:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3053:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3063:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3063:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3049:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3049:3:7"
																		},
																		"nativeSrc": "3049:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3049:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3039:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3039:2:7"
																},
																"nativeSrc": "3039:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3039:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3029:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3029:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2682:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2719:5:7",
														"nodeType": "YulTypedName",
														"src": "2719:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2726:10:7",
														"nodeType": "YulTypedName",
														"src": "2726:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2738:8:7",
														"nodeType": "YulTypedName",
														"src": "2738:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2751:6:7",
														"nodeType": "YulTypedName",
														"src": "2751:6:7",
														"type": ""
													}
												],
												"src": "2682:393:7"
											},
											{
												"body": {
													"nativeSrc": "3113:28:7",
													"nodeType": "YulBlock",
													"src": "3113:28:7",
													"statements": [
														{
															"nativeSrc": "3123:12:7",
															"nodeType": "YulAssignment",
															"src": "3123:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3130:5:7",
																"nodeType": "YulIdentifier",
																"src": "3130:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3123:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3123:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3081:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3099:5:7",
														"nodeType": "YulTypedName",
														"src": "3099:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3109:3:7",
														"nodeType": "YulTypedName",
														"src": "3109:3:7",
														"type": ""
													}
												],
												"src": "3081:60:7"
											},
											{
												"body": {
													"nativeSrc": "3207:82:7",
													"nodeType": "YulBlock",
													"src": "3207:82:7",
													"statements": [
														{
															"nativeSrc": "3217:66:7",
															"nodeType": "YulAssignment",
															"src": "3217:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3275:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3275:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3257:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3257:17:7"
																				},
																				"nativeSrc": "3257:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3257:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3248:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3248:8:7"
																		},
																		"nativeSrc": "3248:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3248:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3230:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3230:17:7"
																},
																"nativeSrc": "3230:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3230:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3217:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3217:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3147:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3187:5:7",
														"nodeType": "YulTypedName",
														"src": "3187:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3197:9:7",
														"nodeType": "YulTypedName",
														"src": "3197:9:7",
														"type": ""
													}
												],
												"src": "3147:142:7"
											},
											{
												"body": {
													"nativeSrc": "3342:28:7",
													"nodeType": "YulBlock",
													"src": "3342:28:7",
													"statements": [
														{
															"nativeSrc": "3352:12:7",
															"nodeType": "YulAssignment",
															"src": "3352:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3359:5:7",
																"nodeType": "YulIdentifier",
																"src": "3359:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3352:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3352:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3295:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3328:5:7",
														"nodeType": "YulTypedName",
														"src": "3328:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3338:3:7",
														"nodeType": "YulTypedName",
														"src": "3338:3:7",
														"type": ""
													}
												],
												"src": "3295:75:7"
											},
											{
												"body": {
													"nativeSrc": "3452:193:7",
													"nodeType": "YulBlock",
													"src": "3452:193:7",
													"statements": [
														{
															"nativeSrc": "3462:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3462:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3517:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3517:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3486:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3486:30:7"
																},
																"nativeSrc": "3486:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3486:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3466:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3466:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3541:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3541:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3581:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3581:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3575:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3575:5:7"
																				},
																				"nativeSrc": "3575:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3575:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3588:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3620:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3620:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3596:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3596:23:7"
																				},
																				"nativeSrc": "3596:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3596:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3547:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3547:27:7"
																		},
																		"nativeSrc": "3547:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3547:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3534:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3534:6:7"
																},
																"nativeSrc": "3534:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3534:105:7"
															},
															"nativeSrc": "3534:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3534:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3376:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3429:4:7",
														"nodeType": "YulTypedName",
														"src": "3429:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3435:6:7",
														"nodeType": "YulTypedName",
														"src": "3435:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3443:7:7",
														"nodeType": "YulTypedName",
														"src": "3443:7:7",
														"type": ""
													}
												],
												"src": "3376:269:7"
											},
											{
												"body": {
													"nativeSrc": "3700:24:7",
													"nodeType": "YulBlock",
													"src": "3700:24:7",
													"statements": [
														{
															"nativeSrc": "3710:8:7",
															"nodeType": "YulAssignment",
															"src": "3710:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3717:1:7",
																"nodeType": "YulLiteral",
																"src": "3717:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3710:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3710:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3651:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3696:3:7",
														"nodeType": "YulTypedName",
														"src": "3696:3:7",
														"type": ""
													}
												],
												"src": "3651:73:7"
											},
											{
												"body": {
													"nativeSrc": "3783:136:7",
													"nodeType": "YulBlock",
													"src": "3783:136:7",
													"statements": [
														{
															"nativeSrc": "3793:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3793:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3807:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3807:30:7"
																},
																"nativeSrc": "3807:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3807:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3797:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3797:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3892:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3892:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3898:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3898:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3906:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3906:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3848:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3848:43:7"
																},
																"nativeSrc": "3848:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3848:65:7"
															},
															"nativeSrc": "3848:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3848:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3730:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3769:4:7",
														"nodeType": "YulTypedName",
														"src": "3769:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3775:6:7",
														"nodeType": "YulTypedName",
														"src": "3775:6:7",
														"type": ""
													}
												],
												"src": "3730:189:7"
											},
											{
												"body": {
													"nativeSrc": "3975:136:7",
													"nodeType": "YulBlock",
													"src": "3975:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4042:63:7",
																"nodeType": "YulBlock",
																"src": "4042:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4086:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4086:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4093:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4093:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4056:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "4056:29:7"
																			},
																			"nativeSrc": "4056:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4056:39:7"
																		},
																		"nativeSrc": "4056:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4056:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3995:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3995:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4002:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4002:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3992:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3992:2:7"
																},
																"nativeSrc": "3992:14:7",
																"nodeType": "YulFunctionCall",
																"src": "3992:14:7"
															},
															"nativeSrc": "3985:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4007:26:7",
																"nodeType": "YulBlock",
																"src": "4007:26:7",
																"statements": [
																	{
																		"nativeSrc": "4009:22:7",
																		"nodeType": "YulAssignment",
																		"src": "4009:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4022:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4022:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4029:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4029:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4018:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4018:3:7"
																			},
																			"nativeSrc": "4018:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4018:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4009:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4009:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3989:2:7",
																"nodeType": "YulBlock",
																"src": "3989:2:7",
																"statements": []
															},
															"src": "3985:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3925:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3963:5:7",
														"nodeType": "YulTypedName",
														"src": "3963:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3970:3:7",
														"nodeType": "YulTypedName",
														"src": "3970:3:7",
														"type": ""
													}
												],
												"src": "3925:186:7"
											},
											{
												"body": {
													"nativeSrc": "4196:464:7",
													"nodeType": "YulBlock",
													"src": "4196:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4222:431:7",
																"nodeType": "YulBlock",
																"src": "4222:431:7",
																"statements": [
																	{
																		"nativeSrc": "4236:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4236:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4284:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4252:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4252:31:7"
																			},
																			"nativeSrc": "4252:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4252:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4240:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4240:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4303:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4303:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4326:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4326:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4354:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4354:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4336:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4336:17:7"
																					},
																					"nativeSrc": "4336:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4336:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4322:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4322:3:7"
																			},
																			"nativeSrc": "4322:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4322:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4307:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4307:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4523:27:7",
																			"nodeType": "YulBlock",
																			"src": "4523:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4525:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4525:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4540:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4540:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4525:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4525:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4507:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4507:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4519:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4519:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4504:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4504:2:7"
																			},
																			"nativeSrc": "4504:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4504:18:7"
																		},
																		"nativeSrc": "4501:49:7",
																		"nodeType": "YulIf",
																		"src": "4501:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4592:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4592:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4609:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4609:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4637:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4637:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4619:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4619:17:7"
																							},
																							"nativeSrc": "4619:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4619:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4605:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4605:3:7"
																					},
																					"nativeSrc": "4605:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4605:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4563:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4563:28:7"
																			},
																			"nativeSrc": "4563:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4563:80:7"
																		},
																		"nativeSrc": "4563:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4563:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4213:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4213:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4218:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4218:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4210:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4210:2:7"
																},
																"nativeSrc": "4210:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4210:11:7"
															},
															"nativeSrc": "4207:446:7",
															"nodeType": "YulIf",
															"src": "4207:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4117:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4172:5:7",
														"nodeType": "YulTypedName",
														"src": "4172:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4179:3:7",
														"nodeType": "YulTypedName",
														"src": "4179:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4184:10:7",
														"nodeType": "YulTypedName",
														"src": "4184:10:7",
														"type": ""
													}
												],
												"src": "4117:543:7"
											},
											{
												"body": {
													"nativeSrc": "4729:54:7",
													"nodeType": "YulBlock",
													"src": "4729:54:7",
													"statements": [
														{
															"nativeSrc": "4739:37:7",
															"nodeType": "YulAssignment",
															"src": "4739:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4764:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4764:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4770:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4770:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4760:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4760:3:7"
																},
																"nativeSrc": "4760:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4760:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4739:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4739:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4666:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4704:4:7",
														"nodeType": "YulTypedName",
														"src": "4704:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4710:5:7",
														"nodeType": "YulTypedName",
														"src": "4710:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4720:8:7",
														"nodeType": "YulTypedName",
														"src": "4720:8:7",
														"type": ""
													}
												],
												"src": "4666:117:7"
											},
											{
												"body": {
													"nativeSrc": "4840:118:7",
													"nodeType": "YulBlock",
													"src": "4840:118:7",
													"statements": [
														{
															"nativeSrc": "4850:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "4850:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4899:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4899:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4902:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4902:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4895:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4895:3:7"
																				},
																				"nativeSrc": "4895:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4895:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4914:1:7",
																						"nodeType": "YulLiteral",
																						"src": "4914:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4910:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4910:3:7"
																				},
																				"nativeSrc": "4910:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4910:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4866:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "4866:28:7"
																		},
																		"nativeSrc": "4866:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4866:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4862:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4862:3:7"
																},
																"nativeSrc": "4862:56:7",
																"nodeType": "YulFunctionCall",
																"src": "4862:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4854:4:7",
																	"nodeType": "YulTypedName",
																	"src": "4854:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4927:25:7",
															"nodeType": "YulAssignment",
															"src": "4927:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4941:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4941:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4947:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4947:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4937:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4937:3:7"
																},
																"nativeSrc": "4937:15:7",
																"nodeType": "YulFunctionCall",
																"src": "4937:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4927:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4927:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4789:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4817:4:7",
														"nodeType": "YulTypedName",
														"src": "4817:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4823:5:7",
														"nodeType": "YulTypedName",
														"src": "4823:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4833:6:7",
														"nodeType": "YulTypedName",
														"src": "4833:6:7",
														"type": ""
													}
												],
												"src": "4789:169:7"
											},
											{
												"body": {
													"nativeSrc": "5044:214:7",
													"nodeType": "YulBlock",
													"src": "5044:214:7",
													"statements": [
														{
															"nativeSrc": "5177:37:7",
															"nodeType": "YulAssignment",
															"src": "5177:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5204:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5204:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5210:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5210:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5185:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5185:18:7"
																},
																"nativeSrc": "5185:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5185:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5177:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5177:4:7"
																}
															]
														},
														{
															"nativeSrc": "5223:29:7",
															"nodeType": "YulAssignment",
															"src": "5223:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5234:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5234:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5244:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5244:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5247:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5247:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5240:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5240:3:7"
																		},
																		"nativeSrc": "5240:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5240:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5231:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5231:2:7"
																},
																"nativeSrc": "5231:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5231:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5223:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5223:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4963:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5025:4:7",
														"nodeType": "YulTypedName",
														"src": "5025:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5031:3:7",
														"nodeType": "YulTypedName",
														"src": "5031:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5039:4:7",
														"nodeType": "YulTypedName",
														"src": "5039:4:7",
														"type": ""
													}
												],
												"src": "4963:295:7"
											},
											{
												"body": {
													"nativeSrc": "5355:1303:7",
													"nodeType": "YulBlock",
													"src": "5355:1303:7",
													"statements": [
														{
															"nativeSrc": "5366:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5366:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5413:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5413:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5380:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5380:32:7"
																},
																"nativeSrc": "5380:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5380:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5370:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5370:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5502:22:7",
																"nodeType": "YulBlock",
																"src": "5502:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5504:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5504:16:7"
																			},
																			"nativeSrc": "5504:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5504:18:7"
																		},
																		"nativeSrc": "5504:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5504:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5474:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5474:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5482:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5482:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5471:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5471:2:7"
																},
																"nativeSrc": "5471:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5471:30:7"
															},
															"nativeSrc": "5468:56:7",
															"nodeType": "YulIf",
															"src": "5468:56:7"
														},
														{
															"nativeSrc": "5534:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5534:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5580:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5580:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5574:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5574:5:7"
																		},
																		"nativeSrc": "5574:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5574:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5548:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5548:25:7"
																},
																"nativeSrc": "5548:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5548:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5538:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5538:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5679:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5679:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5685:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5685:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5693:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5693:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5633:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5633:45:7"
																},
																"nativeSrc": "5633:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5633:67:7"
															},
															"nativeSrc": "5633:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5633:67:7"
														},
														{
															"nativeSrc": "5710:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5710:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5727:1:7",
																"nodeType": "YulLiteral",
																"src": "5727:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5714:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5714:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5738:17:7",
															"nodeType": "YulAssignment",
															"src": "5738:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5751:4:7",
																"nodeType": "YulLiteral",
																"src": "5751:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5738:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5738:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5802:611:7",
																		"nodeType": "YulBlock",
																		"src": "5802:611:7",
																		"statements": [
																			{
																				"nativeSrc": "5816:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5816:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5835:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "5835:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5847:4:7",
																									"nodeType": "YulLiteral",
																									"src": "5847:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5843:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "5843:3:7"
																							},
																							"nativeSrc": "5843:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "5843:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5831:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "5831:3:7"
																					},
																					"nativeSrc": "5831:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5831:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5820:7:7",
																						"nodeType": "YulTypedName",
																						"src": "5820:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5867:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5867:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5913:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "5913:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5881:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "5881:31:7"
																					},
																					"nativeSrc": "5881:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5881:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5871:6:7",
																						"nodeType": "YulTypedName",
																						"src": "5871:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5931:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5931:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5940:1:7",
																					"nodeType": "YulLiteral",
																					"src": "5940:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5935:1:7",
																						"nodeType": "YulTypedName",
																						"src": "5935:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5999:163:7",
																					"nodeType": "YulBlock",
																					"src": "5999:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6024:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6024:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6042:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "6042:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6047:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "6047:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6038:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6038:3:7"
																												},
																												"nativeSrc": "6038:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6038:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6032:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "6032:5:7"
																										},
																										"nativeSrc": "6032:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6032:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6017:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6017:6:7"
																								},
																								"nativeSrc": "6017:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6017:42:7"
																							},
																							"nativeSrc": "6017:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6017:42:7"
																						},
																						{
																							"nativeSrc": "6076:24:7",
																							"nodeType": "YulAssignment",
																							"src": "6076:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6090:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6090:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6098:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6098:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6086:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6086:3:7"
																								},
																								"nativeSrc": "6086:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6086:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6076:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6076:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6117:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6117:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6134:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6134:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6145:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6145:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6130:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6130:3:7"
																								},
																								"nativeSrc": "6130:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6130:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6117:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6117:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5965:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "5965:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5968:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "5968:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5962:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "5962:2:7"
																					},
																					"nativeSrc": "5962:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "5962:14:7"
																				},
																				"nativeSrc": "5954:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5977:21:7",
																					"nodeType": "YulBlock",
																					"src": "5977:21:7",
																					"statements": [
																						{
																							"nativeSrc": "5979:17:7",
																							"nodeType": "YulAssignment",
																							"src": "5979:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5988:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "5988:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5991:4:7",
																										"nodeType": "YulLiteral",
																										"src": "5991:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5984:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "5984:3:7"
																								},
																								"nativeSrc": "5984:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "5984:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5979:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "5979:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5958:3:7",
																					"nodeType": "YulBlock",
																					"src": "5958:3:7",
																					"statements": []
																				},
																				"src": "5954:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6198:156:7",
																					"nodeType": "YulBlock",
																					"src": "6198:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6216:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6216:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6243:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6243:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6248:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6248:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6239:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6239:3:7"
																										},
																										"nativeSrc": "6239:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6239:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6233:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6233:5:7"
																								},
																								"nativeSrc": "6233:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6233:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6220:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6220:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6283:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6283:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6310:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6310:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6325:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6325:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6333:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6333:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6321:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6321:3:7"
																												},
																												"nativeSrc": "6321:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6321:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6291:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6291:18:7"
																										},
																										"nativeSrc": "6291:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6291:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6276:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6276:6:7"
																								},
																								"nativeSrc": "6276:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6276:64:7"
																							},
																							"nativeSrc": "6276:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6276:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6181:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6181:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6190:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6190:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6178:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6178:2:7"
																					},
																					"nativeSrc": "6178:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6178:19:7"
																				},
																				"nativeSrc": "6175:179:7",
																				"nodeType": "YulIf",
																				"src": "6175:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6374:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6374:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6388:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6388:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6396:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6396:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6384:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6384:3:7"
																									},
																									"nativeSrc": "6384:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6384:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6400:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6400:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6380:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6380:3:7"
																							},
																							"nativeSrc": "6380:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6380:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6367:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6367:6:7"
																					},
																					"nativeSrc": "6367:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6367:36:7"
																				},
																				"nativeSrc": "6367:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6367:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5795:618:7",
																	"nodeType": "YulCase",
																	"src": "5795:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5800:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5800:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6430:222:7",
																		"nodeType": "YulBlock",
																		"src": "6430:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6444:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6444:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6457:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6457:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6448:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6448:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6481:67:7",
																					"nodeType": "YulBlock",
																					"src": "6481:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6499:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6499:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6518:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6518:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6523:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6523:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6514:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6514:3:7"
																										},
																										"nativeSrc": "6514:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6514:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6508:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6508:5:7"
																								},
																								"nativeSrc": "6508:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6508:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6499:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6499:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6474:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6474:6:7"
																				},
																				"nativeSrc": "6471:77:7",
																				"nodeType": "YulIf",
																				"src": "6471:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6568:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6568:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6627:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6627:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6634:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6634:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6574:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6574:52:7"
																							},
																							"nativeSrc": "6574:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6574:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6561:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6561:6:7"
																					},
																					"nativeSrc": "6561:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6561:81:7"
																				},
																				"nativeSrc": "6561:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6561:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6422:230:7",
																	"nodeType": "YulCase",
																	"src": "6422:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5775:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5783:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5783:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5772:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5772:2:7"
																},
																"nativeSrc": "5772:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5772:14:7"
															},
															"nativeSrc": "5765:887:7",
															"nodeType": "YulSwitch",
															"src": "5765:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5263:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5344:4:7",
														"nodeType": "YulTypedName",
														"src": "5344:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5350:3:7",
														"nodeType": "YulTypedName",
														"src": "5350:3:7",
														"type": ""
													}
												],
												"src": "5263:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6709:81:7",
													"nodeType": "YulBlock",
													"src": "6709:81:7",
													"statements": [
														{
															"nativeSrc": "6719:65:7",
															"nodeType": "YulAssignment",
															"src": "6719:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6734:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6734:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6741:42:7",
																		"nodeType": "YulLiteral",
																		"src": "6741:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6730:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6730:3:7"
																},
																"nativeSrc": "6730:54:7",
																"nodeType": "YulFunctionCall",
																"src": "6730:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6719:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6719:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6664:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6691:5:7",
														"nodeType": "YulTypedName",
														"src": "6691:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6701:7:7",
														"nodeType": "YulTypedName",
														"src": "6701:7:7",
														"type": ""
													}
												],
												"src": "6664:126:7"
											},
											{
												"body": {
													"nativeSrc": "6841:51:7",
													"nodeType": "YulBlock",
													"src": "6841:51:7",
													"statements": [
														{
															"nativeSrc": "6851:35:7",
															"nodeType": "YulAssignment",
															"src": "6851:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6880:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "6880:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6862:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6862:17:7"
																},
																"nativeSrc": "6862:24:7",
																"nodeType": "YulFunctionCall",
																"src": "6862:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6851:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6851:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6796:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6823:5:7",
														"nodeType": "YulTypedName",
														"src": "6823:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6833:7:7",
														"nodeType": "YulTypedName",
														"src": "6833:7:7",
														"type": ""
													}
												],
												"src": "6796:96:7"
											},
											{
												"body": {
													"nativeSrc": "6963:53:7",
													"nodeType": "YulBlock",
													"src": "6963:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6980:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6980:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7003:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "7003:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6985:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6985:17:7"
																		},
																		"nativeSrc": "6985:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6985:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6973:6:7"
																},
																"nativeSrc": "6973:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6973:37:7"
															},
															"nativeSrc": "6973:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6973:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6898:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6951:5:7",
														"nodeType": "YulTypedName",
														"src": "6951:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6958:3:7",
														"nodeType": "YulTypedName",
														"src": "6958:3:7",
														"type": ""
													}
												],
												"src": "6898:118:7"
											},
											{
												"body": {
													"nativeSrc": "7120:124:7",
													"nodeType": "YulBlock",
													"src": "7120:124:7",
													"statements": [
														{
															"nativeSrc": "7130:26:7",
															"nodeType": "YulAssignment",
															"src": "7130:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7142:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7142:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7153:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7153:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7138:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7138:3:7"
																},
																"nativeSrc": "7138:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7138:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7130:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7130:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7210:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7210:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7223:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7223:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7234:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7234:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7219:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7219:3:7"
																		},
																		"nativeSrc": "7219:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7219:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7166:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7166:43:7"
																},
																"nativeSrc": "7166:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7166:71:7"
															},
															"nativeSrc": "7166:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7166:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7022:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7092:9:7",
														"nodeType": "YulTypedName",
														"src": "7092:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7104:6:7",
														"nodeType": "YulTypedName",
														"src": "7104:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7115:4:7",
														"nodeType": "YulTypedName",
														"src": "7115:4:7",
														"type": ""
													}
												],
												"src": "7022:222:7"
											},
											{
												"body": {
													"nativeSrc": "7346:73:7",
													"nodeType": "YulBlock",
													"src": "7346:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7363:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7363:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7368:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7368:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7356:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7356:6:7"
																},
																"nativeSrc": "7356:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7356:19:7"
															},
															"nativeSrc": "7356:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "7356:19:7"
														},
														{
															"nativeSrc": "7384:29:7",
															"nodeType": "YulAssignment",
															"src": "7384:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7403:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7403:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7408:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7408:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7399:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7399:3:7"
																},
																"nativeSrc": "7399:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7399:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7384:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "7384:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7250:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7318:3:7",
														"nodeType": "YulTypedName",
														"src": "7318:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7323:6:7",
														"nodeType": "YulTypedName",
														"src": "7323:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7334:11:7",
														"nodeType": "YulTypedName",
														"src": "7334:11:7",
														"type": ""
													}
												],
												"src": "7250:169:7"
											},
											{
												"body": {
													"nativeSrc": "7531:117:7",
													"nodeType": "YulBlock",
													"src": "7531:117:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7553:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7553:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7561:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7561:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7549:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7549:3:7"
																		},
																		"nativeSrc": "7549:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7549:14:7"
																	},
																	{
																		"hexValue": "4d696e206275726e20666565206d757374206265203c3d206d6178206275726e",
																		"kind": "string",
																		"nativeSrc": "7565:34:7",
																		"nodeType": "YulLiteral",
																		"src": "7565:34:7",
																		"type": "",
																		"value": "Min burn fee must be <= max burn"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7542:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7542:6:7"
																},
																"nativeSrc": "7542:58:7",
																"nodeType": "YulFunctionCall",
																"src": "7542:58:7"
															},
															"nativeSrc": "7542:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "7542:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7621:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7621:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7629:2:7",
																				"nodeType": "YulLiteral",
																				"src": "7629:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7617:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7617:3:7"
																		},
																		"nativeSrc": "7617:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7617:15:7"
																	},
																	{
																		"hexValue": "20666565",
																		"kind": "string",
																		"nativeSrc": "7634:6:7",
																		"nodeType": "YulLiteral",
																		"src": "7634:6:7",
																		"type": "",
																		"value": " fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7610:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7610:6:7"
																},
																"nativeSrc": "7610:31:7",
																"nodeType": "YulFunctionCall",
																"src": "7610:31:7"
															},
															"nativeSrc": "7610:31:7",
															"nodeType": "YulExpressionStatement",
															"src": "7610:31:7"
														}
													]
												},
												"name": "store_literal_in_memory_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0",
												"nativeSrc": "7425:223:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7523:6:7",
														"nodeType": "YulTypedName",
														"src": "7523:6:7",
														"type": ""
													}
												],
												"src": "7425:223:7"
											},
											{
												"body": {
													"nativeSrc": "7800:220:7",
													"nodeType": "YulBlock",
													"src": "7800:220:7",
													"statements": [
														{
															"nativeSrc": "7810:74:7",
															"nodeType": "YulAssignment",
															"src": "7810:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7876:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7881:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7881:2:7",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7817:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7817:58:7"
																},
																"nativeSrc": "7817:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7817:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7810:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7810:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7982:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7982:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0",
																	"nativeSrc": "7893:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7893:88:7"
																},
																"nativeSrc": "7893:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7893:93:7"
															},
															"nativeSrc": "7893:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7893:93:7"
														},
														{
															"nativeSrc": "7995:19:7",
															"nodeType": "YulAssignment",
															"src": "7995:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8006:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8006:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8011:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8011:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8002:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8002:3:7"
																},
																"nativeSrc": "8002:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8002:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7995:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7995:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7654:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7788:3:7",
														"nodeType": "YulTypedName",
														"src": "7788:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7796:3:7",
														"nodeType": "YulTypedName",
														"src": "7796:3:7",
														"type": ""
													}
												],
												"src": "7654:366:7"
											},
											{
												"body": {
													"nativeSrc": "8197:248:7",
													"nodeType": "YulBlock",
													"src": "8197:248:7",
													"statements": [
														{
															"nativeSrc": "8207:26:7",
															"nodeType": "YulAssignment",
															"src": "8207:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8219:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8219:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8230:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8230:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8215:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8215:3:7"
																},
																"nativeSrc": "8215:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8215:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8207:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8207:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8254:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8254:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8265:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8265:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8250:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8250:3:7"
																		},
																		"nativeSrc": "8250:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8250:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8273:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8273:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8279:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8279:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8269:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8269:3:7"
																		},
																		"nativeSrc": "8269:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8243:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8243:6:7"
																},
																"nativeSrc": "8243:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8243:47:7"
															},
															"nativeSrc": "8243:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8243:47:7"
														},
														{
															"nativeSrc": "8299:139:7",
															"nodeType": "YulAssignment",
															"src": "8299:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8433:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8433:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8307:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8307:124:7"
																},
																"nativeSrc": "8307:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8307:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8299:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8299:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8026:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8177:9:7",
														"nodeType": "YulTypedName",
														"src": "8177:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8192:4:7",
														"nodeType": "YulTypedName",
														"src": "8192:4:7",
														"type": ""
													}
												],
												"src": "8026:419:7"
											},
											{
												"body": {
													"nativeSrc": "8479:152:7",
													"nodeType": "YulBlock",
													"src": "8479:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8496:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8496:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8499:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8499:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8489:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8489:6:7"
																},
																"nativeSrc": "8489:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8489:88:7"
															},
															"nativeSrc": "8489:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8489:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8593:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8593:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8596:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8596:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8586:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8586:6:7"
																},
																"nativeSrc": "8586:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8586:15:7"
															},
															"nativeSrc": "8586:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8586:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8617:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8617:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8620:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8620:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8610:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:7"
																},
																"nativeSrc": "8610:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8610:15:7"
															},
															"nativeSrc": "8610:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8610:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8451:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8451:180:7"
											},
											{
												"body": {
													"nativeSrc": "8681:147:7",
													"nodeType": "YulBlock",
													"src": "8681:147:7",
													"statements": [
														{
															"nativeSrc": "8691:25:7",
															"nodeType": "YulAssignment",
															"src": "8691:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8714:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8714:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8696:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8696:17:7"
																},
																"nativeSrc": "8696:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8696:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8691:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8691:1:7"
																}
															]
														},
														{
															"nativeSrc": "8725:25:7",
															"nodeType": "YulAssignment",
															"src": "8725:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8748:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8748:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8730:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8730:17:7"
																},
																"nativeSrc": "8730:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8730:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8725:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8725:1:7"
																}
															]
														},
														{
															"nativeSrc": "8759:16:7",
															"nodeType": "YulAssignment",
															"src": "8759:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8770:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8770:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8773:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8773:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8766:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8766:3:7"
																},
																"nativeSrc": "8766:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8766:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8759:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8759:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8799:22:7",
																"nodeType": "YulBlock",
																"src": "8799:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8801:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8801:16:7"
																			},
																			"nativeSrc": "8801:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8801:18:7"
																		},
																		"nativeSrc": "8801:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8801:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8791:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8791:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8794:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8794:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8788:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8788:2:7"
																},
																"nativeSrc": "8788:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8788:10:7"
															},
															"nativeSrc": "8785:36:7",
															"nodeType": "YulIf",
															"src": "8785:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8637:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8668:1:7",
														"nodeType": "YulTypedName",
														"src": "8668:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8671:1:7",
														"nodeType": "YulTypedName",
														"src": "8671:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8677:3:7",
														"nodeType": "YulTypedName",
														"src": "8677:3:7",
														"type": ""
													}
												],
												"src": "8637:191:7"
											},
											{
												"body": {
													"nativeSrc": "8899:53:7",
													"nodeType": "YulBlock",
													"src": "8899:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8916:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8916:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8939:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8939:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8921:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8921:17:7"
																		},
																		"nativeSrc": "8921:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8921:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8909:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8909:6:7"
																},
																"nativeSrc": "8909:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8909:37:7"
															},
															"nativeSrc": "8909:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8909:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8834:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8887:5:7",
														"nodeType": "YulTypedName",
														"src": "8887:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8894:3:7",
														"nodeType": "YulTypedName",
														"src": "8894:3:7",
														"type": ""
													}
												],
												"src": "8834:118:7"
											},
											{
												"body": {
													"nativeSrc": "9112:288:7",
													"nodeType": "YulBlock",
													"src": "9112:288:7",
													"statements": [
														{
															"nativeSrc": "9122:26:7",
															"nodeType": "YulAssignment",
															"src": "9122:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9134:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9134:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9145:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9145:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9130:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9130:3:7"
																},
																"nativeSrc": "9130:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9130:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9122:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9122:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9202:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9202:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9215:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9215:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9226:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9226:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9211:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9211:3:7"
																		},
																		"nativeSrc": "9211:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9211:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9158:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9158:43:7"
																},
																"nativeSrc": "9158:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9158:71:7"
															},
															"nativeSrc": "9158:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9158:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9283:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9283:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9296:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9296:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9307:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9307:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9292:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9292:3:7"
																		},
																		"nativeSrc": "9292:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9292:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9239:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9239:43:7"
																},
																"nativeSrc": "9239:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9239:72:7"
															},
															"nativeSrc": "9239:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9239:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9365:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9365:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9378:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9378:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9389:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9389:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9374:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9374:3:7"
																		},
																		"nativeSrc": "9374:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9374:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9321:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9321:43:7"
																},
																"nativeSrc": "9321:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9321:72:7"
															},
															"nativeSrc": "9321:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9321:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8958:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9068:9:7",
														"nodeType": "YulTypedName",
														"src": "9068:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9080:6:7",
														"nodeType": "YulTypedName",
														"src": "9080:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9088:6:7",
														"nodeType": "YulTypedName",
														"src": "9088:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9096:6:7",
														"nodeType": "YulTypedName",
														"src": "9096:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9107:4:7",
														"nodeType": "YulTypedName",
														"src": "9107:4:7",
														"type": ""
													}
												],
												"src": "8958:442:7"
											},
											{
												"body": {
													"nativeSrc": "9504:124:7",
													"nodeType": "YulBlock",
													"src": "9504:124:7",
													"statements": [
														{
															"nativeSrc": "9514:26:7",
															"nodeType": "YulAssignment",
															"src": "9514:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9526:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9526:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9537:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9537:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9522:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9522:3:7"
																},
																"nativeSrc": "9522:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9522:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9514:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9514:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9594:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9594:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9607:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9607:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9618:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9618:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9603:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9603:3:7"
																		},
																		"nativeSrc": "9603:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9603:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9550:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9550:43:7"
																},
																"nativeSrc": "9550:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9550:71:7"
															},
															"nativeSrc": "9550:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9550:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9406:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9476:9:7",
														"nodeType": "YulTypedName",
														"src": "9476:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9488:6:7",
														"nodeType": "YulTypedName",
														"src": "9488:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9499:4:7",
														"nodeType": "YulTypedName",
														"src": "9499:4:7",
														"type": ""
													}
												],
												"src": "9406:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"Min burn fee must be <= max burn\")\n\n        mstore(add(memPtr, 32), \" fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611fb4380380611fb483398181016040528101906100319190610550565b336040518060400160405280601381526020017f46616c6c696e6720576564676520546f6b656e000000000000000000000000008152506040518060400160405280600381526020017f465754000000000000000000000000000000000000000000000000000000000081525081600390816100ad91906107e8565b5080600490816100bd91906107e8565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012791906108f6565b60405180910390fd5b61013f816101b860201b60201c565b5081831115610183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017a9061098f565b60405180910390fd5b826006819055508160078190555080600881905550426009819055506101af338561027b60201b60201c565b50505050610a6a565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102eb575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102e291906108f6565b60405180910390fd5b6102fc5f838361030060201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610350578060025f82825461034491906109da565b9250508190555061041e565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103d9578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016103d093929190610a1c565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610465578060025f82825403925050819055506104af565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161050c9190610a51565b60405180910390a3505050565b5f5ffd5b5f819050919050565b61052f8161051d565b8114610539575f5ffd5b50565b5f8151905061054a81610526565b92915050565b5f5f5f5f6080858703121561056857610567610519565b5b5f6105758782880161053c565b94505060206105868782880161053c565b93505060406105978782880161053c565b92505060606105a88782880161053c565b91505092959194509250565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061062f57607f821691505b602082108103610642576106416105eb565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106a47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610669565b6106ae8683610669565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6106e96106e46106df8461051d565b6106c6565b61051d565b9050919050565b5f819050919050565b610702836106cf565b61071661070e826106f0565b848454610675565b825550505050565b5f5f905090565b61072d61071e565b6107388184846106f9565b505050565b5b8181101561075b576107505f82610725565b60018101905061073e565b5050565b601f8211156107a05761077181610648565b61077a8461065a565b81016020851015610789578190505b61079d6107958561065a565b83018261073d565b50505b505050565b5f82821c905092915050565b5f6107c05f19846008026107a5565b1980831691505092915050565b5f6107d883836107b1565b9150826002028217905092915050565b6107f1826105b4565b67ffffffffffffffff81111561080a576108096105be565b5b6108148254610618565b61081f82828561075f565b5f60209050601f831160018114610850575f841561083e578287015190505b61084885826107cd565b8655506108af565b601f19841661085e86610648565b5f5b8281101561088557848901518255600182019150602085019450602081019050610860565b868310156108a2578489015161089e601f8916826107b1565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108e0826108b7565b9050919050565b6108f0816108d6565b82525050565b5f6020820190506109095f8301846108e7565b92915050565b5f82825260208201905092915050565b7f4d696e206275726e20666565206d757374206265203c3d206d6178206275726e5f8201527f2066656500000000000000000000000000000000000000000000000000000000602082015250565b5f61097960248361090f565b91506109848261091f565b604082019050919050565b5f6020820190508181035f8301526109a68161096d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109e48261051d565b91506109ef8361051d565b9250828201905080821115610a0757610a066109ad565b5b92915050565b610a168161051d565b82525050565b5f606082019050610a2f5f8301866108e7565b610a3c6020830185610a0d565b610a496040830184610a0d565b949350505050565b5f602082019050610a645f830184610a0d565b92915050565b61153d80610a775f395ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c80637d158101116100a0578063d5b78d771161006f578063d5b78d77146102a9578063dd62ed3e146102c7578063e17ac3d5146102f7578063ecda10f514610315578063f2fde38b1461033357610109565b80637d1581011461021f5780638da5cb5b1461023d57806395d89b411461025b578063a9059cbb1461027957610109565b8063313ce567116100dc578063313ce567146101a95780633c81385c146101c757806370a08231146101e5578063715018a61461021557610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f5ffd5b61011561034f565b6040516101229190611056565b60405180910390f35b61014560048036038101906101409190611107565b6103df565b604051610152919061115f565b60405180910390f35b610163610401565b6040516101709190611187565b60405180910390f35b610193600480360381019061018e91906111a0565b61040a565b6040516101a0919061115f565b60405180910390f35b6101b16104e1565b6040516101be919061120b565b60405180910390f35b6101cf6104e9565b6040516101dc9190611187565b60405180910390f35b6101ff60048036038101906101fa9190611224565b6104ef565b60405161020c9190611187565b60405180910390f35b61021d610534565b005b610227610547565b6040516102349190611187565b60405180910390f35b61024561054d565b604051610252919061125e565b60405180910390f35b610263610575565b6040516102709190611056565b60405180910390f35b610293600480360381019061028e9190611107565b610605565b6040516102a0919061115f565b60405180910390f35b6102b16106e1565b6040516102be9190611187565b60405180910390f35b6102e160048036038101906102dc9190611277565b6106e7565b6040516102ee9190611187565b60405180910390f35b6102ff610769565b60405161030c9190611187565b60405180910390f35b61031d6107bf565b60405161032a9190611187565b60405180910390f35b61034d60048036038101906103489190611224565b6107c5565b005b60606003805461035e906112e2565b80601f016020809104026020016040519081016040528092919081815260200182805461038a906112e2565b80156103d55780601f106103ac576101008083540402835291602001916103d5565b820191905f5260205f20905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b5f5f6103e9610849565b90506103f6818585610850565b600191505092915050565b5f600254905090565b5f5f610414610769565b90505f6127108285610426919061133f565b61043091906113ad565b90505f818561043f91906113dd565b90505f61044d888884610862565b90508061048f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104869061145a565b60405180910390fd5b6104998884610890565b7f1d84b60620d560a5bd3488e3ff622e0142d7ce33ecf7c5d24c17637ac97e048e84846040516104ca929190611478565b60405180910390a160019450505050509392505050565b5f6012905090565b60075481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61053c61090f565b6105455f610996565b565b60085481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610584906112e2565b80601f01602080910402602001604051908101604052809291908181526020018280546105b0906112e2565b80156105fb5780601f106105d2576101008083540402835291602001916105fb565b820191905f5260205f20905b8154815290600101906020018083116105de57829003601f168201915b5050505050905090565b5f5f61060f610769565b90505f6127108285610621919061133f565b61062b91906113ad565b90505f818561063a91906113dd565b90505f6106478783610a59565b905080610689576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106809061145a565b60405180910390fd5b61069a610694610849565b84610890565b7f1d84b60620d560a5bd3488e3ff622e0142d7ce33ecf7c5d24c17637ac97e048e84846040516106cb929190611478565b60405180910390a1600194505050505092915050565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f5f620151806009544261077d91906113dd565b61078791906113ad565b90505f60085482610798919061133f565b6006546107a5919061149f565b90506007548111156107b75760075490505b809250505090565b60095481565b6107cd61090f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361083d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610834919061125e565b60405180910390fd5b61084681610996565b50565b5f33905090565b61085d8383836001610a7b565b505050565b5f5f61086c610849565b9050610879858285610c4a565b610884858585610cdd565b60019150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610900575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108f7919061125e565b60405180910390fd5b61090b825f83610dcd565b5050565b610917610849565b73ffffffffffffffffffffffffffffffffffffffff1661093561054d565b73ffffffffffffffffffffffffffffffffffffffff161461099457610958610849565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161098b919061125e565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f610a63610849565b9050610a70818585610cdd565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610aeb575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ae2919061125e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b52919061125e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c44578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c3b9190611187565b60405180910390a35b50505050565b5f610c5584846106e7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cd75781811015610cc8578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cbf939291906114d2565b60405180910390fd5b610cd684848484035f610a7b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d4d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d44919061125e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dbd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610db4919061125e565b60405180910390fd5b610dc8838383610dcd565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e1d578060025f828254610e11919061149f565b92505081905550610eeb565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ea6578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e9d939291906114d2565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f32578060025f8282540392505081905550610f7c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fd99190611187565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61102882610fe6565b6110328185610ff0565b9350611042818560208601611000565b61104b8161100e565b840191505092915050565b5f6020820190508181035f83015261106e818461101e565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110a38261107a565b9050919050565b6110b381611099565b81146110bd575f5ffd5b50565b5f813590506110ce816110aa565b92915050565b5f819050919050565b6110e6816110d4565b81146110f0575f5ffd5b50565b5f81359050611101816110dd565b92915050565b5f5f6040838503121561111d5761111c611076565b5b5f61112a858286016110c0565b925050602061113b858286016110f3565b9150509250929050565b5f8115159050919050565b61115981611145565b82525050565b5f6020820190506111725f830184611150565b92915050565b611181816110d4565b82525050565b5f60208201905061119a5f830184611178565b92915050565b5f5f5f606084860312156111b7576111b6611076565b5b5f6111c4868287016110c0565b93505060206111d5868287016110c0565b92505060406111e6868287016110f3565b9150509250925092565b5f60ff82169050919050565b611205816111f0565b82525050565b5f60208201905061121e5f8301846111fc565b92915050565b5f6020828403121561123957611238611076565b5b5f611246848285016110c0565b91505092915050565b61125881611099565b82525050565b5f6020820190506112715f83018461124f565b92915050565b5f5f6040838503121561128d5761128c611076565b5b5f61129a858286016110c0565b92505060206112ab858286016110c0565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112f957607f821691505b60208210810361130c5761130b6112b5565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611349826110d4565b9150611354836110d4565b9250828202611362816110d4565b9150828204841483151761137957611378611312565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6113b7826110d4565b91506113c2836110d4565b9250826113d2576113d1611380565b5b828204905092915050565b5f6113e7826110d4565b91506113f2836110d4565b925082820390508181111561140a57611409611312565b5b92915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f611444600f83610ff0565b915061144f82611410565b602082019050919050565b5f6020820190508181035f83015261147181611438565b9050919050565b5f60408201905061148b5f830185611178565b6114986020830184611178565b9392505050565b5f6114a9826110d4565b91506114b4836110d4565b92508282019050808211156114cc576114cb611312565b5b92915050565b5f6060820190506114e55f83018661124f565b6114f26020830185611178565b6114ff6040830184611178565b94935050505056fea2646970667358221220dcd4f0d6d3ff705ce5b2ceabe8c293c2a5f967183545a915e354930126912c7b64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1FB4 CODESIZE SUB DUP1 PUSH2 0x1FB4 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x550 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46616C6C696E6720576564676520546F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4657540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x7E8 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x1B8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 DUP4 GT ISZERO PUSH2 0x183 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A SWAP1 PUSH2 0x98F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH2 0x1AF CALLER DUP6 PUSH2 0x27B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH2 0xA6A JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2EB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x8F6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2FC PUSH0 DUP4 DUP4 PUSH2 0x300 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x350 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x9DA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x41E JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3D9 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x465 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4AF JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x50C SWAP2 SWAP1 PUSH2 0xA51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x52F DUP2 PUSH2 0x51D JUMP JUMPDEST DUP2 EQ PUSH2 0x539 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x54A DUP2 PUSH2 0x526 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x568 JUMPI PUSH2 0x567 PUSH2 0x519 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x575 DUP8 DUP3 DUP9 ADD PUSH2 0x53C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x586 DUP8 DUP3 DUP9 ADD PUSH2 0x53C JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x597 DUP8 DUP3 DUP9 ADD PUSH2 0x53C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x5A8 DUP8 DUP3 DUP9 ADD PUSH2 0x53C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x62F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x642 JUMPI PUSH2 0x641 PUSH2 0x5EB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x6A4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x669 JUMP JUMPDEST PUSH2 0x6AE DUP7 DUP4 PUSH2 0x669 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x6E9 PUSH2 0x6E4 PUSH2 0x6DF DUP5 PUSH2 0x51D JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH2 0x51D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x702 DUP4 PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x716 PUSH2 0x70E DUP3 PUSH2 0x6F0 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x675 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x72D PUSH2 0x71E JUMP JUMPDEST PUSH2 0x738 DUP2 DUP5 DUP5 PUSH2 0x6F9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x75B JUMPI PUSH2 0x750 PUSH0 DUP3 PUSH2 0x725 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x73E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7A0 JUMPI PUSH2 0x771 DUP2 PUSH2 0x648 JUMP JUMPDEST PUSH2 0x77A DUP5 PUSH2 0x65A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x789 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x79D PUSH2 0x795 DUP6 PUSH2 0x65A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x73D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7C0 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7A5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D8 DUP4 DUP4 PUSH2 0x7B1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F1 DUP3 PUSH2 0x5B4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x80A JUMPI PUSH2 0x809 PUSH2 0x5BE JUMP JUMPDEST JUMPDEST PUSH2 0x814 DUP3 SLOAD PUSH2 0x618 JUMP JUMPDEST PUSH2 0x81F DUP3 DUP3 DUP6 PUSH2 0x75F JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x850 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x83E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x848 DUP6 DUP3 PUSH2 0x7CD JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8AF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x85E DUP7 PUSH2 0x648 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x885 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x860 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8A2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x89E PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7B1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x8E0 DUP3 PUSH2 0x8B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8F0 DUP2 PUSH2 0x8D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x909 PUSH0 DUP4 ADD DUP5 PUSH2 0x8E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D696E206275726E20666565206D757374206265203C3D206D6178206275726E PUSH0 DUP3 ADD MSTORE PUSH32 0x2066656500000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x979 PUSH1 0x24 DUP4 PUSH2 0x90F JUMP JUMPDEST SWAP2 POP PUSH2 0x984 DUP3 PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9A6 DUP2 PUSH2 0x96D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x9E4 DUP3 PUSH2 0x51D JUMP JUMPDEST SWAP2 POP PUSH2 0x9EF DUP4 PUSH2 0x51D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA07 JUMPI PUSH2 0xA06 PUSH2 0x9AD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA16 DUP2 PUSH2 0x51D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA2F PUSH0 DUP4 ADD DUP7 PUSH2 0x8E7 JUMP JUMPDEST PUSH2 0xA3C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA0D JUMP JUMPDEST PUSH2 0xA49 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA0D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA64 PUSH0 DUP4 ADD DUP5 PUSH2 0xA0D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x153D DUP1 PUSH2 0xA77 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D158101 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD5B78D77 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5B78D77 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xE17AC3D5 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xECDA10F5 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x333 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x7D158101 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x279 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3C81385C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH2 0x534 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E9 PUSH2 0x849 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F6 DUP2 DUP6 DUP6 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x414 PUSH2 0x769 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 DUP6 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x44D DUP9 DUP9 DUP5 PUSH2 0x862 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x499 DUP9 DUP5 PUSH2 0x890 JUMP JUMPDEST PUSH32 0x1D84B60620D560A5BD3488E3FF622E0142D7CE33ECF7C5D24C17637AC97E048E DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP3 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53C PUSH2 0x90F JUMP JUMPDEST PUSH2 0x545 PUSH0 PUSH2 0x996 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B0 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x60F PUSH2 0x769 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 DUP6 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x647 DUP8 DUP4 PUSH2 0xA59 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69A PUSH2 0x694 PUSH2 0x849 JUMP JUMPDEST DUP5 PUSH2 0x890 JUMP JUMPDEST PUSH32 0x1D84B60620D560A5BD3488E3FF622E0142D7CE33ECF7C5D24C17637AC97E048E DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6CB SWAP3 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH3 0x15180 PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x787 SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x7 SLOAD SWAP1 POP JUMPDEST DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7CD PUSH2 0x90F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x834 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x846 DUP2 PUSH2 0x996 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x85D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA7B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x86C PUSH2 0x849 JUMP JUMPDEST SWAP1 POP PUSH2 0x879 DUP6 DUP3 DUP6 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x884 DUP6 DUP6 DUP6 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x900 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90B DUP3 PUSH0 DUP4 PUSH2 0xDCD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x917 PUSH2 0x849 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x935 PUSH2 0x54D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x994 JUMPI PUSH2 0x958 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA63 PUSH2 0x849 JUMP JUMPDEST SWAP1 POP PUSH2 0xA70 DUP2 DUP6 DUP6 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC44 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC3B SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC55 DUP5 DUP5 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCD7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCC8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA7B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD44 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC8 DUP4 DUP4 DUP4 PUSH2 0xDCD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE1D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEEB JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEA6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF32 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF7C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1028 DUP3 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x1032 DUP2 DUP6 PUSH2 0xFF0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1042 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x104B DUP2 PUSH2 0x100E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106E DUP2 DUP5 PUSH2 0x101E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10A3 DUP3 PUSH2 0x107A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B3 DUP2 PUSH2 0x1099 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CE DUP2 PUSH2 0x10AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E6 DUP2 PUSH2 0x10D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1101 DUP2 PUSH2 0x10DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111C PUSH2 0x1076 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x112A DUP6 DUP3 DUP7 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x113B DUP6 DUP3 DUP7 ADD PUSH2 0x10F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1159 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1172 PUSH0 DUP4 ADD DUP5 PUSH2 0x1150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1181 DUP2 PUSH2 0x10D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x119A PUSH0 DUP4 ADD DUP5 PUSH2 0x1178 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x1076 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11C4 DUP7 DUP3 DUP8 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11D5 DUP7 DUP3 DUP8 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11E6 DUP7 DUP3 DUP8 ADD PUSH2 0x10F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1205 DUP2 PUSH2 0x11F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x121E PUSH0 DUP4 ADD DUP5 PUSH2 0x11FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x1076 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1246 DUP5 DUP3 DUP6 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1258 DUP2 PUSH2 0x1099 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1271 PUSH0 DUP4 ADD DUP5 PUSH2 0x124F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128D JUMPI PUSH2 0x128C PUSH2 0x1076 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129A DUP6 DUP3 DUP7 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AB DUP6 DUP3 DUP7 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x130C JUMPI PUSH2 0x130B PUSH2 0x12B5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1349 DUP3 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1354 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1362 DUP2 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1379 JUMPI PUSH2 0x1378 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13B7 DUP3 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13C2 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1380 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E7 DUP3 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x140A JUMPI PUSH2 0x1409 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1444 PUSH1 0xF DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x144F DUP3 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1471 DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x148B PUSH0 DUP4 ADD DUP6 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x1498 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1178 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A9 DUP3 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B4 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x1312 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14E5 PUSH0 DUP4 ADD DUP7 PUSH2 0x124F JUMP JUMPDEST PUSH2 0x14F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x14FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1178 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xD4 CREATE 0xD6 0xD3 SELFDESTRUCT PUSH17 0x5CE5B2CEABE8C293C2A5F967183545A915 CALLF 0x5493 ADD 0x26 SWAP2 0x2C PUSH28 0x64736F6C634300081D00330000000000000000000000000000000000 ",
							"sourceMap": "571:3245:6:-:0;;;1465:497;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1654:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1699:11:6::2;1684;:26;;1676:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1774:11;1761:10;:24;;;;1808:11;1795:10;:24;;;;1851:20;1829:19;:42;;;;1898:15;1881:14;:32;;;;1923;1929:10;1941:13;1923:5;;;:32;;:::i;:::-;1465:497:::0;;;;571:3245;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:820::-;791:6;799;807;815;864:3;852:9;843:7;839:23;835:33;832:120;;;871:79;;:::i;:::-;832:120;991:1;1016:64;1072:7;1063:6;1052:9;1048:22;1016:64;:::i;:::-;1006:74;;962:128;1129:2;1155:64;1211:7;1202:6;1191:9;1187:22;1155:64;:::i;:::-;1145:74;;1100:129;1268:2;1294:64;1350:7;1341:6;1330:9;1326:22;1294:64;:::i;:::-;1284:74;;1239:129;1407:2;1433:64;1489:7;1480:6;1469:9;1465:22;1433:64;:::i;:::-;1423:74;;1378:129;694:820;;;;;;;:::o;1520:99::-;1572:6;1606:5;1600:12;1590:22;;1520:99;;;:::o;1625:180::-;1673:77;1670:1;1663:88;1770:4;1767:1;1760:15;1794:4;1791:1;1784:15;1811:180;1859:77;1856:1;1849:88;1956:4;1953:1;1946:15;1980:4;1977:1;1970:15;1997:320;2041:6;2078:1;2072:4;2068:12;2058:22;;2125:1;2119:4;2115:12;2146:18;2136:81;;2202:4;2194:6;2190:17;2180:27;;2136:81;2264:2;2256:6;2253:14;2233:18;2230:38;2227:84;;2283:18;;:::i;:::-;2227:84;2048:269;1997:320;;;:::o;2323:141::-;2372:4;2395:3;2387:11;;2418:3;2415:1;2408:14;2452:4;2449:1;2439:18;2431:26;;2323:141;;;:::o;2470:93::-;2507:6;2554:2;2549;2542:5;2538:14;2534:23;2524:33;;2470:93;;;:::o;2569:107::-;2613:8;2663:5;2657:4;2653:16;2632:37;;2569:107;;;;:::o;2682:393::-;2751:6;2801:1;2789:10;2785:18;2824:97;2854:66;2843:9;2824:97;:::i;:::-;2942:39;2972:8;2961:9;2942:39;:::i;:::-;2930:51;;3014:4;3010:9;3003:5;2999:21;2990:30;;3063:4;3053:8;3049:19;3042:5;3039:30;3029:40;;2758:317;;2682:393;;;;;:::o;3081:60::-;3109:3;3130:5;3123:12;;3081:60;;;:::o;3147:142::-;3197:9;3230:53;3248:34;3257:24;3275:5;3257:24;:::i;:::-;3248:34;:::i;:::-;3230:53;:::i;:::-;3217:66;;3147:142;;;:::o;3295:75::-;3338:3;3359:5;3352:12;;3295:75;;;:::o;3376:269::-;3486:39;3517:7;3486:39;:::i;:::-;3547:91;3596:41;3620:16;3596:41;:::i;:::-;3588:6;3581:4;3575:11;3547:91;:::i;:::-;3541:4;3534:105;3452:193;3376:269;;;:::o;3651:73::-;3696:3;3717:1;3710:8;;3651:73;:::o;3730:189::-;3807:32;;:::i;:::-;3848:65;3906:6;3898;3892:4;3848:65;:::i;:::-;3783:136;3730:189;;:::o;3925:186::-;3985:120;4002:3;3995:5;3992:14;3985:120;;;4056:39;4093:1;4086:5;4056:39;:::i;:::-;4029:1;4022:5;4018:13;4009:22;;3985:120;;;3925:186;;:::o;4117:543::-;4218:2;4213:3;4210:11;4207:446;;;4252:38;4284:5;4252:38;:::i;:::-;4336:29;4354:10;4336:29;:::i;:::-;4326:8;4322:44;4519:2;4507:10;4504:18;4501:49;;;4540:8;4525:23;;4501:49;4563:80;4619:22;4637:3;4619:22;:::i;:::-;4609:8;4605:37;4592:11;4563:80;:::i;:::-;4222:431;;4207:446;4117:543;;;:::o;4666:117::-;4720:8;4770:5;4764:4;4760:16;4739:37;;4666:117;;;;:::o;4789:169::-;4833:6;4866:51;4914:1;4910:6;4902:5;4899:1;4895:13;4866:51;:::i;:::-;4862:56;4947:4;4941;4937:15;4927:25;;4840:118;4789:169;;;;:::o;4963:295::-;5039:4;5185:29;5210:3;5204:4;5185:29;:::i;:::-;5177:37;;5247:3;5244:1;5240:11;5234:4;5231:21;5223:29;;4963:295;;;;:::o;5263:1395::-;5380:37;5413:3;5380:37;:::i;:::-;5482:18;5474:6;5471:30;5468:56;;;5504:18;;:::i;:::-;5468:56;5548:38;5580:4;5574:11;5548:38;:::i;:::-;5633:67;5693:6;5685;5679:4;5633:67;:::i;:::-;5727:1;5751:4;5738:17;;5783:2;5775:6;5772:14;5800:1;5795:618;;;;6457:1;6474:6;6471:77;;;6523:9;6518:3;6514:19;6508:26;6499:35;;6471:77;6574:67;6634:6;6627:5;6574:67;:::i;:::-;6568:4;6561:81;6430:222;5765:887;;5795:618;5847:4;5843:9;5835:6;5831:22;5881:37;5913:4;5881:37;:::i;:::-;5940:1;5954:208;5968:7;5965:1;5962:14;5954:208;;;6047:9;6042:3;6038:19;6032:26;6024:6;6017:42;6098:1;6090:6;6086:14;6076:24;;6145:2;6134:9;6130:18;6117:31;;5991:4;5988:1;5984:12;5979:17;;5954:208;;;6190:6;6181:7;6178:19;6175:179;;;6248:9;6243:3;6239:19;6233:26;6291:48;6333:4;6325:6;6321:17;6310:9;6291:48;:::i;:::-;6283:6;6276:64;6198:156;6175:179;6400:1;6396;6388:6;6384:14;6380:22;6374:4;6367:36;5802:611;;;5765:887;;5355:1303;;;5263:1395;;:::o;6664:126::-;6701:7;6741:42;6734:5;6730:54;6719:65;;6664:126;;;:::o;6796:96::-;6833:7;6862:24;6880:5;6862:24;:::i;:::-;6851:35;;6796:96;;;:::o;6898:118::-;6985:24;7003:5;6985:24;:::i;:::-;6980:3;6973:37;6898:118;;:::o;7022:222::-;7115:4;7153:2;7142:9;7138:18;7130:26;;7166:71;7234:1;7223:9;7219:17;7210:6;7166:71;:::i;:::-;7022:222;;;;:::o;7250:169::-;7334:11;7368:6;7363:3;7356:19;7408:4;7403:3;7399:14;7384:29;;7250:169;;;;:::o;7425:223::-;7565:34;7561:1;7553:6;7549:14;7542:58;7634:6;7629:2;7621:6;7617:15;7610:31;7425:223;:::o;7654:366::-;7796:3;7817:67;7881:2;7876:3;7817:67;:::i;:::-;7810:74;;7893:93;7982:3;7893:93;:::i;:::-;8011:2;8006:3;8002:12;7995:19;;7654:366;;;:::o;8026:419::-;8192:4;8230:2;8219:9;8215:18;8207:26;;8279:9;8273:4;8269:20;8265:1;8254:9;8250:17;8243:47;8307:131;8433:4;8307:131;:::i;:::-;8299:139;;8026:419;;;:::o;8451:180::-;8499:77;8496:1;8489:88;8596:4;8593:1;8586:15;8620:4;8617:1;8610:15;8637:191;8677:3;8696:20;8714:1;8696:20;:::i;:::-;8691:25;;8730:20;8748:1;8730:20;:::i;:::-;8725:25;;8773:1;8770;8766:9;8759:16;;8794:3;8791:1;8788:10;8785:36;;;8801:18;;:::i;:::-;8785:36;8637:191;;;;:::o;8834:118::-;8921:24;8939:5;8921:24;:::i;:::-;8916:3;8909:37;8834:118;;:::o;8958:442::-;9107:4;9145:2;9134:9;9130:18;9122:26;;9158:71;9226:1;9215:9;9211:17;9202:6;9158:71;:::i;:::-;9239:72;9307:2;9296:9;9292:18;9283:6;9239:72;:::i;:::-;9321;9389:2;9378:9;9374:18;9365:6;9321:72;:::i;:::-;8958:442;;;;;;:::o;9406:222::-;9499:4;9537:2;9526:9;9522:18;9514:26;;9550:71;9618:1;9607:9;9603:17;9594:6;9550:71;:::i;:::-;9406:222;;;;:::o;571:3245:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2128,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 2683,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_672": {
									"entryPoint": 2192,
									"id": 672,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2319,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 2121,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 3146,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2454,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 3293,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3533,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1767,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 991,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1263,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnFeeIncreaseRate_948": {
									"entryPoint": 1351,
									"id": 948,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentBurnFee_1044": {
									"entryPoint": 1897,
									"id": 1044,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1249,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deploymentTime_950": {
									"entryPoint": 1983,
									"id": 950,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@maxBurnFee_946": {
									"entryPoint": 1257,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minBurnFee_944": {
									"entryPoint": 1761,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 847,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1357,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 1332,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1397,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1025,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1162": {
									"entryPoint": 1034,
									"id": 1162,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 2146,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 1989,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1102": {
									"entryPoint": 1541,
									"id": 1102,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 2649,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4644,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4472,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5330,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 4927,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4096,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 4992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4214,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51": {
									"entryPoint": 5136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4266,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9552:7",
										"nodeType": "YulBlock",
										"src": "0:9552:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3791:519:7",
													"nodeType": "YulBlock",
													"src": "3791:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:7",
																"nodeType": "YulBlock",
																"src": "3837:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:7"
																			},
																			"nativeSrc": "3839:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:7"
																		},
																		"nativeSrc": "3839:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:7"
																		},
																		"nativeSrc": "3808:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:7"
																},
																"nativeSrc": "3804:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:7"
															},
															"nativeSrc": "3801:119:7",
															"nodeType": "YulIf",
															"src": "3801:119:7"
														},
														{
															"nativeSrc": "3930:117:7",
															"nodeType": "YulBlock",
															"src": "3930:117:7",
															"statements": [
																{
																	"nativeSrc": "3945:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:7"
																				},
																				"nativeSrc": "4005:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:7"
																		},
																		"nativeSrc": "3984:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:7",
															"nodeType": "YulBlock",
															"src": "4057:118:7",
															"statements": [
																{
																	"nativeSrc": "4072:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:7"
																				},
																				"nativeSrc": "4133:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:7"
																		},
																		"nativeSrc": "4112:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:7",
															"nodeType": "YulBlock",
															"src": "4185:118:7",
															"statements": [
																{
																	"nativeSrc": "4200:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:7"
																				},
																				"nativeSrc": "4261:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:7"
																		},
																		"nativeSrc": "4240:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:7",
														"nodeType": "YulTypedName",
														"src": "3745:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:7",
														"nodeType": "YulTypedName",
														"src": "3756:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:7",
														"nodeType": "YulTypedName",
														"src": "3768:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:7",
														"nodeType": "YulTypedName",
														"src": "3776:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:7",
														"nodeType": "YulTypedName",
														"src": "3784:6:7",
														"type": ""
													}
												],
												"src": "3691:619:7"
											},
											{
												"body": {
													"nativeSrc": "4359:43:7",
													"nodeType": "YulBlock",
													"src": "4359:43:7",
													"statements": [
														{
															"nativeSrc": "4369:27:7",
															"nodeType": "YulAssignment",
															"src": "4369:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:7",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:7"
																},
																"nativeSrc": "4380:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:7",
														"nodeType": "YulTypedName",
														"src": "4341:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:7",
														"nodeType": "YulTypedName",
														"src": "4351:7:7",
														"type": ""
													}
												],
												"src": "4316:86:7"
											},
											{
												"body": {
													"nativeSrc": "4469:51:7",
													"nodeType": "YulBlock",
													"src": "4469:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:7"
																		},
																		"nativeSrc": "4491:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nativeSrc": "4479:35:7",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:7"
															},
															"nativeSrc": "4479:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:7",
														"nodeType": "YulTypedName",
														"src": "4457:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:7",
														"nodeType": "YulTypedName",
														"src": "4464:3:7",
														"type": ""
													}
												],
												"src": "4408:112:7"
											},
											{
												"body": {
													"nativeSrc": "4620:120:7",
													"nodeType": "YulBlock",
													"src": "4620:120:7",
													"statements": [
														{
															"nativeSrc": "4630:26:7",
															"nodeType": "YulAssignment",
															"src": "4630:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:7"
																},
																"nativeSrc": "4638:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:7"
																		},
																		"nativeSrc": "4715:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:7"
																},
																"nativeSrc": "4666:67:7",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:7"
															},
															"nativeSrc": "4666:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:7",
														"nodeType": "YulTypedName",
														"src": "4592:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:7",
														"nodeType": "YulTypedName",
														"src": "4604:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:7",
														"nodeType": "YulTypedName",
														"src": "4615:4:7",
														"type": ""
													}
												],
												"src": "4526:214:7"
											},
											{
												"body": {
													"nativeSrc": "4812:263:7",
													"nodeType": "YulBlock",
													"src": "4812:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:7",
																"nodeType": "YulBlock",
																"src": "4858:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:7"
																			},
																			"nativeSrc": "4860:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:7"
																		},
																		"nativeSrc": "4860:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:7"
																		},
																		"nativeSrc": "4829:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:7"
																},
																"nativeSrc": "4825:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:7"
															},
															"nativeSrc": "4822:119:7",
															"nodeType": "YulIf",
															"src": "4822:119:7"
														},
														{
															"nativeSrc": "4951:117:7",
															"nodeType": "YulBlock",
															"src": "4951:117:7",
															"statements": [
																{
																	"nativeSrc": "4966:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:7"
																				},
																				"nativeSrc": "5026:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:7"
																		},
																		"nativeSrc": "5005:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:7",
														"nodeType": "YulTypedName",
														"src": "4782:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:7",
														"nodeType": "YulTypedName",
														"src": "4793:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:7",
														"nodeType": "YulTypedName",
														"src": "4805:6:7",
														"type": ""
													}
												],
												"src": "4746:329:7"
											},
											{
												"body": {
													"nativeSrc": "5146:53:7",
													"nodeType": "YulBlock",
													"src": "5146:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5163:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5186:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5186:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5168:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5168:17:7"
																		},
																		"nativeSrc": "5168:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5156:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5156:6:7"
																},
																"nativeSrc": "5156:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5156:37:7"
															},
															"nativeSrc": "5156:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5156:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5081:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:7",
														"nodeType": "YulTypedName",
														"src": "5134:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5141:3:7",
														"nodeType": "YulTypedName",
														"src": "5141:3:7",
														"type": ""
													}
												],
												"src": "5081:118:7"
											},
											{
												"body": {
													"nativeSrc": "5303:124:7",
													"nodeType": "YulBlock",
													"src": "5303:124:7",
													"statements": [
														{
															"nativeSrc": "5313:26:7",
															"nodeType": "YulAssignment",
															"src": "5313:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5325:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5325:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5336:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5336:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5321:3:7"
																},
																"nativeSrc": "5321:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5321:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5313:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5313:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5393:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5393:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5406:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5406:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5417:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5417:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5402:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5402:3:7"
																		},
																		"nativeSrc": "5402:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5349:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5349:43:7"
																},
																"nativeSrc": "5349:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5349:71:7"
															},
															"nativeSrc": "5349:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5349:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5205:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5275:9:7",
														"nodeType": "YulTypedName",
														"src": "5275:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5287:6:7",
														"nodeType": "YulTypedName",
														"src": "5287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5298:4:7",
														"nodeType": "YulTypedName",
														"src": "5298:4:7",
														"type": ""
													}
												],
												"src": "5205:222:7"
											},
											{
												"body": {
													"nativeSrc": "5516:391:7",
													"nodeType": "YulBlock",
													"src": "5516:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "5562:83:7",
																"nodeType": "YulBlock",
																"src": "5562:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5564:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:7"
																			},
																			"nativeSrc": "5564:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:7"
																		},
																		"nativeSrc": "5564:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5537:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5537:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5546:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5546:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5533:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:7"
																		},
																		"nativeSrc": "5533:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5558:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5558:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5529:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:7"
																},
																"nativeSrc": "5529:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5529:32:7"
															},
															"nativeSrc": "5526:119:7",
															"nodeType": "YulIf",
															"src": "5526:119:7"
														},
														{
															"nativeSrc": "5655:117:7",
															"nodeType": "YulBlock",
															"src": "5655:117:7",
															"statements": [
																{
																	"nativeSrc": "5670:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5670:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5684:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5684:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5674:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5674:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5699:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5699:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5734:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5734:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5745:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5745:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5730:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5730:3:7"
																				},
																				"nativeSrc": "5730:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5730:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5754:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5754:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5709:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5709:20:7"
																		},
																		"nativeSrc": "5709:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5699:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5699:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5782:118:7",
															"nodeType": "YulBlock",
															"src": "5782:118:7",
															"statements": [
																{
																	"nativeSrc": "5797:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5797:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5811:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5811:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5801:6:7",
																			"nodeType": "YulTypedName",
																			"src": "5801:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5827:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5827:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5862:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5862:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5873:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5873:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5858:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5858:3:7"
																				},
																				"nativeSrc": "5858:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5858:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5882:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5882:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5837:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5837:20:7"
																		},
																		"nativeSrc": "5837:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5837:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5827:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5827:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5433:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5489:7:7",
														"nodeType": "YulTypedName",
														"src": "5489:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5501:6:7",
														"nodeType": "YulTypedName",
														"src": "5501:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5509:6:7",
														"nodeType": "YulTypedName",
														"src": "5509:6:7",
														"type": ""
													}
												],
												"src": "5433:474:7"
											},
											{
												"body": {
													"nativeSrc": "5941:152:7",
													"nodeType": "YulBlock",
													"src": "5941:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5958:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:77:7",
																		"nodeType": "YulLiteral",
																		"src": "5961:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:7"
																},
																"nativeSrc": "5951:88:7",
																"nodeType": "YulFunctionCall",
																"src": "5951:88:7"
															},
															"nativeSrc": "5951:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "5951:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6055:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6055:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6058:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6058:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6048:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6048:6:7"
																},
																"nativeSrc": "6048:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6048:15:7"
															},
															"nativeSrc": "6048:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6048:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6079:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6079:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6082:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6082:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6072:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6072:6:7"
																},
																"nativeSrc": "6072:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6072:15:7"
															},
															"nativeSrc": "6072:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6072:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5913:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5913:180:7"
											},
											{
												"body": {
													"nativeSrc": "6150:269:7",
													"nodeType": "YulBlock",
													"src": "6150:269:7",
													"statements": [
														{
															"nativeSrc": "6160:22:7",
															"nodeType": "YulAssignment",
															"src": "6160:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6174:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6174:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6180:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6180:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6170:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6170:3:7"
																},
																"nativeSrc": "6170:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6170:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6160:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6160:6:7"
																}
															]
														},
														{
															"nativeSrc": "6191:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6191:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6221:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6221:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6227:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6227:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6217:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6217:3:7"
																},
																"nativeSrc": "6217:12:7",
																"nodeType": "YulFunctionCall",
																"src": "6217:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "6195:18:7",
																	"nodeType": "YulTypedName",
																	"src": "6195:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6268:51:7",
																"nodeType": "YulBlock",
																"src": "6268:51:7",
																"statements": [
																	{
																		"nativeSrc": "6282:27:7",
																		"nodeType": "YulAssignment",
																		"src": "6282:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "6296:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6296:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6304:4:7",
																					"nodeType": "YulLiteral",
																					"src": "6304:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "6292:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "6292:3:7"
																			},
																			"nativeSrc": "6292:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6292:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "6282:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6282:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6248:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6248:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6241:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6241:6:7"
																},
																"nativeSrc": "6241:26:7",
																"nodeType": "YulFunctionCall",
																"src": "6241:26:7"
															},
															"nativeSrc": "6238:81:7",
															"nodeType": "YulIf",
															"src": "6238:81:7"
														},
														{
															"body": {
																"nativeSrc": "6371:42:7",
																"nodeType": "YulBlock",
																"src": "6371:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6385:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6385:16:7"
																			},
																			"nativeSrc": "6385:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6385:18:7"
																		},
																		"nativeSrc": "6385:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6385:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "6335:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "6335:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6358:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6358:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6366:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6366:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6355:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6355:2:7"
																		},
																		"nativeSrc": "6355:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6355:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "6332:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6332:2:7"
																},
																"nativeSrc": "6332:38:7",
																"nodeType": "YulFunctionCall",
																"src": "6332:38:7"
															},
															"nativeSrc": "6329:84:7",
															"nodeType": "YulIf",
															"src": "6329:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "6099:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6134:4:7",
														"nodeType": "YulTypedName",
														"src": "6134:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6143:6:7",
														"nodeType": "YulTypedName",
														"src": "6143:6:7",
														"type": ""
													}
												],
												"src": "6099:320:7"
											},
											{
												"body": {
													"nativeSrc": "6453:152:7",
													"nodeType": "YulBlock",
													"src": "6453:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6470:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6470:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6473:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6473:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6463:6:7"
																},
																"nativeSrc": "6463:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6463:88:7"
															},
															"nativeSrc": "6463:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6463:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6567:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6567:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6570:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6570:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:7"
																},
																"nativeSrc": "6560:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6560:15:7"
															},
															"nativeSrc": "6560:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6560:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6591:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6591:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6594:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6594:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6584:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6584:6:7"
																},
																"nativeSrc": "6584:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6584:15:7"
															},
															"nativeSrc": "6584:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6584:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6425:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6425:180:7"
											},
											{
												"body": {
													"nativeSrc": "6659:362:7",
													"nodeType": "YulBlock",
													"src": "6659:362:7",
													"statements": [
														{
															"nativeSrc": "6669:25:7",
															"nodeType": "YulAssignment",
															"src": "6669:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6692:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6692:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6674:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6674:17:7"
																},
																"nativeSrc": "6674:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6674:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6669:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6669:1:7"
																}
															]
														},
														{
															"nativeSrc": "6703:25:7",
															"nodeType": "YulAssignment",
															"src": "6703:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6726:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6726:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6708:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6708:17:7"
																},
																"nativeSrc": "6708:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6708:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6703:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "6703:1:7"
																}
															]
														},
														{
															"nativeSrc": "6737:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6737:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6760:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6760:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6763:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "6763:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6756:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:7"
																},
																"nativeSrc": "6756:9:7",
																"nodeType": "YulFunctionCall",
																"src": "6756:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6741:11:7",
																	"nodeType": "YulTypedName",
																	"src": "6741:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6774:41:7",
															"nodeType": "YulAssignment",
															"src": "6774:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6803:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "6803:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6785:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "6785:17:7"
																},
																"nativeSrc": "6785:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6785:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6774:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "6774:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6992:22:7",
																"nodeType": "YulBlock",
																"src": "6992:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6994:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6994:16:7"
																			},
																			"nativeSrc": "6994:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6994:18:7"
																		},
																		"nativeSrc": "6994:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6994:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6925:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "6925:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6918:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6918:6:7"
																				},
																				"nativeSrc": "6918:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6918:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6948:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "6948:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6955:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "6955:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6964:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "6964:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6951:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "6951:3:7"
																						},
																						"nativeSrc": "6951:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "6951:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6945:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "6945:2:7"
																				},
																				"nativeSrc": "6945:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6945:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6898:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6898:2:7"
																		},
																		"nativeSrc": "6898:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6898:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6878:6:7"
																},
																"nativeSrc": "6878:113:7",
																"nodeType": "YulFunctionCall",
																"src": "6878:113:7"
															},
															"nativeSrc": "6875:139:7",
															"nodeType": "YulIf",
															"src": "6875:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6611:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6642:1:7",
														"nodeType": "YulTypedName",
														"src": "6642:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6645:1:7",
														"nodeType": "YulTypedName",
														"src": "6645:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6651:7:7",
														"nodeType": "YulTypedName",
														"src": "6651:7:7",
														"type": ""
													}
												],
												"src": "6611:410:7"
											},
											{
												"body": {
													"nativeSrc": "7055:152:7",
													"nodeType": "YulBlock",
													"src": "7055:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7072:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7072:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7075:77:7",
																		"nodeType": "YulLiteral",
																		"src": "7075:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7065:6:7"
																},
																"nativeSrc": "7065:88:7",
																"nodeType": "YulFunctionCall",
																"src": "7065:88:7"
															},
															"nativeSrc": "7065:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "7065:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7172:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7172:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7162:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7162:6:7"
																},
																"nativeSrc": "7162:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7162:15:7"
															},
															"nativeSrc": "7162:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7162:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7193:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7193:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7196:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7196:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7186:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7186:6:7"
																},
																"nativeSrc": "7186:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7186:15:7"
															},
															"nativeSrc": "7186:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "7186:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "7027:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7027:180:7"
											},
											{
												"body": {
													"nativeSrc": "7255:143:7",
													"nodeType": "YulBlock",
													"src": "7255:143:7",
													"statements": [
														{
															"nativeSrc": "7265:25:7",
															"nodeType": "YulAssignment",
															"src": "7265:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7288:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7288:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7270:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7270:17:7"
																},
																"nativeSrc": "7270:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7270:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7265:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7265:1:7"
																}
															]
														},
														{
															"nativeSrc": "7299:25:7",
															"nodeType": "YulAssignment",
															"src": "7299:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7322:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7322:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7304:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7304:17:7"
																},
																"nativeSrc": "7304:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7304:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7299:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7299:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7346:22:7",
																"nodeType": "YulBlock",
																"src": "7346:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "7348:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7348:16:7"
																			},
																			"nativeSrc": "7348:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7348:18:7"
																		},
																		"nativeSrc": "7348:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7348:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7343:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7343:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7336:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7336:6:7"
																},
																"nativeSrc": "7336:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7336:9:7"
															},
															"nativeSrc": "7333:35:7",
															"nodeType": "YulIf",
															"src": "7333:35:7"
														},
														{
															"nativeSrc": "7378:14:7",
															"nodeType": "YulAssignment",
															"src": "7378:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7387:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7387:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7390:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7390:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7383:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7383:3:7"
																},
																"nativeSrc": "7383:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7383:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7378:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7378:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "7213:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7244:1:7",
														"nodeType": "YulTypedName",
														"src": "7244:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7247:1:7",
														"nodeType": "YulTypedName",
														"src": "7247:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "7253:1:7",
														"nodeType": "YulTypedName",
														"src": "7253:1:7",
														"type": ""
													}
												],
												"src": "7213:185:7"
											},
											{
												"body": {
													"nativeSrc": "7449:149:7",
													"nodeType": "YulBlock",
													"src": "7449:149:7",
													"statements": [
														{
															"nativeSrc": "7459:25:7",
															"nodeType": "YulAssignment",
															"src": "7459:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7482:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7482:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7464:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7464:17:7"
																},
																"nativeSrc": "7464:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7464:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7459:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7459:1:7"
																}
															]
														},
														{
															"nativeSrc": "7493:25:7",
															"nodeType": "YulAssignment",
															"src": "7493:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7516:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7516:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7498:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "7498:17:7"
																},
																"nativeSrc": "7498:20:7",
																"nodeType": "YulFunctionCall",
																"src": "7498:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7493:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "7493:1:7"
																}
															]
														},
														{
															"nativeSrc": "7527:17:7",
															"nodeType": "YulAssignment",
															"src": "7527:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7539:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7539:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7542:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7542:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7535:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7535:3:7"
																},
																"nativeSrc": "7535:9:7",
																"nodeType": "YulFunctionCall",
																"src": "7535:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7527:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7527:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7569:22:7",
																"nodeType": "YulBlock",
																"src": "7569:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7571:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "7571:16:7"
																			},
																			"nativeSrc": "7571:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7571:18:7"
																		},
																		"nativeSrc": "7571:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7571:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7560:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7560:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7566:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "7566:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7557:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7557:2:7"
																},
																"nativeSrc": "7557:11:7",
																"nodeType": "YulFunctionCall",
																"src": "7557:11:7"
															},
															"nativeSrc": "7554:37:7",
															"nodeType": "YulIf",
															"src": "7554:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7404:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7435:1:7",
														"nodeType": "YulTypedName",
														"src": "7435:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7438:1:7",
														"nodeType": "YulTypedName",
														"src": "7438:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7444:4:7",
														"nodeType": "YulTypedName",
														"src": "7444:4:7",
														"type": ""
													}
												],
												"src": "7404:194:7"
											},
											{
												"body": {
													"nativeSrc": "7710:59:7",
													"nodeType": "YulBlock",
													"src": "7710:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7732:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7732:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7740:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7740:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7728:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7728:3:7"
																		},
																		"nativeSrc": "7728:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7728:14:7"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "7744:17:7",
																		"nodeType": "YulLiteral",
																		"src": "7744:17:7",
																		"type": "",
																		"value": "Transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7721:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7721:6:7"
																},
																"nativeSrc": "7721:41:7",
																"nodeType": "YulFunctionCall",
																"src": "7721:41:7"
															},
															"nativeSrc": "7721:41:7",
															"nodeType": "YulExpressionStatement",
															"src": "7721:41:7"
														}
													]
												},
												"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
												"nativeSrc": "7604:165:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7702:6:7",
														"nodeType": "YulTypedName",
														"src": "7702:6:7",
														"type": ""
													}
												],
												"src": "7604:165:7"
											},
											{
												"body": {
													"nativeSrc": "7921:220:7",
													"nodeType": "YulBlock",
													"src": "7921:220:7",
													"statements": [
														{
															"nativeSrc": "7931:74:7",
															"nodeType": "YulAssignment",
															"src": "7931:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7997:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7997:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8002:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:7",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7938:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7938:58:7"
																},
																"nativeSrc": "7938:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7938:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7931:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7931:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8103:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8103:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																	"nativeSrc": "8014:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "8014:88:7"
																},
																"nativeSrc": "8014:93:7",
																"nodeType": "YulFunctionCall",
																"src": "8014:93:7"
															},
															"nativeSrc": "8014:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "8014:93:7"
														},
														{
															"nativeSrc": "8116:19:7",
															"nodeType": "YulAssignment",
															"src": "8116:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8127:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8127:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8132:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8132:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8123:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8123:3:7"
																},
																"nativeSrc": "8123:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8123:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8116:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7775:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7909:3:7",
														"nodeType": "YulTypedName",
														"src": "7909:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7917:3:7",
														"nodeType": "YulTypedName",
														"src": "7917:3:7",
														"type": ""
													}
												],
												"src": "7775:366:7"
											},
											{
												"body": {
													"nativeSrc": "8318:248:7",
													"nodeType": "YulBlock",
													"src": "8318:248:7",
													"statements": [
														{
															"nativeSrc": "8328:26:7",
															"nodeType": "YulAssignment",
															"src": "8328:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8340:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8340:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8351:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8351:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8336:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8336:3:7"
																},
																"nativeSrc": "8336:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8336:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8328:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8328:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8375:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8375:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8386:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8386:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8371:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:7"
																		},
																		"nativeSrc": "8371:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8371:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8394:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8394:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8400:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8400:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8390:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8390:3:7"
																		},
																		"nativeSrc": "8390:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8364:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:7"
																},
																"nativeSrc": "8364:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8364:47:7"
															},
															"nativeSrc": "8364:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8364:47:7"
														},
														{
															"nativeSrc": "8420:139:7",
															"nodeType": "YulAssignment",
															"src": "8420:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8554:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8554:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8428:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8428:124:7"
																},
																"nativeSrc": "8428:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8428:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8420:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8420:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8147:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8298:9:7",
														"nodeType": "YulTypedName",
														"src": "8298:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8313:4:7",
														"nodeType": "YulTypedName",
														"src": "8313:4:7",
														"type": ""
													}
												],
												"src": "8147:419:7"
											},
											{
												"body": {
													"nativeSrc": "8698:206:7",
													"nodeType": "YulBlock",
													"src": "8698:206:7",
													"statements": [
														{
															"nativeSrc": "8708:26:7",
															"nodeType": "YulAssignment",
															"src": "8708:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8720:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8720:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8731:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8731:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8716:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8716:3:7"
																},
																"nativeSrc": "8716:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8716:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8708:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8708:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8788:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8788:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8801:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8801:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8812:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8812:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8797:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8797:3:7"
																		},
																		"nativeSrc": "8797:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8797:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8744:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8744:43:7"
																},
																"nativeSrc": "8744:71:7",
																"nodeType": "YulFunctionCall",
																"src": "8744:71:7"
															},
															"nativeSrc": "8744:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "8744:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8869:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8869:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8882:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8882:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8893:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8893:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8878:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8878:3:7"
																		},
																		"nativeSrc": "8878:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8878:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8825:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "8825:43:7"
																},
																"nativeSrc": "8825:72:7",
																"nodeType": "YulFunctionCall",
																"src": "8825:72:7"
															},
															"nativeSrc": "8825:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "8825:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8572:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8662:9:7",
														"nodeType": "YulTypedName",
														"src": "8662:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8674:6:7",
														"nodeType": "YulTypedName",
														"src": "8674:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8682:6:7",
														"nodeType": "YulTypedName",
														"src": "8682:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8693:4:7",
														"nodeType": "YulTypedName",
														"src": "8693:4:7",
														"type": ""
													}
												],
												"src": "8572:332:7"
											},
											{
												"body": {
													"nativeSrc": "8954:147:7",
													"nodeType": "YulBlock",
													"src": "8954:147:7",
													"statements": [
														{
															"nativeSrc": "8964:25:7",
															"nodeType": "YulAssignment",
															"src": "8964:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8987:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8987:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8969:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8969:17:7"
																},
																"nativeSrc": "8969:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8969:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8964:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8964:1:7"
																}
															]
														},
														{
															"nativeSrc": "8998:25:7",
															"nodeType": "YulAssignment",
															"src": "8998:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9021:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9021:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9003:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9003:17:7"
																},
																"nativeSrc": "9003:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9003:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8998:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8998:1:7"
																}
															]
														},
														{
															"nativeSrc": "9032:16:7",
															"nodeType": "YulAssignment",
															"src": "9032:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9043:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9043:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9046:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9046:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9039:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9039:3:7"
																},
																"nativeSrc": "9039:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9039:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9032:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9032:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9072:22:7",
																"nodeType": "YulBlock",
																"src": "9072:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9074:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9074:16:7"
																			},
																			"nativeSrc": "9074:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9074:18:7"
																		},
																		"nativeSrc": "9074:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9074:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9064:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9064:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9067:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9067:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9061:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9061:2:7"
																},
																"nativeSrc": "9061:10:7",
																"nodeType": "YulFunctionCall",
																"src": "9061:10:7"
															},
															"nativeSrc": "9058:36:7",
															"nodeType": "YulIf",
															"src": "9058:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8910:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8941:1:7",
														"nodeType": "YulTypedName",
														"src": "8941:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8944:1:7",
														"nodeType": "YulTypedName",
														"src": "8944:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8950:3:7",
														"nodeType": "YulTypedName",
														"src": "8950:3:7",
														"type": ""
													}
												],
												"src": "8910:191:7"
											},
											{
												"body": {
													"nativeSrc": "9261:288:7",
													"nodeType": "YulBlock",
													"src": "9261:288:7",
													"statements": [
														{
															"nativeSrc": "9271:26:7",
															"nodeType": "YulAssignment",
															"src": "9271:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9283:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9283:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9294:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9294:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9279:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9279:3:7"
																},
																"nativeSrc": "9279:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9279:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9271:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9271:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9351:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9351:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9364:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9364:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9375:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9375:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9360:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9360:3:7"
																		},
																		"nativeSrc": "9360:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9360:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9307:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9307:43:7"
																},
																"nativeSrc": "9307:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9307:71:7"
															},
															"nativeSrc": "9307:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9307:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9432:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9432:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9445:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9445:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9456:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9456:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9441:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9441:3:7"
																		},
																		"nativeSrc": "9441:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9441:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9388:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9388:43:7"
																},
																"nativeSrc": "9388:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9388:72:7"
															},
															"nativeSrc": "9388:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9388:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9514:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9514:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9527:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9527:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9538:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9538:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9523:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9523:3:7"
																		},
																		"nativeSrc": "9523:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9523:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9470:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9470:43:7"
																},
																"nativeSrc": "9470:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9470:72:7"
															},
															"nativeSrc": "9470:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9470:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9107:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9217:9:7",
														"nodeType": "YulTypedName",
														"src": "9217:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9229:6:7",
														"nodeType": "YulTypedName",
														"src": "9229:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9237:6:7",
														"nodeType": "YulTypedName",
														"src": "9237:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9245:6:7",
														"nodeType": "YulTypedName",
														"src": "9245:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9256:4:7",
														"nodeType": "YulTypedName",
														"src": "9256:4:7",
														"type": ""
													}
												],
												"src": "9107:442:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c80637d158101116100a0578063d5b78d771161006f578063d5b78d77146102a9578063dd62ed3e146102c7578063e17ac3d5146102f7578063ecda10f514610315578063f2fde38b1461033357610109565b80637d1581011461021f5780638da5cb5b1461023d57806395d89b411461025b578063a9059cbb1461027957610109565b8063313ce567116100dc578063313ce567146101a95780633c81385c146101c757806370a08231146101e5578063715018a61461021557610109565b806306fdde031461010d578063095ea7b31461012b57806318160ddd1461015b57806323b872dd14610179575b5f5ffd5b61011561034f565b6040516101229190611056565b60405180910390f35b61014560048036038101906101409190611107565b6103df565b604051610152919061115f565b60405180910390f35b610163610401565b6040516101709190611187565b60405180910390f35b610193600480360381019061018e91906111a0565b61040a565b6040516101a0919061115f565b60405180910390f35b6101b16104e1565b6040516101be919061120b565b60405180910390f35b6101cf6104e9565b6040516101dc9190611187565b60405180910390f35b6101ff60048036038101906101fa9190611224565b6104ef565b60405161020c9190611187565b60405180910390f35b61021d610534565b005b610227610547565b6040516102349190611187565b60405180910390f35b61024561054d565b604051610252919061125e565b60405180910390f35b610263610575565b6040516102709190611056565b60405180910390f35b610293600480360381019061028e9190611107565b610605565b6040516102a0919061115f565b60405180910390f35b6102b16106e1565b6040516102be9190611187565b60405180910390f35b6102e160048036038101906102dc9190611277565b6106e7565b6040516102ee9190611187565b60405180910390f35b6102ff610769565b60405161030c9190611187565b60405180910390f35b61031d6107bf565b60405161032a9190611187565b60405180910390f35b61034d60048036038101906103489190611224565b6107c5565b005b60606003805461035e906112e2565b80601f016020809104026020016040519081016040528092919081815260200182805461038a906112e2565b80156103d55780601f106103ac576101008083540402835291602001916103d5565b820191905f5260205f20905b8154815290600101906020018083116103b857829003601f168201915b5050505050905090565b5f5f6103e9610849565b90506103f6818585610850565b600191505092915050565b5f600254905090565b5f5f610414610769565b90505f6127108285610426919061133f565b61043091906113ad565b90505f818561043f91906113dd565b90505f61044d888884610862565b90508061048f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104869061145a565b60405180910390fd5b6104998884610890565b7f1d84b60620d560a5bd3488e3ff622e0142d7ce33ecf7c5d24c17637ac97e048e84846040516104ca929190611478565b60405180910390a160019450505050509392505050565b5f6012905090565b60075481565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61053c61090f565b6105455f610996565b565b60085481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610584906112e2565b80601f01602080910402602001604051908101604052809291908181526020018280546105b0906112e2565b80156105fb5780601f106105d2576101008083540402835291602001916105fb565b820191905f5260205f20905b8154815290600101906020018083116105de57829003601f168201915b5050505050905090565b5f5f61060f610769565b90505f6127108285610621919061133f565b61062b91906113ad565b90505f818561063a91906113dd565b90505f6106478783610a59565b905080610689576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106809061145a565b60405180910390fd5b61069a610694610849565b84610890565b7f1d84b60620d560a5bd3488e3ff622e0142d7ce33ecf7c5d24c17637ac97e048e84846040516106cb929190611478565b60405180910390a1600194505050505092915050565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f5f620151806009544261077d91906113dd565b61078791906113ad565b90505f60085482610798919061133f565b6006546107a5919061149f565b90506007548111156107b75760075490505b809250505090565b60095481565b6107cd61090f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361083d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610834919061125e565b60405180910390fd5b61084681610996565b50565b5f33905090565b61085d8383836001610a7b565b505050565b5f5f61086c610849565b9050610879858285610c4a565b610884858585610cdd565b60019150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610900575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016108f7919061125e565b60405180910390fd5b61090b825f83610dcd565b5050565b610917610849565b73ffffffffffffffffffffffffffffffffffffffff1661093561054d565b73ffffffffffffffffffffffffffffffffffffffff161461099457610958610849565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161098b919061125e565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f610a63610849565b9050610a70818585610cdd565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610aeb575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ae2919061125e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b52919061125e565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c44578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c3b9190611187565b60405180910390a35b50505050565b5f610c5584846106e7565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811015610cd75781811015610cc8578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610cbf939291906114d2565b60405180910390fd5b610cd684848484035f610a7b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d4d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610d44919061125e565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dbd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610db4919061125e565b60405180910390fd5b610dc8838383610dcd565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e1d578060025f828254610e11919061149f565b92505081905550610eeb565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610ea6578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e9d939291906114d2565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f32578060025f8282540392505081905550610f7c565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fd99190611187565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61102882610fe6565b6110328185610ff0565b9350611042818560208601611000565b61104b8161100e565b840191505092915050565b5f6020820190508181035f83015261106e818461101e565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6110a38261107a565b9050919050565b6110b381611099565b81146110bd575f5ffd5b50565b5f813590506110ce816110aa565b92915050565b5f819050919050565b6110e6816110d4565b81146110f0575f5ffd5b50565b5f81359050611101816110dd565b92915050565b5f5f6040838503121561111d5761111c611076565b5b5f61112a858286016110c0565b925050602061113b858286016110f3565b9150509250929050565b5f8115159050919050565b61115981611145565b82525050565b5f6020820190506111725f830184611150565b92915050565b611181816110d4565b82525050565b5f60208201905061119a5f830184611178565b92915050565b5f5f5f606084860312156111b7576111b6611076565b5b5f6111c4868287016110c0565b93505060206111d5868287016110c0565b92505060406111e6868287016110f3565b9150509250925092565b5f60ff82169050919050565b611205816111f0565b82525050565b5f60208201905061121e5f8301846111fc565b92915050565b5f6020828403121561123957611238611076565b5b5f611246848285016110c0565b91505092915050565b61125881611099565b82525050565b5f6020820190506112715f83018461124f565b92915050565b5f5f6040838503121561128d5761128c611076565b5b5f61129a858286016110c0565b92505060206112ab858286016110c0565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806112f957607f821691505b60208210810361130c5761130b6112b5565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611349826110d4565b9150611354836110d4565b9250828202611362816110d4565b9150828204841483151761137957611378611312565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6113b7826110d4565b91506113c2836110d4565b9250826113d2576113d1611380565b5b828204905092915050565b5f6113e7826110d4565b91506113f2836110d4565b925082820390508181111561140a57611409611312565b5b92915050565b7f5472616e73666572206661696c656400000000000000000000000000000000005f82015250565b5f611444600f83610ff0565b915061144f82611410565b602082019050919050565b5f6020820190508181035f83015261147181611438565b9050919050565b5f60408201905061148b5f830185611178565b6114986020830184611178565b9392505050565b5f6114a9826110d4565b91506114b4836110d4565b92508282019050808211156114cc576114cb611312565b5b92915050565b5f6060820190506114e55f83018661124f565b6114f26020830185611178565b6114ff6040830184611178565b94935050505056fea2646970667358221220dcd4f0d6d3ff705ce5b2ceabe8c293c2a5f967183545a915e354930126912c7b64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D158101 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xD5B78D77 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD5B78D77 EQ PUSH2 0x2A9 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xE17AC3D5 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xECDA10F5 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x333 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x7D158101 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x279 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3C81385C EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x179 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x115 PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x140 SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x3DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x163 PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18E SWAP2 SWAP1 PUSH2 0x11A0 JUMP JUMPDEST PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x120B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CF PUSH2 0x4E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x4EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21D PUSH2 0x534 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x227 PUSH2 0x547 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x252 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x263 PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x1107 JUMP JUMPDEST PUSH2 0x605 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A0 SWAP2 SWAP1 PUSH2 0x115F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH2 0x6E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BE SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DC SWAP2 SWAP1 PUSH2 0x1277 JUMP JUMPDEST PUSH2 0x6E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH2 0x7BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x1224 JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x35E SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x38A SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3E9 PUSH2 0x849 JUMP JUMPDEST SWAP1 POP PUSH2 0x3F6 DUP2 DUP6 DUP6 PUSH2 0x850 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x414 PUSH2 0x769 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 DUP6 PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x430 SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x44D DUP9 DUP9 DUP5 PUSH2 0x862 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x48F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x486 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x499 DUP9 DUP5 PUSH2 0x890 JUMP JUMPDEST PUSH32 0x1D84B60620D560A5BD3488E3FF622E0142D7CE33ECF7C5D24C17637AC97E048E DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4CA SWAP3 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x53C PUSH2 0x90F JUMP JUMPDEST PUSH2 0x545 PUSH0 PUSH2 0x996 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B0 SWAP1 PUSH2 0x12E2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x60F PUSH2 0x769 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 DUP3 DUP6 PUSH2 0x621 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH2 0x62B SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP6 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x647 DUP8 DUP4 PUSH2 0xA59 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x689 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x680 SWAP1 PUSH2 0x145A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x69A PUSH2 0x694 PUSH2 0x849 JUMP JUMPDEST DUP5 PUSH2 0x890 JUMP JUMPDEST PUSH32 0x1D84B60620D560A5BD3488E3FF622E0142D7CE33ECF7C5D24C17637AC97E048E DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6CB SWAP3 SWAP2 SWAP1 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH3 0x15180 PUSH1 0x9 SLOAD TIMESTAMP PUSH2 0x77D SWAP2 SWAP1 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x787 SWAP2 SWAP1 PUSH2 0x13AD JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x8 SLOAD DUP3 PUSH2 0x798 SWAP2 SWAP1 PUSH2 0x133F JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x7A5 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST SWAP1 POP PUSH1 0x7 SLOAD DUP2 GT ISZERO PUSH2 0x7B7 JUMPI PUSH1 0x7 SLOAD SWAP1 POP JUMPDEST DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x7CD PUSH2 0x90F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x83D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x834 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x846 DUP2 PUSH2 0x996 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x85D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA7B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x86C PUSH2 0x849 JUMP JUMPDEST SWAP1 POP PUSH2 0x879 DUP6 DUP3 DUP6 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0x884 DUP6 DUP6 DUP6 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x900 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8F7 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90B DUP3 PUSH0 DUP4 PUSH2 0xDCD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x917 PUSH2 0x849 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x935 PUSH2 0x54D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x994 JUMPI PUSH2 0x958 PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98B SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA63 PUSH2 0x849 JUMP JUMPDEST SWAP1 POP PUSH2 0xA70 DUP2 DUP6 DUP6 PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAEB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB52 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC44 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC3B SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC55 DUP5 DUP5 PUSH2 0x6E7 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0xCD7 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xCC8 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCD6 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xA7B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD4D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD44 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x125E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC8 DUP4 DUP4 DUP4 PUSH2 0xDCD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE1D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x149F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEEB JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xEA6 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x14D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF32 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF7C JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFD9 SWAP2 SWAP1 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1028 DUP3 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x1032 DUP2 DUP6 PUSH2 0xFF0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1042 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1000 JUMP JUMPDEST PUSH2 0x104B DUP2 PUSH2 0x100E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x106E DUP2 DUP5 PUSH2 0x101E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x10A3 DUP3 PUSH2 0x107A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10B3 DUP2 PUSH2 0x1099 JUMP JUMPDEST DUP2 EQ PUSH2 0x10BD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10CE DUP2 PUSH2 0x10AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10E6 DUP2 PUSH2 0x10D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x10F0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1101 DUP2 PUSH2 0x10DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x111D JUMPI PUSH2 0x111C PUSH2 0x1076 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x112A DUP6 DUP3 DUP7 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x113B DUP6 DUP3 DUP7 ADD PUSH2 0x10F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1159 DUP2 PUSH2 0x1145 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1172 PUSH0 DUP4 ADD DUP5 PUSH2 0x1150 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1181 DUP2 PUSH2 0x10D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x119A PUSH0 DUP4 ADD DUP5 PUSH2 0x1178 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11B7 JUMPI PUSH2 0x11B6 PUSH2 0x1076 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11C4 DUP7 DUP3 DUP8 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11D5 DUP7 DUP3 DUP8 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11E6 DUP7 DUP3 DUP8 ADD PUSH2 0x10F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1205 DUP2 PUSH2 0x11F0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x121E PUSH0 DUP4 ADD DUP5 PUSH2 0x11FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x1076 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1246 DUP5 DUP3 DUP6 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1258 DUP2 PUSH2 0x1099 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1271 PUSH0 DUP4 ADD DUP5 PUSH2 0x124F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x128D JUMPI PUSH2 0x128C PUSH2 0x1076 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129A DUP6 DUP3 DUP7 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12AB DUP6 DUP3 DUP7 ADD PUSH2 0x10C0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x12F9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x130C JUMPI PUSH2 0x130B PUSH2 0x12B5 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1349 DUP3 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x1354 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1362 DUP2 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1379 JUMPI PUSH2 0x1378 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13B7 DUP3 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13C2 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1380 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13E7 DUP3 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F2 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x140A JUMPI PUSH2 0x1409 PUSH2 0x1312 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1444 PUSH1 0xF DUP4 PUSH2 0xFF0 JUMP JUMPDEST SWAP2 POP PUSH2 0x144F DUP3 PUSH2 0x1410 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1471 DUP2 PUSH2 0x1438 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x148B PUSH0 DUP4 ADD DUP6 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x1498 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1178 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14A9 DUP3 PUSH2 0x10D4 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B4 DUP4 PUSH2 0x10D4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14CC JUMPI PUSH2 0x14CB PUSH2 0x1312 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x14E5 PUSH0 DUP4 ADD DUP7 PUSH2 0x124F JUMP JUMPDEST PUSH2 0x14F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1178 JUMP JUMPDEST PUSH2 0x14FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1178 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xD4 CREATE 0xD6 0xD3 SELFDESTRUCT PUSH17 0x5CE5B2CEABE8C293C2A5F967183545A915 CALLF 0x5493 ADD 0x26 SWAP2 0x2C PUSH28 0x64736F6C634300081D00330000000000000000000000000000000000 ",
							"sourceMap": "571:3245:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3252:562:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;770:25:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;887:34:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2556:536:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;680:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2083:302:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;989:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;3252:562:6:-;3350:4;3366:11;3380:16;:14;:16::i;:::-;3366:30;;3406:18;3444:5;3437:3;3428:6;:12;;;;:::i;:::-;3427:22;;;;:::i;:::-;3406:43;;3459:18;3489:10;3480:6;:19;;;;:::i;:::-;3459:40;;3545:12;3560:49;3579:6;3587:9;3598:10;3560:18;:49::i;:::-;3545:64;;3627:7;3619:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;3715:25;3721:6;3729:10;3715:5;:25::i;:::-;3755:31;3770:3;3775:10;3755:31;;;;;;;:::i;:::-;;;;;;;;3803:4;3796:11;;;;;;3252:562;;;;;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;770:25:6:-;;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;887:34:6:-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2556:536:6:-;2634:4;2650:11;2664:16;:14;:16::i;:::-;2650:30;;2690:18;2728:5;2721:3;2712:6;:12;;;;:::i;:::-;2711:22;;;;:::i;:::-;2690:43;;2743:18;2773:10;2764:6;:19;;;;:::i;:::-;2743:40;;2829:12;2844:37;2859:9;2870:10;2844:14;:37::i;:::-;2829:52;;2899:7;2891:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;2987:31;2993:12;:10;:12::i;:::-;3007:10;2987:5;:31::i;:::-;3033;3048:3;3053:10;3033:31;;;;;;;:::i;:::-;;;;;;;;3081:4;3074:11;;;;;;2556:536;;;;:::o;680:25::-;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2083:302:6:-;2130:7;2149:19;2208:6;2190:14;;2172:15;:32;;;;:::i;:::-;2171:43;;;;:::i;:::-;2149:65;;2224:11;2266:19;;2252:11;:33;;;;:::i;:::-;2238:10;;:48;;;;:::i;:::-;2224:62;;2306:10;;2300:3;:16;2296:63;;;2338:10;;2332:16;;2296:63;2375:3;2368:10;;;;2083:302;:::o;989:29::-;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:118::-;5168:24;5186:5;5168:24;:::i;:::-;5163:3;5156:37;5081:118;;:::o;5205:222::-;5298:4;5336:2;5325:9;5321:18;5313:26;;5349:71;5417:1;5406:9;5402:17;5393:6;5349:71;:::i;:::-;5205:222;;;;:::o;5433:474::-;5501:6;5509;5558:2;5546:9;5537:7;5533:23;5529:32;5526:119;;;5564:79;;:::i;:::-;5526:119;5684:1;5709:53;5754:7;5745:6;5734:9;5730:22;5709:53;:::i;:::-;5699:63;;5655:117;5811:2;5837:53;5882:7;5873:6;5862:9;5858:22;5837:53;:::i;:::-;5827:63;;5782:118;5433:474;;;;;:::o;5913:180::-;5961:77;5958:1;5951:88;6058:4;6055:1;6048:15;6082:4;6079:1;6072:15;6099:320;6143:6;6180:1;6174:4;6170:12;6160:22;;6227:1;6221:4;6217:12;6248:18;6238:81;;6304:4;6296:6;6292:17;6282:27;;6238:81;6366:2;6358:6;6355:14;6335:18;6332:38;6329:84;;6385:18;;:::i;:::-;6329:84;6150:269;6099:320;;;:::o;6425:180::-;6473:77;6470:1;6463:88;6570:4;6567:1;6560:15;6594:4;6591:1;6584:15;6611:410;6651:7;6674:20;6692:1;6674:20;:::i;:::-;6669:25;;6708:20;6726:1;6708:20;:::i;:::-;6703:25;;6763:1;6760;6756:9;6785:30;6803:11;6785:30;:::i;:::-;6774:41;;6964:1;6955:7;6951:15;6948:1;6945:22;6925:1;6918:9;6898:83;6875:139;;6994:18;;:::i;:::-;6875:139;6659:362;6611:410;;;;:::o;7027:180::-;7075:77;7072:1;7065:88;7172:4;7169:1;7162:15;7196:4;7193:1;7186:15;7213:185;7253:1;7270:20;7288:1;7270:20;:::i;:::-;7265:25;;7304:20;7322:1;7304:20;:::i;:::-;7299:25;;7343:1;7333:35;;7348:18;;:::i;:::-;7333:35;7390:1;7387;7383:9;7378:14;;7213:185;;;;:::o;7404:194::-;7444:4;7464:20;7482:1;7464:20;:::i;:::-;7459:25;;7498:20;7516:1;7498:20;:::i;:::-;7493:25;;7542:1;7539;7535:9;7527:17;;7566:1;7560:4;7557:11;7554:37;;;7571:18;;:::i;:::-;7554:37;7404:194;;;;:::o;7604:165::-;7744:17;7740:1;7732:6;7728:14;7721:41;7604:165;:::o;7775:366::-;7917:3;7938:67;8002:2;7997:3;7938:67;:::i;:::-;7931:74;;8014:93;8103:3;8014:93;:::i;:::-;8132:2;8127:3;8123:12;8116:19;;7775:366;;;:::o;8147:419::-;8313:4;8351:2;8340:9;8336:18;8328:26;;8400:9;8394:4;8390:20;8386:1;8375:9;8371:17;8364:47;8428:131;8554:4;8428:131;:::i;:::-;8420:139;;8147:419;;;:::o;8572:332::-;8693:4;8731:2;8720:9;8716:18;8708:26;;8744:71;8812:1;8801:9;8797:17;8788:6;8744:71;:::i;:::-;8825:72;8893:2;8882:9;8878:18;8869:6;8825:72;:::i;:::-;8572:332;;;;;:::o;8910:191::-;8950:3;8969:20;8987:1;8969:20;:::i;:::-;8964:25;;9003:20;9021:1;9003:20;:::i;:::-;8998:25;;9046:1;9043;9039:9;9032:16;;9067:3;9064:1;9061:10;9058:36;;;9074:18;;:::i;:::-;9058:36;8910:191;;;;:::o;9107:442::-;9256:4;9294:2;9283:9;9279:18;9271:26;;9307:71;9375:1;9364:9;9360:17;9351:6;9307:71;:::i;:::-;9388:72;9456:2;9445:9;9441:18;9432:6;9388:72;:::i;:::-;9470;9538:2;9527:9;9523:18;9514:6;9470:72;:::i;:::-;9107:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1087400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2895",
								"burnFeeIncreaseRate()": "2448",
								"currentBurnFee()": "infinite",
								"decimals()": "361",
								"deploymentTime()": "2513",
								"maxBurnFee()": "2470",
								"minBurnFee()": "2447",
								"name()": "infinite",
								"owner()": "2560",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 571,
									"end": 3816,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1465,
									"end": 1962,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1654,
									"end": 1664,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "46616C6C696E6720576564676520546F6B656E00000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4657540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1699,
									"end": 1710,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1695,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1710,
									"modifierDepth": 2,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1684,
									"end": 1710,
									"modifierDepth": 2,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1676,
									"end": 1751,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1676,
									"end": 1751,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1774,
									"end": 1785,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1771,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1761,
									"end": 1785,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1785,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1785,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1761,
									"end": 1785,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1808,
									"end": 1819,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1805,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1795,
									"end": 1819,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1819,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1819,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1795,
									"end": 1819,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1851,
									"end": 1871,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1848,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1829,
									"end": 1871,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1871,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1871,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1829,
									"end": 1871,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1898,
									"end": 1913,
									"modifierDepth": 2,
									"name": "TIMESTAMP",
									"source": 6
								},
								{
									"begin": 1881,
									"end": 1895,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1881,
									"end": 1913,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1881,
									"end": 1913,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1881,
									"end": 1913,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1881,
									"end": 1913,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1955,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1929,
									"end": 1939,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1941,
									"end": 1954,
									"modifierDepth": 2,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1928,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1923,
									"end": 1928,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1923,
									"end": 1928,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1955,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1923,
									"end": 1955,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1955,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1923,
									"end": 1955,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1923,
									"end": 1955,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1465,
									"end": 1962,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "81"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "82"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 791,
									"end": 797,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 799,
									"end": 805,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 807,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 815,
									"end": 821,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 864,
									"end": 867,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 852,
									"end": 861,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 843,
									"end": 850,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 839,
									"end": 862,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 835,
									"end": 868,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 832,
									"end": 952,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 832,
									"end": 952,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 832,
									"end": 952,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 871,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 871,
									"end": 950,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 871,
									"end": 950,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 871,
									"end": 950,
									"name": "tag",
									"source": 7,
									"value": "87"
								},
								{
									"begin": 871,
									"end": 950,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 832,
									"end": 952,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 832,
									"end": 952,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 991,
									"end": 992,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1016,
									"end": 1080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1072,
									"end": 1079,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1063,
									"end": 1069,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1052,
									"end": 1061,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1048,
									"end": 1070,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1016,
									"end": 1080,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1016,
									"end": 1080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1016,
									"end": 1080,
									"name": "tag",
									"source": 7,
									"value": "88"
								},
								{
									"begin": 1016,
									"end": 1080,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1006,
									"end": 1080,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 1006,
									"end": 1080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 962,
									"end": 1090,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1131,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1155,
									"end": 1219,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1211,
									"end": 1218,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1202,
									"end": 1208,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1191,
									"end": 1200,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1187,
									"end": 1209,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1219,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1155,
									"end": 1219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1155,
									"end": 1219,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 1155,
									"end": 1219,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1145,
									"end": 1219,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 1145,
									"end": 1219,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1100,
									"end": 1229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1268,
									"end": 1270,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1294,
									"end": 1358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1350,
									"end": 1357,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1341,
									"end": 1347,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1326,
									"end": 1348,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1294,
									"end": 1358,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1294,
									"end": 1358,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1294,
									"end": 1358,
									"name": "tag",
									"source": 7,
									"value": "90"
								},
								{
									"begin": 1294,
									"end": 1358,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1284,
									"end": 1358,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1284,
									"end": 1358,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1239,
									"end": 1368,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1407,
									"end": 1409,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 1433,
									"end": 1497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 1480,
									"end": 1486,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1469,
									"end": 1478,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 1465,
									"end": 1487,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1497,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1433,
									"end": 1497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1433,
									"end": 1497,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1433,
									"end": 1497,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1497,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1423,
									"end": 1497,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1378,
									"end": 1507,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 1514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1619,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 1520,
									"end": 1619,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1606,
									"end": 1611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1600,
									"end": 1612,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1590,
									"end": 1612,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1590,
									"end": 1612,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1619,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1619,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1619,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1520,
									"end": 1619,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1625,
									"end": 1805,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1625,
									"end": 1805,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1673,
									"end": 1750,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1670,
									"end": 1671,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1663,
									"end": 1751,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1770,
									"end": 1774,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1767,
									"end": 1768,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1760,
									"end": 1775,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1811,
									"end": 1991,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1811,
									"end": 1991,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1859,
									"end": 1936,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1856,
									"end": 1857,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1849,
									"end": 1937,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1956,
									"end": 1960,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 1953,
									"end": 1954,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1946,
									"end": 1961,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1980,
									"end": 1984,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1977,
									"end": 1978,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1985,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2317,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1997,
									"end": 2317,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2041,
									"end": 2047,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2078,
									"end": 2079,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2072,
									"end": 2076,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2068,
									"end": 2080,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2058,
									"end": 2080,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2058,
									"end": 2080,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2125,
									"end": 2126,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2119,
									"end": 2123,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2115,
									"end": 2127,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2146,
									"end": 2164,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2136,
									"end": 2217,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2136,
									"end": 2217,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2202,
									"end": 2206,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2194,
									"end": 2200,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2190,
									"end": 2207,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2207,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2180,
									"end": 2207,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2136,
									"end": 2217,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 2136,
									"end": 2217,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2264,
									"end": 2266,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2256,
									"end": 2262,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2253,
									"end": 2267,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2233,
									"end": 2251,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2230,
									"end": 2268,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2227,
									"end": 2311,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2301,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2283,
									"end": 2301,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 2283,
									"end": 2301,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2283,
									"end": 2301,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 2283,
									"end": 2301,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2227,
									"end": 2311,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 2227,
									"end": 2311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2048,
									"end": 2317,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2317,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2317,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2317,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1997,
									"end": 2317,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2464,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 2323,
									"end": 2464,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2372,
									"end": 2376,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2395,
									"end": 2398,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2387,
									"end": 2398,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2387,
									"end": 2398,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2418,
									"end": 2421,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2415,
									"end": 2416,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2408,
									"end": 2422,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2452,
									"end": 2456,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2449,
									"end": 2450,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2439,
									"end": 2457,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2431,
									"end": 2457,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2431,
									"end": 2457,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2464,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2464,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2464,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2563,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 2470,
									"end": 2563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2507,
									"end": 2513,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2554,
									"end": 2556,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2549,
									"end": 2551,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2542,
									"end": 2547,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2538,
									"end": 2552,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2534,
									"end": 2557,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2557,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2524,
									"end": 2557,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2563,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2563,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2563,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2470,
									"end": 2563,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2569,
									"end": 2676,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2569,
									"end": 2676,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2613,
									"end": 2621,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2663,
									"end": 2668,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2657,
									"end": 2661,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2653,
									"end": 2669,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2632,
									"end": 2669,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2632,
									"end": 2669,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2569,
									"end": 2676,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2569,
									"end": 2676,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2569,
									"end": 2676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2569,
									"end": 2676,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2569,
									"end": 2676,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 3075,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2682,
									"end": 3075,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2751,
									"end": 2757,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2801,
									"end": 2802,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2789,
									"end": 2799,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2785,
									"end": 2803,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 2824,
									"end": 2921,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2854,
									"end": 2920,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2843,
									"end": 2852,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2824,
									"end": 2921,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2824,
									"end": 2921,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2824,
									"end": 2921,
									"name": "tag",
									"source": 7,
									"value": "103"
								},
								{
									"begin": 2824,
									"end": 2921,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2942,
									"end": 2981,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2972,
									"end": 2980,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 2961,
									"end": 2970,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2942,
									"end": 2981,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2942,
									"end": 2981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2942,
									"end": 2981,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2942,
									"end": 2981,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 2981,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 2930,
									"end": 2981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3014,
									"end": 3018,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3010,
									"end": 3019,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3003,
									"end": 3008,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 2999,
									"end": 3020,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2990,
									"end": 3020,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2990,
									"end": 3020,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3063,
									"end": 3067,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3053,
									"end": 3061,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3049,
									"end": 3068,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3042,
									"end": 3047,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3039,
									"end": 3069,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3029,
									"end": 3069,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3029,
									"end": 3069,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2758,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2758,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 3075,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 3075,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 3075,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2682,
									"end": 3075,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3141,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3081,
									"end": 3141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3109,
									"end": 3112,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3135,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3123,
									"end": 3135,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3123,
									"end": 3135,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3141,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3141,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3141,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3081,
									"end": 3141,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3289,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3147,
									"end": 3289,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3197,
									"end": 3206,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3230,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3248,
									"end": 3282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3257,
									"end": 3281,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3275,
									"end": 3280,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3257,
									"end": 3281,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3257,
									"end": 3281,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3257,
									"end": 3281,
									"name": "tag",
									"source": 7,
									"value": "109"
								},
								{
									"begin": 3257,
									"end": 3281,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3282,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 3248,
									"end": 3282,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3248,
									"end": 3282,
									"name": "tag",
									"source": 7,
									"value": "108"
								},
								{
									"begin": 3248,
									"end": 3282,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3230,
									"end": 3283,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3230,
									"end": 3283,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3230,
									"end": 3283,
									"name": "tag",
									"source": 7,
									"value": "107"
								},
								{
									"begin": 3230,
									"end": 3283,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3283,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3217,
									"end": 3283,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3289,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3289,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3289,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3147,
									"end": 3289,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3370,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3295,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3338,
									"end": 3341,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3359,
									"end": 3364,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3352,
									"end": 3364,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3352,
									"end": 3364,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3370,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3370,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3370,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3295,
									"end": 3370,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3645,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3376,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3486,
									"end": 3525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3517,
									"end": 3524,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3486,
									"end": 3525,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 3486,
									"end": 3525,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3486,
									"end": 3525,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3486,
									"end": 3525,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3547,
									"end": 3638,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3596,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3620,
									"end": 3636,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3596,
									"end": 3637,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3596,
									"end": 3637,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3596,
									"end": 3637,
									"name": "tag",
									"source": 7,
									"value": "114"
								},
								{
									"begin": 3596,
									"end": 3637,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3581,
									"end": 3585,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3575,
									"end": 3586,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3547,
									"end": 3638,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 3547,
									"end": 3638,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3547,
									"end": 3638,
									"name": "tag",
									"source": 7,
									"value": "113"
								},
								{
									"begin": 3547,
									"end": 3638,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3541,
									"end": 3545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3534,
									"end": 3639,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3452,
									"end": 3645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3645,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3376,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3724,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3651,
									"end": 3724,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3696,
									"end": 3699,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3717,
									"end": 3718,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3710,
									"end": 3718,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3710,
									"end": 3718,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3724,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3651,
									"end": 3724,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3730,
									"end": 3919,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3730,
									"end": 3919,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3807,
									"end": 3839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3807,
									"end": 3839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3807,
									"end": 3839,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3807,
									"end": 3839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3906,
									"end": 3912,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3898,
									"end": 3904,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3892,
									"end": 3896,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3913,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3848,
									"end": 3913,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3848,
									"end": 3913,
									"name": "tag",
									"source": 7,
									"value": "118"
								},
								{
									"begin": 3848,
									"end": 3913,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3783,
									"end": 3919,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3730,
									"end": 3919,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3730,
									"end": 3919,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3730,
									"end": 3919,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 4111,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3925,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4002,
									"end": 4005,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3995,
									"end": 4000,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3992,
									"end": 4006,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4093,
									"end": 4094,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4086,
									"end": 4091,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4095,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 4056,
									"end": 4095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4056,
									"end": 4095,
									"name": "tag",
									"source": 7,
									"value": "123"
								},
								{
									"begin": 4056,
									"end": 4095,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4029,
									"end": 4030,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4022,
									"end": 4027,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4018,
									"end": 4031,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4009,
									"end": 4031,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4009,
									"end": 4031,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3985,
									"end": 4105,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 4111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 4111,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3925,
									"end": 4111,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4117,
									"end": 4660,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4117,
									"end": 4660,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4218,
									"end": 4220,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4213,
									"end": 4216,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4210,
									"end": 4221,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4653,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4653,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4207,
									"end": 4653,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4252,
									"end": 4290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4252,
									"end": 4290,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 4252,
									"end": 4290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4252,
									"end": 4290,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4252,
									"end": 4290,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4336,
									"end": 4365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4354,
									"end": 4364,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4336,
									"end": 4365,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4336,
									"end": 4365,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4336,
									"end": 4365,
									"name": "tag",
									"source": 7,
									"value": "127"
								},
								{
									"begin": 4336,
									"end": 4365,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4326,
									"end": 4334,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4322,
									"end": 4366,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4519,
									"end": 4521,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4507,
									"end": 4517,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4504,
									"end": 4522,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4550,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4550,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4501,
									"end": 4550,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4540,
									"end": 4548,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4525,
									"end": 4548,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4525,
									"end": 4548,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4501,
									"end": 4550,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4501,
									"end": 4550,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4619,
									"end": 4641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4637,
									"end": 4640,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4619,
									"end": 4641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 4619,
									"end": 4641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4619,
									"end": 4641,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4619,
									"end": 4641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4609,
									"end": 4617,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4605,
									"end": 4642,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4592,
									"end": 4603,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4643,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 4563,
									"end": 4643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4563,
									"end": 4643,
									"name": "tag",
									"source": 7,
									"value": "129"
								},
								{
									"begin": 4563,
									"end": 4643,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4222,
									"end": 4653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4222,
									"end": 4653,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4653,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4207,
									"end": 4653,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4117,
									"end": 4660,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4117,
									"end": 4660,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4117,
									"end": 4660,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4117,
									"end": 4660,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4666,
									"end": 4783,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4666,
									"end": 4783,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4720,
									"end": 4728,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4770,
									"end": 4775,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4764,
									"end": 4768,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4760,
									"end": 4776,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4739,
									"end": 4776,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4739,
									"end": 4776,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4666,
									"end": 4783,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4666,
									"end": 4783,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4666,
									"end": 4783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4666,
									"end": 4783,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4666,
									"end": 4783,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4958,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4789,
									"end": 4958,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4833,
									"end": 4839,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4866,
									"end": 4917,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4914,
									"end": 4915,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4910,
									"end": 4916,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4902,
									"end": 4907,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4899,
									"end": 4900,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 4895,
									"end": 4908,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4917,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4866,
									"end": 4917,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4866,
									"end": 4917,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4866,
									"end": 4917,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4862,
									"end": 4918,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 4947,
									"end": 4951,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 4941,
									"end": 4945,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4952,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 4927,
									"end": 4952,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4927,
									"end": 4952,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4840,
									"end": 4958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4958,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4958,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4958,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4789,
									"end": 4958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4963,
									"end": 5258,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4963,
									"end": 5258,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5039,
									"end": 5043,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5185,
									"end": 5214,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5210,
									"end": 5213,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5204,
									"end": 5208,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5185,
									"end": 5214,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 5185,
									"end": 5214,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5185,
									"end": 5214,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 5185,
									"end": 5214,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5177,
									"end": 5214,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5177,
									"end": 5214,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5247,
									"end": 5250,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5244,
									"end": 5245,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5240,
									"end": 5251,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5234,
									"end": 5238,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5231,
									"end": 5252,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5252,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5223,
									"end": 5252,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4963,
									"end": 5258,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4963,
									"end": 5258,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4963,
									"end": 5258,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4963,
									"end": 5258,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4963,
									"end": 5258,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5263,
									"end": 6658,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5263,
									"end": 6658,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5380,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5413,
									"end": 5416,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5380,
									"end": 5417,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 5380,
									"end": 5417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5380,
									"end": 5417,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 5380,
									"end": 5417,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5482,
									"end": 5500,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5474,
									"end": 5480,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5471,
									"end": 5501,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5524,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5524,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5468,
									"end": 5524,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5504,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5504,
									"end": 5522,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 5504,
									"end": 5522,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5504,
									"end": 5522,
									"name": "tag",
									"source": 7,
									"value": "139"
								},
								{
									"begin": 5504,
									"end": 5522,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5468,
									"end": 5524,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 5468,
									"end": 5524,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5580,
									"end": 5584,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5574,
									"end": 5585,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5586,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 5548,
									"end": 5586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5548,
									"end": 5586,
									"name": "tag",
									"source": 7,
									"value": "140"
								},
								{
									"begin": 5548,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5633,
									"end": 5700,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5693,
									"end": 5699,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5685,
									"end": 5691,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5679,
									"end": 5683,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5633,
									"end": 5700,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 5633,
									"end": 5700,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5633,
									"end": 5700,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5633,
									"end": 5700,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5727,
									"end": 5728,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5751,
									"end": 5755,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5738,
									"end": 5755,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5738,
									"end": 5755,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5783,
									"end": 5785,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5775,
									"end": 5781,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5772,
									"end": 5786,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5800,
									"end": 5801,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5795,
									"end": 6413,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5795,
									"end": 6413,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5795,
									"end": 6413,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5795,
									"end": 6413,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6457,
									"end": 6458,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6474,
									"end": 6480,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6471,
									"end": 6548,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6471,
									"end": 6548,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6471,
									"end": 6548,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6523,
									"end": 6532,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6518,
									"end": 6521,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6514,
									"end": 6533,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6508,
									"end": 6534,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6499,
									"end": 6534,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6499,
									"end": 6534,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6471,
									"end": 6548,
									"name": "tag",
									"source": 7,
									"value": "144"
								},
								{
									"begin": 6471,
									"end": 6548,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6574,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6634,
									"end": 6640,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6627,
									"end": 6632,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6574,
									"end": 6641,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 6574,
									"end": 6641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6574,
									"end": 6641,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 6574,
									"end": 6641,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6568,
									"end": 6572,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6561,
									"end": 6642,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6430,
									"end": 6652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5765,
									"end": 6652,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5765,
									"end": 6652,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5795,
									"end": 6413,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5795,
									"end": 6413,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5847,
									"end": 5851,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5843,
									"end": 5852,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5835,
									"end": 5841,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5831,
									"end": 5853,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5881,
									"end": 5918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5913,
									"end": 5917,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 5881,
									"end": 5918,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 5881,
									"end": 5918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5881,
									"end": 5918,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5881,
									"end": 5918,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5940,
									"end": 5941,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5968,
									"end": 5975,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5965,
									"end": 5966,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5962,
									"end": 5976,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6047,
									"end": 6056,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6042,
									"end": 6045,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6038,
									"end": 6057,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6032,
									"end": 6058,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6024,
									"end": 6030,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6017,
									"end": 6059,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6098,
									"end": 6099,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6086,
									"end": 6100,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6076,
									"end": 6100,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6076,
									"end": 6100,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6145,
									"end": 6147,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6134,
									"end": 6143,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6130,
									"end": 6148,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6117,
									"end": 6148,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6117,
									"end": 6148,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5991,
									"end": 5995,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5984,
									"end": 5996,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 5979,
									"end": 5996,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5979,
									"end": 5996,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5954,
									"end": 6162,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6190,
									"end": 6196,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6181,
									"end": 6188,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6178,
									"end": 6197,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6354,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6354,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6175,
									"end": 6354,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6248,
									"end": 6257,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6243,
									"end": 6246,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6239,
									"end": 6258,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6233,
									"end": 6259,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6291,
									"end": 6339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6325,
									"end": 6331,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6321,
									"end": 6338,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6310,
									"end": 6319,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6291,
									"end": 6339,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 6291,
									"end": 6339,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6291,
									"end": 6339,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 6291,
									"end": 6339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6283,
									"end": 6289,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6276,
									"end": 6340,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6198,
									"end": 6354,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6175,
									"end": 6354,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 6175,
									"end": 6354,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6400,
									"end": 6401,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6396,
									"end": 6397,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6384,
									"end": 6398,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6380,
									"end": 6402,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6374,
									"end": 6378,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6367,
									"end": 6403,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 6413,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 6413,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5802,
									"end": 6413,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5765,
									"end": 6652,
									"name": "tag",
									"source": 7,
									"value": "142"
								},
								{
									"begin": 5765,
									"end": 6652,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5765,
									"end": 6652,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5355,
									"end": 6658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5355,
									"end": 6658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5355,
									"end": 6658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5263,
									"end": 6658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5263,
									"end": 6658,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5263,
									"end": 6658,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6664,
									"end": 6790,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6664,
									"end": 6790,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6701,
									"end": 6708,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6741,
									"end": 6783,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6734,
									"end": 6739,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6730,
									"end": 6784,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6719,
									"end": 6784,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6719,
									"end": 6784,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6664,
									"end": 6790,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6664,
									"end": 6790,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6664,
									"end": 6790,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6664,
									"end": 6790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 6892,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6796,
									"end": 6892,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6833,
									"end": 6840,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6862,
									"end": 6886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6880,
									"end": 6885,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6886,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 6862,
									"end": 6886,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6886,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6862,
									"end": 6886,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6851,
									"end": 6886,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6851,
									"end": 6886,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 6892,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 6892,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 6892,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6796,
									"end": 6892,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6898,
									"end": 7016,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6898,
									"end": 7016,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6985,
									"end": 7009,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 7003,
									"end": 7008,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6985,
									"end": 7009,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 6985,
									"end": 7009,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6985,
									"end": 7009,
									"name": "tag",
									"source": 7,
									"value": "156"
								},
								{
									"begin": 6985,
									"end": 7009,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6980,
									"end": 6983,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6973,
									"end": 7010,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6898,
									"end": 7016,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6898,
									"end": 7016,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6898,
									"end": 7016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7115,
									"end": 7119,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7153,
									"end": 7155,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7142,
									"end": 7151,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7138,
									"end": 7156,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7156,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7166,
									"end": 7237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7234,
									"end": 7235,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7223,
									"end": 7232,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7219,
									"end": 7236,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7210,
									"end": 7216,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7166,
									"end": 7237,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 7166,
									"end": 7237,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7166,
									"end": 7237,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 7166,
									"end": 7237,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7022,
									"end": 7244,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7022,
									"end": 7244,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7419,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7250,
									"end": 7419,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7334,
									"end": 7345,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7368,
									"end": 7374,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7363,
									"end": 7366,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7356,
									"end": 7375,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7408,
									"end": 7412,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7403,
									"end": 7406,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7399,
									"end": 7413,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7384,
									"end": 7413,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7384,
									"end": 7413,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7419,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7419,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7419,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7419,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7250,
									"end": 7419,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7425,
									"end": 7648,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7425,
									"end": 7648,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7565,
									"end": 7599,
									"name": "PUSH",
									"source": 7,
									"value": "4D696E206275726E20666565206D757374206265203C3D206D6178206275726E"
								},
								{
									"begin": 7561,
									"end": 7562,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7559,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7549,
									"end": 7563,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7542,
									"end": 7600,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7634,
									"end": 7640,
									"name": "PUSH",
									"source": 7,
									"value": "2066656500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7629,
									"end": 7631,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7621,
									"end": 7627,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7617,
									"end": 7632,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7610,
									"end": 7641,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7425,
									"end": 7648,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7425,
									"end": 7648,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7654,
									"end": 8020,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7654,
									"end": 8020,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7796,
									"end": 7799,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7817,
									"end": 7884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7881,
									"end": 7883,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 7876,
									"end": 7879,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7817,
									"end": 7884,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 7817,
									"end": 7884,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7817,
									"end": 7884,
									"name": "tag",
									"source": 7,
									"value": "162"
								},
								{
									"begin": 7817,
									"end": 7884,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7810,
									"end": 7884,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7810,
									"end": 7884,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7893,
									"end": 7986,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7982,
									"end": 7985,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7893,
									"end": 7986,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7893,
									"end": 7986,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7893,
									"end": 7986,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7893,
									"end": 7986,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8011,
									"end": 8013,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 8006,
									"end": 8009,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8002,
									"end": 8014,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7995,
									"end": 8014,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7995,
									"end": 8014,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7654,
									"end": 8020,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7654,
									"end": 8020,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7654,
									"end": 8020,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7654,
									"end": 8020,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8445,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8026,
									"end": 8445,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8192,
									"end": 8196,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8230,
									"end": 8232,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8219,
									"end": 8228,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8215,
									"end": 8233,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8207,
									"end": 8233,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8207,
									"end": 8233,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8279,
									"end": 8288,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8273,
									"end": 8277,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8269,
									"end": 8289,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 8265,
									"end": 8266,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8254,
									"end": 8263,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8250,
									"end": 8267,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8243,
									"end": 8290,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8307,
									"end": 8438,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 8433,
									"end": 8437,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8307,
									"end": 8438,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 8307,
									"end": 8438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8307,
									"end": 8438,
									"name": "tag",
									"source": 7,
									"value": "165"
								},
								{
									"begin": 8307,
									"end": 8438,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8299,
									"end": 8438,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8299,
									"end": 8438,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8445,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8445,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8445,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8026,
									"end": 8445,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8451,
									"end": 8631,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8451,
									"end": 8631,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8499,
									"end": 8576,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8496,
									"end": 8497,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8489,
									"end": 8577,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8596,
									"end": 8600,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 8593,
									"end": 8594,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8586,
									"end": 8601,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8620,
									"end": 8624,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 8617,
									"end": 8618,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8610,
									"end": 8625,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8637,
									"end": 8828,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 8637,
									"end": 8828,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8677,
									"end": 8680,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8696,
									"end": 8716,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8714,
									"end": 8715,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8696,
									"end": 8716,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8696,
									"end": 8716,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8696,
									"end": 8716,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 8696,
									"end": 8716,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8691,
									"end": 8716,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8691,
									"end": 8716,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8730,
									"end": 8750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8748,
									"end": 8749,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8730,
									"end": 8750,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8730,
									"end": 8750,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8730,
									"end": 8750,
									"name": "tag",
									"source": 7,
									"value": "169"
								},
								{
									"begin": 8730,
									"end": 8750,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8725,
									"end": 8750,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8725,
									"end": 8750,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8773,
									"end": 8774,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8770,
									"end": 8771,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8766,
									"end": 8775,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8759,
									"end": 8775,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8759,
									"end": 8775,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8794,
									"end": 8797,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8791,
									"end": 8792,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8788,
									"end": 8798,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8785,
									"end": 8821,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8785,
									"end": 8821,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8785,
									"end": 8821,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 8819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8801,
									"end": 8819,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 8801,
									"end": 8819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8801,
									"end": 8819,
									"name": "tag",
									"source": 7,
									"value": "171"
								},
								{
									"begin": 8801,
									"end": 8819,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8785,
									"end": 8821,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8785,
									"end": 8821,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8637,
									"end": 8828,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8637,
									"end": 8828,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8637,
									"end": 8828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8637,
									"end": 8828,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8637,
									"end": 8828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8834,
									"end": 8952,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 8834,
									"end": 8952,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8939,
									"end": 8944,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8921,
									"end": 8945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8921,
									"end": 8945,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8916,
									"end": 8919,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8909,
									"end": 8946,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8834,
									"end": 8952,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8834,
									"end": 8952,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8834,
									"end": 8952,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9400,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 8958,
									"end": 9400,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9107,
									"end": 9111,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9145,
									"end": 9147,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 9134,
									"end": 9143,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9130,
									"end": 9148,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9122,
									"end": 9148,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9122,
									"end": 9148,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9158,
									"end": 9229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 9226,
									"end": 9227,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9215,
									"end": 9224,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9211,
									"end": 9228,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9202,
									"end": 9208,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9158,
									"end": 9229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 9158,
									"end": 9229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9158,
									"end": 9229,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 9158,
									"end": 9229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9239,
									"end": 9311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 9307,
									"end": 9309,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9296,
									"end": 9305,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9292,
									"end": 9310,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9283,
									"end": 9289,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9239,
									"end": 9311,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9239,
									"end": 9311,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9239,
									"end": 9311,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 9239,
									"end": 9311,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9321,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 9389,
									"end": 9391,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9378,
									"end": 9387,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9374,
									"end": 9392,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9365,
									"end": 9371,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9321,
									"end": 9393,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9321,
									"end": 9393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9321,
									"end": 9393,
									"name": "tag",
									"source": 7,
									"value": "177"
								},
								{
									"begin": 9321,
									"end": 9393,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9400,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9400,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9400,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9400,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9400,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9400,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8958,
									"end": 9400,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9406,
									"end": 9628,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 9406,
									"end": 9628,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9499,
									"end": 9503,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9537,
									"end": 9539,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9526,
									"end": 9535,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9522,
									"end": 9540,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9514,
									"end": 9540,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9514,
									"end": 9540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9550,
									"end": 9621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 9618,
									"end": 9619,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9607,
									"end": 9616,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9603,
									"end": 9620,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9594,
									"end": 9600,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9550,
									"end": 9621,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 9550,
									"end": 9621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9550,
									"end": 9621,
									"name": "tag",
									"source": 7,
									"value": "179"
								},
								{
									"begin": 9550,
									"end": 9621,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9406,
									"end": 9628,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9406,
									"end": 9628,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9406,
									"end": 9628,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9406,
									"end": 9628,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9406,
									"end": 9628,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 571,
									"end": 3816,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dcd4f0d6d3ff705ce5b2ceabe8c293c2a5f967183545a915e354930126912c7b64736f6c634300081d0033",
									".code": [
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "7D158101"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "D5B78D77"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "D5B78D77"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "E17AC3D5"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "ECDA10F5"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "7D158101"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "3C81385C"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 3816,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3252,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3252,
											"end": 3814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 770,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 770,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 770,
											"end": 795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 921,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 887,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 887,
											"end": 921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 2556,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2556,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2556,
											"end": 3092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 680,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 680,
											"end": 705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2083,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 2083,
											"end": 2385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 989,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 989,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3350,
											"end": 3354,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3380,
											"end": 3394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 3380,
											"end": 3396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3396,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 3380,
											"end": 3396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3366,
											"end": 3396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3424,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 3437,
											"end": 3440,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3428,
											"end": 3440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 3428,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3428,
											"end": 3440,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 3428,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3427,
											"end": 3449,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 3427,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3427,
											"end": 3449,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 3427,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3406,
											"end": 3449,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3477,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3499,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3486,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3480,
											"end": 3499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 3480,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3499,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3459,
											"end": 3499,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3560,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3579,
											"end": 3585,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3587,
											"end": 3596,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3598,
											"end": 3608,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 3560,
											"end": 3609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3560,
											"end": 3609,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 3560,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3634,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 3619,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 3619,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3721,
											"end": 3727,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3739,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3715,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3715,
											"end": 3740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3715,
											"end": 3740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "PUSH",
											"source": 6,
											"value": "1D84B60620D560A5BD3488E3FF622E0142D7CE33ECF7C5D24C17637AC97E048E"
										},
										{
											"begin": 3770,
											"end": 3773,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3775,
											"end": 3785,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3755,
											"end": 3786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3755,
											"end": 3786,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3796,
											"end": 3807,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3796,
											"end": 3807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3252,
											"end": 3814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 770,
											"end": 795,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 770,
											"end": 795,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 921,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 887,
											"end": 921,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 887,
											"end": 921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2634,
											"end": 2638,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 2661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2664,
											"end": 2678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2664,
											"end": 2680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2680,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 2664,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 2680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2708,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2733,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 2721,
											"end": 2724,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2718,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2712,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2712,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2711,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 2711,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2733,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2690,
											"end": 2733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2761,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2783,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2764,
											"end": 2783,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2764,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2764,
											"end": 2783,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 2764,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2783,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2743,
											"end": 2783,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2844,
											"end": 2881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2859,
											"end": 2868,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 2870,
											"end": 2880,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 2844,
											"end": 2881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2844,
											"end": 2881,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 2844,
											"end": 2881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2881,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2829,
											"end": 2881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2899,
											"end": 2906,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 2891,
											"end": 2926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 2891,
											"end": 2926,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2993,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2993,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2993,
											"end": 3005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2993,
											"end": 3005,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2993,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3017,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 2987,
											"end": 3018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2987,
											"end": 3018,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2987,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "1D84B60620D560A5BD3488E3FF622E0142D7CE33ECF7C5D24C17637AC97E048E"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3053,
											"end": 3063,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3033,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3033,
											"end": 3064,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3074,
											"end": 3085,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3074,
											"end": 3085,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2556,
											"end": 3092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 680,
											"end": 705,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 680,
											"end": 705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2130,
											"end": 2137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2168,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 6,
											"value": "15180"
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2190,
											"end": 2204,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2172,
											"end": 2204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2172,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2204,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2172,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2171,
											"end": 2214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 2171,
											"end": 2214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2171,
											"end": 2214,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2171,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2149,
											"end": 2214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2266,
											"end": 2285,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2266,
											"end": 2285,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2252,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2252,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2248,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2238,
											"end": 2248,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2238,
											"end": 2286,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2238,
											"end": 2286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2238,
											"end": 2286,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2238,
											"end": 2286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2286,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2224,
											"end": 2286,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2306,
											"end": 2316,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2306,
											"end": 2316,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2303,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2300,
											"end": 2316,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2338,
											"end": 2348,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2338,
											"end": 2348,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2332,
											"end": 2348,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2296,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2375,
											"end": 2378,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2368,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2083,
											"end": 2385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 989,
											"end": 1018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "187"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "196"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "244"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "222"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "228"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "226"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "tag",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5186,
											"end": 5191,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 5168,
											"end": 5192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 5168,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5166,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5156,
											"end": 5193,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5081,
											"end": 5199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5302,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5336,
											"end": 5338,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5325,
											"end": 5334,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5321,
											"end": 5339,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5313,
											"end": 5339,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5415,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5419,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 5349,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 5349,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5205,
											"end": 5427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "tag",
											"source": 7,
											"value": "75"
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5507,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5558,
											"end": 5560,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5546,
											"end": 5555,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5537,
											"end": 5544,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5533,
											"end": 5556,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5561,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "218"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 5526,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5684,
											"end": 5685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5754,
											"end": 5761,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5745,
											"end": 5751,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5734,
											"end": 5743,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5730,
											"end": 5752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5709,
											"end": 5762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 5709,
											"end": 5762,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5699,
											"end": 5762,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5655,
											"end": 5772,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5811,
											"end": 5813,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5882,
											"end": 5889,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5873,
											"end": 5879,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5862,
											"end": 5871,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5858,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 5837,
											"end": 5890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 5837,
											"end": 5890,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5827,
											"end": 5890,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5913,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 6038,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5951,
											"end": 6039,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6048,
											"end": 6063,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6082,
											"end": 6086,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6079,
											"end": 6080,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6087,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "tag",
											"source": 7,
											"value": "89"
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6180,
											"end": 6181,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6170,
											"end": 6182,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6182,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6227,
											"end": 6228,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6221,
											"end": 6225,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6217,
											"end": 6229,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6248,
											"end": 6266,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6304,
											"end": 6308,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 6296,
											"end": 6302,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6309,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 6238,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6366,
											"end": 6368,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6358,
											"end": 6364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6355,
											"end": 6369,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6332,
											"end": 6370,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 6385,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 6385,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 6329,
											"end": 6413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6099,
											"end": 6419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6425,
											"end": 6605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6550,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6470,
											"end": 6471,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6551,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6570,
											"end": 6574,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 6567,
											"end": 6568,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6560,
											"end": 6575,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6594,
											"end": 6598,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6599,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 7021,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 6611,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6651,
											"end": 6658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6692,
											"end": 6693,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6674,
											"end": 6694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 6674,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6694,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6669,
											"end": 6694,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6726,
											"end": 6727,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6708,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6728,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 6708,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6728,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6703,
											"end": 6728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6763,
											"end": 6764,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6760,
											"end": 6761,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6756,
											"end": 6765,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6803,
											"end": 6814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 6785,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6785,
											"end": 6815,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 6785,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6815,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6774,
											"end": 6815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6964,
											"end": 6965,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6955,
											"end": 6962,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6951,
											"end": 6966,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6948,
											"end": 6949,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6945,
											"end": 6967,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 6925,
											"end": 6926,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6918,
											"end": 6927,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6898,
											"end": 6981,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 7014,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6875,
											"end": 7014,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 6994,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 6994,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6875,
											"end": 7014,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 6875,
											"end": 7014,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 7021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 7021,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 7021,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 7021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 7021,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6611,
											"end": 7021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7027,
											"end": 7207,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7027,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7075,
											"end": 7152,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7072,
											"end": 7073,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7065,
											"end": 7153,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7172,
											"end": 7176,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7162,
											"end": 7177,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7196,
											"end": 7200,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 7193,
											"end": 7194,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7186,
											"end": 7201,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7398,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 7213,
											"end": 7398,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7270,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7288,
											"end": 7289,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7290,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7270,
											"end": 7290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7290,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 7270,
											"end": 7290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7265,
											"end": 7290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7304,
											"end": 7324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7304,
											"end": 7324,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 7304,
											"end": 7324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7324,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7299,
											"end": 7324,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7343,
											"end": 7344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7333,
											"end": 7368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7333,
											"end": 7368,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 7348,
											"end": 7366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 7348,
											"end": 7366,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7333,
											"end": 7368,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 7333,
											"end": 7368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7390,
											"end": 7391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7387,
											"end": 7388,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7383,
											"end": 7392,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7378,
											"end": 7392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7398,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7398,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7398,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7213,
											"end": 7398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7598,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 7404,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7448,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7464,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 7482,
											"end": 7483,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7464,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7484,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 7464,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7484,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7459,
											"end": 7484,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 7516,
											"end": 7517,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7518,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 7498,
											"end": 7518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7498,
											"end": 7518,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 7498,
											"end": 7518,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7493,
											"end": 7518,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7493,
											"end": 7518,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7542,
											"end": 7543,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7539,
											"end": 7540,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7535,
											"end": 7544,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7544,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7527,
											"end": 7544,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7566,
											"end": 7567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7560,
											"end": 7564,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7557,
											"end": 7568,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7591,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 7554,
											"end": 7591,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 7571,
											"end": 7589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 7571,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7554,
											"end": 7591,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 7554,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7598,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7404,
											"end": 7598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7769,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 7604,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 7,
											"value": "5472616E73666572206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 7740,
											"end": 7741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7738,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7728,
											"end": 7742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7721,
											"end": 7762,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7604,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7920,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 7997,
											"end": 8000,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 7938,
											"end": 8005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7938,
											"end": 8005,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 7938,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7931,
											"end": 8005,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7931,
											"end": 8005,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8014,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8103,
											"end": 8106,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8014,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 8014,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8014,
											"end": 8107,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 8014,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8132,
											"end": 8134,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8127,
											"end": 8130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8123,
											"end": 8135,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 8141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8313,
											"end": 8317,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8353,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8349,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8409,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8394,
											"end": 8398,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8390,
											"end": 8410,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8384,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8371,
											"end": 8388,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8364,
											"end": 8411,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 8554,
											"end": 8558,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8559,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 8428,
											"end": 8559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8428,
											"end": 8559,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 8428,
											"end": 8559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8420,
											"end": 8559,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8420,
											"end": 8559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8147,
											"end": 8566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8904,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 8572,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8693,
											"end": 8697,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8733,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8716,
											"end": 8734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8708,
											"end": 8734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8812,
											"end": 8813,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8801,
											"end": 8810,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8797,
											"end": 8814,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8788,
											"end": 8794,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 8744,
											"end": 8815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8744,
											"end": 8815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8825,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 8893,
											"end": 8895,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8882,
											"end": 8891,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 8896,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8869,
											"end": 8875,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8825,
											"end": 8897,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 8825,
											"end": 8897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8825,
											"end": 8897,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 8825,
											"end": 8897,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8904,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8904,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8572,
											"end": 8904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 9101,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 8910,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8950,
											"end": 8953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8969,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8987,
											"end": 8988,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8969,
											"end": 8989,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 8969,
											"end": 8989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8969,
											"end": 8989,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 8969,
											"end": 8989,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8964,
											"end": 8989,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 9003,
											"end": 9023,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 9003,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8998,
											"end": 9023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9046,
											"end": 9047,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9043,
											"end": 9044,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9048,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9032,
											"end": 9048,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9032,
											"end": 9048,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9067,
											"end": 9070,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9064,
											"end": 9065,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9061,
											"end": 9071,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 9058,
											"end": 9094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 9074,
											"end": 9092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 9074,
											"end": 9092,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9058,
											"end": 9094,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 9058,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 9101,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 9101,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 9101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 9101,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8910,
											"end": 9101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9549,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 9107,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9296,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9283,
											"end": 9292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9279,
											"end": 9297,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9271,
											"end": 9297,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9271,
											"end": 9297,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9373,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9360,
											"end": 9377,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9351,
											"end": 9357,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9378,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "232"
										},
										{
											"begin": 9307,
											"end": 9378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9307,
											"end": 9378,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 9307,
											"end": 9378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 9456,
											"end": 9458,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9445,
											"end": 9454,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9441,
											"end": 9459,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9432,
											"end": 9438,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 9388,
											"end": 9460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9388,
											"end": 9460,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 9388,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 9538,
											"end": 9540,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9527,
											"end": 9536,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9523,
											"end": 9541,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9514,
											"end": 9520,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 9470,
											"end": 9542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9470,
											"end": 9542,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 9470,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9549,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9549,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9549,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9107,
											"end": 9549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"F/FallingWedgeToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burnFeeIncreaseRate()": "7d158101",
							"currentBurnFee()": "e17ac3d5",
							"decimals()": "313ce567",
							"deploymentTime()": "ecda10f5",
							"maxBurnFee()": "3c81385c",
							"minBurnFee()": "d5b78d77",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minBurnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxBurnFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_burnFeeIncreaseRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"}],\"name\":\"BurnFeeApplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnFeeIncreaseRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentBurnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deploymentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxBurnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minBurnFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with a dynamic burn fee that increases over time. The burn fee is calculated in basis points (1% = 100 basis points) using:     currentBurnFee = minBurnFee + (elapsedDays * burnFeeIncreaseRate) The fee is capped at maxBurnFee. On every transfer, the calculated burn fee is applied\\u2014 burning a portion of the transferred tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor sets token details, initial supply, and burn fee parameters.\",\"params\":{\"_burnFeeIncreaseRate\":\"Burn fee increase rate per day in basis points.\",\"_maxBurnFee\":\"Maximum burn fee in basis points.\",\"_minBurnFee\":\"Minimum burn fee in basis points.\",\"initialSupply\":\"Total token supply in the smallest unit.\"}},\"currentBurnFee()\":{\"details\":\"Returns the current burn fee (in basis points) based on elapsed days since deployment.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Overrides transfer to apply a dynamic burn fee. The sender sends (amount - burnAmount) to the recipient and burnAmount is burned.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Overrides transferFrom to apply a dynamic burn fee. The sender\\u2019s tokens are reduced by the burn fee before transfer.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"FallingWedgeToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"F/FallingWedgeToken.sol\":\"FallingWedgeToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"F/FallingWedgeToken.sol\":{\"keccak256\":\"0x3386b074ef033050b147af61c361496a9891b7f94e6f27f650951e8dc91f274f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://560514d3d7b5b7be2fae8424bafe1b0f5a1c8ffa866dc8865a023721a14765cf\",\"dweb:/ipfs/QmRvhvM67dETdK533jCcTTWHqUZ6VGXqPc8rC1q8qFHHPu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 944,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "minBurnFee",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 946,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "maxBurnFee",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 948,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "burnFeeIncreaseRate",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 950,
								"contract": "F/FallingWedgeToken.sol:FallingWedgeToken",
								"label": "deploymentTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"F/FallingWedgeToken.sol": {
				"ast": {
					"absolutePath": "F/FallingWedgeToken.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"FallingWedgeToken": [
							1163
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1164,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1164,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1164,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"601:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "601:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "601:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"608:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "608:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "608:7:6"
								}
							],
							"canonicalName": "FallingWedgeToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "168:402:6",
								"text": " @title FallingWedgeToken\n @dev ERC20 token with a dynamic burn fee that increases over time.\n The burn fee is calculated in basis points (1% = 100 basis points) using:\n     currentBurnFee = minBurnFee + (elapsedDays * burnFeeIncreaseRate)\n The fee is capped at maxBurnFee. On every transfer, the calculated burn fee is applied—\n burning a portion of the transferred tokens."
							},
							"fullyImplemented": true,
							"id": 1163,
							"linearizedBaseContracts": [
								1163,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "FallingWedgeToken",
							"nameLocation": "580:17:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d5b78d77",
									"id": 944,
									"mutability": "mutable",
									"name": "minBurnFee",
									"nameLocation": "695:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1163,
									"src": "680:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 943,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "680:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c81385c",
									"id": 946,
									"mutability": "mutable",
									"name": "maxBurnFee",
									"nameLocation": "785:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1163,
									"src": "770:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 945,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "770:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7d158101",
									"id": 948,
									"mutability": "mutable",
									"name": "burnFeeIncreaseRate",
									"nameLocation": "902:19:6",
									"nodeType": "VariableDeclaration",
									"scope": 1163,
									"src": "887:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 947,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "887:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ecda10f5",
									"id": 950,
									"mutability": "mutable",
									"name": "deploymentTime",
									"nameLocation": "1004:14:6",
									"nodeType": "VariableDeclaration",
									"scope": 1163,
									"src": "989:29:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 949,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "989:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1d84b60620d560a5bd3488e3ff622e0142d7ce33ecf7c5d24c17637ac97e048e",
									"id": 956,
									"name": "BurnFeeApplied",
									"nameLocation": "1031:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"indexed": false,
												"mutability": "mutable",
												"name": "currentFee",
												"nameLocation": "1054:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1046:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"indexed": false,
												"mutability": "mutable",
												"name": "burnAmount",
												"nameLocation": "1074:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 956,
												"src": "1066:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1066:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1045:40:6"
									},
									"src": "1025:61:6"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "1666:296:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 977,
																"name": "_minBurnFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 961,
																"src": "1684:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 978,
																"name": "_maxBurnFee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 963,
																"src": "1699:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1684:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696e206275726e20666565206d757374206265203c3d206d6178206275726e20666565",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1712:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0",
																"typeString": "literal_string \"Min burn fee must be <= max burn fee\""
															},
															"value": "Min burn fee must be <= max burn fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b247a51ec06f3960e4205baff94982b3a29c17232d808fe120ec82fa3cd3b0f0",
																"typeString": "literal_string \"Min burn fee must be <= max burn fee\""
															}
														],
														"id": 976,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1676:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1676:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "1676:75:6"
											},
											{
												"expression": {
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 983,
														"name": "minBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1761:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 984,
														"name": "_minBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "1774:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1761:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "1761:24:6"
											},
											{
												"expression": {
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 987,
														"name": "maxBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "1795:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 988,
														"name": "_maxBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "1808:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1795:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "1795:24:6"
											},
											{
												"expression": {
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 991,
														"name": "burnFeeIncreaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 948,
														"src": "1829:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 992,
														"name": "_burnFeeIncreaseRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "1851:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1829:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "1829:42:6"
											},
											{
												"expression": {
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 995,
														"name": "deploymentTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "1881:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 996,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1898:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1904:9:6",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1898:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1881:32:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 999,
												"nodeType": "ExpressionStatement",
												"src": "1881:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1001,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1929:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1933:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1929:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1003,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 959,
															"src": "1941:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1000,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1923:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1923:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "1923:32:6"
											}
										]
									},
									"documentation": {
										"id": 957,
										"nodeType": "StructuredDocumentation",
										"src": "1092:368:6",
										"text": " @dev Constructor sets token details, initial supply, and burn fee parameters.\n @param initialSupply Total token supply in the smallest unit.\n @param _minBurnFee Minimum burn fee in basis points.\n @param _maxBurnFee Maximum burn fee in basis points.\n @param _burnFeeIncreaseRate Burn fee increase rate per day in basis points."
									},
									"id": 1007,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "46616c6c696e6720576564676520546f6b656e",
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1616:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_5a792cd8e3e9c3d4636779b57590ba0a31540d1dc2fa0edd5766552e041cab6a",
														"typeString": "literal_string \"Falling Wedge Token\""
													},
													"value": "Falling Wedge Token"
												},
												{
													"hexValue": "465754",
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6e447e3e27075aa5b1b4c0b71fe1beb12d54d287aa8b98d1b37d6663b1476391",
														"typeString": "literal_string \"FWT\""
													},
													"value": "FWT"
												}
											],
											"id": 970,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 967,
												"name": "ERC20",
												"nameLocations": [
													"1610:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1610:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1610:35:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 972,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1654:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1658:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1654:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 974,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 971,
												"name": "Ownable",
												"nameLocations": [
													"1646:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1646:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1646:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1494:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1486:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1486:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "_minBurnFee",
												"nameLocation": "1525:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1517:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1517:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "_maxBurnFee",
												"nameLocation": "1554:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1546:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1546:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "_burnFeeIncreaseRate",
												"nameLocation": "1583:20:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1575:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1575:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1476:133:6"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1666:0:6"
									},
									"scope": 1163,
									"src": "1465:497:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "2139:246:6",
										"statements": [
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "elapsedDays",
														"nameLocation": "2157:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "2149:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2149:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1022,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1015,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2172:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2178:9:6",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2172:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1017,
																	"name": "deploymentTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "2190:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2172:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1019,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2171:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31",
														"id": 1020,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2208:6:6",
														"subdenomination": "days",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "1"
													},
													"src": "2171:43:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2149:65:6"
											},
											{
												"assignments": [
													1024
												],
												"declarations": [
													{
														"constant": false,
														"id": 1024,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2232:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1043,
														"src": "2224:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2224:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1031,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1025,
														"name": "minBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2238:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1026,
																	"name": "elapsedDays",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "2252:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1027,
																	"name": "burnFeeIncreaseRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "2266:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2252:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1029,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2251:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2238:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2224:62:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1032,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "2300:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1033,
														"name": "maxBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2306:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2300:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "2296:63:6",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "2318:41:6",
													"statements": [
														{
															"expression": {
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1035,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "2332:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1036,
																	"name": "maxBurnFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "2338:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2332:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1038,
															"nodeType": "ExpressionStatement",
															"src": "2332:16:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1041,
													"name": "fee",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1024,
													"src": "2375:3:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1042,
												"nodeType": "Return",
												"src": "2368:10:6"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "1968:110:6",
										"text": " @dev Returns the current burn fee (in basis points) based on elapsed days since deployment."
									},
									"functionSelector": "e17ac3d5",
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "currentBurnFee",
									"nameLocation": "2092:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2106:2:6"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "2130:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2130:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2129:9:6"
									},
									"scope": 1163,
									"src": "2083:302:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "2640:452:6",
										"statements": [
											{
												"assignments": [
													1056
												],
												"declarations": [
													{
														"constant": false,
														"id": 1056,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2658:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "2650:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1055,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2650:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1059,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1057,
														"name": "currentBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "2664:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1058,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2650:30:6"
											},
											{
												"assignments": [
													1061
												],
												"declarations": [
													{
														"constant": false,
														"id": 1061,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "2698:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "2690:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1060,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2690:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1068,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1067,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1062,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "2712:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1063,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "2721:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2712:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1065,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2711:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1066,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2728:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "2711:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2690:43:6"
											},
											{
												"assignments": [
													1070
												],
												"declarations": [
													{
														"constant": false,
														"id": 1070,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "2751:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "2743:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1069,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2743:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "2764:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1072,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "2773:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2764:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2743:40:6"
											},
											{
												"assignments": [
													1076
												],
												"declarations": [
													{
														"constant": false,
														"id": 1076,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2834:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1101,
														"src": "2829:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1075,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2829:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1082,
												"initialValue": {
													"arguments": [
														{
															"id": 1079,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1047,
															"src": "2859:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1080,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "2870:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1077,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2844:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FallingWedgeToken_$1163_$",
																"typeString": "type(contract super FallingWedgeToken)"
															}
														},
														"id": 1078,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2850:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "2844:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2844:37:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2829:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1084,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "2899:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2908:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2891:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2891:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1087,
												"nodeType": "ExpressionStatement",
												"src": "2891:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1089,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "2993:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2993:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "3007:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1088,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "2987:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2987:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "2987:31:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1095,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "3048:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1096,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "3053:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1094,
														"name": "BurnFeeApplied",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "3033:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3033:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1098,
												"nodeType": "EmitStatement",
												"src": "3028:36:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3081:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1054,
												"id": 1100,
												"nodeType": "Return",
												"src": "3074:11:6"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "2391:160:6",
										"text": " @dev Overrides transfer to apply a dynamic burn fee.\n The sender sends (amount - burnAmount) to the recipient and burnAmount is burned."
									},
									"functionSelector": "a9059cbb",
									"id": 1102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2565:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1051,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2616:8:6"
									},
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2582:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2574:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2574:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2601:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2593:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2573:35:6"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "2634:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2634:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:6:6"
									},
									"scope": 1163,
									"src": "2556:536:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "3356:458:6",
										"statements": [
											{
												"assignments": [
													1116
												],
												"declarations": [
													{
														"constant": false,
														"id": 1116,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3374:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "3366:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1115,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3366:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1117,
														"name": "currentBurnFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1044,
														"src": "3380:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3380:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3366:30:6"
											},
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "burnAmount",
														"nameLocation": "3414:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "3406:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1120,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1128,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1122,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "3428:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1123,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "3437:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3428:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1125,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3427:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3130303030",
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3444:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10000_by_1",
															"typeString": "int_const 10000"
														},
														"value": "10000"
													},
													"src": "3427:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3406:43:6"
											},
											{
												"assignments": [
													1130
												],
												"declarations": [
													{
														"constant": false,
														"id": 1130,
														"mutability": "mutable",
														"name": "sendAmount",
														"nameLocation": "3467:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "3459:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1129,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3459:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1134,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1131,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "3480:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1132,
														"name": "burnAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "3489:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3480:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3459:40:6"
											},
											{
												"assignments": [
													1136
												],
												"declarations": [
													{
														"constant": false,
														"id": 1136,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3550:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1161,
														"src": "3545:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1135,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3545:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1143,
												"initialValue": {
													"arguments": [
														{
															"id": 1139,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3579:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1140,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "3587:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1141,
															"name": "sendAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "3598:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1137,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3560:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FallingWedgeToken_$1163_$",
																"typeString": "type(contract super FallingWedgeToken)"
															}
														},
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3566:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "3560:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3560:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3545:64:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1145,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "3627:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73666572206661696c6564",
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3636:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															},
															"value": "Transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
																"typeString": "literal_string \"Transfer failed\""
															}
														],
														"id": 1144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3619:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3619:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1148,
												"nodeType": "ExpressionStatement",
												"src": "3619:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1150,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1105,
															"src": "3721:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "3729:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1149,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 672,
														"src": "3715:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3715:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1153,
												"nodeType": "ExpressionStatement",
												"src": "3715:25:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1155,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "3770:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1156,
															"name": "burnAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "3775:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1154,
														"name": "BurnFeeApplied",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 956,
														"src": "3755:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3755:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1158,
												"nodeType": "EmitStatement",
												"src": "3750:36:6"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3803:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 1114,
												"id": 1160,
												"nodeType": "Return",
												"src": "3796:11:6"
											}
										]
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "3098:149:6",
										"text": " @dev Overrides transferFrom to apply a dynamic burn fee.\n The sender’s tokens are reduced by the burn fee before transfer."
									},
									"functionSelector": "23b872dd",
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3261:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1111,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3332:8:6"
									},
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3282:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "3274:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3274:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3298:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "3290:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3290:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3317:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "3309:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3309:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3273:51:6"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "3350:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3350:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3349:6:6"
									},
									"scope": 1163,
									"src": "3252:562:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1164,
							"src": "571:3245:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								956
							]
						}
					],
					"src": "32:3785:6"
				},
				"id": 6
			}
		}
	}
}