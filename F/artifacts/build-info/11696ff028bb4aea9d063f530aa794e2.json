{
	"id": "11696ff028bb4aea9d063f530aa794e2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"F/FeeTiersERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title FeeTiersERC20\n * @dev ERC20 token with fee tiers. A fee is deducted on transfers based on the transfer amount.\n * The fee is sent to a fee recipient, and the net amount is delivered to the recipient.\n */\ncontract FeeTiersERC20 is ERC20, Ownable {\n    // Structure representing a fee tier.\n    struct FeeTier {\n        uint256 minAmount; // Minimum transfer amount (inclusive) for this tier.\n        uint256 maxAmount; // Maximum transfer amount (inclusive); 0 indicates no upper limit.\n        uint256 feeBP;     // Fee in basis points (e.g., 50 means 0.5%).\n    }\n\n    FeeTier[] public feeTiers;\n    // Address that receives the fees.\n    address public feeRecipient;\n\n    event FeeTierAdded(uint256 indexed index, uint256 minAmount, uint256 maxAmount, uint256 feeBP);\n    event FeeTierUpdated(uint256 indexed index, uint256 minAmount, uint256 maxAmount, uint256 feeBP);\n    event FeeTierRemoved(uint256 indexed index);\n    event FeeRecipientUpdated(address newFeeRecipient);\n\n    /**\n     * @dev Constructor initializes the token, mints initial supply, and sets the fee recipient.\n     * @param initialSupply Total token supply in the smallest unit.\n     * @param _feeRecipient Address that will receive fees.\n     */\n    constructor(uint256 initialSupply, address _feeRecipient)\n        ERC20(\"Fee Tiers ERC20 Token\", \"FTE20\")\n        Ownable(msg.sender)\n    {\n        require(_feeRecipient != address(0), \"Invalid fee recipient\");\n        feeRecipient = _feeRecipient;\n        _mint(msg.sender, initialSupply);\n    }\n\n    /// @dev Allows the owner to update the fee recipient.\n    function setFeeRecipient(address newRecipient) external onlyOwner {\n        require(newRecipient != address(0), \"Invalid fee recipient\");\n        feeRecipient = newRecipient;\n        emit FeeRecipientUpdated(newRecipient);\n    }\n\n    /// @dev Adds a new fee tier.\n    function addFeeTier(uint256 minAmount, uint256 maxAmount, uint256 feeBP) external onlyOwner {\n        require(feeBP <= 10000, \"Fee too high\");\n        feeTiers.push(FeeTier(minAmount, maxAmount, feeBP));\n        emit FeeTierAdded(feeTiers.length - 1, minAmount, maxAmount, feeBP);\n    }\n\n    /// @dev Updates an existing fee tier.\n    function updateFeeTier(uint256 index, uint256 minAmount, uint256 maxAmount, uint256 feeBP) external onlyOwner {\n        require(index < feeTiers.length, \"Invalid index\");\n        require(feeBP <= 10000, \"Fee too high\");\n        feeTiers[index] = FeeTier(minAmount, maxAmount, feeBP);\n        emit FeeTierUpdated(index, minAmount, maxAmount, feeBP);\n    }\n\n    /// @dev Removes a fee tier.\n    function removeFeeTier(uint256 index) external onlyOwner {\n        require(index < feeTiers.length, \"Invalid index\");\n        feeTiers[index] = feeTiers[feeTiers.length - 1];\n        feeTiers.pop();\n        emit FeeTierRemoved(index);\n    }\n\n    /// @dev Returns the fee (in token units) for a given transfer amount.\n    function getFeeForAmount(uint256 amount) public view returns (uint256 fee) {\n        for (uint256 i = 0; i < feeTiers.length; i++) {\n            FeeTier memory tier = feeTiers[i];\n            if (amount >= tier.minAmount && (tier.maxAmount == 0 || amount <= tier.maxAmount)) {\n                return (amount * tier.feeBP) / 10000;\n            }\n        }\n        return 0;\n    }\n\n    /**\n     * @dev Overrides transfer to deduct fee based on fee tiers.\n     */\n    function transfer(address recipient, uint256 amount) public override returns (bool) {\n        uint256 fee = getFeeForAmount(amount);\n        uint256 netAmount = amount - fee;\n        // First, transfer the fee to feeRecipient.\n        super.transfer(feeRecipient, fee);\n        // Then, transfer the net amount to the recipient.\n        return super.transfer(recipient, netAmount);\n    }\n\n    /**\n     * @dev Overrides transferFrom to deduct fee based on fee tiers.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {\n        uint256 fee = getFeeForAmount(amount);\n        uint256 netAmount = amount - fee;\n        // Transfer fee from sender to feeRecipient.\n        super.transferFrom(sender, feeRecipient, fee);\n        // Transfer net amount from sender to recipient.\n        return super.transferFrom(sender, recipient, netAmount);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"F/FeeTiersERC20.sol": {
				"FeeTiersERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_feeRecipient",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newFeeRecipient",
									"type": "address"
								}
							],
							"name": "FeeRecipientUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feeBP",
									"type": "uint256"
								}
							],
							"name": "FeeTierAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "FeeTierRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "feeBP",
									"type": "uint256"
								}
							],
							"name": "FeeTierUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "minAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeBP",
									"type": "uint256"
								}
							],
							"name": "addFeeTier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeRecipient",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "feeTiers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "minAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeBP",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "getFeeForAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "removeFeeTier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRecipient",
									"type": "address"
								}
							],
							"name": "setFeeRecipient",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeBP",
									"type": "uint256"
								}
							],
							"name": "updateFeeTier",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 token with fee tiers. A fee is deducted on transfers based on the transfer amount. The fee is sent to a fee recipient, and the net amount is delivered to the recipient.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addFeeTier(uint256,uint256,uint256)": {
								"details": "Adds a new fee tier."
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor initializes the token, mints initial supply, and sets the fee recipient.",
								"params": {
									"_feeRecipient": "Address that will receive fees.",
									"initialSupply": "Total token supply in the smallest unit."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getFeeForAmount(uint256)": {
								"details": "Returns the fee (in token units) for a given transfer amount."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeFeeTier(uint256)": {
								"details": "Removes a fee tier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setFeeRecipient(address)": {
								"details": "Allows the owner to update the fee recipient."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "Overrides transfer to deduct fee based on fee tiers."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Overrides transferFrom to deduct fee based on fee tiers."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"updateFeeTier(uint256,uint256,uint256,uint256)": {
								"details": "Updates an existing fee tier."
							}
						},
						"title": "FeeTiersERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"F/FeeTiersERC20.sol\":386:4459  contract FeeTiersERC20 is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"F/FeeTiersERC20.sol\":1406:1702  constructor(uint256 initialSupply, address _feeRecipient)... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"F/FeeTiersERC20.sol\":1528:1538  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x15\n  dup2\n  mstore\n  0x20\n  add\n  0x46656520546965727320455243323020546f6b656e0000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4654453230000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"F/FeeTiersERC20.sol\":1587:1588  0 */\n  0x00\n    /* \"F/FeeTiersERC20.sol\":1562:1589  _feeRecipient != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"F/FeeTiersERC20.sol\":1562:1575  _feeRecipient */\n  dup2\n    /* \"F/FeeTiersERC20.sol\":1562:1589  _feeRecipient != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"F/FeeTiersERC20.sol\":1554:1615  require(_feeRecipient != address(0), \"Invalid fee recipient\") */\n  tag_18\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_19\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_18:\n    /* \"F/FeeTiersERC20.sol\":1640:1653  _feeRecipient */\n  dup1\n    /* \"F/FeeTiersERC20.sol\":1625:1637  feeRecipient */\n  0x07\n  0x00\n    /* \"F/FeeTiersERC20.sol\":1625:1653  feeRecipient = _feeRecipient */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"F/FeeTiersERC20.sol\":1663:1695  _mint(msg.sender, initialSupply) */\n  tag_21\n    /* \"F/FeeTiersERC20.sol\":1669:1679  msg.sender */\n  caller\n    /* \"F/FeeTiersERC20.sol\":1681:1694  initialSupply */\n  dup4\n    /* \"F/FeeTiersERC20.sol\":1663:1668  _mint */\n  shl(0x20, tag_22)\n    /* \"F/FeeTiersERC20.sol\":1663:1695  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_21:\n    /* \"F/FeeTiersERC20.sol\":1406:1702  constructor(uint256 initialSupply, address _feeRecipient)... */\n  pop\n  pop\n    /* \"F/FeeTiersERC20.sol\":386:4459  contract FeeTiersERC20 is ERC20, Ownable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_22:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_27\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_27:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_28\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_29)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_32\n  swap2\n  swap1\n  tag_33\n  jump\t// in\ntag_32:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_34)\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_36\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_39)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_39:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_43:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_45:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_46:\n    /* \"#utility.yul\":490:514   */\n  tag_83\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_45\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_84\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_84:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_47:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_86\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_46\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_48:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:922   */\ntag_49:\n    /* \"#utility.yul\":863:870   */\n  0x00\n    /* \"#utility.yul\":892:916   */\n  tag_89\n    /* \"#utility.yul\":910:915   */\n  dup3\n    /* \"#utility.yul\":892:916   */\n  tag_48\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":881:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_50:\n    /* \"#utility.yul\":1001:1025   */\n  tag_91\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_49\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_92\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  0x00\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_92:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_51:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_94\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_50\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  0x00\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_97\n  tag_43\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":1309:1428   */\ntag_96:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_98\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_47\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_99\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_51\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1718:1817   */\ntag_52:\n    /* \"#utility.yul\":1770:1776   */\n  0x00\n    /* \"#utility.yul\":1804:1809   */\n  dup2\n    /* \"#utility.yul\":1798:1810   */\n  mload\n    /* \"#utility.yul\":1788:1810   */\n  swap1\n  pop\n    /* \"#utility.yul\":1718:1817   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1823:2003   */\ntag_53:\n    /* \"#utility.yul\":1871:1948   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1868:1869   */\n  0x00\n    /* \"#utility.yul\":1861:1949   */\n  mstore\n    /* \"#utility.yul\":1968:1972   */\n  0x41\n    /* \"#utility.yul\":1965:1966   */\n  0x04\n    /* \"#utility.yul\":1958:1973   */\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x24\n    /* \"#utility.yul\":1989:1990   */\n  0x00\n    /* \"#utility.yul\":1982:1997   */\n  revert\n    /* \"#utility.yul\":2009:2189   */\ntag_54:\n    /* \"#utility.yul\":2057:2134   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":2054:2055   */\n  0x00\n    /* \"#utility.yul\":2047:2135   */\n  mstore\n    /* \"#utility.yul\":2154:2158   */\n  0x22\n    /* \"#utility.yul\":2151:2152   */\n  0x04\n    /* \"#utility.yul\":2144:2159   */\n  mstore\n    /* \"#utility.yul\":2178:2182   */\n  0x24\n    /* \"#utility.yul\":2175:2176   */\n  0x00\n    /* \"#utility.yul\":2168:2183   */\n  revert\n    /* \"#utility.yul\":2195:2515   */\ntag_55:\n    /* \"#utility.yul\":2239:2245   */\n  0x00\n    /* \"#utility.yul\":2276:2277   */\n  0x02\n    /* \"#utility.yul\":2270:2274   */\n  dup3\n    /* \"#utility.yul\":2266:2278   */\n  div\n    /* \"#utility.yul\":2256:2278   */\n  swap1\n  pop\n    /* \"#utility.yul\":2323:2324   */\n  0x01\n    /* \"#utility.yul\":2317:2321   */\n  dup3\n    /* \"#utility.yul\":2313:2325   */\n  and\n    /* \"#utility.yul\":2344:2362   */\n  dup1\n    /* \"#utility.yul\":2334:2415   */\n  tag_104\n  jumpi\n    /* \"#utility.yul\":2400:2404   */\n  0x7f\n    /* \"#utility.yul\":2392:2398   */\n  dup3\n    /* \"#utility.yul\":2388:2405   */\n  and\n    /* \"#utility.yul\":2378:2405   */\n  swap2\n  pop\n    /* \"#utility.yul\":2334:2415   */\ntag_104:\n    /* \"#utility.yul\":2462:2464   */\n  0x20\n    /* \"#utility.yul\":2454:2460   */\n  dup3\n    /* \"#utility.yul\":2451:2465   */\n  lt\n    /* \"#utility.yul\":2431:2449   */\n  dup2\n    /* \"#utility.yul\":2428:2466   */\n  sub\n    /* \"#utility.yul\":2425:2509   */\n  tag_105\n  jumpi\n    /* \"#utility.yul\":2481:2499   */\n  tag_106\n  tag_54\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2425:2509   */\ntag_105:\n    /* \"#utility.yul\":2246:2515   */\n  pop\n    /* \"#utility.yul\":2195:2515   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2521:2662   */\ntag_56:\n    /* \"#utility.yul\":2570:2574   */\n  0x00\n    /* \"#utility.yul\":2593:2596   */\n  dup2\n    /* \"#utility.yul\":2585:2596   */\n  swap1\n  pop\n    /* \"#utility.yul\":2616:2619   */\n  dup2\n    /* \"#utility.yul\":2613:2614   */\n  0x00\n    /* \"#utility.yul\":2606:2620   */\n  mstore\n    /* \"#utility.yul\":2650:2654   */\n  0x20\n    /* \"#utility.yul\":2647:2648   */\n  0x00\n    /* \"#utility.yul\":2637:2655   */\n  keccak256\n    /* \"#utility.yul\":2629:2655   */\n  swap1\n  pop\n    /* \"#utility.yul\":2521:2662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2668:2761   */\ntag_57:\n    /* \"#utility.yul\":2705:2711   */\n  0x00\n    /* \"#utility.yul\":2752:2754   */\n  0x20\n    /* \"#utility.yul\":2747:2749   */\n  0x1f\n    /* \"#utility.yul\":2740:2745   */\n  dup4\n    /* \"#utility.yul\":2736:2750   */\n  add\n    /* \"#utility.yul\":2732:2755   */\n  div\n    /* \"#utility.yul\":2722:2755   */\n  swap1\n  pop\n    /* \"#utility.yul\":2668:2761   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2767:2874   */\ntag_58:\n    /* \"#utility.yul\":2811:2819   */\n  0x00\n    /* \"#utility.yul\":2861:2866   */\n  dup3\n    /* \"#utility.yul\":2855:2859   */\n  dup3\n    /* \"#utility.yul\":2851:2867   */\n  shl\n    /* \"#utility.yul\":2830:2867   */\n  swap1\n  pop\n    /* \"#utility.yul\":2767:2874   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2880:3273   */\ntag_59:\n    /* \"#utility.yul\":2949:2955   */\n  0x00\n    /* \"#utility.yul\":2999:3000   */\n  0x08\n    /* \"#utility.yul\":2987:2997   */\n  dup4\n    /* \"#utility.yul\":2983:3001   */\n  mul\n    /* \"#utility.yul\":3022:3119   */\n  tag_111\n    /* \"#utility.yul\":3052:3118   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":3041:3050   */\n  dup3\n    /* \"#utility.yul\":3022:3119   */\n  tag_58\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3140:3179   */\n  tag_112\n    /* \"#utility.yul\":3170:3178   */\n  dup7\n    /* \"#utility.yul\":3159:3168   */\n  dup4\n    /* \"#utility.yul\":3140:3179   */\n  tag_58\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3128:3179   */\n  swap6\n  pop\n    /* \"#utility.yul\":3212:3216   */\n  dup1\n    /* \"#utility.yul\":3208:3217   */\n  not\n    /* \"#utility.yul\":3201:3206   */\n  dup5\n    /* \"#utility.yul\":3197:3218   */\n  and\n    /* \"#utility.yul\":3188:3218   */\n  swap4\n  pop\n    /* \"#utility.yul\":3261:3265   */\n  dup1\n    /* \"#utility.yul\":3251:3259   */\n  dup7\n    /* \"#utility.yul\":3247:3266   */\n  and\n    /* \"#utility.yul\":3240:3245   */\n  dup5\n    /* \"#utility.yul\":3237:3267   */\n  or\n    /* \"#utility.yul\":3227:3267   */\n  swap3\n  pop\n    /* \"#utility.yul\":2956:3273   */\n  pop\n  pop\n    /* \"#utility.yul\":2880:3273   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:3339   */\ntag_60:\n    /* \"#utility.yul\":3307:3310   */\n  0x00\n    /* \"#utility.yul\":3328:3333   */\n  dup2\n    /* \"#utility.yul\":3321:3333   */\n  swap1\n  pop\n    /* \"#utility.yul\":3279:3339   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3345:3487   */\ntag_61:\n    /* \"#utility.yul\":3395:3404   */\n  0x00\n    /* \"#utility.yul\":3428:3481   */\n  tag_115\n    /* \"#utility.yul\":3446:3480   */\n  tag_116\n    /* \"#utility.yul\":3455:3479   */\n  tag_117\n    /* \"#utility.yul\":3473:3478   */\n  dup5\n    /* \"#utility.yul\":3455:3479   */\n  tag_45\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3446:3480   */\n  tag_60\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3428:3481   */\n  tag_45\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3415:3481   */\n  swap1\n  pop\n    /* \"#utility.yul\":3345:3487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3493:3568   */\ntag_62:\n    /* \"#utility.yul\":3536:3539   */\n  0x00\n    /* \"#utility.yul\":3557:3562   */\n  dup2\n    /* \"#utility.yul\":3550:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3493:3568   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3574:3843   */\ntag_63:\n    /* \"#utility.yul\":3684:3723   */\n  tag_120\n    /* \"#utility.yul\":3715:3722   */\n  dup4\n    /* \"#utility.yul\":3684:3723   */\n  tag_61\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3745:3836   */\n  tag_121\n    /* \"#utility.yul\":3794:3835   */\n  tag_122\n    /* \"#utility.yul\":3818:3834   */\n  dup3\n    /* \"#utility.yul\":3794:3835   */\n  tag_62\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3786:3792   */\n  dup5\n    /* \"#utility.yul\":3779:3783   */\n  dup5\n    /* \"#utility.yul\":3773:3784   */\n  sload\n    /* \"#utility.yul\":3745:3836   */\n  tag_59\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":3739:3743   */\n  dup3\n    /* \"#utility.yul\":3732:3837   */\n  sstore\n    /* \"#utility.yul\":3650:3843   */\n  pop\n    /* \"#utility.yul\":3574:3843   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3849:3922   */\ntag_64:\n    /* \"#utility.yul\":3894:3897   */\n  0x00\n    /* \"#utility.yul\":3915:3916   */\n  0x00\n    /* \"#utility.yul\":3908:3916   */\n  swap1\n  pop\n    /* \"#utility.yul\":3849:3922   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3928:4117   */\ntag_65:\n    /* \"#utility.yul\":4005:4037   */\n  tag_125\n  tag_64\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4046:4111   */\n  tag_126\n    /* \"#utility.yul\":4104:4110   */\n  dup2\n    /* \"#utility.yul\":4096:4102   */\n  dup5\n    /* \"#utility.yul\":4090:4094   */\n  dup5\n    /* \"#utility.yul\":4046:4111   */\n  tag_63\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":3981:4117   */\n  pop\n    /* \"#utility.yul\":3928:4117   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4123:4309   */\ntag_66:\n    /* \"#utility.yul\":4183:4303   */\ntag_128:\n    /* \"#utility.yul\":4200:4203   */\n  dup2\n    /* \"#utility.yul\":4193:4198   */\n  dup2\n    /* \"#utility.yul\":4190:4204   */\n  lt\n    /* \"#utility.yul\":4183:4303   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4254:4293   */\n  tag_131\n    /* \"#utility.yul\":4291:4292   */\n  0x00\n    /* \"#utility.yul\":4284:4289   */\n  dup3\n    /* \"#utility.yul\":4254:4293   */\n  tag_65\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4227:4228   */\n  0x01\n    /* \"#utility.yul\":4220:4225   */\n  dup2\n    /* \"#utility.yul\":4216:4229   */\n  add\n    /* \"#utility.yul\":4207:4229   */\n  swap1\n  pop\n    /* \"#utility.yul\":4183:4303   */\n  jump(tag_128)\ntag_130:\n    /* \"#utility.yul\":4123:4309   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4315:4858   */\ntag_67:\n    /* \"#utility.yul\":4416:4418   */\n  0x1f\n    /* \"#utility.yul\":4411:4414   */\n  dup3\n    /* \"#utility.yul\":4408:4419   */\n  gt\n    /* \"#utility.yul\":4405:4851   */\n  iszero\n  tag_133\n  jumpi\n    /* \"#utility.yul\":4450:4488   */\n  tag_134\n    /* \"#utility.yul\":4482:4487   */\n  dup2\n    /* \"#utility.yul\":4450:4488   */\n  tag_56\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":4534:4563   */\n  tag_135\n    /* \"#utility.yul\":4552:4562   */\n  dup5\n    /* \"#utility.yul\":4534:4563   */\n  tag_57\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4524:4532   */\n  dup2\n    /* \"#utility.yul\":4520:4564   */\n  add\n    /* \"#utility.yul\":4717:4719   */\n  0x20\n    /* \"#utility.yul\":4705:4715   */\n  dup6\n    /* \"#utility.yul\":4702:4720   */\n  lt\n    /* \"#utility.yul\":4699:4748   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":4738:4746   */\n  dup2\n    /* \"#utility.yul\":4723:4746   */\n  swap1\n  pop\n    /* \"#utility.yul\":4699:4748   */\ntag_136:\n    /* \"#utility.yul\":4761:4841   */\n  tag_137\n    /* \"#utility.yul\":4817:4839   */\n  tag_138\n    /* \"#utility.yul\":4835:4838   */\n  dup6\n    /* \"#utility.yul\":4817:4839   */\n  tag_57\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":4807:4815   */\n  dup4\n    /* \"#utility.yul\":4803:4840   */\n  add\n    /* \"#utility.yul\":4790:4801   */\n  dup3\n    /* \"#utility.yul\":4761:4841   */\n  tag_66\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4420:4851   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4851   */\ntag_133:\n    /* \"#utility.yul\":4315:4858   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4864:4981   */\ntag_68:\n    /* \"#utility.yul\":4918:4926   */\n  0x00\n    /* \"#utility.yul\":4968:4973   */\n  dup3\n    /* \"#utility.yul\":4962:4966   */\n  dup3\n    /* \"#utility.yul\":4958:4974   */\n  shr\n    /* \"#utility.yul\":4937:4974   */\n  swap1\n  pop\n    /* \"#utility.yul\":4864:4981   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4987:5156   */\ntag_69:\n    /* \"#utility.yul\":5031:5037   */\n  0x00\n    /* \"#utility.yul\":5064:5115   */\n  tag_141\n    /* \"#utility.yul\":5112:5113   */\n  0x00\n    /* \"#utility.yul\":5108:5114   */\n  not\n    /* \"#utility.yul\":5100:5105   */\n  dup5\n    /* \"#utility.yul\":5097:5098   */\n  0x08\n    /* \"#utility.yul\":5093:5106   */\n  mul\n    /* \"#utility.yul\":5064:5115   */\n  tag_68\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5060:5116   */\n  not\n    /* \"#utility.yul\":5145:5149   */\n  dup1\n    /* \"#utility.yul\":5139:5143   */\n  dup4\n    /* \"#utility.yul\":5135:5150   */\n  and\n    /* \"#utility.yul\":5125:5150   */\n  swap2\n  pop\n    /* \"#utility.yul\":5038:5156   */\n  pop\n    /* \"#utility.yul\":4987:5156   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5161:5456   */\ntag_70:\n    /* \"#utility.yul\":5237:5241   */\n  0x00\n    /* \"#utility.yul\":5383:5412   */\n  tag_143\n    /* \"#utility.yul\":5408:5411   */\n  dup4\n    /* \"#utility.yul\":5402:5406   */\n  dup4\n    /* \"#utility.yul\":5383:5412   */\n  tag_69\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5375:5412   */\n  swap2\n  pop\n    /* \"#utility.yul\":5445:5448   */\n  dup3\n    /* \"#utility.yul\":5442:5443   */\n  0x02\n    /* \"#utility.yul\":5438:5449   */\n  mul\n    /* \"#utility.yul\":5432:5436   */\n  dup3\n    /* \"#utility.yul\":5429:5450   */\n  or\n    /* \"#utility.yul\":5421:5450   */\n  swap1\n  pop\n    /* \"#utility.yul\":5161:5456   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5461:6856   */\ntag_9:\n    /* \"#utility.yul\":5578:5615   */\n  tag_145\n    /* \"#utility.yul\":5611:5614   */\n  dup3\n    /* \"#utility.yul\":5578:5615   */\n  tag_52\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":5680:5698   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5672:5678   */\n  dup2\n    /* \"#utility.yul\":5669:5699   */\n  gt\n    /* \"#utility.yul\":5666:5722   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":5702:5720   */\n  tag_147\n  tag_53\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5666:5722   */\ntag_146:\n    /* \"#utility.yul\":5746:5784   */\n  tag_148\n    /* \"#utility.yul\":5778:5782   */\n  dup3\n    /* \"#utility.yul\":5772:5783   */\n  sload\n    /* \"#utility.yul\":5746:5784   */\n  tag_55\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5831:5898   */\n  tag_149\n    /* \"#utility.yul\":5891:5897   */\n  dup3\n    /* \"#utility.yul\":5883:5889   */\n  dup3\n    /* \"#utility.yul\":5877:5881   */\n  dup6\n    /* \"#utility.yul\":5831:5898   */\n  tag_67\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":5925:5926   */\n  0x00\n    /* \"#utility.yul\":5949:5953   */\n  0x20\n    /* \"#utility.yul\":5936:5953   */\n  swap1\n  pop\n    /* \"#utility.yul\":5981:5983   */\n  0x1f\n    /* \"#utility.yul\":5973:5979   */\n  dup4\n    /* \"#utility.yul\":5970:5984   */\n  gt\n    /* \"#utility.yul\":5998:5999   */\n  0x01\n    /* \"#utility.yul\":5993:6611   */\n  dup2\n  eq\n  tag_151\n  jumpi\n    /* \"#utility.yul\":6655:6656   */\n  0x00\n    /* \"#utility.yul\":6672:6678   */\n  dup5\n    /* \"#utility.yul\":6669:6746   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":6721:6730   */\n  dup3\n    /* \"#utility.yul\":6716:6719   */\n  dup8\n    /* \"#utility.yul\":6712:6731   */\n  add\n    /* \"#utility.yul\":6706:6732   */\n  mload\n    /* \"#utility.yul\":6697:6732   */\n  swap1\n  pop\n    /* \"#utility.yul\":6669:6746   */\ntag_152:\n    /* \"#utility.yul\":6772:6839   */\n  tag_153\n    /* \"#utility.yul\":6832:6838   */\n  dup6\n    /* \"#utility.yul\":6825:6830   */\n  dup3\n    /* \"#utility.yul\":6772:6839   */\n  tag_70\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6766:6770   */\n  dup7\n    /* \"#utility.yul\":6759:6840   */\n  sstore\n    /* \"#utility.yul\":6628:6850   */\n  pop\n    /* \"#utility.yul\":5963:6850   */\n  jump(tag_150)\n    /* \"#utility.yul\":5993:6611   */\ntag_151:\n    /* \"#utility.yul\":6045:6049   */\n  0x1f\n    /* \"#utility.yul\":6041:6050   */\n  not\n    /* \"#utility.yul\":6033:6039   */\n  dup5\n    /* \"#utility.yul\":6029:6051   */\n  and\n    /* \"#utility.yul\":6079:6116   */\n  tag_154\n    /* \"#utility.yul\":6111:6115   */\n  dup7\n    /* \"#utility.yul\":6079:6116   */\n  tag_56\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6138:6139   */\n  0x00\n    /* \"#utility.yul\":6152:6360   */\ntag_155:\n    /* \"#utility.yul\":6166:6173   */\n  dup3\n    /* \"#utility.yul\":6163:6164   */\n  dup2\n    /* \"#utility.yul\":6160:6174   */\n  lt\n    /* \"#utility.yul\":6152:6360   */\n  iszero\n  tag_157\n  jumpi\n    /* \"#utility.yul\":6245:6254   */\n  dup5\n    /* \"#utility.yul\":6240:6243   */\n  dup10\n    /* \"#utility.yul\":6236:6255   */\n  add\n    /* \"#utility.yul\":6230:6256   */\n  mload\n    /* \"#utility.yul\":6222:6228   */\n  dup3\n    /* \"#utility.yul\":6215:6257   */\n  sstore\n    /* \"#utility.yul\":6296:6297   */\n  0x01\n    /* \"#utility.yul\":6288:6294   */\n  dup3\n    /* \"#utility.yul\":6284:6298   */\n  add\n    /* \"#utility.yul\":6274:6298   */\n  swap2\n  pop\n    /* \"#utility.yul\":6343:6345   */\n  0x20\n    /* \"#utility.yul\":6332:6341   */\n  dup6\n    /* \"#utility.yul\":6328:6346   */\n  add\n    /* \"#utility.yul\":6315:6346   */\n  swap5\n  pop\n    /* \"#utility.yul\":6189:6193   */\n  0x20\n    /* \"#utility.yul\":6186:6187   */\n  dup2\n    /* \"#utility.yul\":6182:6194   */\n  add\n    /* \"#utility.yul\":6177:6194   */\n  swap1\n  pop\n    /* \"#utility.yul\":6152:6360   */\n  jump(tag_155)\ntag_157:\n    /* \"#utility.yul\":6388:6394   */\n  dup7\n    /* \"#utility.yul\":6379:6386   */\n  dup4\n    /* \"#utility.yul\":6376:6395   */\n  lt\n    /* \"#utility.yul\":6373:6552   */\n  iszero\n  tag_158\n  jumpi\n    /* \"#utility.yul\":6446:6455   */\n  dup5\n    /* \"#utility.yul\":6441:6444   */\n  dup10\n    /* \"#utility.yul\":6437:6456   */\n  add\n    /* \"#utility.yul\":6431:6457   */\n  mload\n    /* \"#utility.yul\":6489:6537   */\n  tag_159\n    /* \"#utility.yul\":6531:6535   */\n  0x1f\n    /* \"#utility.yul\":6523:6529   */\n  dup10\n    /* \"#utility.yul\":6519:6536   */\n  and\n    /* \"#utility.yul\":6508:6517   */\n  dup3\n    /* \"#utility.yul\":6489:6537   */\n  tag_69\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6481:6487   */\n  dup4\n    /* \"#utility.yul\":6474:6538   */\n  sstore\n    /* \"#utility.yul\":6396:6552   */\n  pop\n    /* \"#utility.yul\":6373:6552   */\ntag_158:\n    /* \"#utility.yul\":6598:6599   */\n  0x01\n    /* \"#utility.yul\":6594:6595   */\n  0x02\n    /* \"#utility.yul\":6586:6592   */\n  dup9\n    /* \"#utility.yul\":6582:6596   */\n  mul\n    /* \"#utility.yul\":6578:6600   */\n  add\n    /* \"#utility.yul\":6572:6576   */\n  dup9\n    /* \"#utility.yul\":6565:6601   */\n  sstore\n    /* \"#utility.yul\":6000:6611   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5963:6850   */\ntag_150:\n  pop\n    /* \"#utility.yul\":5553:6856   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5461:6856   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6862:6980   */\ntag_71:\n    /* \"#utility.yul\":6949:6973   */\n  tag_161\n    /* \"#utility.yul\":6967:6972   */\n  dup2\n    /* \"#utility.yul\":6949:6973   */\n  tag_49\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6944:6947   */\n  dup3\n    /* \"#utility.yul\":6937:6974   */\n  mstore\n    /* \"#utility.yul\":6862:6980   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6986:7208   */\ntag_14:\n    /* \"#utility.yul\":7079:7083   */\n  0x00\n    /* \"#utility.yul\":7117:7119   */\n  0x20\n    /* \"#utility.yul\":7106:7115   */\n  dup3\n    /* \"#utility.yul\":7102:7120   */\n  add\n    /* \"#utility.yul\":7094:7120   */\n  swap1\n  pop\n    /* \"#utility.yul\":7130:7201   */\n  tag_163\n    /* \"#utility.yul\":7198:7199   */\n  0x00\n    /* \"#utility.yul\":7187:7196   */\n  dup4\n    /* \"#utility.yul\":7183:7200   */\n  add\n    /* \"#utility.yul\":7174:7180   */\n  dup5\n    /* \"#utility.yul\":7130:7201   */\n  tag_71\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":6986:7208   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7214:7383   */\ntag_72:\n    /* \"#utility.yul\":7298:7309   */\n  0x00\n    /* \"#utility.yul\":7332:7338   */\n  dup3\n    /* \"#utility.yul\":7327:7330   */\n  dup3\n    /* \"#utility.yul\":7320:7339   */\n  mstore\n    /* \"#utility.yul\":7372:7376   */\n  0x20\n    /* \"#utility.yul\":7367:7370   */\n  dup3\n    /* \"#utility.yul\":7363:7377   */\n  add\n    /* \"#utility.yul\":7348:7377   */\n  swap1\n  pop\n    /* \"#utility.yul\":7214:7383   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7389:7560   */\ntag_73:\n    /* \"#utility.yul\":7529:7552   */\n  0x496e76616c69642066656520726563697069656e740000000000000000000000\n    /* \"#utility.yul\":7525:7526   */\n  0x00\n    /* \"#utility.yul\":7517:7523   */\n  dup3\n    /* \"#utility.yul\":7513:7527   */\n  add\n    /* \"#utility.yul\":7506:7553   */\n  mstore\n    /* \"#utility.yul\":7389:7560   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7566:7932   */\ntag_74:\n    /* \"#utility.yul\":7708:7711   */\n  0x00\n    /* \"#utility.yul\":7729:7796   */\n  tag_167\n    /* \"#utility.yul\":7793:7795   */\n  0x15\n    /* \"#utility.yul\":7788:7791   */\n  dup4\n    /* \"#utility.yul\":7729:7796   */\n  tag_72\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7722:7796   */\n  swap2\n  pop\n    /* \"#utility.yul\":7805:7898   */\n  tag_168\n    /* \"#utility.yul\":7894:7897   */\n  dup3\n    /* \"#utility.yul\":7805:7898   */\n  tag_73\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7923:7925   */\n  0x20\n    /* \"#utility.yul\":7918:7921   */\n  dup3\n    /* \"#utility.yul\":7914:7926   */\n  add\n    /* \"#utility.yul\":7907:7926   */\n  swap1\n  pop\n    /* \"#utility.yul\":7566:7932   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7938:8357   */\ntag_20:\n    /* \"#utility.yul\":8104:8108   */\n  0x00\n    /* \"#utility.yul\":8142:8144   */\n  0x20\n    /* \"#utility.yul\":8131:8140   */\n  dup3\n    /* \"#utility.yul\":8127:8145   */\n  add\n    /* \"#utility.yul\":8119:8145   */\n  swap1\n  pop\n    /* \"#utility.yul\":8191:8200   */\n  dup2\n    /* \"#utility.yul\":8185:8189   */\n  dup2\n    /* \"#utility.yul\":8181:8201   */\n  sub\n    /* \"#utility.yul\":8177:8178   */\n  0x00\n    /* \"#utility.yul\":8166:8175   */\n  dup4\n    /* \"#utility.yul\":8162:8179   */\n  add\n    /* \"#utility.yul\":8155:8202   */\n  mstore\n    /* \"#utility.yul\":8219:8350   */\n  tag_170\n    /* \"#utility.yul\":8345:8349   */\n  dup2\n    /* \"#utility.yul\":8219:8350   */\n  tag_74\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":8211:8350   */\n  swap1\n  pop\n    /* \"#utility.yul\":7938:8357   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8363:8543   */\ntag_75:\n    /* \"#utility.yul\":8411:8488   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":8408:8409   */\n  0x00\n    /* \"#utility.yul\":8401:8489   */\n  mstore\n    /* \"#utility.yul\":8508:8512   */\n  0x11\n    /* \"#utility.yul\":8505:8506   */\n  0x04\n    /* \"#utility.yul\":8498:8513   */\n  mstore\n    /* \"#utility.yul\":8532:8536   */\n  0x24\n    /* \"#utility.yul\":8529:8530   */\n  0x00\n    /* \"#utility.yul\":8522:8537   */\n  revert\n    /* \"#utility.yul\":8549:8740   */\ntag_33:\n    /* \"#utility.yul\":8589:8592   */\n  0x00\n    /* \"#utility.yul\":8608:8628   */\n  tag_173\n    /* \"#utility.yul\":8626:8627   */\n  dup3\n    /* \"#utility.yul\":8608:8628   */\n  tag_45\n  jump\t// in\ntag_173:\n    /* \"#utility.yul\":8603:8628   */\n  swap2\n  pop\n    /* \"#utility.yul\":8642:8662   */\n  tag_174\n    /* \"#utility.yul\":8660:8661   */\n  dup4\n    /* \"#utility.yul\":8642:8662   */\n  tag_45\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":8637:8662   */\n  swap3\n  pop\n    /* \"#utility.yul\":8685:8686   */\n  dup3\n    /* \"#utility.yul\":8682:8683   */\n  dup3\n    /* \"#utility.yul\":8678:8687   */\n  add\n    /* \"#utility.yul\":8671:8687   */\n  swap1\n  pop\n    /* \"#utility.yul\":8706:8709   */\n  dup1\n    /* \"#utility.yul\":8703:8704   */\n  dup3\n    /* \"#utility.yul\":8700:8710   */\n  gt\n    /* \"#utility.yul\":8697:8733   */\n  iszero\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8713:8731   */\n  tag_176\n  tag_75\n  jump\t// in\ntag_176:\n    /* \"#utility.yul\":8697:8733   */\ntag_175:\n    /* \"#utility.yul\":8549:8740   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8746:8864   */\ntag_76:\n    /* \"#utility.yul\":8833:8857   */\n  tag_178\n    /* \"#utility.yul\":8851:8856   */\n  dup2\n    /* \"#utility.yul\":8833:8857   */\n  tag_45\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8828:8831   */\n  dup3\n    /* \"#utility.yul\":8821:8858   */\n  mstore\n    /* \"#utility.yul\":8746:8864   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":8870:9312   */\ntag_37:\n    /* \"#utility.yul\":9019:9023   */\n  0x00\n    /* \"#utility.yul\":9057:9059   */\n  0x60\n    /* \"#utility.yul\":9046:9055   */\n  dup3\n    /* \"#utility.yul\":9042:9060   */\n  add\n    /* \"#utility.yul\":9034:9060   */\n  swap1\n  pop\n    /* \"#utility.yul\":9070:9141   */\n  tag_180\n    /* \"#utility.yul\":9138:9139   */\n  0x00\n    /* \"#utility.yul\":9127:9136   */\n  dup4\n    /* \"#utility.yul\":9123:9140   */\n  add\n    /* \"#utility.yul\":9114:9120   */\n  dup7\n    /* \"#utility.yul\":9070:9141   */\n  tag_71\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":9151:9223   */\n  tag_181\n    /* \"#utility.yul\":9219:9221   */\n  0x20\n    /* \"#utility.yul\":9208:9217   */\n  dup4\n    /* \"#utility.yul\":9204:9222   */\n  add\n    /* \"#utility.yul\":9195:9201   */\n  dup6\n    /* \"#utility.yul\":9151:9223   */\n  tag_76\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":9233:9305   */\n  tag_182\n    /* \"#utility.yul\":9301:9303   */\n  0x40\n    /* \"#utility.yul\":9290:9299   */\n  dup4\n    /* \"#utility.yul\":9286:9304   */\n  add\n    /* \"#utility.yul\":9277:9283   */\n  dup5\n    /* \"#utility.yul\":9233:9305   */\n  tag_76\n  jump\t// in\ntag_182:\n    /* \"#utility.yul\":8870:9312   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9318:9540   */\ntag_41:\n    /* \"#utility.yul\":9411:9415   */\n  0x00\n    /* \"#utility.yul\":9449:9451   */\n  0x20\n    /* \"#utility.yul\":9438:9447   */\n  dup3\n    /* \"#utility.yul\":9434:9452   */\n  add\n    /* \"#utility.yul\":9426:9452   */\n  swap1\n  pop\n    /* \"#utility.yul\":9462:9533   */\n  tag_184\n    /* \"#utility.yul\":9530:9531   */\n  0x00\n    /* \"#utility.yul\":9519:9528   */\n  dup4\n    /* \"#utility.yul\":9515:9532   */\n  add\n    /* \"#utility.yul\":9506:9512   */\n  dup5\n    /* \"#utility.yul\":9462:9533   */\n  tag_76\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":9318:9540   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"F/FeeTiersERC20.sol\":386:4459  contract FeeTiersERC20 is ERC20, Ownable {... */\ntag_23:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"F/FeeTiersERC20.sol\":386:4459  contract FeeTiersERC20 is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x58a3a1c3\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa5f408b4\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa5f408b4\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe74b981b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x58a3a1c3\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x23b872dd\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x309e7319\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42b53e5f\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x46904840\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x230ed44a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FeeTiersERC20.sol\":752:777  FeeTier[] public feeTiers */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_43\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FeeTiersERC20.sol\":4027:4457  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FeeTiersERC20.sol\":3084:3462  function getFeeForAmount(uint256 amount) public view returns (uint256 fee) {... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FeeTiersERC20.sol\":2763:3003  function removeFeeTier(uint256 index) external onlyOwner {... */\n    tag_10:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"F/FeeTiersERC20.sol\":822:849  address public feeRecipient */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FeeTiersERC20.sol\":2035:2321  function addFeeTier(uint256 minAmount, uint256 maxAmount, uint256 feeBP) external onlyOwner {... */\n    tag_12:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      tag_68\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_13:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FeeTiersERC20.sol\":2370:2724  function updateFeeTier(uint256 index, uint256 minAmount, uint256 maxAmount, uint256 feeBP) external onlyOwner {... */\n    tag_17:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      stop\n        /* \"F/FeeTiersERC20.sol\":3549:3936  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_18:\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"F/FeeTiersERC20.sol\":1767:1995  function setFeeRecipient(address newRecipient) external onlyOwner {... */\n    tag_20:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_102\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_104\n      swap1\n      tag_103\n      jump\t// in\n    tag_104:\n      dup1\n      iszero\n      tag_105\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_106\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_105)\n    tag_106:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_107:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_107\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_109\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_111\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_112\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":752:777  FeeTier[] public feeTiers */\n    tag_42:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":4027:4457  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n    tag_48:\n        /* \"F/FeeTiersERC20.sol\":4125:4129  bool */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":4141:4152  uint256 fee */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":4155:4178  getFeeForAmount(amount) */\n      tag_117\n        /* \"F/FeeTiersERC20.sol\":4171:4177  amount */\n      dup4\n        /* \"F/FeeTiersERC20.sol\":4155:4170  getFeeForAmount */\n      tag_52\n        /* \"F/FeeTiersERC20.sol\":4155:4178  getFeeForAmount(amount) */\n      jump\t// in\n    tag_117:\n        /* \"F/FeeTiersERC20.sol\":4141:4178  uint256 fee = getFeeForAmount(amount) */\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":4188:4205  uint256 netAmount */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":4217:4220  fee */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":4208:4214  amount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":4208:4220  amount - fee */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"F/FeeTiersERC20.sol\":4188:4220  uint256 netAmount = amount - fee */\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":4283:4328  super.transferFrom(sender, feeRecipient, fee) */\n      tag_120\n        /* \"F/FeeTiersERC20.sol\":4302:4308  sender */\n      dup7\n        /* \"F/FeeTiersERC20.sol\":4310:4322  feeRecipient */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"F/FeeTiersERC20.sol\":4324:4327  fee */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":4283:4301  super.transferFrom */\n      tag_121\n        /* \"F/FeeTiersERC20.sol\":4283:4328  super.transferFrom(sender, feeRecipient, fee) */\n      jump\t// in\n    tag_120:\n      pop\n        /* \"F/FeeTiersERC20.sol\":4402:4450  super.transferFrom(sender, recipient, netAmount) */\n      tag_122\n        /* \"F/FeeTiersERC20.sol\":4421:4427  sender */\n      dup7\n        /* \"F/FeeTiersERC20.sol\":4429:4438  recipient */\n      dup7\n        /* \"F/FeeTiersERC20.sol\":4440:4449  netAmount */\n      dup4\n        /* \"F/FeeTiersERC20.sol\":4402:4420  super.transferFrom */\n      tag_121\n        /* \"F/FeeTiersERC20.sol\":4402:4450  super.transferFrom(sender, recipient, netAmount) */\n      jump\t// in\n    tag_122:\n        /* \"F/FeeTiersERC20.sol\":4395:4450  return super.transferFrom(sender, recipient, netAmount) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"F/FeeTiersERC20.sol\":4027:4457  function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":3084:3462  function getFeeForAmount(uint256 amount) public view returns (uint256 fee) {... */\n    tag_52:\n        /* \"F/FeeTiersERC20.sol\":3146:3157  uint256 fee */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3174:3183  uint256 i */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3186:3187  0 */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3174:3187  uint256 i = 0 */\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":3169:3438  for (uint256 i = 0; i < feeTiers.length; i++) {... */\n    tag_124:\n        /* \"F/FeeTiersERC20.sol\":3193:3201  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":3193:3208  feeTiers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":3189:3190  i */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":3189:3208  i < feeTiers.length */\n      lt\n        /* \"F/FeeTiersERC20.sol\":3169:3438  for (uint256 i = 0; i < feeTiers.length; i++) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"F/FeeTiersERC20.sol\":3229:3248  FeeTier memory tier */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3251:3259  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":3260:3261  i */\n      dup3\n        /* \"F/FeeTiersERC20.sol\":3251:3262  feeTiers[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_127\n      jumpi\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n    tag_127:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"F/FeeTiersERC20.sol\":3229:3262  FeeTier memory tier = feeTiers[i] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":3290:3294  tier */\n      dup1\n        /* \"F/FeeTiersERC20.sol\":3290:3304  tier.minAmount */\n      0x00\n      add\n      mload\n        /* \"F/FeeTiersERC20.sol\":3280:3286  amount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":3280:3304  amount >= tier.minAmount */\n      lt\n      iszero\n        /* \"F/FeeTiersERC20.sol\":3280:3357  amount >= tier.minAmount && (tier.maxAmount == 0 || amount <= tier.maxAmount) */\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n        /* \"F/FeeTiersERC20.sol\":3327:3328  0 */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3309:3313  tier */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":3309:3323  tier.maxAmount */\n      0x20\n      add\n      mload\n        /* \"F/FeeTiersERC20.sol\":3309:3328  tier.maxAmount == 0 */\n      eq\n        /* \"F/FeeTiersERC20.sol\":3309:3356  tier.maxAmount == 0 || amount <= tier.maxAmount */\n      dup1\n      tag_132\n      jumpi\n      pop\n        /* \"F/FeeTiersERC20.sol\":3342:3346  tier */\n      dup1\n        /* \"F/FeeTiersERC20.sol\":3342:3356  tier.maxAmount */\n      0x20\n      add\n      mload\n        /* \"F/FeeTiersERC20.sol\":3332:3338  amount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":3332:3356  amount <= tier.maxAmount */\n      gt\n      iszero\n        /* \"F/FeeTiersERC20.sol\":3309:3356  tier.maxAmount == 0 || amount <= tier.maxAmount */\n    tag_132:\n        /* \"F/FeeTiersERC20.sol\":3280:3357  amount >= tier.minAmount && (tier.maxAmount == 0 || amount <= tier.maxAmount) */\n    tag_131:\n        /* \"F/FeeTiersERC20.sol\":3276:3428  if (amount >= tier.minAmount && (tier.maxAmount == 0 || amount <= tier.maxAmount)) {... */\n      iszero\n      tag_133\n      jumpi\n        /* \"F/FeeTiersERC20.sol\":3408:3413  10000 */\n      0x2710\n        /* \"F/FeeTiersERC20.sol\":3394:3398  tier */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":3394:3404  tier.feeBP */\n      0x40\n      add\n      mload\n        /* \"F/FeeTiersERC20.sol\":3385:3391  amount */\n      dup6\n        /* \"F/FeeTiersERC20.sol\":3385:3404  amount * tier.feeBP */\n      tag_134\n      swap2\n      swap1\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"F/FeeTiersERC20.sol\":3384:3413  (amount * tier.feeBP) / 10000 */\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"F/FeeTiersERC20.sol\":3377:3413  return (amount * tier.feeBP) / 10000 */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_123)\n        /* \"F/FeeTiersERC20.sol\":3276:3428  if (amount >= tier.minAmount && (tier.maxAmount == 0 || amount <= tier.maxAmount)) {... */\n    tag_133:\n        /* \"F/FeeTiersERC20.sol\":3215:3438  {... */\n      pop\n        /* \"F/FeeTiersERC20.sol\":3210:3213  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"F/FeeTiersERC20.sol\":3169:3438  for (uint256 i = 0; i < feeTiers.length; i++) {... */\n      jump(tag_124)\n    tag_125:\n      pop\n        /* \"F/FeeTiersERC20.sol\":3454:3455  0 */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3447:3455  return 0 */\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":3084:3462  function getFeeForAmount(uint256 amount) public view returns (uint256 fee) {... */\n    tag_123:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":2763:3003  function removeFeeTier(uint256 index) external onlyOwner {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_140:\n        /* \"F/FeeTiersERC20.sol\":2846:2854  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2846:2861  feeTiers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":2838:2843  index */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":2838:2861  index < feeTiers.length */\n      lt\n        /* \"F/FeeTiersERC20.sol\":2830:2879  require(index < feeTiers.length, \"Invalid index\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"F/FeeTiersERC20.sol\":2907:2915  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2934:2935  1 */\n      0x01\n        /* \"F/FeeTiersERC20.sol\":2916:2924  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2916:2931  feeTiers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":2916:2935  feeTiers.length - 1 */\n      tag_146\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_146:\n        /* \"F/FeeTiersERC20.sol\":2907:2936  feeTiers[feeTiers.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_147\n      jumpi\n      tag_148\n      tag_129\n      jump\t// in\n    tag_148:\n    tag_147:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"F/FeeTiersERC20.sol\":2889:2897  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2898:2903  index */\n      dup3\n        /* \"F/FeeTiersERC20.sol\":2889:2904  feeTiers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_150\n      jumpi\n      tag_151\n      tag_129\n      jump\t// in\n    tag_151:\n    tag_150:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"F/FeeTiersERC20.sol\":2889:2936  feeTiers[index] = feeTiers[feeTiers.length - 1] */\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      0x00\n      add\n      sstore\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      0x01\n      add\n      sstore\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"F/FeeTiersERC20.sol\":2946:2954  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2946:2960  feeTiers.pop() */\n      dup1\n      sload\n      dup1\n      tag_153\n      jumpi\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n    tag_153:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      pop\n      pop\n      swap1\n      sstore\n        /* \"F/FeeTiersERC20.sol\":2990:2995  index */\n      dup1\n        /* \"F/FeeTiersERC20.sol\":2975:2996  FeeTierRemoved(index) */\n      0x2b4584016031d9a0d1fc722a5f384f606370058bfcc1354c24264dbd139d67da\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"F/FeeTiersERC20.sol\":2763:3003  function removeFeeTier(uint256 index) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":822:849  address public feeRecipient */\n    tag_62:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":2035:2321  function addFeeTier(uint256 minAmount, uint256 maxAmount, uint256 feeBP) external onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_158\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_158:\n        /* \"F/FeeTiersERC20.sol\":2154:2159  10000 */\n      0x2710\n        /* \"F/FeeTiersERC20.sol\":2145:2150  feeBP */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":2145:2159  feeBP <= 10000 */\n      gt\n      iszero\n        /* \"F/FeeTiersERC20.sol\":2137:2176  require(feeBP <= 10000, \"Fee too high\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"F/FeeTiersERC20.sol\":2186:2194  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2200:2236  FeeTier(minAmount, maxAmount, feeBP) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"F/FeeTiersERC20.sol\":2208:2217  minAmount */\n      dup6\n        /* \"F/FeeTiersERC20.sol\":2200:2236  FeeTier(minAmount, maxAmount, feeBP) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"F/FeeTiersERC20.sol\":2219:2228  maxAmount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2200:2236  FeeTier(minAmount, maxAmount, feeBP) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"F/FeeTiersERC20.sol\":2230:2235  feeBP */\n      dup4\n        /* \"F/FeeTiersERC20.sol\":2200:2236  FeeTier(minAmount, maxAmount, feeBP) */\n      dup2\n      mstore\n      pop\n        /* \"F/FeeTiersERC20.sol\":2186:2237  feeTiers.push(FeeTier(minAmount, maxAmount, feeBP)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      pop\n      pop\n        /* \"F/FeeTiersERC20.sol\":2283:2284  1 */\n      0x01\n        /* \"F/FeeTiersERC20.sol\":2265:2273  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2265:2280  feeTiers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":2265:2284  feeTiers.length - 1 */\n      tag_164\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_164:\n        /* \"F/FeeTiersERC20.sol\":2252:2314  FeeTierAdded(feeTiers.length - 1, minAmount, maxAmount, feeBP) */\n      0x37a23e54e8cf606c8ccd70367d9f32d3578f972bb538e67e0c5c08f26c9dfc19\n        /* \"F/FeeTiersERC20.sol\":2286:2295  minAmount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2297:2306  maxAmount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2308:2313  feeBP */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2252:2314  FeeTierAdded(feeTiers.length - 1, minAmount, maxAmount, feeBP) */\n      mload(0x40)\n      tag_165\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"F/FeeTiersERC20.sol\":2035:2321  function addFeeTier(uint256 minAmount, uint256 maxAmount, uint256 feeBP) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_168\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_168:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_170\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_77:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_174\n      swap1\n      tag_103\n      jump\t// in\n    tag_174:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_175\n      swap1\n      tag_103\n      jump\t// in\n    tag_175:\n      dup1\n      iszero\n      tag_176\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_177\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_176)\n    tag_177:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_178:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_178\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_176:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":2370:2724  function updateFeeTier(uint256 index, uint256 minAmount, uint256 maxAmount, uint256 feeBP) external onlyOwner {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_180:\n        /* \"F/FeeTiersERC20.sol\":2506:2514  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2506:2521  feeTiers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":2498:2503  index */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2498:2521  index < feeTiers.length */\n      lt\n        /* \"F/FeeTiersERC20.sol\":2490:2539  require(index < feeTiers.length, \"Invalid index\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_145\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"F/FeeTiersERC20.sol\":2566:2571  10000 */\n      0x2710\n        /* \"F/FeeTiersERC20.sol\":2557:2562  feeBP */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":2557:2571  feeBP <= 10000 */\n      gt\n      iszero\n        /* \"F/FeeTiersERC20.sol\":2549:2588  require(feeBP <= 10000, \"Fee too high\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_162\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"F/FeeTiersERC20.sol\":2616:2652  FeeTier(minAmount, maxAmount, feeBP) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"F/FeeTiersERC20.sol\":2624:2633  minAmount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2616:2652  FeeTier(minAmount, maxAmount, feeBP) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"F/FeeTiersERC20.sol\":2635:2644  maxAmount */\n      dup4\n        /* \"F/FeeTiersERC20.sol\":2616:2652  FeeTier(minAmount, maxAmount, feeBP) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"F/FeeTiersERC20.sol\":2646:2651  feeBP */\n      dup3\n        /* \"F/FeeTiersERC20.sol\":2616:2652  FeeTier(minAmount, maxAmount, feeBP) */\n      dup2\n      mstore\n      pop\n        /* \"F/FeeTiersERC20.sol\":2598:2606  feeTiers */\n      0x06\n        /* \"F/FeeTiersERC20.sol\":2607:2612  index */\n      dup6\n        /* \"F/FeeTiersERC20.sol\":2598:2613  feeTiers[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_186\n      jumpi\n      tag_187\n      tag_129\n      jump\t// in\n    tag_187:\n    tag_186:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"F/FeeTiersERC20.sol\":2598:2652  feeTiers[index] = FeeTier(minAmount, maxAmount, feeBP) */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"F/FeeTiersERC20.sol\":2682:2687  index */\n      dup4\n        /* \"F/FeeTiersERC20.sol\":2667:2717  FeeTierUpdated(index, minAmount, maxAmount, feeBP) */\n      0xbb15785662e808c63efc6a05274ce9a7cb01b854b603db64f663b880234dd2fe\n        /* \"F/FeeTiersERC20.sol\":2689:2698  minAmount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2700:2709  maxAmount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2711:2716  feeBP */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":2667:2717  FeeTierUpdated(index, minAmount, maxAmount, feeBP) */\n      mload(0x40)\n      tag_189\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_189:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"F/FeeTiersERC20.sol\":2370:2724  function updateFeeTier(uint256 index, uint256 minAmount, uint256 maxAmount, uint256 feeBP) external onlyOwner {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":3549:3936  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n    tag_88:\n        /* \"F/FeeTiersERC20.sol\":3627:3631  bool */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3643:3654  uint256 fee */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3657:3680  getFeeForAmount(amount) */\n      tag_191\n        /* \"F/FeeTiersERC20.sol\":3673:3679  amount */\n      dup4\n        /* \"F/FeeTiersERC20.sol\":3657:3672  getFeeForAmount */\n      tag_52\n        /* \"F/FeeTiersERC20.sol\":3657:3680  getFeeForAmount(amount) */\n      jump\t// in\n    tag_191:\n        /* \"F/FeeTiersERC20.sol\":3643:3680  uint256 fee = getFeeForAmount(amount) */\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":3690:3707  uint256 netAmount */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":3719:3722  fee */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":3710:3716  amount */\n      dup5\n        /* \"F/FeeTiersERC20.sol\":3710:3722  amount - fee */\n      tag_192\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_192:\n        /* \"F/FeeTiersERC20.sol\":3690:3722  uint256 netAmount = amount - fee */\n      swap1\n      pop\n        /* \"F/FeeTiersERC20.sol\":3784:3817  super.transfer(feeRecipient, fee) */\n      tag_193\n        /* \"F/FeeTiersERC20.sol\":3799:3811  feeRecipient */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"F/FeeTiersERC20.sol\":3813:3816  fee */\n      dup4\n        /* \"F/FeeTiersERC20.sol\":3784:3798  super.transfer */\n      tag_194\n        /* \"F/FeeTiersERC20.sol\":3784:3817  super.transfer(feeRecipient, fee) */\n      jump\t// in\n    tag_193:\n      pop\n        /* \"F/FeeTiersERC20.sol\":3893:3929  super.transfer(recipient, netAmount) */\n      tag_195\n        /* \"F/FeeTiersERC20.sol\":3908:3917  recipient */\n      dup6\n        /* \"F/FeeTiersERC20.sol\":3919:3928  netAmount */\n      dup3\n        /* \"F/FeeTiersERC20.sol\":3893:3907  super.transfer */\n      tag_194\n        /* \"F/FeeTiersERC20.sol\":3893:3929  super.transfer(recipient, netAmount) */\n      jump\t// in\n    tag_195:\n        /* \"F/FeeTiersERC20.sol\":3886:3929  return super.transfer(recipient, netAmount) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"F/FeeTiersERC20.sol\":3549:3936  function transfer(address recipient, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"F/FeeTiersERC20.sol\":1767:1995  function setFeeRecipient(address newRecipient) external onlyOwner {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_198:\n        /* \"F/FeeTiersERC20.sol\":1875:1876  0 */\n      0x00\n        /* \"F/FeeTiersERC20.sol\":1851:1877  newRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"F/FeeTiersERC20.sol\":1851:1863  newRecipient */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":1851:1877  newRecipient != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"F/FeeTiersERC20.sol\":1843:1903  require(newRecipient != address(0), \"Invalid fee recipient\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"F/FeeTiersERC20.sol\":1928:1940  newRecipient */\n      dup1\n        /* \"F/FeeTiersERC20.sol\":1913:1925  feeRecipient */\n      0x07\n      0x00\n        /* \"F/FeeTiersERC20.sol\":1913:1940  feeRecipient = newRecipient */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"F/FeeTiersERC20.sol\":1955:1988  FeeRecipientUpdated(newRecipient) */\n      0x7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc2\n        /* \"F/FeeTiersERC20.sol\":1975:1987  newRecipient */\n      dup2\n        /* \"F/FeeTiersERC20.sol\":1955:1988  FeeRecipientUpdated(newRecipient) */\n      mload(0x40)\n      tag_203\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_203:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"F/FeeTiersERC20.sol\":1767:1995  function setFeeRecipient(address newRecipient) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_171\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_215\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_216\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_217\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_218\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_221\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_222\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_77\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_225\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_110\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_229\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_219\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_233:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_235\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_217:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10599:10616  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10616  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_239\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10655:10660  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10652  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10660  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10714:10721  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10723:10739  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10741:10746  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10687:10747  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10632:10762  if (currentAllowance < value) {... */\n    tag_240:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      tag_243\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10812:10817  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10819:10826  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10847:10852  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10852  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10854:10859  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10811  _approve */\n      tag_213\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10803:10860  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_243:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10885  if (currentAllowance < type(uint256).max) {... */\n    tag_239:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10891  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10891  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_245\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_247\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_248\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_247:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_249\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_250\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_252\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_253\n      swap2\n      swap1\n      tag_254\n      jump\t// in\n    tag_253:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_255)\n    tag_252:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_256\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_258\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_259)\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_261:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_262:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_263:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_264:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_265:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_297\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_261\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":711:782   */\n      tag_298\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_262\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_299\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_263\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":881:910   */\n      tag_300\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_264\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_28:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_302\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_265\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_267:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_269:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_270:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_308\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_269\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_271:\n        /* \"#utility.yul\":1876:1900   */\n      tag_310\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_270\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_311:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_272:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_313\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_271\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_273:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_274:\n        /* \"#utility.yul\":2232:2256   */\n      tag_316\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_273\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_317:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_275:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_319\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_274\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_31:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_322\n      tag_267\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":2525:2644   */\n    tag_321:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_323\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_272\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_324\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_275\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_276:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_277:\n        /* \"#utility.yul\":3089:3110   */\n      tag_327\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_276\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_34:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_329\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_277\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_278:\n        /* \"#utility.yul\":3426:3450   */\n      tag_331\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_273\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_38:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_333\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_278\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4020   */\n    tag_41:\n        /* \"#utility.yul\":3750:3756   */\n      0x00\n        /* \"#utility.yul\":3799:3801   */\n      0x20\n        /* \"#utility.yul\":3787:3796   */\n      dup3\n        /* \"#utility.yul\":3778:3785   */\n      dup5\n        /* \"#utility.yul\":3774:3797   */\n      sub\n        /* \"#utility.yul\":3770:3802   */\n      slt\n        /* \"#utility.yul\":3767:3886   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":3805:3884   */\n      tag_336\n      tag_267\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3767:3886   */\n    tag_335:\n        /* \"#utility.yul\":3925:3926   */\n      0x00\n        /* \"#utility.yul\":3950:4003   */\n      tag_337\n        /* \"#utility.yul\":3995:4002   */\n      dup5\n        /* \"#utility.yul\":3986:3992   */\n      dup3\n        /* \"#utility.yul\":3975:3984   */\n      dup6\n        /* \"#utility.yul\":3971:3993   */\n      add\n        /* \"#utility.yul\":3950:4003   */\n      tag_275\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3940:4003   */\n      swap2\n      pop\n        /* \"#utility.yul\":3896:4013   */\n      pop\n        /* \"#utility.yul\":3691:4020   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4026:4468   */\n    tag_44:\n        /* \"#utility.yul\":4175:4179   */\n      0x00\n        /* \"#utility.yul\":4213:4215   */\n      0x60\n        /* \"#utility.yul\":4202:4211   */\n      dup3\n        /* \"#utility.yul\":4198:4216   */\n      add\n        /* \"#utility.yul\":4190:4216   */\n      swap1\n      pop\n        /* \"#utility.yul\":4226:4297   */\n      tag_339\n        /* \"#utility.yul\":4294:4295   */\n      0x00\n        /* \"#utility.yul\":4283:4292   */\n      dup4\n        /* \"#utility.yul\":4279:4296   */\n      add\n        /* \"#utility.yul\":4270:4276   */\n      dup7\n        /* \"#utility.yul\":4226:4297   */\n      tag_278\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4307:4379   */\n      tag_340\n        /* \"#utility.yul\":4375:4377   */\n      0x20\n        /* \"#utility.yul\":4364:4373   */\n      dup4\n        /* \"#utility.yul\":4360:4378   */\n      add\n        /* \"#utility.yul\":4351:4357   */\n      dup6\n        /* \"#utility.yul\":4307:4379   */\n      tag_278\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4389:4461   */\n      tag_341\n        /* \"#utility.yul\":4457:4459   */\n      0x40\n        /* \"#utility.yul\":4446:4455   */\n      dup4\n        /* \"#utility.yul\":4442:4460   */\n      add\n        /* \"#utility.yul\":4433:4439   */\n      dup5\n        /* \"#utility.yul\":4389:4461   */\n      tag_278\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":4026:4468   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4474:5093   */\n    tag_47:\n        /* \"#utility.yul\":4551:4557   */\n      0x00\n        /* \"#utility.yul\":4559:4565   */\n      0x00\n        /* \"#utility.yul\":4567:4573   */\n      0x00\n        /* \"#utility.yul\":4616:4618   */\n      0x60\n        /* \"#utility.yul\":4604:4613   */\n      dup5\n        /* \"#utility.yul\":4595:4602   */\n      dup7\n        /* \"#utility.yul\":4591:4614   */\n      sub\n        /* \"#utility.yul\":4587:4619   */\n      slt\n        /* \"#utility.yul\":4584:4703   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":4622:4701   */\n      tag_344\n      tag_267\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4584:4703   */\n    tag_343:\n        /* \"#utility.yul\":4742:4743   */\n      0x00\n        /* \"#utility.yul\":4767:4820   */\n      tag_345\n        /* \"#utility.yul\":4812:4819   */\n      dup7\n        /* \"#utility.yul\":4803:4809   */\n      dup3\n        /* \"#utility.yul\":4792:4801   */\n      dup8\n        /* \"#utility.yul\":4788:4810   */\n      add\n        /* \"#utility.yul\":4767:4820   */\n      tag_272\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4757:4820   */\n      swap4\n      pop\n        /* \"#utility.yul\":4713:4830   */\n      pop\n        /* \"#utility.yul\":4869:4871   */\n      0x20\n        /* \"#utility.yul\":4895:4948   */\n      tag_346\n        /* \"#utility.yul\":4940:4947   */\n      dup7\n        /* \"#utility.yul\":4931:4937   */\n      dup3\n        /* \"#utility.yul\":4920:4929   */\n      dup8\n        /* \"#utility.yul\":4916:4938   */\n      add\n        /* \"#utility.yul\":4895:4948   */\n      tag_272\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4885:4948   */\n      swap3\n      pop\n        /* \"#utility.yul\":4840:4958   */\n      pop\n        /* \"#utility.yul\":4997:4999   */\n      0x40\n        /* \"#utility.yul\":5023:5076   */\n      tag_347\n        /* \"#utility.yul\":5068:5075   */\n      dup7\n        /* \"#utility.yul\":5059:5065   */\n      dup3\n        /* \"#utility.yul\":5048:5057   */\n      dup8\n        /* \"#utility.yul\":5044:5066   */\n      add\n        /* \"#utility.yul\":5023:5076   */\n      tag_275\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5013:5076   */\n      swap2\n      pop\n        /* \"#utility.yul\":4968:5086   */\n      pop\n        /* \"#utility.yul\":4474:5093   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5099:5185   */\n    tag_279:\n        /* \"#utility.yul\":5134:5141   */\n      0x00\n        /* \"#utility.yul\":5174:5178   */\n      0xff\n        /* \"#utility.yul\":5167:5172   */\n      dup3\n        /* \"#utility.yul\":5163:5179   */\n      and\n        /* \"#utility.yul\":5152:5179   */\n      swap1\n      pop\n        /* \"#utility.yul\":5099:5185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5191:5303   */\n    tag_280:\n        /* \"#utility.yul\":5274:5296   */\n      tag_350\n        /* \"#utility.yul\":5290:5295   */\n      dup2\n        /* \"#utility.yul\":5274:5296   */\n      tag_279\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5269:5272   */\n      dup3\n        /* \"#utility.yul\":5262:5297   */\n      mstore\n        /* \"#utility.yul\":5191:5303   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5309:5523   */\n    tag_57:\n        /* \"#utility.yul\":5398:5402   */\n      0x00\n        /* \"#utility.yul\":5436:5438   */\n      0x20\n        /* \"#utility.yul\":5425:5434   */\n      dup3\n        /* \"#utility.yul\":5421:5439   */\n      add\n        /* \"#utility.yul\":5413:5439   */\n      swap1\n      pop\n        /* \"#utility.yul\":5449:5516   */\n      tag_352\n        /* \"#utility.yul\":5513:5514   */\n      0x00\n        /* \"#utility.yul\":5502:5511   */\n      dup4\n        /* \"#utility.yul\":5498:5515   */\n      add\n        /* \"#utility.yul\":5489:5495   */\n      dup5\n        /* \"#utility.yul\":5449:5516   */\n      tag_280\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":5309:5523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5529:5647   */\n    tag_281:\n        /* \"#utility.yul\":5616:5640   */\n      tag_354\n        /* \"#utility.yul\":5634:5639   */\n      dup2\n        /* \"#utility.yul\":5616:5640   */\n      tag_270\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":5611:5614   */\n      dup3\n        /* \"#utility.yul\":5604:5641   */\n      mstore\n        /* \"#utility.yul\":5529:5647   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5653:5875   */\n    tag_64:\n        /* \"#utility.yul\":5746:5750   */\n      0x00\n        /* \"#utility.yul\":5784:5786   */\n      0x20\n        /* \"#utility.yul\":5773:5782   */\n      dup3\n        /* \"#utility.yul\":5769:5787   */\n      add\n        /* \"#utility.yul\":5761:5787   */\n      swap1\n      pop\n        /* \"#utility.yul\":5797:5868   */\n      tag_356\n        /* \"#utility.yul\":5865:5866   */\n      0x00\n        /* \"#utility.yul\":5854:5863   */\n      dup4\n        /* \"#utility.yul\":5850:5867   */\n      add\n        /* \"#utility.yul\":5841:5847   */\n      dup5\n        /* \"#utility.yul\":5797:5868   */\n      tag_281\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5653:5875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5881:6500   */\n    tag_67:\n        /* \"#utility.yul\":5958:5964   */\n      0x00\n        /* \"#utility.yul\":5966:5972   */\n      0x00\n        /* \"#utility.yul\":5974:5980   */\n      0x00\n        /* \"#utility.yul\":6023:6025   */\n      0x60\n        /* \"#utility.yul\":6011:6020   */\n      dup5\n        /* \"#utility.yul\":6002:6009   */\n      dup7\n        /* \"#utility.yul\":5998:6021   */\n      sub\n        /* \"#utility.yul\":5994:6026   */\n      slt\n        /* \"#utility.yul\":5991:6110   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":6029:6108   */\n      tag_359\n      tag_267\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5991:6110   */\n    tag_358:\n        /* \"#utility.yul\":6149:6150   */\n      0x00\n        /* \"#utility.yul\":6174:6227   */\n      tag_360\n        /* \"#utility.yul\":6219:6226   */\n      dup7\n        /* \"#utility.yul\":6210:6216   */\n      dup3\n        /* \"#utility.yul\":6199:6208   */\n      dup8\n        /* \"#utility.yul\":6195:6217   */\n      add\n        /* \"#utility.yul\":6174:6227   */\n      tag_275\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":6164:6227   */\n      swap4\n      pop\n        /* \"#utility.yul\":6120:6237   */\n      pop\n        /* \"#utility.yul\":6276:6278   */\n      0x20\n        /* \"#utility.yul\":6302:6355   */\n      tag_361\n        /* \"#utility.yul\":6347:6354   */\n      dup7\n        /* \"#utility.yul\":6338:6344   */\n      dup3\n        /* \"#utility.yul\":6327:6336   */\n      dup8\n        /* \"#utility.yul\":6323:6345   */\n      add\n        /* \"#utility.yul\":6302:6355   */\n      tag_275\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":6292:6355   */\n      swap3\n      pop\n        /* \"#utility.yul\":6247:6365   */\n      pop\n        /* \"#utility.yul\":6404:6406   */\n      0x40\n        /* \"#utility.yul\":6430:6483   */\n      tag_362\n        /* \"#utility.yul\":6475:6482   */\n      dup7\n        /* \"#utility.yul\":6466:6472   */\n      dup3\n        /* \"#utility.yul\":6455:6464   */\n      dup8\n        /* \"#utility.yul\":6451:6473   */\n      add\n        /* \"#utility.yul\":6430:6483   */\n      tag_275\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6420:6483   */\n      swap2\n      pop\n        /* \"#utility.yul\":6375:6493   */\n      pop\n        /* \"#utility.yul\":5881:6500   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6506:6835   */\n    tag_71:\n        /* \"#utility.yul\":6565:6571   */\n      0x00\n        /* \"#utility.yul\":6614:6616   */\n      0x20\n        /* \"#utility.yul\":6602:6611   */\n      dup3\n        /* \"#utility.yul\":6593:6600   */\n      dup5\n        /* \"#utility.yul\":6589:6612   */\n      sub\n        /* \"#utility.yul\":6585:6617   */\n      slt\n        /* \"#utility.yul\":6582:6701   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":6620:6699   */\n      tag_365\n      tag_267\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":6582:6701   */\n    tag_364:\n        /* \"#utility.yul\":6740:6741   */\n      0x00\n        /* \"#utility.yul\":6765:6818   */\n      tag_366\n        /* \"#utility.yul\":6810:6817   */\n      dup5\n        /* \"#utility.yul\":6801:6807   */\n      dup3\n        /* \"#utility.yul\":6790:6799   */\n      dup6\n        /* \"#utility.yul\":6786:6808   */\n      add\n        /* \"#utility.yul\":6765:6818   */\n      tag_272\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6755:6818   */\n      swap2\n      pop\n        /* \"#utility.yul\":6711:6828   */\n      pop\n        /* \"#utility.yul\":6506:6835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6841:7606   */\n    tag_84:\n        /* \"#utility.yul\":6927:6933   */\n      0x00\n        /* \"#utility.yul\":6935:6941   */\n      0x00\n        /* \"#utility.yul\":6943:6949   */\n      0x00\n        /* \"#utility.yul\":6951:6957   */\n      0x00\n        /* \"#utility.yul\":7000:7003   */\n      0x80\n        /* \"#utility.yul\":6988:6997   */\n      dup6\n        /* \"#utility.yul\":6979:6986   */\n      dup8\n        /* \"#utility.yul\":6975:6998   */\n      sub\n        /* \"#utility.yul\":6971:7004   */\n      slt\n        /* \"#utility.yul\":6968:7088   */\n      iszero\n      tag_368\n      jumpi\n        /* \"#utility.yul\":7007:7086   */\n      tag_369\n      tag_267\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6968:7088   */\n    tag_368:\n        /* \"#utility.yul\":7127:7128   */\n      0x00\n        /* \"#utility.yul\":7152:7205   */\n      tag_370\n        /* \"#utility.yul\":7197:7204   */\n      dup8\n        /* \"#utility.yul\":7188:7194   */\n      dup3\n        /* \"#utility.yul\":7177:7186   */\n      dup9\n        /* \"#utility.yul\":7173:7195   */\n      add\n        /* \"#utility.yul\":7152:7205   */\n      tag_275\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7142:7205   */\n      swap5\n      pop\n        /* \"#utility.yul\":7098:7215   */\n      pop\n        /* \"#utility.yul\":7254:7256   */\n      0x20\n        /* \"#utility.yul\":7280:7333   */\n      tag_371\n        /* \"#utility.yul\":7325:7332   */\n      dup8\n        /* \"#utility.yul\":7316:7322   */\n      dup3\n        /* \"#utility.yul\":7305:7314   */\n      dup9\n        /* \"#utility.yul\":7301:7323   */\n      add\n        /* \"#utility.yul\":7280:7333   */\n      tag_275\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7270:7333   */\n      swap4\n      pop\n        /* \"#utility.yul\":7225:7343   */\n      pop\n        /* \"#utility.yul\":7382:7384   */\n      0x40\n        /* \"#utility.yul\":7408:7461   */\n      tag_372\n        /* \"#utility.yul\":7453:7460   */\n      dup8\n        /* \"#utility.yul\":7444:7450   */\n      dup3\n        /* \"#utility.yul\":7433:7442   */\n      dup9\n        /* \"#utility.yul\":7429:7451   */\n      add\n        /* \"#utility.yul\":7408:7461   */\n      tag_275\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":7398:7461   */\n      swap3\n      pop\n        /* \"#utility.yul\":7353:7471   */\n      pop\n        /* \"#utility.yul\":7510:7512   */\n      0x60\n        /* \"#utility.yul\":7536:7589   */\n      tag_373\n        /* \"#utility.yul\":7581:7588   */\n      dup8\n        /* \"#utility.yul\":7572:7578   */\n      dup3\n        /* \"#utility.yul\":7561:7570   */\n      dup9\n        /* \"#utility.yul\":7557:7579   */\n      add\n        /* \"#utility.yul\":7536:7589   */\n      tag_275\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7526:7589   */\n      swap2\n      pop\n        /* \"#utility.yul\":7481:7599   */\n      pop\n        /* \"#utility.yul\":6841:7606   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7612:8086   */\n    tag_92:\n        /* \"#utility.yul\":7680:7686   */\n      0x00\n        /* \"#utility.yul\":7688:7694   */\n      0x00\n        /* \"#utility.yul\":7737:7739   */\n      0x40\n        /* \"#utility.yul\":7725:7734   */\n      dup4\n        /* \"#utility.yul\":7716:7723   */\n      dup6\n        /* \"#utility.yul\":7712:7735   */\n      sub\n        /* \"#utility.yul\":7708:7740   */\n      slt\n        /* \"#utility.yul\":7705:7824   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":7743:7822   */\n      tag_376\n      tag_267\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7705:7824   */\n    tag_375:\n        /* \"#utility.yul\":7863:7864   */\n      0x00\n        /* \"#utility.yul\":7888:7941   */\n      tag_377\n        /* \"#utility.yul\":7933:7940   */\n      dup6\n        /* \"#utility.yul\":7924:7930   */\n      dup3\n        /* \"#utility.yul\":7913:7922   */\n      dup7\n        /* \"#utility.yul\":7909:7931   */\n      add\n        /* \"#utility.yul\":7888:7941   */\n      tag_272\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7878:7941   */\n      swap3\n      pop\n        /* \"#utility.yul\":7834:7951   */\n      pop\n        /* \"#utility.yul\":7990:7992   */\n      0x20\n        /* \"#utility.yul\":8016:8069   */\n      tag_378\n        /* \"#utility.yul\":8061:8068   */\n      dup6\n        /* \"#utility.yul\":8052:8058   */\n      dup3\n        /* \"#utility.yul\":8041:8050   */\n      dup7\n        /* \"#utility.yul\":8037:8059   */\n      add\n        /* \"#utility.yul\":8016:8069   */\n      tag_272\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8006:8069   */\n      swap2\n      pop\n        /* \"#utility.yul\":7961:8079   */\n      pop\n        /* \"#utility.yul\":7612:8086   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8092:8272   */\n    tag_282:\n        /* \"#utility.yul\":8140:8217   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8137:8138   */\n      0x00\n        /* \"#utility.yul\":8130:8218   */\n      mstore\n        /* \"#utility.yul\":8237:8241   */\n      0x22\n        /* \"#utility.yul\":8234:8235   */\n      0x04\n        /* \"#utility.yul\":8227:8242   */\n      mstore\n        /* \"#utility.yul\":8261:8265   */\n      0x24\n        /* \"#utility.yul\":8258:8259   */\n      0x00\n        /* \"#utility.yul\":8251:8266   */\n      revert\n        /* \"#utility.yul\":8278:8598   */\n    tag_103:\n        /* \"#utility.yul\":8322:8328   */\n      0x00\n        /* \"#utility.yul\":8359:8360   */\n      0x02\n        /* \"#utility.yul\":8353:8357   */\n      dup3\n        /* \"#utility.yul\":8349:8361   */\n      div\n        /* \"#utility.yul\":8339:8361   */\n      swap1\n      pop\n        /* \"#utility.yul\":8406:8407   */\n      0x01\n        /* \"#utility.yul\":8400:8404   */\n      dup3\n        /* \"#utility.yul\":8396:8408   */\n      and\n        /* \"#utility.yul\":8427:8445   */\n      dup1\n        /* \"#utility.yul\":8417:8498   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":8483:8487   */\n      0x7f\n        /* \"#utility.yul\":8475:8481   */\n      dup3\n        /* \"#utility.yul\":8471:8488   */\n      and\n        /* \"#utility.yul\":8461:8488   */\n      swap2\n      pop\n        /* \"#utility.yul\":8417:8498   */\n    tag_381:\n        /* \"#utility.yul\":8545:8547   */\n      0x20\n        /* \"#utility.yul\":8537:8543   */\n      dup3\n        /* \"#utility.yul\":8534:8548   */\n      lt\n        /* \"#utility.yul\":8514:8532   */\n      dup2\n        /* \"#utility.yul\":8511:8549   */\n      sub\n        /* \"#utility.yul\":8508:8592   */\n      tag_382\n      jumpi\n        /* \"#utility.yul\":8564:8582   */\n      tag_383\n      tag_282\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8508:8592   */\n    tag_382:\n        /* \"#utility.yul\":8329:8598   */\n      pop\n        /* \"#utility.yul\":8278:8598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:8784   */\n    tag_283:\n        /* \"#utility.yul\":8652:8729   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8642:8730   */\n      mstore\n        /* \"#utility.yul\":8749:8753   */\n      0x11\n        /* \"#utility.yul\":8746:8747   */\n      0x04\n        /* \"#utility.yul\":8739:8754   */\n      mstore\n        /* \"#utility.yul\":8773:8777   */\n      0x24\n        /* \"#utility.yul\":8770:8771   */\n      0x00\n        /* \"#utility.yul\":8763:8778   */\n      revert\n        /* \"#utility.yul\":8790:8984   */\n    tag_119:\n        /* \"#utility.yul\":8830:8834   */\n      0x00\n        /* \"#utility.yul\":8850:8870   */\n      tag_386\n        /* \"#utility.yul\":8868:8869   */\n      dup3\n        /* \"#utility.yul\":8850:8870   */\n      tag_273\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8845:8870   */\n      swap2\n      pop\n        /* \"#utility.yul\":8884:8904   */\n      tag_387\n        /* \"#utility.yul\":8902:8903   */\n      dup4\n        /* \"#utility.yul\":8884:8904   */\n      tag_273\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8879:8904   */\n      swap3\n      pop\n        /* \"#utility.yul\":8928:8929   */\n      dup3\n        /* \"#utility.yul\":8925:8926   */\n      dup3\n        /* \"#utility.yul\":8921:8930   */\n      sub\n        /* \"#utility.yul\":8913:8930   */\n      swap1\n      pop\n        /* \"#utility.yul\":8952:8953   */\n      dup2\n        /* \"#utility.yul\":8946:8950   */\n      dup2\n        /* \"#utility.yul\":8943:8954   */\n      gt\n        /* \"#utility.yul\":8940:8977   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":8957:8975   */\n      tag_389\n      tag_283\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8940:8977   */\n    tag_388:\n        /* \"#utility.yul\":8790:8984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8990:9170   */\n    tag_129:\n        /* \"#utility.yul\":9038:9115   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9035:9036   */\n      0x00\n        /* \"#utility.yul\":9028:9116   */\n      mstore\n        /* \"#utility.yul\":9135:9139   */\n      0x32\n        /* \"#utility.yul\":9132:9133   */\n      0x04\n        /* \"#utility.yul\":9125:9140   */\n      mstore\n        /* \"#utility.yul\":9159:9163   */\n      0x24\n        /* \"#utility.yul\":9156:9157   */\n      0x00\n        /* \"#utility.yul\":9149:9164   */\n      revert\n        /* \"#utility.yul\":9176:9586   */\n    tag_135:\n        /* \"#utility.yul\":9216:9223   */\n      0x00\n        /* \"#utility.yul\":9239:9259   */\n      tag_392\n        /* \"#utility.yul\":9257:9258   */\n      dup3\n        /* \"#utility.yul\":9239:9259   */\n      tag_273\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9234:9259   */\n      swap2\n      pop\n        /* \"#utility.yul\":9273:9293   */\n      tag_393\n        /* \"#utility.yul\":9291:9292   */\n      dup4\n        /* \"#utility.yul\":9273:9293   */\n      tag_273\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9268:9293   */\n      swap3\n      pop\n        /* \"#utility.yul\":9328:9329   */\n      dup3\n        /* \"#utility.yul\":9325:9326   */\n      dup3\n        /* \"#utility.yul\":9321:9330   */\n      mul\n        /* \"#utility.yul\":9350:9380   */\n      tag_394\n        /* \"#utility.yul\":9368:9379   */\n      dup2\n        /* \"#utility.yul\":9350:9380   */\n      tag_273\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9339:9380   */\n      swap2\n      pop\n        /* \"#utility.yul\":9529:9530   */\n      dup3\n        /* \"#utility.yul\":9520:9527   */\n      dup3\n        /* \"#utility.yul\":9516:9531   */\n      div\n        /* \"#utility.yul\":9513:9514   */\n      dup5\n        /* \"#utility.yul\":9510:9532   */\n      eq\n        /* \"#utility.yul\":9490:9491   */\n      dup4\n        /* \"#utility.yul\":9483:9492   */\n      iszero\n        /* \"#utility.yul\":9463:9546   */\n      or\n        /* \"#utility.yul\":9440:9579   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":9559:9577   */\n      tag_396\n      tag_283\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":9440:9579   */\n    tag_395:\n        /* \"#utility.yul\":9224:9586   */\n      pop\n        /* \"#utility.yul\":9176:9586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9592:9772   */\n    tag_284:\n        /* \"#utility.yul\":9640:9717   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9637:9638   */\n      0x00\n        /* \"#utility.yul\":9630:9718   */\n      mstore\n        /* \"#utility.yul\":9737:9741   */\n      0x12\n        /* \"#utility.yul\":9734:9735   */\n      0x04\n        /* \"#utility.yul\":9727:9742   */\n      mstore\n        /* \"#utility.yul\":9761:9765   */\n      0x24\n        /* \"#utility.yul\":9758:9759   */\n      0x00\n        /* \"#utility.yul\":9751:9766   */\n      revert\n        /* \"#utility.yul\":9778:9963   */\n    tag_137:\n        /* \"#utility.yul\":9818:9819   */\n      0x00\n        /* \"#utility.yul\":9835:9855   */\n      tag_399\n        /* \"#utility.yul\":9853:9854   */\n      dup3\n        /* \"#utility.yul\":9835:9855   */\n      tag_273\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9830:9855   */\n      swap2\n      pop\n        /* \"#utility.yul\":9869:9889   */\n      tag_400\n        /* \"#utility.yul\":9887:9888   */\n      dup4\n        /* \"#utility.yul\":9869:9889   */\n      tag_273\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9864:9889   */\n      swap3\n      pop\n        /* \"#utility.yul\":9908:9909   */\n      dup3\n        /* \"#utility.yul\":9898:9933   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9913:9931   */\n      tag_402\n      tag_284\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9898:9933   */\n    tag_401:\n        /* \"#utility.yul\":9955:9956   */\n      dup3\n        /* \"#utility.yul\":9952:9953   */\n      dup3\n        /* \"#utility.yul\":9948:9957   */\n      div\n        /* \"#utility.yul\":9943:9957   */\n      swap1\n      pop\n        /* \"#utility.yul\":9778:9963   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9969:10132   */\n    tag_285:\n        /* \"#utility.yul\":10109:10124   */\n      0x496e76616c696420696e64657800000000000000000000000000000000000000\n        /* \"#utility.yul\":10105:10106   */\n      0x00\n        /* \"#utility.yul\":10097:10103   */\n      dup3\n        /* \"#utility.yul\":10093:10107   */\n      add\n        /* \"#utility.yul\":10086:10125   */\n      mstore\n        /* \"#utility.yul\":9969:10132   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10138:10504   */\n    tag_286:\n        /* \"#utility.yul\":10280:10283   */\n      0x00\n        /* \"#utility.yul\":10301:10368   */\n      tag_405\n        /* \"#utility.yul\":10365:10367   */\n      0x0d\n        /* \"#utility.yul\":10360:10363   */\n      dup4\n        /* \"#utility.yul\":10301:10368   */\n      tag_262\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":10294:10368   */\n      swap2\n      pop\n        /* \"#utility.yul\":10377:10470   */\n      tag_406\n        /* \"#utility.yul\":10466:10469   */\n      dup3\n        /* \"#utility.yul\":10377:10470   */\n      tag_285\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":10495:10497   */\n      0x20\n        /* \"#utility.yul\":10490:10493   */\n      dup3\n        /* \"#utility.yul\":10486:10498   */\n      add\n        /* \"#utility.yul\":10479:10498   */\n      swap1\n      pop\n        /* \"#utility.yul\":10138:10504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10510:10929   */\n    tag_145:\n        /* \"#utility.yul\":10676:10680   */\n      0x00\n        /* \"#utility.yul\":10714:10716   */\n      0x20\n        /* \"#utility.yul\":10703:10712   */\n      dup3\n        /* \"#utility.yul\":10699:10717   */\n      add\n        /* \"#utility.yul\":10691:10717   */\n      swap1\n      pop\n        /* \"#utility.yul\":10763:10772   */\n      dup2\n        /* \"#utility.yul\":10757:10761   */\n      dup2\n        /* \"#utility.yul\":10753:10773   */\n      sub\n        /* \"#utility.yul\":10749:10750   */\n      0x00\n        /* \"#utility.yul\":10738:10747   */\n      dup4\n        /* \"#utility.yul\":10734:10751   */\n      add\n        /* \"#utility.yul\":10727:10774   */\n      mstore\n        /* \"#utility.yul\":10791:10922   */\n      tag_408\n        /* \"#utility.yul\":10917:10921   */\n      dup2\n        /* \"#utility.yul\":10791:10922   */\n      tag_286\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10783:10922   */\n      swap1\n      pop\n        /* \"#utility.yul\":10510:10929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10935:11115   */\n    tag_155:\n        /* \"#utility.yul\":10983:11060   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10980:10981   */\n      0x00\n        /* \"#utility.yul\":10973:11061   */\n      mstore\n        /* \"#utility.yul\":11080:11084   */\n      0x31\n        /* \"#utility.yul\":11077:11078   */\n      0x04\n        /* \"#utility.yul\":11070:11085   */\n      mstore\n        /* \"#utility.yul\":11104:11108   */\n      0x24\n        /* \"#utility.yul\":11101:11102   */\n      0x00\n        /* \"#utility.yul\":11094:11109   */\n      revert\n        /* \"#utility.yul\":11121:11283   */\n    tag_287:\n        /* \"#utility.yul\":11261:11275   */\n      0x46656520746f6f20686967680000000000000000000000000000000000000000\n        /* \"#utility.yul\":11257:11258   */\n      0x00\n        /* \"#utility.yul\":11249:11255   */\n      dup3\n        /* \"#utility.yul\":11245:11259   */\n      add\n        /* \"#utility.yul\":11238:11276   */\n      mstore\n        /* \"#utility.yul\":11121:11283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11289:11655   */\n    tag_288:\n        /* \"#utility.yul\":11431:11434   */\n      0x00\n        /* \"#utility.yul\":11452:11519   */\n      tag_412\n        /* \"#utility.yul\":11516:11518   */\n      0x0c\n        /* \"#utility.yul\":11511:11514   */\n      dup4\n        /* \"#utility.yul\":11452:11519   */\n      tag_262\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11445:11519   */\n      swap2\n      pop\n        /* \"#utility.yul\":11528:11621   */\n      tag_413\n        /* \"#utility.yul\":11617:11620   */\n      dup3\n        /* \"#utility.yul\":11528:11621   */\n      tag_287\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11646:11648   */\n      0x20\n        /* \"#utility.yul\":11641:11644   */\n      dup3\n        /* \"#utility.yul\":11637:11649   */\n      add\n        /* \"#utility.yul\":11630:11649   */\n      swap1\n      pop\n        /* \"#utility.yul\":11289:11655   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11661:12080   */\n    tag_162:\n        /* \"#utility.yul\":11827:11831   */\n      0x00\n        /* \"#utility.yul\":11865:11867   */\n      0x20\n        /* \"#utility.yul\":11854:11863   */\n      dup3\n        /* \"#utility.yul\":11850:11868   */\n      add\n        /* \"#utility.yul\":11842:11868   */\n      swap1\n      pop\n        /* \"#utility.yul\":11914:11923   */\n      dup2\n        /* \"#utility.yul\":11908:11912   */\n      dup2\n        /* \"#utility.yul\":11904:11924   */\n      sub\n        /* \"#utility.yul\":11900:11901   */\n      0x00\n        /* \"#utility.yul\":11889:11898   */\n      dup4\n        /* \"#utility.yul\":11885:11902   */\n      add\n        /* \"#utility.yul\":11878:11925   */\n      mstore\n        /* \"#utility.yul\":11942:12073   */\n      tag_415\n        /* \"#utility.yul\":12068:12072   */\n      dup2\n        /* \"#utility.yul\":11942:12073   */\n      tag_288\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11934:12073   */\n      swap1\n      pop\n        /* \"#utility.yul\":11661:12080   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12086:12257   */\n    tag_289:\n        /* \"#utility.yul\":12226:12249   */\n      0x496e76616c69642066656520726563697069656e740000000000000000000000\n        /* \"#utility.yul\":12222:12223   */\n      0x00\n        /* \"#utility.yul\":12214:12220   */\n      dup3\n        /* \"#utility.yul\":12210:12224   */\n      add\n        /* \"#utility.yul\":12203:12250   */\n      mstore\n        /* \"#utility.yul\":12086:12257   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12263:12629   */\n    tag_290:\n        /* \"#utility.yul\":12405:12408   */\n      0x00\n        /* \"#utility.yul\":12426:12493   */\n      tag_418\n        /* \"#utility.yul\":12490:12492   */\n      0x15\n        /* \"#utility.yul\":12485:12488   */\n      dup4\n        /* \"#utility.yul\":12426:12493   */\n      tag_262\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":12419:12493   */\n      swap2\n      pop\n        /* \"#utility.yul\":12502:12595   */\n      tag_419\n        /* \"#utility.yul\":12591:12594   */\n      dup3\n        /* \"#utility.yul\":12502:12595   */\n      tag_289\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12620:12622   */\n      0x20\n        /* \"#utility.yul\":12615:12618   */\n      dup3\n        /* \"#utility.yul\":12611:12623   */\n      add\n        /* \"#utility.yul\":12604:12623   */\n      swap1\n      pop\n        /* \"#utility.yul\":12263:12629   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12635:13054   */\n    tag_202:\n        /* \"#utility.yul\":12801:12805   */\n      0x00\n        /* \"#utility.yul\":12839:12841   */\n      0x20\n        /* \"#utility.yul\":12828:12837   */\n      dup3\n        /* \"#utility.yul\":12824:12842   */\n      add\n        /* \"#utility.yul\":12816:12842   */\n      swap1\n      pop\n        /* \"#utility.yul\":12888:12897   */\n      dup2\n        /* \"#utility.yul\":12882:12886   */\n      dup2\n        /* \"#utility.yul\":12878:12898   */\n      sub\n        /* \"#utility.yul\":12874:12875   */\n      0x00\n        /* \"#utility.yul\":12863:12872   */\n      dup4\n        /* \"#utility.yul\":12859:12876   */\n      add\n        /* \"#utility.yul\":12852:12899   */\n      mstore\n        /* \"#utility.yul\":12916:13047   */\n      tag_421\n        /* \"#utility.yul\":13042:13046   */\n      dup2\n        /* \"#utility.yul\":12916:13047   */\n      tag_290\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12908:13047   */\n      swap1\n      pop\n        /* \"#utility.yul\":12635:13054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13060:13502   */\n    tag_242:\n        /* \"#utility.yul\":13209:13213   */\n      0x00\n        /* \"#utility.yul\":13247:13249   */\n      0x60\n        /* \"#utility.yul\":13236:13245   */\n      dup3\n        /* \"#utility.yul\":13232:13250   */\n      add\n        /* \"#utility.yul\":13224:13250   */\n      swap1\n      pop\n        /* \"#utility.yul\":13260:13331   */\n      tag_423\n        /* \"#utility.yul\":13328:13329   */\n      0x00\n        /* \"#utility.yul\":13317:13326   */\n      dup4\n        /* \"#utility.yul\":13313:13330   */\n      add\n        /* \"#utility.yul\":13304:13310   */\n      dup7\n        /* \"#utility.yul\":13260:13331   */\n      tag_281\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":13341:13413   */\n      tag_424\n        /* \"#utility.yul\":13409:13411   */\n      0x20\n        /* \"#utility.yul\":13398:13407   */\n      dup4\n        /* \"#utility.yul\":13394:13412   */\n      add\n        /* \"#utility.yul\":13385:13391   */\n      dup6\n        /* \"#utility.yul\":13341:13413   */\n      tag_278\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":13423:13495   */\n      tag_425\n        /* \"#utility.yul\":13491:13493   */\n      0x40\n        /* \"#utility.yul\":13480:13489   */\n      dup4\n        /* \"#utility.yul\":13476:13494   */\n      add\n        /* \"#utility.yul\":13467:13473   */\n      dup5\n        /* \"#utility.yul\":13423:13495   */\n      tag_278\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":13060:13502   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13508:13699   */\n    tag_254:\n        /* \"#utility.yul\":13548:13551   */\n      0x00\n        /* \"#utility.yul\":13567:13587   */\n      tag_427\n        /* \"#utility.yul\":13585:13586   */\n      dup3\n        /* \"#utility.yul\":13567:13587   */\n      tag_273\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":13562:13587   */\n      swap2\n      pop\n        /* \"#utility.yul\":13601:13621   */\n      tag_428\n        /* \"#utility.yul\":13619:13620   */\n      dup4\n        /* \"#utility.yul\":13601:13621   */\n      tag_273\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":13596:13621   */\n      swap3\n      pop\n        /* \"#utility.yul\":13644:13645   */\n      dup3\n        /* \"#utility.yul\":13641:13642   */\n      dup3\n        /* \"#utility.yul\":13637:13646   */\n      add\n        /* \"#utility.yul\":13630:13646   */\n      swap1\n      pop\n        /* \"#utility.yul\":13665:13668   */\n      dup1\n        /* \"#utility.yul\":13662:13663   */\n      dup3\n        /* \"#utility.yul\":13659:13669   */\n      gt\n        /* \"#utility.yul\":13656:13692   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":13672:13690   */\n      tag_430\n      tag_283\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13656:13692   */\n    tag_429:\n        /* \"#utility.yul\":13508:13699   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220983b22c4b31d72784086e6554d050f636bcd344312a020a4149eb94bd4a2bf8e64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1020": {
									"entryPoint": null,
									"id": 1020,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 712,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 517,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 845,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_fromMemory": {
									"entryPoint": 1527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2631,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1589,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2153,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1599,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361": {
									"entryPoint": 2416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1782,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:9543:7",
										"nodeType": "YulBlock",
										"src": "0:9543:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "379:32:7",
													"nodeType": "YulBlock",
													"src": "379:32:7",
													"statements": [
														{
															"nativeSrc": "389:16:7",
															"nodeType": "YulAssignment",
															"src": "389:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:7",
																"nodeType": "YulIdentifier",
																"src": "400:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:7",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:7",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:77:7"
											},
											{
												"body": {
													"nativeSrc": "460:79:7",
													"nodeType": "YulBlock",
													"src": "460:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:7",
																"nodeType": "YulBlock",
																"src": "517:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:7",
																					"nodeType": "YulLiteral",
																					"src": "526:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:7",
																					"nodeType": "YulLiteral",
																					"src": "529:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:7"
																			},
																			"nativeSrc": "519:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:7"
																		},
																		"nativeSrc": "519:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:7"
																				},
																				"nativeSrc": "490:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:7"
																		},
																		"nativeSrc": "480:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:7"
																},
																"nativeSrc": "473:43:7",
																"nodeType": "YulFunctionCall",
																"src": "473:43:7"
															},
															"nativeSrc": "470:63:7",
															"nodeType": "YulIf",
															"src": "470:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:7",
														"nodeType": "YulTypedName",
														"src": "453:5:7",
														"type": ""
													}
												],
												"src": "417:122:7"
											},
											{
												"body": {
													"nativeSrc": "608:80:7",
													"nodeType": "YulBlock",
													"src": "608:80:7",
													"statements": [
														{
															"nativeSrc": "618:22:7",
															"nodeType": "YulAssignment",
															"src": "618:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:7"
																},
																"nativeSrc": "627:13:7",
																"nodeType": "YulFunctionCall",
																"src": "627:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:7"
																},
																"nativeSrc": "649:33:7",
																"nodeType": "YulFunctionCall",
																"src": "649:33:7"
															},
															"nativeSrc": "649:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:7",
														"nodeType": "YulTypedName",
														"src": "586:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:7",
														"nodeType": "YulTypedName",
														"src": "594:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:7",
														"nodeType": "YulTypedName",
														"src": "602:5:7",
														"type": ""
													}
												],
												"src": "545:143:7"
											},
											{
												"body": {
													"nativeSrc": "739:81:7",
													"nodeType": "YulBlock",
													"src": "739:81:7",
													"statements": [
														{
															"nativeSrc": "749:65:7",
															"nodeType": "YulAssignment",
															"src": "749:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "764:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "771:42:7",
																		"nodeType": "YulLiteral",
																		"src": "771:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "760:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:7"
																},
																"nativeSrc": "760:54:7",
																"nodeType": "YulFunctionCall",
																"src": "760:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "749:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "694:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "721:5:7",
														"nodeType": "YulTypedName",
														"src": "721:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "731:7:7",
														"nodeType": "YulTypedName",
														"src": "731:7:7",
														"type": ""
													}
												],
												"src": "694:126:7"
											},
											{
												"body": {
													"nativeSrc": "871:51:7",
													"nodeType": "YulBlock",
													"src": "871:51:7",
													"statements": [
														{
															"nativeSrc": "881:35:7",
															"nodeType": "YulAssignment",
															"src": "881:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "910:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "910:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "892:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "892:17:7"
																},
																"nativeSrc": "892:24:7",
																"nodeType": "YulFunctionCall",
																"src": "892:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "881:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "881:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "826:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "853:5:7",
														"nodeType": "YulTypedName",
														"src": "853:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "863:7:7",
														"nodeType": "YulTypedName",
														"src": "863:7:7",
														"type": ""
													}
												],
												"src": "826:96:7"
											},
											{
												"body": {
													"nativeSrc": "971:79:7",
													"nodeType": "YulBlock",
													"src": "971:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:7",
																"nodeType": "YulBlock",
																"src": "1028:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:7"
																			},
																			"nativeSrc": "1030:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:7"
																		},
																		"nativeSrc": "1030:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1001:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:7"
																				},
																				"nativeSrc": "1001:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:7"
																		},
																		"nativeSrc": "991:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:7"
																},
																"nativeSrc": "984:43:7",
																"nodeType": "YulFunctionCall",
																"src": "984:43:7"
															},
															"nativeSrc": "981:63:7",
															"nodeType": "YulIf",
															"src": "981:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "928:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:7",
														"nodeType": "YulTypedName",
														"src": "964:5:7",
														"type": ""
													}
												],
												"src": "928:122:7"
											},
											{
												"body": {
													"nativeSrc": "1119:80:7",
													"nodeType": "YulBlock",
													"src": "1119:80:7",
													"statements": [
														{
															"nativeSrc": "1129:22:7",
															"nodeType": "YulAssignment",
															"src": "1129:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:7"
																},
																"nativeSrc": "1138:13:7",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1160:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:7"
																},
																"nativeSrc": "1160:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:7"
															},
															"nativeSrc": "1160:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:7"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "1056:143:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:7",
														"nodeType": "YulTypedName",
														"src": "1097:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:7",
														"nodeType": "YulTypedName",
														"src": "1105:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:7",
														"nodeType": "YulTypedName",
														"src": "1113:5:7",
														"type": ""
													}
												],
												"src": "1056:143:7"
											},
											{
												"body": {
													"nativeSrc": "1299:413:7",
													"nodeType": "YulBlock",
													"src": "1299:413:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:7",
																"nodeType": "YulBlock",
																"src": "1345:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:7"
																			},
																			"nativeSrc": "1347:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:7"
																		},
																		"nativeSrc": "1347:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:7"
																		},
																		"nativeSrc": "1316:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:7"
																},
																"nativeSrc": "1312:32:7",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:7"
															},
															"nativeSrc": "1309:119:7",
															"nodeType": "YulIf",
															"src": "1309:119:7"
														},
														{
															"nativeSrc": "1438:128:7",
															"nodeType": "YulBlock",
															"src": "1438:128:7",
															"statements": [
																{
																	"nativeSrc": "1453:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:7"
																				},
																				"nativeSrc": "1524:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1492:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:7"
																		},
																		"nativeSrc": "1492:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:7",
															"nodeType": "YulBlock",
															"src": "1576:129:7",
															"statements": [
																{
																	"nativeSrc": "1591:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:7",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:7",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:7"
																				},
																				"nativeSrc": "1663:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1631:31:7",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:7"
																		},
																		"nativeSrc": "1631:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_fromMemory",
												"nativeSrc": "1205:507:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:7",
														"nodeType": "YulTypedName",
														"src": "1261:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:7",
														"nodeType": "YulTypedName",
														"src": "1272:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:7",
														"nodeType": "YulTypedName",
														"src": "1284:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:7",
														"nodeType": "YulTypedName",
														"src": "1292:6:7",
														"type": ""
													}
												],
												"src": "1205:507:7"
											},
											{
												"body": {
													"nativeSrc": "1777:40:7",
													"nodeType": "YulBlock",
													"src": "1777:40:7",
													"statements": [
														{
															"nativeSrc": "1788:22:7",
															"nodeType": "YulAssignment",
															"src": "1788:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1804:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1804:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1798:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1798:5:7"
																},
																"nativeSrc": "1798:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1798:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1788:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1788:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1718:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1760:5:7",
														"nodeType": "YulTypedName",
														"src": "1760:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1770:6:7",
														"nodeType": "YulTypedName",
														"src": "1770:6:7",
														"type": ""
													}
												],
												"src": "1718:99:7"
											},
											{
												"body": {
													"nativeSrc": "1851:152:7",
													"nodeType": "YulBlock",
													"src": "1851:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1868:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1868:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1871:77:7",
																		"nodeType": "YulLiteral",
																		"src": "1871:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:7"
																},
																"nativeSrc": "1861:88:7",
																"nodeType": "YulFunctionCall",
																"src": "1861:88:7"
															},
															"nativeSrc": "1861:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "1861:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1965:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1965:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1968:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1968:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1958:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:7"
																},
																"nativeSrc": "1958:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1958:15:7"
															},
															"nativeSrc": "1958:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1958:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:7",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1982:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1982:6:7"
																},
																"nativeSrc": "1982:15:7",
																"nodeType": "YulFunctionCall",
																"src": "1982:15:7"
															},
															"nativeSrc": "1982:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "1982:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1823:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1823:180:7"
											},
											{
												"body": {
													"nativeSrc": "2037:152:7",
													"nodeType": "YulBlock",
													"src": "2037:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2054:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2054:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2057:77:7",
																		"nodeType": "YulLiteral",
																		"src": "2057:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2047:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2047:6:7"
																},
																"nativeSrc": "2047:88:7",
																"nodeType": "YulFunctionCall",
																"src": "2047:88:7"
															},
															"nativeSrc": "2047:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "2047:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2151:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2154:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2154:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2144:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2144:6:7"
																},
																"nativeSrc": "2144:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2144:15:7"
															},
															"nativeSrc": "2144:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2144:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2175:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2175:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2178:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2178:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2168:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2168:6:7"
																},
																"nativeSrc": "2168:15:7",
																"nodeType": "YulFunctionCall",
																"src": "2168:15:7"
															},
															"nativeSrc": "2168:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "2168:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "2009:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "2009:180:7"
											},
											{
												"body": {
													"nativeSrc": "2246:269:7",
													"nodeType": "YulBlock",
													"src": "2246:269:7",
													"statements": [
														{
															"nativeSrc": "2256:22:7",
															"nodeType": "YulAssignment",
															"src": "2256:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2270:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2270:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2276:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2276:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2266:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2266:3:7"
																},
																"nativeSrc": "2266:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2266:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:7"
																}
															]
														},
														{
															"nativeSrc": "2287:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2287:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2317:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2317:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2323:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2323:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2313:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:7"
																},
																"nativeSrc": "2313:12:7",
																"nodeType": "YulFunctionCall",
																"src": "2313:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2291:18:7",
																	"nodeType": "YulTypedName",
																	"src": "2291:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2364:51:7",
																"nodeType": "YulBlock",
																"src": "2364:51:7",
																"statements": [
																	{
																		"nativeSrc": "2378:27:7",
																		"nodeType": "YulAssignment",
																		"src": "2378:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2392:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "2392:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2400:4:7",
																					"nodeType": "YulLiteral",
																					"src": "2400:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2388:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "2388:3:7"
																			},
																			"nativeSrc": "2388:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2388:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2378:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2378:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2344:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2344:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2337:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2337:6:7"
																},
																"nativeSrc": "2337:26:7",
																"nodeType": "YulFunctionCall",
																"src": "2337:26:7"
															},
															"nativeSrc": "2334:81:7",
															"nodeType": "YulIf",
															"src": "2334:81:7"
														},
														{
															"body": {
																"nativeSrc": "2467:42:7",
																"nodeType": "YulBlock",
																"src": "2467:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2481:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "2481:16:7"
																			},
																			"nativeSrc": "2481:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2481:18:7"
																		},
																		"nativeSrc": "2481:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2481:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2431:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "2431:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2454:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2454:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2462:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2462:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2451:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2451:2:7"
																		},
																		"nativeSrc": "2451:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2451:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2428:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "2428:2:7"
																},
																"nativeSrc": "2428:38:7",
																"nodeType": "YulFunctionCall",
																"src": "2428:38:7"
															},
															"nativeSrc": "2425:84:7",
															"nodeType": "YulIf",
															"src": "2425:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2195:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2230:4:7",
														"nodeType": "YulTypedName",
														"src": "2230:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2239:6:7",
														"nodeType": "YulTypedName",
														"src": "2239:6:7",
														"type": ""
													}
												],
												"src": "2195:320:7"
											},
											{
												"body": {
													"nativeSrc": "2575:87:7",
													"nodeType": "YulBlock",
													"src": "2575:87:7",
													"statements": [
														{
															"nativeSrc": "2585:11:7",
															"nodeType": "YulAssignment",
															"src": "2585:11:7",
															"value": {
																"name": "ptr",
																"nativeSrc": "2593:3:7",
																"nodeType": "YulIdentifier",
																"src": "2593:3:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2585:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2585:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2616:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "2616:3:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2606:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:7"
																},
																"nativeSrc": "2606:14:7",
																"nodeType": "YulFunctionCall",
																"src": "2606:14:7"
															},
															"nativeSrc": "2606:14:7",
															"nodeType": "YulExpressionStatement",
															"src": "2606:14:7"
														},
														{
															"nativeSrc": "2629:26:7",
															"nodeType": "YulAssignment",
															"src": "2629:26:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2647:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2647:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2650:4:7",
																		"nodeType": "YulLiteral",
																		"src": "2650:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2637:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "2637:9:7"
																},
																"nativeSrc": "2637:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2637:18:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2629:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "2629:4:7"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2521:141:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2562:3:7",
														"nodeType": "YulTypedName",
														"src": "2562:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2570:4:7",
														"nodeType": "YulTypedName",
														"src": "2570:4:7",
														"type": ""
													}
												],
												"src": "2521:141:7"
											},
											{
												"body": {
													"nativeSrc": "2712:49:7",
													"nodeType": "YulBlock",
													"src": "2712:49:7",
													"statements": [
														{
															"nativeSrc": "2722:33:7",
															"nodeType": "YulAssignment",
															"src": "2722:33:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2740:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2740:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2747:2:7",
																				"nodeType": "YulLiteral",
																				"src": "2747:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2736:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2736:3:7"
																		},
																		"nativeSrc": "2736:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2736:14:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2752:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2752:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2732:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2732:3:7"
																},
																"nativeSrc": "2732:23:7",
																"nodeType": "YulFunctionCall",
																"src": "2732:23:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2722:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2722:6:7"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2668:93:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2695:5:7",
														"nodeType": "YulTypedName",
														"src": "2695:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2705:6:7",
														"nodeType": "YulTypedName",
														"src": "2705:6:7",
														"type": ""
													}
												],
												"src": "2668:93:7"
											},
											{
												"body": {
													"nativeSrc": "2820:54:7",
													"nodeType": "YulBlock",
													"src": "2820:54:7",
													"statements": [
														{
															"nativeSrc": "2830:37:7",
															"nodeType": "YulAssignment",
															"src": "2830:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2855:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "2855:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2861:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2861:5:7"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2851:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2851:3:7"
																},
																"nativeSrc": "2851:16:7",
																"nodeType": "YulFunctionCall",
																"src": "2851:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2830:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "2830:8:7"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2767:107:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2795:4:7",
														"nodeType": "YulTypedName",
														"src": "2795:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2801:5:7",
														"nodeType": "YulTypedName",
														"src": "2801:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2811:8:7",
														"nodeType": "YulTypedName",
														"src": "2811:8:7",
														"type": ""
													}
												],
												"src": "2767:107:7"
											},
											{
												"body": {
													"nativeSrc": "2956:317:7",
													"nodeType": "YulBlock",
													"src": "2956:317:7",
													"statements": [
														{
															"nativeSrc": "2966:35:7",
															"nodeType": "YulVariableDeclaration",
															"src": "2966:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2987:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "2987:10:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2999:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2999:1:7",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2983:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2983:3:7"
																},
																"nativeSrc": "2983:18:7",
																"nodeType": "YulFunctionCall",
																"src": "2983:18:7"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2970:9:7",
																	"nodeType": "YulTypedName",
																	"src": "2970:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3010:109:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3010:109:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3041:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3041:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3052:66:7",
																		"nodeType": "YulLiteral",
																		"src": "3052:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3022:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3022:18:7"
																},
																"nativeSrc": "3022:97:7",
																"nodeType": "YulFunctionCall",
																"src": "3022:97:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3014:4:7",
																	"nodeType": "YulTypedName",
																	"src": "3014:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3128:51:7",
															"nodeType": "YulAssignment",
															"src": "3128:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3159:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3159:9:7"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3170:8:7",
																		"nodeType": "YulIdentifier",
																		"src": "3170:8:7"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3140:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "3140:18:7"
																},
																"nativeSrc": "3140:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3140:39:7"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3128:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "3128:8:7"
																}
															]
														},
														{
															"nativeSrc": "3188:30:7",
															"nodeType": "YulAssignment",
															"src": "3188:30:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3201:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3201:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3212:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3212:4:7"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3208:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3208:3:7"
																		},
																		"nativeSrc": "3208:9:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3208:9:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3197:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3197:3:7"
																},
																"nativeSrc": "3197:21:7",
																"nodeType": "YulFunctionCall",
																"src": "3197:21:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3188:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "3188:5:7"
																}
															]
														},
														{
															"nativeSrc": "3227:40:7",
															"nodeType": "YulAssignment",
															"src": "3227:40:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3240:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "3240:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3251:8:7",
																				"nodeType": "YulIdentifier",
																				"src": "3251:8:7"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3261:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "3261:4:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3247:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3247:3:7"
																		},
																		"nativeSrc": "3247:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3247:19:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3237:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "3237:2:7"
																},
																"nativeSrc": "3237:30:7",
																"nodeType": "YulFunctionCall",
																"src": "3237:30:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3227:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3227:6:7"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2880:393:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2917:5:7",
														"nodeType": "YulTypedName",
														"src": "2917:5:7",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2924:10:7",
														"nodeType": "YulTypedName",
														"src": "2924:10:7",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2936:8:7",
														"nodeType": "YulTypedName",
														"src": "2936:8:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2949:6:7",
														"nodeType": "YulTypedName",
														"src": "2949:6:7",
														"type": ""
													}
												],
												"src": "2880:393:7"
											},
											{
												"body": {
													"nativeSrc": "3311:28:7",
													"nodeType": "YulBlock",
													"src": "3311:28:7",
													"statements": [
														{
															"nativeSrc": "3321:12:7",
															"nodeType": "YulAssignment",
															"src": "3321:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3328:5:7",
																"nodeType": "YulIdentifier",
																"src": "3328:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3321:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3279:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3297:5:7",
														"nodeType": "YulTypedName",
														"src": "3297:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3307:3:7",
														"nodeType": "YulTypedName",
														"src": "3307:3:7",
														"type": ""
													}
												],
												"src": "3279:60:7"
											},
											{
												"body": {
													"nativeSrc": "3405:82:7",
													"nodeType": "YulBlock",
													"src": "3405:82:7",
													"statements": [
														{
															"nativeSrc": "3415:66:7",
															"nodeType": "YulAssignment",
															"src": "3415:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3473:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "3473:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3455:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "3455:17:7"
																				},
																				"nativeSrc": "3455:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3455:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3446:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "3446:8:7"
																		},
																		"nativeSrc": "3446:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3446:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3428:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "3428:17:7"
																},
																"nativeSrc": "3428:53:7",
																"nodeType": "YulFunctionCall",
																"src": "3428:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3415:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "3415:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3345:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3385:5:7",
														"nodeType": "YulTypedName",
														"src": "3385:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3395:9:7",
														"nodeType": "YulTypedName",
														"src": "3395:9:7",
														"type": ""
													}
												],
												"src": "3345:142:7"
											},
											{
												"body": {
													"nativeSrc": "3540:28:7",
													"nodeType": "YulBlock",
													"src": "3540:28:7",
													"statements": [
														{
															"nativeSrc": "3550:12:7",
															"nodeType": "YulAssignment",
															"src": "3550:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "3557:5:7",
																"nodeType": "YulIdentifier",
																"src": "3557:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3550:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3550:3:7"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3493:75:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3526:5:7",
														"nodeType": "YulTypedName",
														"src": "3526:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3536:3:7",
														"nodeType": "YulTypedName",
														"src": "3536:3:7",
														"type": ""
													}
												],
												"src": "3493:75:7"
											},
											{
												"body": {
													"nativeSrc": "3650:193:7",
													"nodeType": "YulBlock",
													"src": "3650:193:7",
													"statements": [
														{
															"nativeSrc": "3660:63:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3660:63:7",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3715:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "3715:7:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3684:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "3684:30:7"
																},
																"nativeSrc": "3684:39:7",
																"nodeType": "YulFunctionCall",
																"src": "3684:39:7"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3664:16:7",
																	"nodeType": "YulTypedName",
																	"src": "3664:16:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3739:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "3739:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3779:4:7",
																						"nodeType": "YulIdentifier",
																						"src": "3779:4:7"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3773:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "3773:5:7"
																				},
																				"nativeSrc": "3773:11:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:11:7"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3786:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3818:16:7",
																						"nodeType": "YulIdentifier",
																						"src": "3818:16:7"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3794:23:7",
																					"nodeType": "YulIdentifier",
																					"src": "3794:23:7"
																				},
																				"nativeSrc": "3794:41:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3794:41:7"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3745:27:7",
																			"nodeType": "YulIdentifier",
																			"src": "3745:27:7"
																		},
																		"nativeSrc": "3745:91:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3745:91:7"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3732:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3732:6:7"
																},
																"nativeSrc": "3732:105:7",
																"nodeType": "YulFunctionCall",
																"src": "3732:105:7"
															},
															"nativeSrc": "3732:105:7",
															"nodeType": "YulExpressionStatement",
															"src": "3732:105:7"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3574:269:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3627:4:7",
														"nodeType": "YulTypedName",
														"src": "3627:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3633:6:7",
														"nodeType": "YulTypedName",
														"src": "3633:6:7",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3641:7:7",
														"nodeType": "YulTypedName",
														"src": "3641:7:7",
														"type": ""
													}
												],
												"src": "3574:269:7"
											},
											{
												"body": {
													"nativeSrc": "3898:24:7",
													"nodeType": "YulBlock",
													"src": "3898:24:7",
													"statements": [
														{
															"nativeSrc": "3908:8:7",
															"nodeType": "YulAssignment",
															"src": "3908:8:7",
															"value": {
																"kind": "number",
																"nativeSrc": "3915:1:7",
																"nodeType": "YulLiteral",
																"src": "3915:1:7",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3908:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3908:3:7"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3849:73:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3894:3:7",
														"nodeType": "YulTypedName",
														"src": "3894:3:7",
														"type": ""
													}
												],
												"src": "3849:73:7"
											},
											{
												"body": {
													"nativeSrc": "3981:136:7",
													"nodeType": "YulBlock",
													"src": "3981:136:7",
													"statements": [
														{
															"nativeSrc": "3991:46:7",
															"nodeType": "YulVariableDeclaration",
															"src": "3991:46:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "4005:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4005:30:7"
																},
																"nativeSrc": "4005:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4005:32:7"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3995:6:7",
																	"nodeType": "YulTypedName",
																	"src": "3995:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4090:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4090:4:7"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4096:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:7"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4104:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4104:6:7"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4046:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4046:43:7"
																},
																"nativeSrc": "4046:65:7",
																"nodeType": "YulFunctionCall",
																"src": "4046:65:7"
															},
															"nativeSrc": "4046:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "4046:65:7"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3928:189:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3967:4:7",
														"nodeType": "YulTypedName",
														"src": "3967:4:7",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3973:6:7",
														"nodeType": "YulTypedName",
														"src": "3973:6:7",
														"type": ""
													}
												],
												"src": "3928:189:7"
											},
											{
												"body": {
													"nativeSrc": "4173:136:7",
													"nodeType": "YulBlock",
													"src": "4173:136:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4240:63:7",
																"nodeType": "YulBlock",
																"src": "4240:63:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4284:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4284:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4291:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4291:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4254:29:7",
																				"nodeType": "YulIdentifier",
																				"src": "4254:29:7"
																			},
																			"nativeSrc": "4254:39:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4254:39:7"
																		},
																		"nativeSrc": "4254:39:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4254:39:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4193:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4193:5:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4200:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4200:3:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4190:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4190:2:7"
																},
																"nativeSrc": "4190:14:7",
																"nodeType": "YulFunctionCall",
																"src": "4190:14:7"
															},
															"nativeSrc": "4183:120:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4205:26:7",
																"nodeType": "YulBlock",
																"src": "4205:26:7",
																"statements": [
																	{
																		"nativeSrc": "4207:22:7",
																		"nodeType": "YulAssignment",
																		"src": "4207:22:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4220:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4220:5:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4227:1:7",
																					"nodeType": "YulLiteral",
																					"src": "4227:1:7",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4216:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4216:3:7"
																			},
																			"nativeSrc": "4216:13:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4216:13:7"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4207:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "4207:5:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4187:2:7",
																"nodeType": "YulBlock",
																"src": "4187:2:7",
																"statements": []
															},
															"src": "4183:120:7"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4123:186:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4161:5:7",
														"nodeType": "YulTypedName",
														"src": "4161:5:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4168:3:7",
														"nodeType": "YulTypedName",
														"src": "4168:3:7",
														"type": ""
													}
												],
												"src": "4123:186:7"
											},
											{
												"body": {
													"nativeSrc": "4394:464:7",
													"nodeType": "YulBlock",
													"src": "4394:464:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4420:431:7",
																"nodeType": "YulBlock",
																"src": "4420:431:7",
																"statements": [
																	{
																		"nativeSrc": "4434:54:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4434:54:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4482:5:7",
																					"nodeType": "YulIdentifier",
																					"src": "4482:5:7"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4450:31:7",
																				"nodeType": "YulIdentifier",
																				"src": "4450:31:7"
																			},
																			"nativeSrc": "4450:38:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4450:38:7"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4438:8:7",
																				"nodeType": "YulTypedName",
																				"src": "4438:8:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4501:63:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4501:63:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4524:8:7",
																					"nodeType": "YulIdentifier",
																					"src": "4524:8:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4552:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "4552:10:7"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4534:17:7",
																						"nodeType": "YulIdentifier",
																						"src": "4534:17:7"
																					},
																					"nativeSrc": "4534:29:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4534:29:7"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4520:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "4520:3:7"
																			},
																			"nativeSrc": "4520:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4520:44:7"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4505:11:7",
																				"nodeType": "YulTypedName",
																				"src": "4505:11:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4721:27:7",
																			"nodeType": "YulBlock",
																			"src": "4721:27:7",
																			"statements": [
																				{
																					"nativeSrc": "4723:23:7",
																					"nodeType": "YulAssignment",
																					"src": "4723:23:7",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4738:8:7",
																						"nodeType": "YulIdentifier",
																						"src": "4738:8:7"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4723:11:7",
																							"nodeType": "YulIdentifier",
																							"src": "4723:11:7"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4705:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "4705:10:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4717:2:7",
																					"nodeType": "YulLiteral",
																					"src": "4717:2:7",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4702:2:7",
																				"nodeType": "YulIdentifier",
																				"src": "4702:2:7"
																			},
																			"nativeSrc": "4702:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4702:18:7"
																		},
																		"nativeSrc": "4699:49:7",
																		"nodeType": "YulIf",
																		"src": "4699:49:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4790:11:7",
																					"nodeType": "YulIdentifier",
																					"src": "4790:11:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4807:8:7",
																							"nodeType": "YulIdentifier",
																							"src": "4807:8:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4835:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "4835:3:7"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4817:17:7",
																								"nodeType": "YulIdentifier",
																								"src": "4817:17:7"
																							},
																							"nativeSrc": "4817:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "4817:22:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4803:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "4803:3:7"
																					},
																					"nativeSrc": "4803:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "4803:37:7"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4761:28:7",
																				"nodeType": "YulIdentifier",
																				"src": "4761:28:7"
																			},
																			"nativeSrc": "4761:80:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4761:80:7"
																		},
																		"nativeSrc": "4761:80:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4761:80:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4411:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "4411:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4416:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4408:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "4408:2:7"
																},
																"nativeSrc": "4408:11:7",
																"nodeType": "YulFunctionCall",
																"src": "4408:11:7"
															},
															"nativeSrc": "4405:446:7",
															"nodeType": "YulIf",
															"src": "4405:446:7"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4315:543:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4370:5:7",
														"nodeType": "YulTypedName",
														"src": "4370:5:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4377:3:7",
														"nodeType": "YulTypedName",
														"src": "4377:3:7",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4382:10:7",
														"nodeType": "YulTypedName",
														"src": "4382:10:7",
														"type": ""
													}
												],
												"src": "4315:543:7"
											},
											{
												"body": {
													"nativeSrc": "4927:54:7",
													"nodeType": "YulBlock",
													"src": "4927:54:7",
													"statements": [
														{
															"nativeSrc": "4937:37:7",
															"nodeType": "YulAssignment",
															"src": "4937:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4962:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "4962:4:7"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4968:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "4968:5:7"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4958:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4958:3:7"
																},
																"nativeSrc": "4958:16:7",
																"nodeType": "YulFunctionCall",
																"src": "4958:16:7"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4937:8:7",
																	"nodeType": "YulIdentifier",
																	"src": "4937:8:7"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4864:117:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4902:4:7",
														"nodeType": "YulTypedName",
														"src": "4902:4:7",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4908:5:7",
														"nodeType": "YulTypedName",
														"src": "4908:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4918:8:7",
														"nodeType": "YulTypedName",
														"src": "4918:8:7",
														"type": ""
													}
												],
												"src": "4864:117:7"
											},
											{
												"body": {
													"nativeSrc": "5038:118:7",
													"nodeType": "YulBlock",
													"src": "5038:118:7",
													"statements": [
														{
															"nativeSrc": "5048:68:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5048:68:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5097:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5097:1:7",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5100:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "5100:5:7"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5093:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5093:3:7"
																				},
																				"nativeSrc": "5093:13:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5093:13:7"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5112:1:7",
																						"nodeType": "YulLiteral",
																						"src": "5112:1:7",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5108:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5108:3:7"
																				},
																				"nativeSrc": "5108:6:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5108:6:7"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5064:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "5064:28:7"
																		},
																		"nativeSrc": "5064:51:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5064:51:7"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5060:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5060:3:7"
																},
																"nativeSrc": "5060:56:7",
																"nodeType": "YulFunctionCall",
																"src": "5060:56:7"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5052:4:7",
																	"nodeType": "YulTypedName",
																	"src": "5052:4:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5125:25:7",
															"nodeType": "YulAssignment",
															"src": "5125:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5139:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5139:4:7"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5145:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5145:4:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5135:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5135:3:7"
																},
																"nativeSrc": "5135:15:7",
																"nodeType": "YulFunctionCall",
																"src": "5135:15:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5125:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:7"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4987:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5015:4:7",
														"nodeType": "YulTypedName",
														"src": "5015:4:7",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "5021:5:7",
														"nodeType": "YulTypedName",
														"src": "5021:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5031:6:7",
														"nodeType": "YulTypedName",
														"src": "5031:6:7",
														"type": ""
													}
												],
												"src": "4987:169:7"
											},
											{
												"body": {
													"nativeSrc": "5242:214:7",
													"nodeType": "YulBlock",
													"src": "5242:214:7",
													"statements": [
														{
															"nativeSrc": "5375:37:7",
															"nodeType": "YulAssignment",
															"src": "5375:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5402:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5402:4:7"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5408:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5408:3:7"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5383:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "5383:18:7"
																},
																"nativeSrc": "5383:29:7",
																"nodeType": "YulFunctionCall",
																"src": "5383:29:7"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5375:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5375:4:7"
																}
															]
														},
														{
															"nativeSrc": "5421:29:7",
															"nodeType": "YulAssignment",
															"src": "5421:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5432:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5432:4:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5442:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5442:1:7",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5445:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "5445:3:7"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5438:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:7"
																		},
																		"nativeSrc": "5438:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:11:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5429:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5429:2:7"
																},
																"nativeSrc": "5429:21:7",
																"nodeType": "YulFunctionCall",
																"src": "5429:21:7"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5421:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5421:4:7"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5161:295:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5223:4:7",
														"nodeType": "YulTypedName",
														"src": "5223:4:7",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5229:3:7",
														"nodeType": "YulTypedName",
														"src": "5229:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5237:4:7",
														"nodeType": "YulTypedName",
														"src": "5237:4:7",
														"type": ""
													}
												],
												"src": "5161:295:7"
											},
											{
												"body": {
													"nativeSrc": "5553:1303:7",
													"nodeType": "YulBlock",
													"src": "5553:1303:7",
													"statements": [
														{
															"nativeSrc": "5564:51:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5564:51:7",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5611:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5578:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "5578:32:7"
																},
																"nativeSrc": "5578:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5578:37:7"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5568:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5568:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5700:22:7",
																"nodeType": "YulBlock",
																"src": "5700:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5702:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "5702:16:7"
																			},
																			"nativeSrc": "5702:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "5702:18:7"
																		},
																		"nativeSrc": "5702:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "5702:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5672:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5672:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5680:18:7",
																		"nodeType": "YulLiteral",
																		"src": "5680:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5669:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5669:2:7"
																},
																"nativeSrc": "5669:30:7",
																"nodeType": "YulFunctionCall",
																"src": "5669:30:7"
															},
															"nativeSrc": "5666:56:7",
															"nodeType": "YulIf",
															"src": "5666:56:7"
														},
														{
															"nativeSrc": "5732:52:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5732:52:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5778:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "5778:4:7"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5772:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "5772:5:7"
																		},
																		"nativeSrc": "5772:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5772:11:7"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5746:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "5746:25:7"
																},
																"nativeSrc": "5746:38:7",
																"nodeType": "YulFunctionCall",
																"src": "5746:38:7"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5736:6:7",
																	"nodeType": "YulTypedName",
																	"src": "5736:6:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5877:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "5877:4:7"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5883:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:7"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5891:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:7"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5831:45:7",
																	"nodeType": "YulIdentifier",
																	"src": "5831:45:7"
																},
																"nativeSrc": "5831:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5831:67:7"
															},
															"nativeSrc": "5831:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5831:67:7"
														},
														{
															"nativeSrc": "5908:18:7",
															"nodeType": "YulVariableDeclaration",
															"src": "5908:18:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5925:1:7",
																"nodeType": "YulLiteral",
																"src": "5925:1:7",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5912:9:7",
																	"nodeType": "YulTypedName",
																	"src": "5912:9:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5936:17:7",
															"nodeType": "YulAssignment",
															"src": "5936:17:7",
															"value": {
																"kind": "number",
																"nativeSrc": "5949:4:7",
																"nodeType": "YulLiteral",
																"src": "5949:4:7",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5936:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5936:9:7"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "6000:611:7",
																		"nodeType": "YulBlock",
																		"src": "6000:611:7",
																		"statements": [
																			{
																				"nativeSrc": "6014:37:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6014:37:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "6033:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6033:6:7"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6045:4:7",
																									"nodeType": "YulLiteral",
																									"src": "6045:4:7",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6041:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6041:3:7"
																							},
																							"nativeSrc": "6041:9:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6041:9:7"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "6029:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6029:3:7"
																					},
																					"nativeSrc": "6029:22:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6029:22:7"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "6018:7:7",
																						"nodeType": "YulTypedName",
																						"src": "6018:7:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6065:51:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6065:51:7",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6111:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6111:4:7"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6079:31:7",
																						"nodeType": "YulIdentifier",
																						"src": "6079:31:7"
																					},
																					"nativeSrc": "6079:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6079:37:7"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6069:6:7",
																						"nodeType": "YulTypedName",
																						"src": "6069:6:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6129:10:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6129:10:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6138:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6138:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6133:1:7",
																						"nodeType": "YulTypedName",
																						"src": "6133:1:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6197:163:7",
																					"nodeType": "YulBlock",
																					"src": "6197:163:7",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6222:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6222:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6240:3:7",
																														"nodeType": "YulIdentifier",
																														"src": "6240:3:7"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6245:9:7",
																														"nodeType": "YulIdentifier",
																														"src": "6245:9:7"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6236:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6236:3:7"
																												},
																												"nativeSrc": "6236:19:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6236:19:7"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6230:5:7",
																											"nodeType": "YulIdentifier",
																											"src": "6230:5:7"
																										},
																										"nativeSrc": "6230:26:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6230:26:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6215:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6215:6:7"
																								},
																								"nativeSrc": "6215:42:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6215:42:7"
																							},
																							"nativeSrc": "6215:42:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6215:42:7"
																						},
																						{
																							"nativeSrc": "6274:24:7",
																							"nodeType": "YulAssignment",
																							"src": "6274:24:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6288:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6288:6:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6296:1:7",
																										"nodeType": "YulLiteral",
																										"src": "6296:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6284:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6284:3:7"
																								},
																								"nativeSrc": "6284:14:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6284:14:7"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6274:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6274:6:7"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6315:31:7",
																							"nodeType": "YulAssignment",
																							"src": "6315:31:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6332:9:7",
																										"nodeType": "YulIdentifier",
																										"src": "6332:9:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6343:2:7",
																										"nodeType": "YulLiteral",
																										"src": "6343:2:7",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6328:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6328:3:7"
																								},
																								"nativeSrc": "6328:18:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6328:18:7"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6315:9:7",
																									"nodeType": "YulIdentifier",
																									"src": "6315:9:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6163:1:7",
																							"nodeType": "YulIdentifier",
																							"src": "6163:1:7"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6166:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6166:7:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6160:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6160:2:7"
																					},
																					"nativeSrc": "6160:14:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6160:14:7"
																				},
																				"nativeSrc": "6152:208:7",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6175:21:7",
																					"nodeType": "YulBlock",
																					"src": "6175:21:7",
																					"statements": [
																						{
																							"nativeSrc": "6177:17:7",
																							"nodeType": "YulAssignment",
																							"src": "6177:17:7",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6186:1:7",
																										"nodeType": "YulIdentifier",
																										"src": "6186:1:7"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6189:4:7",
																										"nodeType": "YulLiteral",
																										"src": "6189:4:7",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6182:3:7",
																									"nodeType": "YulIdentifier",
																									"src": "6182:3:7"
																								},
																								"nativeSrc": "6182:12:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6182:12:7"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6177:1:7",
																									"nodeType": "YulIdentifier",
																									"src": "6177:1:7"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6156:3:7",
																					"nodeType": "YulBlock",
																					"src": "6156:3:7",
																					"statements": []
																				},
																				"src": "6152:208:7"
																			},
																			{
																				"body": {
																					"nativeSrc": "6396:156:7",
																					"nodeType": "YulBlock",
																					"src": "6396:156:7",
																					"statements": [
																						{
																							"nativeSrc": "6414:43:7",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6414:43:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6441:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6441:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6446:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6446:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6437:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6437:3:7"
																										},
																										"nativeSrc": "6437:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6437:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6431:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6431:5:7"
																								},
																								"nativeSrc": "6431:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6431:26:7"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6418:9:7",
																									"nodeType": "YulTypedName",
																									"src": "6418:9:7",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6481:6:7",
																										"nodeType": "YulIdentifier",
																										"src": "6481:6:7"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6508:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6508:9:7"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6523:6:7",
																														"nodeType": "YulIdentifier",
																														"src": "6523:6:7"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6531:4:7",
																														"nodeType": "YulLiteral",
																														"src": "6531:4:7",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6519:3:7",
																													"nodeType": "YulIdentifier",
																													"src": "6519:3:7"
																												},
																												"nativeSrc": "6519:17:7",
																												"nodeType": "YulFunctionCall",
																												"src": "6519:17:7"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6489:18:7",
																											"nodeType": "YulIdentifier",
																											"src": "6489:18:7"
																										},
																										"nativeSrc": "6489:48:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6489:48:7"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6474:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6474:6:7"
																								},
																								"nativeSrc": "6474:64:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6474:64:7"
																							},
																							"nativeSrc": "6474:64:7",
																							"nodeType": "YulExpressionStatement",
																							"src": "6474:64:7"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6379:7:7",
																							"nodeType": "YulIdentifier",
																							"src": "6379:7:7"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6388:6:7",
																							"nodeType": "YulIdentifier",
																							"src": "6388:6:7"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6376:2:7",
																						"nodeType": "YulIdentifier",
																						"src": "6376:2:7"
																					},
																					"nativeSrc": "6376:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6376:19:7"
																				},
																				"nativeSrc": "6373:179:7",
																				"nodeType": "YulIf",
																				"src": "6373:179:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6572:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6572:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6586:6:7",
																											"nodeType": "YulIdentifier",
																											"src": "6586:6:7"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6594:1:7",
																											"nodeType": "YulLiteral",
																											"src": "6594:1:7",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6582:3:7",
																										"nodeType": "YulIdentifier",
																										"src": "6582:3:7"
																									},
																									"nativeSrc": "6582:14:7",
																									"nodeType": "YulFunctionCall",
																									"src": "6582:14:7"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6598:1:7",
																									"nodeType": "YulLiteral",
																									"src": "6598:1:7",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6578:3:7",
																								"nodeType": "YulIdentifier",
																								"src": "6578:3:7"
																							},
																							"nativeSrc": "6578:22:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6578:22:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6565:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:7"
																					},
																					"nativeSrc": "6565:36:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6565:36:7"
																				},
																				"nativeSrc": "6565:36:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6565:36:7"
																			}
																		]
																	},
																	"nativeSrc": "5993:618:7",
																	"nodeType": "YulCase",
																	"src": "5993:618:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5998:1:7",
																		"nodeType": "YulLiteral",
																		"src": "5998:1:7",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6628:222:7",
																		"nodeType": "YulBlock",
																		"src": "6628:222:7",
																		"statements": [
																			{
																				"nativeSrc": "6642:14:7",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6642:14:7",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6655:1:7",
																					"nodeType": "YulLiteral",
																					"src": "6655:1:7",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6646:5:7",
																						"nodeType": "YulTypedName",
																						"src": "6646:5:7",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6679:67:7",
																					"nodeType": "YulBlock",
																					"src": "6679:67:7",
																					"statements": [
																						{
																							"nativeSrc": "6697:35:7",
																							"nodeType": "YulAssignment",
																							"src": "6697:35:7",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6716:3:7",
																												"nodeType": "YulIdentifier",
																												"src": "6716:3:7"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6721:9:7",
																												"nodeType": "YulIdentifier",
																												"src": "6721:9:7"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6712:3:7",
																											"nodeType": "YulIdentifier",
																											"src": "6712:3:7"
																										},
																										"nativeSrc": "6712:19:7",
																										"nodeType": "YulFunctionCall",
																										"src": "6712:19:7"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6706:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6706:5:7"
																								},
																								"nativeSrc": "6706:26:7",
																								"nodeType": "YulFunctionCall",
																								"src": "6706:26:7"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6697:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6697:5:7"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6672:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "6672:6:7"
																				},
																				"nativeSrc": "6669:77:7",
																				"nodeType": "YulIf",
																				"src": "6669:77:7"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6766:4:7",
																							"nodeType": "YulIdentifier",
																							"src": "6766:4:7"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6825:5:7",
																									"nodeType": "YulIdentifier",
																									"src": "6825:5:7"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6832:6:7",
																									"nodeType": "YulIdentifier",
																									"src": "6832:6:7"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6772:52:7",
																								"nodeType": "YulIdentifier",
																								"src": "6772:52:7"
																							},
																							"nativeSrc": "6772:67:7",
																							"nodeType": "YulFunctionCall",
																							"src": "6772:67:7"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6759:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6759:6:7"
																					},
																					"nativeSrc": "6759:81:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6759:81:7"
																				},
																				"nativeSrc": "6759:81:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "6759:81:7"
																			}
																		]
																	},
																	"nativeSrc": "6620:230:7",
																	"nodeType": "YulCase",
																	"src": "6620:230:7",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5973:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5973:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5981:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5981:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5970:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "5970:2:7"
																},
																"nativeSrc": "5970:14:7",
																"nodeType": "YulFunctionCall",
																"src": "5970:14:7"
															},
															"nativeSrc": "5963:887:7",
															"nodeType": "YulSwitch",
															"src": "5963:887:7"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5461:1395:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5542:4:7",
														"nodeType": "YulTypedName",
														"src": "5542:4:7",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5548:3:7",
														"nodeType": "YulTypedName",
														"src": "5548:3:7",
														"type": ""
													}
												],
												"src": "5461:1395:7"
											},
											{
												"body": {
													"nativeSrc": "6927:53:7",
													"nodeType": "YulBlock",
													"src": "6927:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6944:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "6944:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6967:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6967:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6949:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "6949:17:7"
																		},
																		"nativeSrc": "6949:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6949:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6937:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6937:6:7"
																},
																"nativeSrc": "6937:37:7",
																"nodeType": "YulFunctionCall",
																"src": "6937:37:7"
															},
															"nativeSrc": "6937:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "6937:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6862:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6915:5:7",
														"nodeType": "YulTypedName",
														"src": "6915:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6922:3:7",
														"nodeType": "YulTypedName",
														"src": "6922:3:7",
														"type": ""
													}
												],
												"src": "6862:118:7"
											},
											{
												"body": {
													"nativeSrc": "7084:124:7",
													"nodeType": "YulBlock",
													"src": "7084:124:7",
													"statements": [
														{
															"nativeSrc": "7094:26:7",
															"nodeType": "YulAssignment",
															"src": "7094:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7106:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "7106:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7117:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7117:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7102:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7102:3:7"
																},
																"nativeSrc": "7102:18:7",
																"nodeType": "YulFunctionCall",
																"src": "7102:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7094:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7094:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7174:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7174:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7187:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7187:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7198:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7198:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7183:3:7"
																		},
																		"nativeSrc": "7183:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7183:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7130:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "7130:43:7"
																},
																"nativeSrc": "7130:71:7",
																"nodeType": "YulFunctionCall",
																"src": "7130:71:7"
															},
															"nativeSrc": "7130:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "7130:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6986:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7056:9:7",
														"nodeType": "YulTypedName",
														"src": "7056:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7068:6:7",
														"nodeType": "YulTypedName",
														"src": "7068:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7079:4:7",
														"nodeType": "YulTypedName",
														"src": "7079:4:7",
														"type": ""
													}
												],
												"src": "6986:222:7"
											},
											{
												"body": {
													"nativeSrc": "7310:73:7",
													"nodeType": "YulBlock",
													"src": "7310:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7327:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7327:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7332:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7332:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7320:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7320:6:7"
																},
																"nativeSrc": "7320:19:7",
																"nodeType": "YulFunctionCall",
																"src": "7320:19:7"
															},
															"nativeSrc": "7320:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "7320:19:7"
														},
														{
															"nativeSrc": "7348:29:7",
															"nodeType": "YulAssignment",
															"src": "7348:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7367:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7367:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7372:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7372:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7363:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7363:3:7"
																},
																"nativeSrc": "7363:14:7",
																"nodeType": "YulFunctionCall",
																"src": "7363:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7348:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "7348:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7214:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7282:3:7",
														"nodeType": "YulTypedName",
														"src": "7282:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7287:6:7",
														"nodeType": "YulTypedName",
														"src": "7287:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7298:11:7",
														"nodeType": "YulTypedName",
														"src": "7298:11:7",
														"type": ""
													}
												],
												"src": "7214:169:7"
											},
											{
												"body": {
													"nativeSrc": "7495:65:7",
													"nodeType": "YulBlock",
													"src": "7495:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7517:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7517:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7525:1:7",
																				"nodeType": "YulLiteral",
																				"src": "7525:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7513:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7513:3:7"
																		},
																		"nativeSrc": "7513:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7513:14:7"
																	},
																	{
																		"hexValue": "496e76616c69642066656520726563697069656e74",
																		"kind": "string",
																		"nativeSrc": "7529:23:7",
																		"nodeType": "YulLiteral",
																		"src": "7529:23:7",
																		"type": "",
																		"value": "Invalid fee recipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7506:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7506:6:7"
																},
																"nativeSrc": "7506:47:7",
																"nodeType": "YulFunctionCall",
																"src": "7506:47:7"
															},
															"nativeSrc": "7506:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "7506:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361",
												"nativeSrc": "7389:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7487:6:7",
														"nodeType": "YulTypedName",
														"src": "7487:6:7",
														"type": ""
													}
												],
												"src": "7389:171:7"
											},
											{
												"body": {
													"nativeSrc": "7712:220:7",
													"nodeType": "YulBlock",
													"src": "7712:220:7",
													"statements": [
														{
															"nativeSrc": "7722:74:7",
															"nodeType": "YulAssignment",
															"src": "7722:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7788:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7788:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7793:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7793:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7729:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "7729:58:7"
																},
																"nativeSrc": "7729:67:7",
																"nodeType": "YulFunctionCall",
																"src": "7729:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7722:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7722:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7894:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7894:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361",
																	"nativeSrc": "7805:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "7805:88:7"
																},
																"nativeSrc": "7805:93:7",
																"nodeType": "YulFunctionCall",
																"src": "7805:93:7"
															},
															"nativeSrc": "7805:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "7805:93:7"
														},
														{
															"nativeSrc": "7907:19:7",
															"nodeType": "YulAssignment",
															"src": "7907:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7918:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7918:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7923:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7923:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7914:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7914:3:7"
																},
																"nativeSrc": "7914:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7914:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7907:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7907:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7566:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7700:3:7",
														"nodeType": "YulTypedName",
														"src": "7700:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7708:3:7",
														"nodeType": "YulTypedName",
														"src": "7708:3:7",
														"type": ""
													}
												],
												"src": "7566:366:7"
											},
											{
												"body": {
													"nativeSrc": "8109:248:7",
													"nodeType": "YulBlock",
													"src": "8109:248:7",
													"statements": [
														{
															"nativeSrc": "8119:26:7",
															"nodeType": "YulAssignment",
															"src": "8119:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8131:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "8131:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8142:2:7",
																		"nodeType": "YulLiteral",
																		"src": "8142:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8127:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8127:3:7"
																},
																"nativeSrc": "8127:18:7",
																"nodeType": "YulFunctionCall",
																"src": "8127:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8119:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8119:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8166:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8166:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8177:1:7",
																				"nodeType": "YulLiteral",
																				"src": "8177:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8162:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8162:3:7"
																		},
																		"nativeSrc": "8162:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8162:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8185:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8185:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8191:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "8191:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8181:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8181:3:7"
																		},
																		"nativeSrc": "8181:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8181:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8155:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8155:6:7"
																},
																"nativeSrc": "8155:47:7",
																"nodeType": "YulFunctionCall",
																"src": "8155:47:7"
															},
															"nativeSrc": "8155:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "8155:47:7"
														},
														{
															"nativeSrc": "8211:139:7",
															"nodeType": "YulAssignment",
															"src": "8211:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8345:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8345:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8219:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "8219:124:7"
																},
																"nativeSrc": "8219:131:7",
																"nodeType": "YulFunctionCall",
																"src": "8219:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8211:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8211:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7938:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8089:9:7",
														"nodeType": "YulTypedName",
														"src": "8089:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8104:4:7",
														"nodeType": "YulTypedName",
														"src": "8104:4:7",
														"type": ""
													}
												],
												"src": "7938:419:7"
											},
											{
												"body": {
													"nativeSrc": "8391:152:7",
													"nodeType": "YulBlock",
													"src": "8391:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8408:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8408:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8411:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8411:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8401:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8401:6:7"
																},
																"nativeSrc": "8401:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8401:88:7"
															},
															"nativeSrc": "8401:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8401:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8505:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8505:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8508:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8508:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8498:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8498:6:7"
																},
																"nativeSrc": "8498:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8498:15:7"
															},
															"nativeSrc": "8498:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8498:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8529:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8529:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8532:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8532:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8522:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8522:6:7"
																},
																"nativeSrc": "8522:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8522:15:7"
															},
															"nativeSrc": "8522:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8522:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8363:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8363:180:7"
											},
											{
												"body": {
													"nativeSrc": "8593:147:7",
													"nodeType": "YulBlock",
													"src": "8593:147:7",
													"statements": [
														{
															"nativeSrc": "8603:25:7",
															"nodeType": "YulAssignment",
															"src": "8603:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8626:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8626:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8608:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8608:17:7"
																},
																"nativeSrc": "8608:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8608:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8603:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8603:1:7"
																}
															]
														},
														{
															"nativeSrc": "8637:25:7",
															"nodeType": "YulAssignment",
															"src": "8637:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8660:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8660:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8642:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8642:17:7"
																},
																"nativeSrc": "8642:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8642:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8637:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8637:1:7"
																}
															]
														},
														{
															"nativeSrc": "8671:16:7",
															"nodeType": "YulAssignment",
															"src": "8671:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8682:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8682:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8685:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8685:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8678:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8678:3:7"
																},
																"nativeSrc": "8678:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8678:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8671:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8711:22:7",
																"nodeType": "YulBlock",
																"src": "8711:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8713:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8713:16:7"
																			},
																			"nativeSrc": "8713:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8713:18:7"
																		},
																		"nativeSrc": "8713:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8713:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8703:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8703:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8706:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8706:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8700:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8700:2:7"
																},
																"nativeSrc": "8700:10:7",
																"nodeType": "YulFunctionCall",
																"src": "8700:10:7"
															},
															"nativeSrc": "8697:36:7",
															"nodeType": "YulIf",
															"src": "8697:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8549:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8580:1:7",
														"nodeType": "YulTypedName",
														"src": "8580:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8583:1:7",
														"nodeType": "YulTypedName",
														"src": "8583:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8589:3:7",
														"nodeType": "YulTypedName",
														"src": "8589:3:7",
														"type": ""
													}
												],
												"src": "8549:191:7"
											},
											{
												"body": {
													"nativeSrc": "8811:53:7",
													"nodeType": "YulBlock",
													"src": "8811:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8828:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8828:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8851:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8851:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8833:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "8833:17:7"
																		},
																		"nativeSrc": "8833:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8833:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8821:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8821:6:7"
																},
																"nativeSrc": "8821:37:7",
																"nodeType": "YulFunctionCall",
																"src": "8821:37:7"
															},
															"nativeSrc": "8821:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "8821:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8746:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8799:5:7",
														"nodeType": "YulTypedName",
														"src": "8799:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8806:3:7",
														"nodeType": "YulTypedName",
														"src": "8806:3:7",
														"type": ""
													}
												],
												"src": "8746:118:7"
											},
											{
												"body": {
													"nativeSrc": "9024:288:7",
													"nodeType": "YulBlock",
													"src": "9024:288:7",
													"statements": [
														{
															"nativeSrc": "9034:26:7",
															"nodeType": "YulAssignment",
															"src": "9034:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9046:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9046:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9057:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9057:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9042:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9042:3:7"
																},
																"nativeSrc": "9042:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9042:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9034:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9034:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9114:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9114:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9127:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9127:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9138:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9138:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9123:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9123:3:7"
																		},
																		"nativeSrc": "9123:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9123:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9070:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9070:43:7"
																},
																"nativeSrc": "9070:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9070:71:7"
															},
															"nativeSrc": "9070:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9070:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9195:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9195:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9208:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9208:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9219:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9219:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9204:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9204:3:7"
																		},
																		"nativeSrc": "9204:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9204:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9151:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9151:43:7"
																},
																"nativeSrc": "9151:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9151:72:7"
															},
															"nativeSrc": "9151:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9151:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9277:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9277:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9290:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9301:2:7",
																				"nodeType": "YulLiteral",
																				"src": "9301:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9286:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9286:3:7"
																		},
																		"nativeSrc": "9286:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9286:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9233:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9233:43:7"
																},
																"nativeSrc": "9233:72:7",
																"nodeType": "YulFunctionCall",
																"src": "9233:72:7"
															},
															"nativeSrc": "9233:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "9233:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8870:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8980:9:7",
														"nodeType": "YulTypedName",
														"src": "8980:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8992:6:7",
														"nodeType": "YulTypedName",
														"src": "8992:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9000:6:7",
														"nodeType": "YulTypedName",
														"src": "9000:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9008:6:7",
														"nodeType": "YulTypedName",
														"src": "9008:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9019:4:7",
														"nodeType": "YulTypedName",
														"src": "9019:4:7",
														"type": ""
													}
												],
												"src": "8870:442:7"
											},
											{
												"body": {
													"nativeSrc": "9416:124:7",
													"nodeType": "YulBlock",
													"src": "9416:124:7",
													"statements": [
														{
															"nativeSrc": "9426:26:7",
															"nodeType": "YulAssignment",
															"src": "9426:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9438:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "9438:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9449:2:7",
																		"nodeType": "YulLiteral",
																		"src": "9449:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9434:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9434:3:7"
																},
																"nativeSrc": "9434:18:7",
																"nodeType": "YulFunctionCall",
																"src": "9434:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9426:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9426:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9506:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9506:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9519:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9519:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9530:1:7",
																				"nodeType": "YulLiteral",
																				"src": "9530:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9515:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9515:3:7"
																		},
																		"nativeSrc": "9515:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9515:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9462:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "9462:43:7"
																},
																"nativeSrc": "9462:71:7",
																"nodeType": "YulFunctionCall",
																"src": "9462:71:7"
															},
															"nativeSrc": "9462:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "9462:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "9318:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9388:9:7",
														"nodeType": "YulTypedName",
														"src": "9388:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9400:6:7",
														"nodeType": "YulTypedName",
														"src": "9400:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9411:4:7",
														"nodeType": "YulTypedName",
														"src": "9411:4:7",
														"type": ""
													}
												],
												"src": "9318:222:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516125ed3803806125ed833981810160405281019061003191906105f7565b336040518060400160405280601581526020017f46656520546965727320455243323020546f6b656e00000000000000000000008152506040518060400160405280600581526020017f465445323000000000000000000000000000000000000000000000000000000081525081600390816100ad9190610869565b5080600490816100bd9190610869565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610947565b60405180910390fd5b61013f8161020560201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101a5906109ba565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101fe33836102c860201b60201c565b5050610a95565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610338575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161032f9190610947565b60405180910390fd5b6103495f838361034d60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361039d578060025f8282546103919190610a05565b9250508190555061046b565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610426578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161041d93929190610a47565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104b2578060025f82825403925050819055506104fc565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516105599190610a7c565b60405180910390a3505050565b5f5ffd5b5f819050919050565b61057c8161056a565b8114610586575f5ffd5b50565b5f8151905061059781610573565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6105c68261059d565b9050919050565b6105d6816105bc565b81146105e0575f5ffd5b50565b5f815190506105f1816105cd565b92915050565b5f5f6040838503121561060d5761060c610566565b5b5f61061a85828601610589565b925050602061062b858286016105e3565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806106b057607f821691505b6020821081036106c3576106c261066c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107257fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826106ea565b61072f86836106ea565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61076a6107656107608461056a565b610747565b61056a565b9050919050565b5f819050919050565b61078383610750565b61079761078f82610771565b8484546106f6565b825550505050565b5f5f905090565b6107ae61079f565b6107b981848461077a565b505050565b5b818110156107dc576107d15f826107a6565b6001810190506107bf565b5050565b601f821115610821576107f2816106c9565b6107fb846106db565b8101602085101561080a578190505b61081e610816856106db565b8301826107be565b50505b505050565b5f82821c905092915050565b5f6108415f1984600802610826565b1980831691505092915050565b5f6108598383610832565b9150826002028217905092915050565b61087282610635565b67ffffffffffffffff81111561088b5761088a61063f565b5b6108958254610699565b6108a08282856107e0565b5f60209050601f8311600181146108d1575f84156108bf578287015190505b6108c9858261084e565b865550610930565b601f1984166108df866106c9565b5f5b82811015610906578489015182556001820191506020850194506020810190506108e1565b86831015610923578489015161091f601f891682610832565b8355505b6001600288020188555050505b505050505050565b610941816105bc565b82525050565b5f60208201905061095a5f830184610938565b92915050565b5f82825260208201905092915050565b7f496e76616c69642066656520726563697069656e7400000000000000000000005f82015250565b5f6109a4601583610960565b91506109af82610970565b602082019050919050565b5f6020820190508181035f8301526109d181610998565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610a0f8261056a565b9150610a1a8361056a565b9250828201905080821115610a3257610a316109d8565b5b92915050565b610a418161056a565b82525050565b5f606082019050610a5a5f830186610938565b610a676020830185610a38565b610a746040830184610a38565b949350505050565b5f602082019050610a8f5f830184610a38565b92915050565b611b4b80610aa25f395ff3fe608060405234801561000f575f5ffd5b506004361061011f575f3560e01c806358a3a1c3116100ab578063a5f408b41161006f578063a5f408b41461030b578063a9059cbb14610327578063dd62ed3e14610357578063e74b981b14610387578063f2fde38b146103a35761011f565b806358a3a1c31461027957806370a0823114610295578063715018a6146102c55780638da5cb5b146102cf57806395d89b41146102ed5761011f565b806323b872dd116100f257806323b872dd146101c1578063309e7319146101f1578063313ce5671461022157806342b53e5f1461023f578063469048401461025b5761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd14610171578063230ed44a1461018f575b5f5ffd5b61012b6103bf565b604051610138919061144d565b60405180910390f35b61015b600480360381019061015691906114fe565b61044f565b6040516101689190611556565b60405180910390f35b610179610471565b604051610186919061157e565b60405180910390f35b6101a960048036038101906101a49190611597565b61047a565b6040516101b8939291906115c2565b60405180910390f35b6101db60048036038101906101d691906115f7565b6104af565b6040516101e89190611556565b60405180910390f35b61020b60048036038101906102069190611597565b61050e565b604051610218919061157e565b60405180910390f35b6102296105d4565b6040516102369190611662565b60405180910390f35b61025960048036038101906102549190611597565b6105dc565b005b610263610708565b604051610270919061168a565b60405180910390f35b610293600480360381019061028e91906116a3565b61072d565b005b6102af60048036038101906102aa91906116f3565b61082d565b6040516102bc919061157e565b60405180910390f35b6102cd610872565b005b6102d7610885565b6040516102e4919061168a565b60405180910390f35b6102f56108ad565b604051610302919061144d565b60405180910390f35b6103256004803603810190610320919061171e565b61093d565b005b610341600480360381019061033c91906114fe565b610a6d565b60405161034e9190611556565b60405180910390f35b610371600480360381019061036c9190611782565b610ac9565b60405161037e919061157e565b60405180910390f35b6103a1600480360381019061039c91906116f3565b610b4b565b005b6103bd60048036038101906103b891906116f3565b610c3b565b005b6060600380546103ce906117ed565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa906117ed565b80156104455780601f1061041c57610100808354040283529160200191610445565b820191905f5260205f20905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b5f5f610459610cbf565b9050610466818585610cc6565b600191505092915050565b5f600254905090565b60068181548110610489575f80fd5b905f5260205f2090600302015f91509050805f0154908060010154908060020154905083565b5f5f6104ba8361050e565b90505f81846104c9919061184a565b90506104f78660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610cd8565b50610503868683610cd8565b925050509392505050565b5f5f5f90505b6006805490508110156105ca575f600682815481106105365761053561187d565b5b905f5260205f2090600302016040518060600160405290815f8201548152602001600182015481526020016002820154815250509050805f0151841015801561059157505f81602001511480610590575080602001518411155b5b156105bc576127108160400151856105a991906118aa565b6105b39190611918565b925050506105cf565b508080600101915050610514565b505f90505b919050565b5f6012905090565b6105e4610d06565b600680549050811061062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062290611992565b60405180910390fd5b6006600160068054905061063f919061184a565b815481106106505761064f61187d565b5b905f5260205f209060030201600682815481106106705761066f61187d565b5b905f5260205f2090600302015f820154815f0155600182015481600101556002820154816002015590505060068054806106ad576106ac6119b0565b5b600190038181905f5260205f2090600302015f5f82015f9055600182015f9055600282015f905550509055807f2b4584016031d9a0d1fc722a5f384f606370058bfcc1354c24264dbd139d67da60405160405180910390a250565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610735610d06565b61271081111561077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077190611a27565b60405180910390fd5b6006604051806060016040528085815260200184815260200183815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f01556020820151816001015560408201518160020155505060016006805490506107ed919061184a565b7f37a23e54e8cf606c8ccd70367d9f32d3578f972bb538e67e0c5c08f26c9dfc19848484604051610820939291906115c2565b60405180910390a2505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61087a610d06565b6108835f610d8d565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108bc906117ed565b80601f01602080910402602001604051908101604052809291908181526020018280546108e8906117ed565b80156109335780601f1061090a57610100808354040283529160200191610933565b820191905f5260205f20905b81548152906001019060200180831161091657829003601f168201915b5050505050905090565b610945610d06565b600680549050841061098c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098390611992565b60405180910390fd5b6127108111156109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611a27565b60405180910390fd5b60405180606001604052808481526020018381526020018281525060068581548110610a00576109ff61187d565b5b905f5260205f2090600302015f820151815f01556020820151816001015560408201518160020155905050837fbb15785662e808c63efc6a05274ce9a7cb01b854b603db64f663b880234dd2fe848484604051610a5f939291906115c2565b60405180910390a250505050565b5f5f610a788361050e565b90505f8184610a87919061184a565b9050610ab460075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610e50565b50610abf8582610e50565b9250505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610b53610d06565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb890611a8f565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc281604051610c30919061168a565b60405180910390a150565b610c43610d06565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb3575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610caa919061168a565b60405180910390fd5b610cbc81610d8d565b50565b5f33905090565b610cd38383836001610e72565b505050565b5f5f610ce2610cbf565b9050610cef858285611041565b610cfa8585856110d4565b60019150509392505050565b610d0e610cbf565b73ffffffffffffffffffffffffffffffffffffffff16610d2c610885565b73ffffffffffffffffffffffffffffffffffffffff1614610d8b57610d4f610cbf565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d82919061168a565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f610e5a610cbf565b9050610e678185856110d4565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ee2575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ed9919061168a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f52575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f49919061168a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561103b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611032919061157e565b60405180910390a35b50505050565b5f61104c8484610ac9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110ce57818110156110bf578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110b693929190611aad565b60405180910390fd5b6110cd84848484035f610e72565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611144575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161113b919061168a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111b4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111ab919061168a565b60405180910390fd5b6111bf8383836111c4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611214578060025f8282546112089190611ae2565b925050819055506112e2565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561129d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161129493929190611aad565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611329578060025f8282540392505081905550611373565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113d0919061157e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61141f826113dd565b61142981856113e7565b93506114398185602086016113f7565b61144281611405565b840191505092915050565b5f6020820190508181035f8301526114658184611415565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61149a82611471565b9050919050565b6114aa81611490565b81146114b4575f5ffd5b50565b5f813590506114c5816114a1565b92915050565b5f819050919050565b6114dd816114cb565b81146114e7575f5ffd5b50565b5f813590506114f8816114d4565b92915050565b5f5f604083850312156115145761151361146d565b5b5f611521858286016114b7565b9250506020611532858286016114ea565b9150509250929050565b5f8115159050919050565b6115508161153c565b82525050565b5f6020820190506115695f830184611547565b92915050565b611578816114cb565b82525050565b5f6020820190506115915f83018461156f565b92915050565b5f602082840312156115ac576115ab61146d565b5b5f6115b9848285016114ea565b91505092915050565b5f6060820190506115d55f83018661156f565b6115e2602083018561156f565b6115ef604083018461156f565b949350505050565b5f5f5f6060848603121561160e5761160d61146d565b5b5f61161b868287016114b7565b935050602061162c868287016114b7565b925050604061163d868287016114ea565b9150509250925092565b5f60ff82169050919050565b61165c81611647565b82525050565b5f6020820190506116755f830184611653565b92915050565b61168481611490565b82525050565b5f60208201905061169d5f83018461167b565b92915050565b5f5f5f606084860312156116ba576116b961146d565b5b5f6116c7868287016114ea565b93505060206116d8868287016114ea565b92505060406116e9868287016114ea565b9150509250925092565b5f602082840312156117085761170761146d565b5b5f611715848285016114b7565b91505092915050565b5f5f5f5f608085870312156117365761173561146d565b5b5f611743878288016114ea565b9450506020611754878288016114ea565b9350506040611765878288016114ea565b9250506060611776878288016114ea565b91505092959194509250565b5f5f604083850312156117985761179761146d565b5b5f6117a5858286016114b7565b92505060206117b6858286016114b7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061180457607f821691505b602082108103611817576118166117c0565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611854826114cb565b915061185f836114cb565b92508282039050818111156118775761187661181d565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6118b4826114cb565b91506118bf836114cb565b92508282026118cd816114cb565b915082820484148315176118e4576118e361181d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611922826114cb565b915061192d836114cb565b92508261193d5761193c6118eb565b5b828204905092915050565b7f496e76616c696420696e646578000000000000000000000000000000000000005f82015250565b5f61197c600d836113e7565b915061198782611948565b602082019050919050565b5f6020820190508181035f8301526119a981611970565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f611a11600c836113e7565b9150611a1c826119dd565b602082019050919050565b5f6020820190508181035f830152611a3e81611a05565b9050919050565b7f496e76616c69642066656520726563697069656e7400000000000000000000005f82015250565b5f611a796015836113e7565b9150611a8482611a45565b602082019050919050565b5f6020820190508181035f830152611aa681611a6d565b9050919050565b5f606082019050611ac05f83018661167b565b611acd602083018561156f565b611ada604083018461156f565b949350505050565b5f611aec826114cb565b9150611af7836114cb565b9250828201905080821115611b0f57611b0e61181d565b5b9291505056fea2646970667358221220983b22c4b31d72784086e6554d050f636bcd344312a020a4149eb94bd4a2bf8e64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x25ED CODESIZE SUB DUP1 PUSH2 0x25ED DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x5F7 JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46656520546965727320455243323020546F6B656E0000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4654453230000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x869 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x869 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x205 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A5 SWAP1 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1FE CALLER DUP4 PUSH2 0x2C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP PUSH2 0xA95 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x338 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x947 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x349 PUSH0 DUP4 DUP4 PUSH2 0x34D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x39D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0xA05 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x46B JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x426 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xA47 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4B2 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4FC JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x559 SWAP2 SWAP1 PUSH2 0xA7C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x57C DUP2 PUSH2 0x56A JUMP JUMPDEST DUP2 EQ PUSH2 0x586 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x597 DUP2 PUSH2 0x573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x5C6 DUP3 PUSH2 0x59D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D6 DUP2 PUSH2 0x5BC JUMP JUMPDEST DUP2 EQ PUSH2 0x5E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x5F1 DUP2 PUSH2 0x5CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x60D JUMPI PUSH2 0x60C PUSH2 0x566 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x61A DUP6 DUP3 DUP7 ADD PUSH2 0x589 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x62B DUP6 DUP3 DUP7 ADD PUSH2 0x5E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x6B0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x6C3 JUMPI PUSH2 0x6C2 PUSH2 0x66C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x725 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x72F DUP7 DUP4 PUSH2 0x6EA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x76A PUSH2 0x765 PUSH2 0x760 DUP5 PUSH2 0x56A JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST PUSH2 0x56A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x783 DUP4 PUSH2 0x750 JUMP JUMPDEST PUSH2 0x797 PUSH2 0x78F DUP3 PUSH2 0x771 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x6F6 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7AE PUSH2 0x79F JUMP JUMPDEST PUSH2 0x7B9 DUP2 DUP5 DUP5 PUSH2 0x77A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7DC JUMPI PUSH2 0x7D1 PUSH0 DUP3 PUSH2 0x7A6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x7BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x821 JUMPI PUSH2 0x7F2 DUP2 PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x7FB DUP5 PUSH2 0x6DB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x80A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x81E PUSH2 0x816 DUP6 PUSH2 0x6DB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x7BE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x841 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x826 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x859 DUP4 DUP4 PUSH2 0x832 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x872 DUP3 PUSH2 0x635 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88B JUMPI PUSH2 0x88A PUSH2 0x63F JUMP JUMPDEST JUMPDEST PUSH2 0x895 DUP3 SLOAD PUSH2 0x699 JUMP JUMPDEST PUSH2 0x8A0 DUP3 DUP3 DUP6 PUSH2 0x7E0 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x8D1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x8BF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x8C9 DUP6 DUP3 PUSH2 0x84E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x930 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x8DF DUP7 PUSH2 0x6C9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x906 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x8E1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x923 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x91F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x832 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x941 DUP2 PUSH2 0x5BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x95A PUSH0 DUP4 ADD DUP5 PUSH2 0x938 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642066656520726563697069656E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x9A4 PUSH1 0x15 DUP4 PUSH2 0x960 JUMP JUMPDEST SWAP2 POP PUSH2 0x9AF DUP3 PUSH2 0x970 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9D1 DUP2 PUSH2 0x998 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xA0F DUP3 PUSH2 0x56A JUMP JUMPDEST SWAP2 POP PUSH2 0xA1A DUP4 PUSH2 0x56A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xA32 JUMPI PUSH2 0xA31 PUSH2 0x9D8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA41 DUP2 PUSH2 0x56A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xA5A PUSH0 DUP4 ADD DUP7 PUSH2 0x938 JUMP JUMPDEST PUSH2 0xA67 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xA38 JUMP JUMPDEST PUSH2 0xA74 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xA38 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xA8F PUSH0 DUP4 ADD DUP5 PUSH2 0xA38 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B4B DUP1 PUSH2 0xAA2 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58A3A1C3 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA5F408B4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA5F408B4 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A3 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x58A3A1C3 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2ED JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x309E7319 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x42B53E5F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x25B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x230ED44A EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x872 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x14FE JUMP JUMPDEST PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0xB4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x17ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FA SWAP1 PUSH2 0x17ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x459 PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP PUSH2 0x466 DUP2 DUP6 DUP6 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x489 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4BA DUP4 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x4F7 DUP7 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xCD8 JUMP JUMPDEST POP PUSH2 0x503 DUP7 DUP7 DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x5CA JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x536 JUMPI PUSH2 0x535 PUSH2 0x187D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x591 JUMPI POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD EQ DUP1 PUSH2 0x590 JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD DUP5 GT ISZERO JUMPDEST JUMPDEST ISZERO PUSH2 0x5BC JUMPI PUSH2 0x2710 DUP2 PUSH1 0x40 ADD MLOAD DUP6 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x1918 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x5CF JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x514 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x187D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH2 0x66F PUSH2 0x187D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP3 ADD SLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 DUP1 SLOAD DUP1 PUSH2 0x6AD JUMPI PUSH2 0x6AC PUSH2 0x19B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 PUSH0 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP SWAP1 SSTORE DUP1 PUSH32 0x2B4584016031D9A0D1FC722A5F384F606370058BFCC1354C24264DBD139D67DA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x735 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x771 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH32 0x37A23E54E8CF606C8CCD70367D9F32D3578F972BB538E67E0C5C08F26C9DFC19 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x820 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87A PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x883 PUSH0 PUSH2 0xD8D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8BC SWAP1 PUSH2 0x17ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x17ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x933 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x90A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x933 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x916 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x945 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C8 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xA00 JUMPI PUSH2 0x9FF PUSH2 0x187D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP4 PUSH32 0xBB15785662E808C63EFC6A05274CE9A7CB01B854B603DB64F663B880234DD2FE DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA78 DUP4 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0xAB4 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xE50 JUMP JUMPDEST POP PUSH2 0xABF DUP6 DUP3 PUSH2 0xE50 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB53 PUSH2 0xD06 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7A7B5A0A132F9E0581EB8527F66EAE9EE89C2A3E79D4AC7E41A1F1F4D48A7FC2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xC43 PUSH2 0xD06 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xD8D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCD3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xCE2 PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP PUSH2 0xCEF DUP6 DUP3 DUP6 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0xCFA DUP6 DUP6 DUP6 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD0E PUSH2 0xCBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD2C PUSH2 0x885 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8B JUMPI PUSH2 0xD4F PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xE5A PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP PUSH2 0xE67 DUP2 DUP6 DUP6 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF52 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x103B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1032 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x104C DUP5 DUP5 PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x10CE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10BF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CD DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE72 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1144 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11BF DUP4 DUP4 DUP4 PUSH2 0x11C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1214 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1208 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12E2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x129D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1294 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1329 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1373 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141F DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x1429 DUP2 DUP6 PUSH2 0x13E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1439 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x1442 DUP2 PUSH2 0x1405 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1465 DUP2 DUP5 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x149A DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14AA DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C5 DUP2 PUSH2 0x14A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DD DUP2 PUSH2 0x14CB JUMP JUMPDEST DUP2 EQ PUSH2 0x14E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F8 DUP2 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1514 JUMPI PUSH2 0x1513 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1521 DUP6 DUP3 DUP7 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1532 DUP6 DUP3 DUP7 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x153C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1569 PUSH0 DUP4 ADD DUP5 PUSH2 0x1547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1578 DUP2 PUSH2 0x14CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1591 PUSH0 DUP4 ADD DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AB PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B9 DUP5 DUP3 DUP6 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D5 PUSH0 DUP4 ADD DUP7 PUSH2 0x156F JUMP JUMPDEST PUSH2 0x15E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x156F JUMP JUMPDEST PUSH2 0x15EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x160E JUMPI PUSH2 0x160D PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x161B DUP7 DUP3 DUP8 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x162C DUP7 DUP3 DUP8 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x163D DUP7 DUP3 DUP8 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165C DUP2 PUSH2 0x1647 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1675 PUSH0 DUP4 ADD DUP5 PUSH2 0x1653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1684 DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x169D PUSH0 DUP4 ADD DUP5 PUSH2 0x167B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C7 DUP7 DUP3 DUP8 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16D8 DUP7 DUP3 DUP8 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16E9 DUP7 DUP3 DUP8 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1708 JUMPI PUSH2 0x1707 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1715 DUP5 DUP3 DUP6 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1735 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1743 DUP8 DUP3 DUP9 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1754 DUP8 DUP3 DUP9 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1765 DUP8 DUP3 DUP9 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1776 DUP8 DUP3 DUP9 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B6 DUP6 DUP3 DUP7 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1817 JUMPI PUSH2 0x1816 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1854 DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP PUSH2 0x185F DUP4 PUSH2 0x14CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1877 JUMPI PUSH2 0x1876 PUSH2 0x181D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18B4 DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP PUSH2 0x18BF DUP4 PUSH2 0x14CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18CD DUP2 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18E4 JUMPI PUSH2 0x18E3 PUSH2 0x181D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1922 DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP PUSH2 0x192D DUP4 PUSH2 0x14CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x193D JUMPI PUSH2 0x193C PUSH2 0x18EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E64657800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197C PUSH1 0xD DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A9 DUP2 PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A11 PUSH1 0xC DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1C DUP3 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A3E DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642066656520726563697069656E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A79 PUSH1 0x15 DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A84 DUP3 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA6 DUP2 PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AC0 PUSH0 DUP4 ADD DUP7 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x1ACD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x156F JUMP JUMPDEST PUSH2 0x1ADA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEC DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF7 DUP4 PUSH2 0x14CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B0F JUMPI PUSH2 0x1B0E PUSH2 0x181D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 EXTCODESIZE 0x22 0xC4 0xB3 SAR PUSH19 0x784086E6554D050F636BCD344312A020A4149E 0xB9 0x4B 0xD4 LOG2 0xBF DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "386:4073:6:-:0;;;1406:296;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1528:10;1601:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1587:1:6::2;1562:27;;:13;:27;;::::0;1554:61:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;1640:13;1625:12;;:28;;;;;;;;;;;;;;;;;;1663:32;1669:10;1681:13;1663:5;;;:32;;:::i;:::-;1406:296:::0;;386:4073;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:2:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;88:117:7:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:96::-;863:7;892:24;910:5;892:24;:::i;:::-;881:35;;826:96;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;1718:99::-;1770:6;1804:5;1798:12;1788:22;;1718:99;;;:::o;1823:180::-;1871:77;1868:1;1861:88;1968:4;1965:1;1958:15;1992:4;1989:1;1982:15;2009:180;2057:77;2054:1;2047:88;2154:4;2151:1;2144:15;2178:4;2175:1;2168:15;2195:320;2239:6;2276:1;2270:4;2266:12;2256:22;;2323:1;2317:4;2313:12;2344:18;2334:81;;2400:4;2392:6;2388:17;2378:27;;2334:81;2462:2;2454:6;2451:14;2431:18;2428:38;2425:84;;2481:18;;:::i;:::-;2425:84;2246:269;2195:320;;;:::o;2521:141::-;2570:4;2593:3;2585:11;;2616:3;2613:1;2606:14;2650:4;2647:1;2637:18;2629:26;;2521:141;;;:::o;2668:93::-;2705:6;2752:2;2747;2740:5;2736:14;2732:23;2722:33;;2668:93;;;:::o;2767:107::-;2811:8;2861:5;2855:4;2851:16;2830:37;;2767:107;;;;:::o;2880:393::-;2949:6;2999:1;2987:10;2983:18;3022:97;3052:66;3041:9;3022:97;:::i;:::-;3140:39;3170:8;3159:9;3140:39;:::i;:::-;3128:51;;3212:4;3208:9;3201:5;3197:21;3188:30;;3261:4;3251:8;3247:19;3240:5;3237:30;3227:40;;2956:317;;2880:393;;;;;:::o;3279:60::-;3307:3;3328:5;3321:12;;3279:60;;;:::o;3345:142::-;3395:9;3428:53;3446:34;3455:24;3473:5;3455:24;:::i;:::-;3446:34;:::i;:::-;3428:53;:::i;:::-;3415:66;;3345:142;;;:::o;3493:75::-;3536:3;3557:5;3550:12;;3493:75;;;:::o;3574:269::-;3684:39;3715:7;3684:39;:::i;:::-;3745:91;3794:41;3818:16;3794:41;:::i;:::-;3786:6;3779:4;3773:11;3745:91;:::i;:::-;3739:4;3732:105;3650:193;3574:269;;;:::o;3849:73::-;3894:3;3915:1;3908:8;;3849:73;:::o;3928:189::-;4005:32;;:::i;:::-;4046:65;4104:6;4096;4090:4;4046:65;:::i;:::-;3981:136;3928:189;;:::o;4123:186::-;4183:120;4200:3;4193:5;4190:14;4183:120;;;4254:39;4291:1;4284:5;4254:39;:::i;:::-;4227:1;4220:5;4216:13;4207:22;;4183:120;;;4123:186;;:::o;4315:543::-;4416:2;4411:3;4408:11;4405:446;;;4450:38;4482:5;4450:38;:::i;:::-;4534:29;4552:10;4534:29;:::i;:::-;4524:8;4520:44;4717:2;4705:10;4702:18;4699:49;;;4738:8;4723:23;;4699:49;4761:80;4817:22;4835:3;4817:22;:::i;:::-;4807:8;4803:37;4790:11;4761:80;:::i;:::-;4420:431;;4405:446;4315:543;;;:::o;4864:117::-;4918:8;4968:5;4962:4;4958:16;4937:37;;4864:117;;;;:::o;4987:169::-;5031:6;5064:51;5112:1;5108:6;5100:5;5097:1;5093:13;5064:51;:::i;:::-;5060:56;5145:4;5139;5135:15;5125:25;;5038:118;4987:169;;;;:::o;5161:295::-;5237:4;5383:29;5408:3;5402:4;5383:29;:::i;:::-;5375:37;;5445:3;5442:1;5438:11;5432:4;5429:21;5421:29;;5161:295;;;;:::o;5461:1395::-;5578:37;5611:3;5578:37;:::i;:::-;5680:18;5672:6;5669:30;5666:56;;;5702:18;;:::i;:::-;5666:56;5746:38;5778:4;5772:11;5746:38;:::i;:::-;5831:67;5891:6;5883;5877:4;5831:67;:::i;:::-;5925:1;5949:4;5936:17;;5981:2;5973:6;5970:14;5998:1;5993:618;;;;6655:1;6672:6;6669:77;;;6721:9;6716:3;6712:19;6706:26;6697:35;;6669:77;6772:67;6832:6;6825:5;6772:67;:::i;:::-;6766:4;6759:81;6628:222;5963:887;;5993:618;6045:4;6041:9;6033:6;6029:22;6079:37;6111:4;6079:37;:::i;:::-;6138:1;6152:208;6166:7;6163:1;6160:14;6152:208;;;6245:9;6240:3;6236:19;6230:26;6222:6;6215:42;6296:1;6288:6;6284:14;6274:24;;6343:2;6332:9;6328:18;6315:31;;6189:4;6186:1;6182:12;6177:17;;6152:208;;;6388:6;6379:7;6376:19;6373:179;;;6446:9;6441:3;6437:19;6431:26;6489:48;6531:4;6523:6;6519:17;6508:9;6489:48;:::i;:::-;6481:6;6474:64;6396:156;6373:179;6598:1;6594;6586:6;6582:14;6578:22;6572:4;6565:36;6000:611;;;5963:887;;5553:1303;;;5461:1395;;:::o;6862:118::-;6949:24;6967:5;6949:24;:::i;:::-;6944:3;6937:37;6862:118;;:::o;6986:222::-;7079:4;7117:2;7106:9;7102:18;7094:26;;7130:71;7198:1;7187:9;7183:17;7174:6;7130:71;:::i;:::-;6986:222;;;;:::o;7214:169::-;7298:11;7332:6;7327:3;7320:19;7372:4;7367:3;7363:14;7348:29;;7214:169;;;;:::o;7389:171::-;7529:23;7525:1;7517:6;7513:14;7506:47;7389:171;:::o;7566:366::-;7708:3;7729:67;7793:2;7788:3;7729:67;:::i;:::-;7722:74;;7805:93;7894:3;7805:93;:::i;:::-;7923:2;7918:3;7914:12;7907:19;;7566:366;;;:::o;7938:419::-;8104:4;8142:2;8131:9;8127:18;8119:26;;8191:9;8185:4;8181:20;8177:1;8166:9;8162:17;8155:47;8219:131;8345:4;8219:131;:::i;:::-;8211:139;;7938:419;;;:::o;8363:180::-;8411:77;8408:1;8401:88;8508:4;8505:1;8498:15;8532:4;8529:1;8522:15;8549:191;8589:3;8608:20;8626:1;8608:20;:::i;:::-;8603:25;;8642:20;8660:1;8642:20;:::i;:::-;8637:25;;8685:1;8682;8678:9;8671:16;;8706:3;8703:1;8700:10;8697:36;;;8713:18;;:::i;:::-;8697:36;8549:191;;;;:::o;8746:118::-;8833:24;8851:5;8833:24;:::i;:::-;8828:3;8821:37;8746:118;;:::o;8870:442::-;9019:4;9057:2;9046:9;9042:18;9034:26;;9070:71;9138:1;9127:9;9123:17;9114:6;9070:71;:::i;:::-;9151:72;9219:2;9208:9;9204:18;9195:6;9151:72;:::i;:::-;9233;9301:2;9290:9;9286:18;9277:6;9233:72;:::i;:::-;8870:442;;;;;;:::o;9318:222::-;9411:4;9449:2;9438:9;9434:18;9426:26;;9462:71;9530:1;9519:9;9515:17;9506:6;9462:71;:::i;:::-;9318:222;;;;:::o;386:4073:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 3270,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3698,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3334,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_915": {
									"entryPoint": 3263,
									"id": 915,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 4161,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 3469,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 4308,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 4548,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addFeeTier_1087": {
									"entryPoint": 1837,
									"id": 1087,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 2761,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 1103,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 2093,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1492,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@feeRecipient_955": {
									"entryPoint": 1800,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeTiers_953": {
									"entryPoint": 1146,
									"id": 953,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getFeeForAmount_1227": {
									"entryPoint": 1294,
									"id": 1227,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_345": {
									"entryPoint": 959,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 2181,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeFeeTier_1171": {
									"entryPoint": 1500,
									"id": 1171,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2162,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setFeeRecipient_1047": {
									"entryPoint": 2891,
									"id": 1047,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 2221,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 1137,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1305": {
									"entryPoint": 1199,
									"id": 1305,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 3288,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 3131,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1264": {
									"entryPoint": 2669,
									"id": 1264,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_409": {
									"entryPoint": 3664,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@updateFeeTier_1134": {
									"entryPoint": 2365,
									"id": 1134,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5623,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 5795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 5918,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6695,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5085,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5111,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6080,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 6576,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5229,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1": {
									"entryPoint": 6621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13702:7",
										"nodeType": "YulBlock",
										"src": "0:13702:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:7",
													"nodeType": "YulBlock",
													"src": "66:40:7",
													"statements": [
														{
															"nativeSrc": "77:22:7",
															"nodeType": "YulAssignment",
															"src": "77:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:7"
																},
																"nativeSrc": "87:12:7",
																"nodeType": "YulFunctionCall",
																"src": "87:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:7"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:7",
														"nodeType": "YulTypedName",
														"src": "49:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:7",
														"nodeType": "YulTypedName",
														"src": "59:6:7",
														"type": ""
													}
												],
												"src": "7:99:7"
											},
											{
												"body": {
													"nativeSrc": "208:73:7",
													"nodeType": "YulBlock",
													"src": "208:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:7"
																},
																"nativeSrc": "218:19:7",
																"nodeType": "YulFunctionCall",
																"src": "218:19:7"
															},
															"nativeSrc": "218:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:7"
														},
														{
															"nativeSrc": "246:29:7",
															"nodeType": "YulAssignment",
															"src": "246:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "270:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:7"
																},
																"nativeSrc": "261:14:7",
																"nodeType": "YulFunctionCall",
																"src": "261:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:7",
														"nodeType": "YulTypedName",
														"src": "180:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:7",
														"nodeType": "YulTypedName",
														"src": "185:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:7",
														"nodeType": "YulTypedName",
														"src": "196:11:7",
														"type": ""
													}
												],
												"src": "112:169:7"
											},
											{
												"body": {
													"nativeSrc": "349:77:7",
													"nodeType": "YulBlock",
													"src": "349:77:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:7"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:7"
																},
																"nativeSrc": "360:23:7",
																"nodeType": "YulFunctionCall",
																"src": "360:23:7"
															},
															"nativeSrc": "360:23:7",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:7"
																		},
																		"nativeSrc": "399:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:7",
																		"nodeType": "YulLiteral",
																		"src": "417:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:7"
																},
																"nativeSrc": "392:27:7",
																"nodeType": "YulFunctionCall",
																"src": "392:27:7"
															},
															"nativeSrc": "392:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:7"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:7",
														"nodeType": "YulTypedName",
														"src": "331:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:7",
														"nodeType": "YulTypedName",
														"src": "336:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:7",
														"nodeType": "YulTypedName",
														"src": "341:6:7",
														"type": ""
													}
												],
												"src": "287:139:7"
											},
											{
												"body": {
													"nativeSrc": "480:54:7",
													"nodeType": "YulBlock",
													"src": "480:54:7",
													"statements": [
														{
															"nativeSrc": "490:38:7",
															"nodeType": "YulAssignment",
															"src": "490:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:7",
																				"nodeType": "YulLiteral",
																				"src": "515:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:7"
																		},
																		"nativeSrc": "504:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:7",
																				"nodeType": "YulLiteral",
																				"src": "524:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:7"
																		},
																		"nativeSrc": "520:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:7"
																},
																"nativeSrc": "500:28:7",
																"nodeType": "YulFunctionCall",
																"src": "500:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:7",
														"nodeType": "YulTypedName",
														"src": "463:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:7",
														"nodeType": "YulTypedName",
														"src": "473:6:7",
														"type": ""
													}
												],
												"src": "432:102:7"
											},
											{
												"body": {
													"nativeSrc": "632:285:7",
													"nodeType": "YulBlock",
													"src": "632:285:7",
													"statements": [
														{
															"nativeSrc": "642:53:7",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:7"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:7",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:7"
																},
																"nativeSrc": "656:39:7",
																"nodeType": "YulFunctionCall",
																"src": "656:39:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:7",
																	"nodeType": "YulTypedName",
																	"src": "646:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:7",
															"nodeType": "YulAssignment",
															"src": "704:78:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:7"
																},
																"nativeSrc": "711:71:7",
																"nodeType": "YulFunctionCall",
																"src": "711:71:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:7",
																				"nodeType": "YulLiteral",
																				"src": "837:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:7"
																		},
																		"nativeSrc": "826:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:7"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:7",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:7"
																},
																"nativeSrc": "791:65:7",
																"nodeType": "YulFunctionCall",
																"src": "791:65:7"
															},
															"nativeSrc": "791:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:7"
														},
														{
															"nativeSrc": "865:46:7",
															"nodeType": "YulAssignment",
															"src": "865:46:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:7"
																		},
																		"nativeSrc": "881:29:7",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:7"
																},
																"nativeSrc": "872:39:7",
																"nodeType": "YulFunctionCall",
																"src": "872:39:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:7",
														"nodeType": "YulTypedName",
														"src": "613:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:7",
														"nodeType": "YulTypedName",
														"src": "620:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:7",
														"nodeType": "YulTypedName",
														"src": "628:3:7",
														"type": ""
													}
												],
												"src": "540:377:7"
											},
											{
												"body": {
													"nativeSrc": "1041:195:7",
													"nodeType": "YulBlock",
													"src": "1041:195:7",
													"statements": [
														{
															"nativeSrc": "1051:26:7",
															"nodeType": "YulAssignment",
															"src": "1051:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:7"
																},
																"nativeSrc": "1059:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:7"
																		},
																		"nativeSrc": "1094:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:7"
																		},
																		"nativeSrc": "1113:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:7"
																},
																"nativeSrc": "1087:47:7",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:7"
															},
															"nativeSrc": "1087:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:7"
														},
														{
															"nativeSrc": "1143:86:7",
															"nodeType": "YulAssignment",
															"src": "1143:86:7",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:7"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:7",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:7"
																},
																"nativeSrc": "1151:78:7",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:7",
														"nodeType": "YulTypedName",
														"src": "1013:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:7",
														"nodeType": "YulTypedName",
														"src": "1025:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:7",
														"nodeType": "YulTypedName",
														"src": "1036:4:7",
														"type": ""
													}
												],
												"src": "923:313:7"
											},
											{
												"body": {
													"nativeSrc": "1282:35:7",
													"nodeType": "YulBlock",
													"src": "1282:35:7",
													"statements": [
														{
															"nativeSrc": "1292:19:7",
															"nodeType": "YulAssignment",
															"src": "1292:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:7"
																},
																"nativeSrc": "1302:9:7",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:7",
														"nodeType": "YulTypedName",
														"src": "1275:6:7",
														"type": ""
													}
												],
												"src": "1242:75:7"
											},
											{
												"body": {
													"nativeSrc": "1412:28:7",
													"nodeType": "YulBlock",
													"src": "1412:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:7"
																},
																"nativeSrc": "1422:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:7"
															},
															"nativeSrc": "1422:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:7"
											},
											{
												"body": {
													"nativeSrc": "1535:28:7",
													"nodeType": "YulBlock",
													"src": "1535:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:7",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:7"
																},
																"nativeSrc": "1545:12:7",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:7"
															},
															"nativeSrc": "1545:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:7"
											},
											{
												"body": {
													"nativeSrc": "1614:81:7",
													"nodeType": "YulBlock",
													"src": "1614:81:7",
													"statements": [
														{
															"nativeSrc": "1624:65:7",
															"nodeType": "YulAssignment",
															"src": "1624:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:7"
																},
																"nativeSrc": "1635:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:7",
														"nodeType": "YulTypedName",
														"src": "1596:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:7",
														"nodeType": "YulTypedName",
														"src": "1606:7:7",
														"type": ""
													}
												],
												"src": "1569:126:7"
											},
											{
												"body": {
													"nativeSrc": "1746:51:7",
													"nodeType": "YulBlock",
													"src": "1746:51:7",
													"statements": [
														{
															"nativeSrc": "1756:35:7",
															"nodeType": "YulAssignment",
															"src": "1756:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:7"
																},
																"nativeSrc": "1767:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:7",
														"nodeType": "YulTypedName",
														"src": "1728:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:7",
														"nodeType": "YulTypedName",
														"src": "1738:7:7",
														"type": ""
													}
												],
												"src": "1701:96:7"
											},
											{
												"body": {
													"nativeSrc": "1846:79:7",
													"nodeType": "YulBlock",
													"src": "1846:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:7",
																"nodeType": "YulBlock",
																"src": "1903:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:7"
																			},
																			"nativeSrc": "1905:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:7"
																		},
																		"nativeSrc": "1905:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:7"
																				},
																				"nativeSrc": "1876:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:7"
																		},
																		"nativeSrc": "1866:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:7"
																},
																"nativeSrc": "1859:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:7"
															},
															"nativeSrc": "1856:63:7",
															"nodeType": "YulIf",
															"src": "1856:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:7",
														"nodeType": "YulTypedName",
														"src": "1839:5:7",
														"type": ""
													}
												],
												"src": "1803:122:7"
											},
											{
												"body": {
													"nativeSrc": "1983:87:7",
													"nodeType": "YulBlock",
													"src": "1983:87:7",
													"statements": [
														{
															"nativeSrc": "1993:29:7",
															"nodeType": "YulAssignment",
															"src": "1993:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:7"
																},
																"nativeSrc": "2002:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:7"
																},
																"nativeSrc": "2031:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:7"
															},
															"nativeSrc": "2031:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:7",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:7",
														"nodeType": "YulTypedName",
														"src": "1969:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:7",
														"nodeType": "YulTypedName",
														"src": "1977:5:7",
														"type": ""
													}
												],
												"src": "1931:139:7"
											},
											{
												"body": {
													"nativeSrc": "2121:32:7",
													"nodeType": "YulBlock",
													"src": "2121:32:7",
													"statements": [
														{
															"nativeSrc": "2131:16:7",
															"nodeType": "YulAssignment",
															"src": "2131:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:7",
																"nodeType": "YulIdentifier",
																"src": "2142:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:7",
														"nodeType": "YulTypedName",
														"src": "2103:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:7",
														"nodeType": "YulTypedName",
														"src": "2113:7:7",
														"type": ""
													}
												],
												"src": "2076:77:7"
											},
											{
												"body": {
													"nativeSrc": "2202:79:7",
													"nodeType": "YulBlock",
													"src": "2202:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:7",
																"nodeType": "YulBlock",
																"src": "2259:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:7"
																			},
																			"nativeSrc": "2261:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:7"
																		},
																		"nativeSrc": "2261:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:7"
																				},
																				"nativeSrc": "2232:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:7"
																		},
																		"nativeSrc": "2222:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:7"
																},
																"nativeSrc": "2215:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:7"
															},
															"nativeSrc": "2212:63:7",
															"nodeType": "YulIf",
															"src": "2212:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:7",
														"nodeType": "YulTypedName",
														"src": "2195:5:7",
														"type": ""
													}
												],
												"src": "2159:122:7"
											},
											{
												"body": {
													"nativeSrc": "2339:87:7",
													"nodeType": "YulBlock",
													"src": "2339:87:7",
													"statements": [
														{
															"nativeSrc": "2349:29:7",
															"nodeType": "YulAssignment",
															"src": "2349:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:7"
																},
																"nativeSrc": "2358:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:7"
																},
																"nativeSrc": "2387:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:7"
															},
															"nativeSrc": "2387:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:7",
														"nodeType": "YulTypedName",
														"src": "2317:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:7",
														"nodeType": "YulTypedName",
														"src": "2325:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:7",
														"nodeType": "YulTypedName",
														"src": "2333:5:7",
														"type": ""
													}
												],
												"src": "2287:139:7"
											},
											{
												"body": {
													"nativeSrc": "2515:391:7",
													"nodeType": "YulBlock",
													"src": "2515:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:7",
																"nodeType": "YulBlock",
																"src": "2561:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:7"
																			},
																			"nativeSrc": "2563:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:7"
																		},
																		"nativeSrc": "2563:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:7"
																		},
																		"nativeSrc": "2532:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:7"
																},
																"nativeSrc": "2528:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:7"
															},
															"nativeSrc": "2525:119:7",
															"nodeType": "YulIf",
															"src": "2525:119:7"
														},
														{
															"nativeSrc": "2654:117:7",
															"nodeType": "YulBlock",
															"src": "2654:117:7",
															"statements": [
																{
																	"nativeSrc": "2669:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:7"
																				},
																				"nativeSrc": "2729:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:7"
																		},
																		"nativeSrc": "2708:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:7",
															"nodeType": "YulBlock",
															"src": "2781:118:7",
															"statements": [
																{
																	"nativeSrc": "2796:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:7"
																				},
																				"nativeSrc": "2857:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:7"
																		},
																		"nativeSrc": "2836:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:7",
														"nodeType": "YulTypedName",
														"src": "2477:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:7",
														"nodeType": "YulTypedName",
														"src": "2488:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:7",
														"nodeType": "YulTypedName",
														"src": "2500:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:7",
														"nodeType": "YulTypedName",
														"src": "2508:6:7",
														"type": ""
													}
												],
												"src": "2432:474:7"
											},
											{
												"body": {
													"nativeSrc": "2954:48:7",
													"nodeType": "YulBlock",
													"src": "2954:48:7",
													"statements": [
														{
															"nativeSrc": "2964:32:7",
															"nodeType": "YulAssignment",
															"src": "2964:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:7"
																		},
																		"nativeSrc": "2982:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:7"
																},
																"nativeSrc": "2975:21:7",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:7",
														"nodeType": "YulTypedName",
														"src": "2936:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:7",
														"nodeType": "YulTypedName",
														"src": "2946:7:7",
														"type": ""
													}
												],
												"src": "2912:90:7"
											},
											{
												"body": {
													"nativeSrc": "3067:50:7",
													"nodeType": "YulBlock",
													"src": "3067:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:7"
																		},
																		"nativeSrc": "3089:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:7"
																},
																"nativeSrc": "3077:34:7",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:7"
															},
															"nativeSrc": "3077:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:7",
														"nodeType": "YulTypedName",
														"src": "3055:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:7",
														"nodeType": "YulTypedName",
														"src": "3062:3:7",
														"type": ""
													}
												],
												"src": "3008:109:7"
											},
											{
												"body": {
													"nativeSrc": "3215:118:7",
													"nodeType": "YulBlock",
													"src": "3215:118:7",
													"statements": [
														{
															"nativeSrc": "3225:26:7",
															"nodeType": "YulAssignment",
															"src": "3225:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:7"
																},
																"nativeSrc": "3233:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:7"
																		},
																		"nativeSrc": "3308:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:7"
																},
																"nativeSrc": "3261:65:7",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:7"
															},
															"nativeSrc": "3261:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:7",
														"nodeType": "YulTypedName",
														"src": "3187:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:7",
														"nodeType": "YulTypedName",
														"src": "3199:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:7",
														"nodeType": "YulTypedName",
														"src": "3210:4:7",
														"type": ""
													}
												],
												"src": "3123:210:7"
											},
											{
												"body": {
													"nativeSrc": "3404:53:7",
													"nodeType": "YulBlock",
													"src": "3404:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:7"
																		},
																		"nativeSrc": "3426:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:7"
																},
																"nativeSrc": "3414:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:7"
															},
															"nativeSrc": "3414:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:7",
														"nodeType": "YulTypedName",
														"src": "3392:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:7",
														"nodeType": "YulTypedName",
														"src": "3399:3:7",
														"type": ""
													}
												],
												"src": "3339:118:7"
											},
											{
												"body": {
													"nativeSrc": "3561:124:7",
													"nodeType": "YulBlock",
													"src": "3561:124:7",
													"statements": [
														{
															"nativeSrc": "3571:26:7",
															"nodeType": "YulAssignment",
															"src": "3571:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:7"
																},
																"nativeSrc": "3579:18:7",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:7"
																		},
																		"nativeSrc": "3660:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:7"
																},
																"nativeSrc": "3607:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:7"
															},
															"nativeSrc": "3607:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:7",
														"nodeType": "YulTypedName",
														"src": "3533:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:7",
														"nodeType": "YulTypedName",
														"src": "3545:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:7",
														"nodeType": "YulTypedName",
														"src": "3556:4:7",
														"type": ""
													}
												],
												"src": "3463:222:7"
											},
											{
												"body": {
													"nativeSrc": "3757:263:7",
													"nodeType": "YulBlock",
													"src": "3757:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "3803:83:7",
																"nodeType": "YulBlock",
																"src": "3803:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3805:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "3805:77:7"
																			},
																			"nativeSrc": "3805:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "3805:79:7"
																		},
																		"nativeSrc": "3805:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "3805:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3778:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3778:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3787:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3787:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3774:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3774:3:7"
																		},
																		"nativeSrc": "3774:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3774:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3799:2:7",
																		"nodeType": "YulLiteral",
																		"src": "3799:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3770:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:7"
																},
																"nativeSrc": "3770:32:7",
																"nodeType": "YulFunctionCall",
																"src": "3770:32:7"
															},
															"nativeSrc": "3767:119:7",
															"nodeType": "YulIf",
															"src": "3767:119:7"
														},
														{
															"nativeSrc": "3896:117:7",
															"nodeType": "YulBlock",
															"src": "3896:117:7",
															"statements": [
																{
																	"nativeSrc": "3911:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3911:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3925:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3925:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3915:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3915:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3940:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3940:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3975:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3975:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3986:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3971:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3971:3:7"
																				},
																				"nativeSrc": "3971:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3971:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3995:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3995:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3950:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3950:20:7"
																		},
																		"nativeSrc": "3950:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3950:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3940:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3940:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3691:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3727:9:7",
														"nodeType": "YulTypedName",
														"src": "3727:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3738:7:7",
														"nodeType": "YulTypedName",
														"src": "3738:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3750:6:7",
														"nodeType": "YulTypedName",
														"src": "3750:6:7",
														"type": ""
													}
												],
												"src": "3691:329:7"
											},
											{
												"body": {
													"nativeSrc": "4180:288:7",
													"nodeType": "YulBlock",
													"src": "4180:288:7",
													"statements": [
														{
															"nativeSrc": "4190:26:7",
															"nodeType": "YulAssignment",
															"src": "4190:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4202:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4202:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4213:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4213:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4198:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4198:3:7"
																},
																"nativeSrc": "4198:18:7",
																"nodeType": "YulFunctionCall",
																"src": "4198:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4190:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4190:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4270:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4270:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4283:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4283:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4294:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4294:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4279:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4279:3:7"
																		},
																		"nativeSrc": "4279:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4279:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4226:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4226:43:7"
																},
																"nativeSrc": "4226:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4226:71:7"
															},
															"nativeSrc": "4226:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4226:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4351:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4351:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4364:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4364:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4375:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4375:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4360:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4360:3:7"
																		},
																		"nativeSrc": "4360:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4360:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4307:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4307:43:7"
																},
																"nativeSrc": "4307:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4307:72:7"
															},
															"nativeSrc": "4307:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4307:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4433:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4433:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4446:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4446:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4457:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4457:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4442:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4442:3:7"
																		},
																		"nativeSrc": "4442:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4442:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4389:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4389:43:7"
																},
																"nativeSrc": "4389:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4389:72:7"
															},
															"nativeSrc": "4389:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4389:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4026:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4136:9:7",
														"nodeType": "YulTypedName",
														"src": "4136:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4148:6:7",
														"nodeType": "YulTypedName",
														"src": "4148:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4156:6:7",
														"nodeType": "YulTypedName",
														"src": "4156:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4164:6:7",
														"nodeType": "YulTypedName",
														"src": "4164:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4175:4:7",
														"nodeType": "YulTypedName",
														"src": "4175:4:7",
														"type": ""
													}
												],
												"src": "4026:442:7"
											},
											{
												"body": {
													"nativeSrc": "4574:519:7",
													"nodeType": "YulBlock",
													"src": "4574:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "4620:83:7",
																"nodeType": "YulBlock",
																"src": "4620:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4622:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "4622:77:7"
																			},
																			"nativeSrc": "4622:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "4622:79:7"
																		},
																		"nativeSrc": "4622:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "4622:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4595:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4595:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4604:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4604:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4591:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4591:3:7"
																		},
																		"nativeSrc": "4591:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4591:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4616:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4616:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4587:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4587:3:7"
																},
																"nativeSrc": "4587:32:7",
																"nodeType": "YulFunctionCall",
																"src": "4587:32:7"
															},
															"nativeSrc": "4584:119:7",
															"nodeType": "YulIf",
															"src": "4584:119:7"
														},
														{
															"nativeSrc": "4713:117:7",
															"nodeType": "YulBlock",
															"src": "4713:117:7",
															"statements": [
																{
																	"nativeSrc": "4728:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4728:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4742:1:7",
																		"nodeType": "YulLiteral",
																		"src": "4742:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4732:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4732:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4757:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4757:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4792:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4792:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4803:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4803:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4788:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4788:3:7"
																				},
																				"nativeSrc": "4788:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4788:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4812:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4812:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4767:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4767:20:7"
																		},
																		"nativeSrc": "4767:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4767:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4757:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4757:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4840:118:7",
															"nodeType": "YulBlock",
															"src": "4840:118:7",
															"statements": [
																{
																	"nativeSrc": "4855:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4855:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4869:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4869:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4859:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4859:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4885:63:7",
																	"nodeType": "YulAssignment",
																	"src": "4885:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4920:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "4920:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4931:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "4931:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4916:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:7"
																				},
																				"nativeSrc": "4916:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4916:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4895:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "4895:20:7"
																		},
																		"nativeSrc": "4895:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4895:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4885:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "4885:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4968:118:7",
															"nodeType": "YulBlock",
															"src": "4968:118:7",
															"statements": [
																{
																	"nativeSrc": "4983:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4983:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4997:2:7",
																		"nodeType": "YulLiteral",
																		"src": "4997:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4987:6:7",
																			"nodeType": "YulTypedName",
																			"src": "4987:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5013:63:7",
																	"nodeType": "YulAssignment",
																	"src": "5013:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5048:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "5048:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5059:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "5059:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5044:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "5044:3:7"
																				},
																				"nativeSrc": "5044:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "5044:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5068:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "5068:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5023:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "5023:20:7"
																		},
																		"nativeSrc": "5023:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5013:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "5013:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4474:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4528:9:7",
														"nodeType": "YulTypedName",
														"src": "4528:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4539:7:7",
														"nodeType": "YulTypedName",
														"src": "4539:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4551:6:7",
														"nodeType": "YulTypedName",
														"src": "4551:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4559:6:7",
														"nodeType": "YulTypedName",
														"src": "4559:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4567:6:7",
														"nodeType": "YulTypedName",
														"src": "4567:6:7",
														"type": ""
													}
												],
												"src": "4474:619:7"
											},
											{
												"body": {
													"nativeSrc": "5142:43:7",
													"nodeType": "YulBlock",
													"src": "5142:43:7",
													"statements": [
														{
															"nativeSrc": "5152:27:7",
															"nodeType": "YulAssignment",
															"src": "5152:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5167:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5167:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5174:4:7",
																		"nodeType": "YulLiteral",
																		"src": "5174:4:7",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5163:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:7"
																},
																"nativeSrc": "5163:16:7",
																"nodeType": "YulFunctionCall",
																"src": "5163:16:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5152:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "5152:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5099:86:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5124:5:7",
														"nodeType": "YulTypedName",
														"src": "5124:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5134:7:7",
														"nodeType": "YulTypedName",
														"src": "5134:7:7",
														"type": ""
													}
												],
												"src": "5099:86:7"
											},
											{
												"body": {
													"nativeSrc": "5252:51:7",
													"nodeType": "YulBlock",
													"src": "5252:51:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5269:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5269:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5290:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5290:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5274:15:7",
																			"nodeType": "YulIdentifier",
																			"src": "5274:15:7"
																		},
																		"nativeSrc": "5274:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5274:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5262:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5262:6:7"
																},
																"nativeSrc": "5262:35:7",
																"nodeType": "YulFunctionCall",
																"src": "5262:35:7"
															},
															"nativeSrc": "5262:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "5262:35:7"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5191:112:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5240:5:7",
														"nodeType": "YulTypedName",
														"src": "5240:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5247:3:7",
														"nodeType": "YulTypedName",
														"src": "5247:3:7",
														"type": ""
													}
												],
												"src": "5191:112:7"
											},
											{
												"body": {
													"nativeSrc": "5403:120:7",
													"nodeType": "YulBlock",
													"src": "5403:120:7",
													"statements": [
														{
															"nativeSrc": "5413:26:7",
															"nodeType": "YulAssignment",
															"src": "5413:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5425:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5425:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5436:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5436:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5421:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5421:3:7"
																},
																"nativeSrc": "5421:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5421:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5413:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5413:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5489:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5489:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5502:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5502:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5513:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5513:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5498:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5498:3:7"
																		},
																		"nativeSrc": "5498:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5498:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5449:39:7",
																	"nodeType": "YulIdentifier",
																	"src": "5449:39:7"
																},
																"nativeSrc": "5449:67:7",
																"nodeType": "YulFunctionCall",
																"src": "5449:67:7"
															},
															"nativeSrc": "5449:67:7",
															"nodeType": "YulExpressionStatement",
															"src": "5449:67:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5309:214:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5375:9:7",
														"nodeType": "YulTypedName",
														"src": "5375:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5387:6:7",
														"nodeType": "YulTypedName",
														"src": "5387:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5398:4:7",
														"nodeType": "YulTypedName",
														"src": "5398:4:7",
														"type": ""
													}
												],
												"src": "5309:214:7"
											},
											{
												"body": {
													"nativeSrc": "5594:53:7",
													"nodeType": "YulBlock",
													"src": "5594:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5611:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5611:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5634:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5634:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5616:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "5616:17:7"
																		},
																		"nativeSrc": "5616:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5616:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5604:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5604:6:7"
																},
																"nativeSrc": "5604:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5604:37:7"
															},
															"nativeSrc": "5604:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "5604:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5529:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5582:5:7",
														"nodeType": "YulTypedName",
														"src": "5582:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5589:3:7",
														"nodeType": "YulTypedName",
														"src": "5589:3:7",
														"type": ""
													}
												],
												"src": "5529:118:7"
											},
											{
												"body": {
													"nativeSrc": "5751:124:7",
													"nodeType": "YulBlock",
													"src": "5751:124:7",
													"statements": [
														{
															"nativeSrc": "5761:26:7",
															"nodeType": "YulAssignment",
															"src": "5761:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5773:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5773:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5784:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5784:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5769:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5769:3:7"
																},
																"nativeSrc": "5769:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5769:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5761:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5761:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5841:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5841:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5854:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5854:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5865:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5865:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5850:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5850:3:7"
																		},
																		"nativeSrc": "5850:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5850:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5797:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5797:43:7"
																},
																"nativeSrc": "5797:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5797:71:7"
															},
															"nativeSrc": "5797:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5797:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5653:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5723:9:7",
														"nodeType": "YulTypedName",
														"src": "5723:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5735:6:7",
														"nodeType": "YulTypedName",
														"src": "5735:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5746:4:7",
														"nodeType": "YulTypedName",
														"src": "5746:4:7",
														"type": ""
													}
												],
												"src": "5653:222:7"
											},
											{
												"body": {
													"nativeSrc": "5981:519:7",
													"nodeType": "YulBlock",
													"src": "5981:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6027:83:7",
																"nodeType": "YulBlock",
																"src": "6027:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6029:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6029:77:7"
																			},
																			"nativeSrc": "6029:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6029:79:7"
																		},
																		"nativeSrc": "6029:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6029:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6002:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6002:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6011:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6011:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5998:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5998:3:7"
																		},
																		"nativeSrc": "5998:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5998:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6023:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5994:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5994:3:7"
																},
																"nativeSrc": "5994:32:7",
																"nodeType": "YulFunctionCall",
																"src": "5994:32:7"
															},
															"nativeSrc": "5991:119:7",
															"nodeType": "YulIf",
															"src": "5991:119:7"
														},
														{
															"nativeSrc": "6120:117:7",
															"nodeType": "YulBlock",
															"src": "6120:117:7",
															"statements": [
																{
																	"nativeSrc": "6135:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6135:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6149:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6149:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6139:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6139:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6164:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6164:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6199:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6199:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6210:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6210:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6195:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6195:3:7"
																				},
																				"nativeSrc": "6195:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6195:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6219:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6174:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6174:20:7"
																		},
																		"nativeSrc": "6174:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6174:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6164:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6164:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6247:118:7",
															"nodeType": "YulBlock",
															"src": "6247:118:7",
															"statements": [
																{
																	"nativeSrc": "6262:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6262:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6276:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6276:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6266:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6266:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6292:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6292:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6327:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6327:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6338:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6338:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6323:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6323:3:7"
																				},
																				"nativeSrc": "6323:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6323:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6347:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6347:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6302:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6302:20:7"
																		},
																		"nativeSrc": "6302:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6302:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6292:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6292:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6375:118:7",
															"nodeType": "YulBlock",
															"src": "6375:118:7",
															"statements": [
																{
																	"nativeSrc": "6390:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6390:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6404:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6404:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6394:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6394:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6420:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6420:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6455:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6455:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6466:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6466:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6451:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6451:3:7"
																				},
																				"nativeSrc": "6451:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6451:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6475:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6475:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6430:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6430:20:7"
																		},
																		"nativeSrc": "6430:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6430:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6420:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6420:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "5881:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5935:9:7",
														"nodeType": "YulTypedName",
														"src": "5935:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5946:7:7",
														"nodeType": "YulTypedName",
														"src": "5946:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5958:6:7",
														"nodeType": "YulTypedName",
														"src": "5958:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5966:6:7",
														"nodeType": "YulTypedName",
														"src": "5966:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5974:6:7",
														"nodeType": "YulTypedName",
														"src": "5974:6:7",
														"type": ""
													}
												],
												"src": "5881:619:7"
											},
											{
												"body": {
													"nativeSrc": "6572:263:7",
													"nodeType": "YulBlock",
													"src": "6572:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6618:83:7",
																"nodeType": "YulBlock",
																"src": "6618:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6620:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "6620:77:7"
																			},
																			"nativeSrc": "6620:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6620:79:7"
																		},
																		"nativeSrc": "6620:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6620:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6593:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6593:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6602:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6602:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6589:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6589:3:7"
																		},
																		"nativeSrc": "6589:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6589:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6614:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6614:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6585:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6585:3:7"
																},
																"nativeSrc": "6585:32:7",
																"nodeType": "YulFunctionCall",
																"src": "6585:32:7"
															},
															"nativeSrc": "6582:119:7",
															"nodeType": "YulIf",
															"src": "6582:119:7"
														},
														{
															"nativeSrc": "6711:117:7",
															"nodeType": "YulBlock",
															"src": "6711:117:7",
															"statements": [
																{
																	"nativeSrc": "6726:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6726:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6740:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6740:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6730:6:7",
																			"nodeType": "YulTypedName",
																			"src": "6730:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6755:63:7",
																	"nodeType": "YulAssignment",
																	"src": "6755:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6790:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "6790:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6801:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "6801:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6786:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "6786:3:7"
																				},
																				"nativeSrc": "6786:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "6786:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6810:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6810:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6765:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "6765:20:7"
																		},
																		"nativeSrc": "6765:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6765:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6755:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "6755:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6506:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6542:9:7",
														"nodeType": "YulTypedName",
														"src": "6542:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6553:7:7",
														"nodeType": "YulTypedName",
														"src": "6553:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6565:6:7",
														"nodeType": "YulTypedName",
														"src": "6565:6:7",
														"type": ""
													}
												],
												"src": "6506:329:7"
											},
											{
												"body": {
													"nativeSrc": "6958:648:7",
													"nodeType": "YulBlock",
													"src": "6958:648:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7005:83:7",
																"nodeType": "YulBlock",
																"src": "7005:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7007:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7007:77:7"
																			},
																			"nativeSrc": "7007:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7007:79:7"
																		},
																		"nativeSrc": "7007:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7007:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6979:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "6979:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6988:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "6988:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6975:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6975:3:7"
																		},
																		"nativeSrc": "6975:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6975:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7000:3:7",
																		"nodeType": "YulLiteral",
																		"src": "7000:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6971:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6971:3:7"
																},
																"nativeSrc": "6971:33:7",
																"nodeType": "YulFunctionCall",
																"src": "6971:33:7"
															},
															"nativeSrc": "6968:120:7",
															"nodeType": "YulIf",
															"src": "6968:120:7"
														},
														{
															"nativeSrc": "7098:117:7",
															"nodeType": "YulBlock",
															"src": "7098:117:7",
															"statements": [
																{
																	"nativeSrc": "7113:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7113:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7127:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7127:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7117:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7117:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7142:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7142:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7177:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7177:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7188:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7188:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7173:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7173:3:7"
																				},
																				"nativeSrc": "7173:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7173:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7197:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7197:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7152:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7152:20:7"
																		},
																		"nativeSrc": "7152:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7152:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7142:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7142:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7225:118:7",
															"nodeType": "YulBlock",
															"src": "7225:118:7",
															"statements": [
																{
																	"nativeSrc": "7240:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7240:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7254:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7254:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7244:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7244:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7270:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7270:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7305:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7305:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7316:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7316:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7301:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7301:3:7"
																				},
																				"nativeSrc": "7301:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7301:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7325:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7325:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7280:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7280:20:7"
																		},
																		"nativeSrc": "7280:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7280:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7270:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7270:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7353:118:7",
															"nodeType": "YulBlock",
															"src": "7353:118:7",
															"statements": [
																{
																	"nativeSrc": "7368:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7368:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7382:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7382:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7372:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7372:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7398:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7398:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7433:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7433:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7444:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7444:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7429:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7429:3:7"
																				},
																				"nativeSrc": "7429:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7429:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7453:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7453:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7408:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7408:20:7"
																		},
																		"nativeSrc": "7408:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7408:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7398:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7398:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7481:118:7",
															"nodeType": "YulBlock",
															"src": "7481:118:7",
															"statements": [
																{
																	"nativeSrc": "7496:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7496:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7510:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7510:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7500:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7500:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7526:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7526:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7561:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7561:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7572:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7572:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7557:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7557:3:7"
																				},
																				"nativeSrc": "7557:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7557:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7581:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7581:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7536:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7536:20:7"
																		},
																		"nativeSrc": "7536:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "7526:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7526:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "6841:765:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6904:9:7",
														"nodeType": "YulTypedName",
														"src": "6904:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6915:7:7",
														"nodeType": "YulTypedName",
														"src": "6915:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6927:6:7",
														"nodeType": "YulTypedName",
														"src": "6927:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6935:6:7",
														"nodeType": "YulTypedName",
														"src": "6935:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6943:6:7",
														"nodeType": "YulTypedName",
														"src": "6943:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6951:6:7",
														"nodeType": "YulTypedName",
														"src": "6951:6:7",
														"type": ""
													}
												],
												"src": "6841:765:7"
											},
											{
												"body": {
													"nativeSrc": "7695:391:7",
													"nodeType": "YulBlock",
													"src": "7695:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "7741:83:7",
																"nodeType": "YulBlock",
																"src": "7741:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7743:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7743:77:7"
																			},
																			"nativeSrc": "7743:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7743:79:7"
																		},
																		"nativeSrc": "7743:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7743:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7716:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7716:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7725:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "7725:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7712:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7712:3:7"
																		},
																		"nativeSrc": "7712:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7712:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7737:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7737:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7708:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7708:3:7"
																},
																"nativeSrc": "7708:32:7",
																"nodeType": "YulFunctionCall",
																"src": "7708:32:7"
															},
															"nativeSrc": "7705:119:7",
															"nodeType": "YulIf",
															"src": "7705:119:7"
														},
														{
															"nativeSrc": "7834:117:7",
															"nodeType": "YulBlock",
															"src": "7834:117:7",
															"statements": [
																{
																	"nativeSrc": "7849:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7849:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7863:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7863:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7853:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7853:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7878:63:7",
																	"nodeType": "YulAssignment",
																	"src": "7878:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7913:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "7913:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7924:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "7924:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7909:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7909:3:7"
																				},
																				"nativeSrc": "7909:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "7909:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7933:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "7933:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7888:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "7888:20:7"
																		},
																		"nativeSrc": "7888:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7888:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7878:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7878:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7961:118:7",
															"nodeType": "YulBlock",
															"src": "7961:118:7",
															"statements": [
																{
																	"nativeSrc": "7976:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7976:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7990:2:7",
																		"nodeType": "YulLiteral",
																		"src": "7990:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7980:6:7",
																			"nodeType": "YulTypedName",
																			"src": "7980:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8006:63:7",
																	"nodeType": "YulAssignment",
																	"src": "8006:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8041:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "8041:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8052:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8052:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8037:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8037:3:7"
																				},
																				"nativeSrc": "8037:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8037:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8061:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "8061:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8016:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "8016:20:7"
																		},
																		"nativeSrc": "8016:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8016:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8006:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "8006:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7612:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7657:9:7",
														"nodeType": "YulTypedName",
														"src": "7657:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7668:7:7",
														"nodeType": "YulTypedName",
														"src": "7668:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7680:6:7",
														"nodeType": "YulTypedName",
														"src": "7680:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7688:6:7",
														"nodeType": "YulTypedName",
														"src": "7688:6:7",
														"type": ""
													}
												],
												"src": "7612:474:7"
											},
											{
												"body": {
													"nativeSrc": "8120:152:7",
													"nodeType": "YulBlock",
													"src": "8120:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8137:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8137:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8140:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8140:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8130:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8130:6:7"
																},
																"nativeSrc": "8130:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8130:88:7"
															},
															"nativeSrc": "8130:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8130:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8234:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8234:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8237:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8237:4:7",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8227:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8227:6:7"
																},
																"nativeSrc": "8227:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8227:15:7"
															},
															"nativeSrc": "8227:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8227:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8258:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8258:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8261:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8261:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8251:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8251:6:7"
																},
																"nativeSrc": "8251:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8251:15:7"
															},
															"nativeSrc": "8251:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8251:15:7"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8092:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8092:180:7"
											},
											{
												"body": {
													"nativeSrc": "8329:269:7",
													"nodeType": "YulBlock",
													"src": "8329:269:7",
													"statements": [
														{
															"nativeSrc": "8339:22:7",
															"nodeType": "YulAssignment",
															"src": "8339:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8353:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8353:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8359:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8359:1:7",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8349:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8349:3:7"
																},
																"nativeSrc": "8349:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8349:12:7"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8339:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8339:6:7"
																}
															]
														},
														{
															"nativeSrc": "8370:38:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8370:38:7",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8400:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8400:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8406:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8406:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8396:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8396:3:7"
																},
																"nativeSrc": "8396:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8396:12:7"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8374:18:7",
																	"nodeType": "YulTypedName",
																	"src": "8374:18:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8447:51:7",
																"nodeType": "YulBlock",
																"src": "8447:51:7",
																"statements": [
																	{
																		"nativeSrc": "8461:27:7",
																		"nodeType": "YulAssignment",
																		"src": "8461:27:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8475:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "8475:6:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8483:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8483:4:7",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8471:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8471:3:7"
																			},
																			"nativeSrc": "8471:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8471:17:7"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8461:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8461:6:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8427:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8427:18:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8420:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8420:6:7"
																},
																"nativeSrc": "8420:26:7",
																"nodeType": "YulFunctionCall",
																"src": "8420:26:7"
															},
															"nativeSrc": "8417:81:7",
															"nodeType": "YulIf",
															"src": "8417:81:7"
														},
														{
															"body": {
																"nativeSrc": "8550:42:7",
																"nodeType": "YulBlock",
																"src": "8550:42:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8564:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8564:16:7"
																			},
																			"nativeSrc": "8564:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8564:18:7"
																		},
																		"nativeSrc": "8564:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8564:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8514:18:7",
																		"nodeType": "YulIdentifier",
																		"src": "8514:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8537:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8537:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8545:2:7",
																				"nodeType": "YulLiteral",
																				"src": "8545:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8534:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "8534:2:7"
																		},
																		"nativeSrc": "8534:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8534:14:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8511:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8511:2:7"
																},
																"nativeSrc": "8511:38:7",
																"nodeType": "YulFunctionCall",
																"src": "8511:38:7"
															},
															"nativeSrc": "8508:84:7",
															"nodeType": "YulIf",
															"src": "8508:84:7"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8278:320:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8313:4:7",
														"nodeType": "YulTypedName",
														"src": "8313:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8322:6:7",
														"nodeType": "YulTypedName",
														"src": "8322:6:7",
														"type": ""
													}
												],
												"src": "8278:320:7"
											},
											{
												"body": {
													"nativeSrc": "8632:152:7",
													"nodeType": "YulBlock",
													"src": "8632:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8649:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8649:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8652:77:7",
																		"nodeType": "YulLiteral",
																		"src": "8652:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8642:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:7"
																},
																"nativeSrc": "8642:88:7",
																"nodeType": "YulFunctionCall",
																"src": "8642:88:7"
															},
															"nativeSrc": "8642:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "8642:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8746:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8746:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8749:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8749:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8739:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:7"
																},
																"nativeSrc": "8739:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8739:15:7"
															},
															"nativeSrc": "8739:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8739:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8770:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8770:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8773:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8773:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8763:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8763:6:7"
																},
																"nativeSrc": "8763:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8763:15:7"
															},
															"nativeSrc": "8763:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "8763:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8604:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8604:180:7"
											},
											{
												"body": {
													"nativeSrc": "8835:149:7",
													"nodeType": "YulBlock",
													"src": "8835:149:7",
													"statements": [
														{
															"nativeSrc": "8845:25:7",
															"nodeType": "YulAssignment",
															"src": "8845:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8868:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8868:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8850:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8850:17:7"
																},
																"nativeSrc": "8850:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8850:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8845:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8845:1:7"
																}
															]
														},
														{
															"nativeSrc": "8879:25:7",
															"nodeType": "YulAssignment",
															"src": "8879:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8902:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8902:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8884:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "8884:17:7"
																},
																"nativeSrc": "8884:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8884:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8879:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "8879:1:7"
																}
															]
														},
														{
															"nativeSrc": "8913:17:7",
															"nodeType": "YulAssignment",
															"src": "8913:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8925:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8925:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8928:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8928:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8921:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8921:3:7"
																},
																"nativeSrc": "8921:9:7",
																"nodeType": "YulFunctionCall",
																"src": "8921:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8913:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8913:4:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8955:22:7",
																"nodeType": "YulBlock",
																"src": "8955:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8957:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8957:16:7"
																			},
																			"nativeSrc": "8957:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8957:18:7"
																		},
																		"nativeSrc": "8957:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8957:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8946:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8946:4:7"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8952:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "8952:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8943:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8943:2:7"
																},
																"nativeSrc": "8943:11:7",
																"nodeType": "YulFunctionCall",
																"src": "8943:11:7"
															},
															"nativeSrc": "8940:37:7",
															"nodeType": "YulIf",
															"src": "8940:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8790:194:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8821:1:7",
														"nodeType": "YulTypedName",
														"src": "8821:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8824:1:7",
														"nodeType": "YulTypedName",
														"src": "8824:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8830:4:7",
														"nodeType": "YulTypedName",
														"src": "8830:4:7",
														"type": ""
													}
												],
												"src": "8790:194:7"
											},
											{
												"body": {
													"nativeSrc": "9018:152:7",
													"nodeType": "YulBlock",
													"src": "9018:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9035:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9035:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9038:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9038:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9028:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9028:6:7"
																},
																"nativeSrc": "9028:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9028:88:7"
															},
															"nativeSrc": "9028:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9028:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9132:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9132:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9135:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9135:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9125:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9125:6:7"
																},
																"nativeSrc": "9125:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9125:15:7"
															},
															"nativeSrc": "9125:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9125:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9156:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9156:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9159:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9159:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9149:6:7"
																},
																"nativeSrc": "9149:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9149:15:7"
															},
															"nativeSrc": "9149:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9149:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "8990:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8990:180:7"
											},
											{
												"body": {
													"nativeSrc": "9224:362:7",
													"nodeType": "YulBlock",
													"src": "9224:362:7",
													"statements": [
														{
															"nativeSrc": "9234:25:7",
															"nodeType": "YulAssignment",
															"src": "9234:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9257:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9257:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9239:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9239:17:7"
																},
																"nativeSrc": "9239:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9239:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9234:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9234:1:7"
																}
															]
														},
														{
															"nativeSrc": "9268:25:7",
															"nodeType": "YulAssignment",
															"src": "9268:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9291:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9291:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9273:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9273:17:7"
																},
																"nativeSrc": "9273:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9273:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9268:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9268:1:7"
																}
															]
														},
														{
															"nativeSrc": "9302:28:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9302:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9325:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9325:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9328:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9328:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9321:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9321:3:7"
																},
																"nativeSrc": "9321:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9321:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9306:11:7",
																	"nodeType": "YulTypedName",
																	"src": "9306:11:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9339:41:7",
															"nodeType": "YulAssignment",
															"src": "9339:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9368:11:7",
																		"nodeType": "YulIdentifier",
																		"src": "9368:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9350:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9350:17:7"
																},
																"nativeSrc": "9350:30:7",
																"nodeType": "YulFunctionCall",
																"src": "9350:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9339:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9339:7:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9557:22:7",
																"nodeType": "YulBlock",
																"src": "9557:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9559:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9559:16:7"
																			},
																			"nativeSrc": "9559:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9559:18:7"
																		},
																		"nativeSrc": "9559:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9559:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9490:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9490:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9483:6:7",
																					"nodeType": "YulIdentifier",
																					"src": "9483:6:7"
																				},
																				"nativeSrc": "9483:9:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9483:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9513:1:7",
																						"nodeType": "YulIdentifier",
																						"src": "9513:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9520:7:7",
																								"nodeType": "YulIdentifier",
																								"src": "9520:7:7"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9529:1:7",
																								"nodeType": "YulIdentifier",
																								"src": "9529:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9516:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "9516:3:7"
																						},
																						"nativeSrc": "9516:15:7",
																						"nodeType": "YulFunctionCall",
																						"src": "9516:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9510:2:7",
																					"nodeType": "YulIdentifier",
																					"src": "9510:2:7"
																				},
																				"nativeSrc": "9510:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9510:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9463:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "9463:2:7"
																		},
																		"nativeSrc": "9463:83:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9463:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9443:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9443:6:7"
																},
																"nativeSrc": "9443:113:7",
																"nodeType": "YulFunctionCall",
																"src": "9443:113:7"
															},
															"nativeSrc": "9440:139:7",
															"nodeType": "YulIf",
															"src": "9440:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9176:410:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9207:1:7",
														"nodeType": "YulTypedName",
														"src": "9207:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9210:1:7",
														"nodeType": "YulTypedName",
														"src": "9210:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9216:7:7",
														"nodeType": "YulTypedName",
														"src": "9216:7:7",
														"type": ""
													}
												],
												"src": "9176:410:7"
											},
											{
												"body": {
													"nativeSrc": "9620:152:7",
													"nodeType": "YulBlock",
													"src": "9620:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9637:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9637:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9640:77:7",
																		"nodeType": "YulLiteral",
																		"src": "9640:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9630:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9630:6:7"
																},
																"nativeSrc": "9630:88:7",
																"nodeType": "YulFunctionCall",
																"src": "9630:88:7"
															},
															"nativeSrc": "9630:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "9630:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9734:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9734:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9737:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9737:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9727:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9727:6:7"
																},
																"nativeSrc": "9727:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9727:15:7"
															},
															"nativeSrc": "9727:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9727:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9758:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9758:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9761:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9761:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9751:6:7"
																},
																"nativeSrc": "9751:15:7",
																"nodeType": "YulFunctionCall",
																"src": "9751:15:7"
															},
															"nativeSrc": "9751:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "9751:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9592:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "9592:180:7"
											},
											{
												"body": {
													"nativeSrc": "9820:143:7",
													"nodeType": "YulBlock",
													"src": "9820:143:7",
													"statements": [
														{
															"nativeSrc": "9830:25:7",
															"nodeType": "YulAssignment",
															"src": "9830:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9853:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9853:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9835:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9835:17:7"
																},
																"nativeSrc": "9835:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9835:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9830:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9830:1:7"
																}
															]
														},
														{
															"nativeSrc": "9864:25:7",
															"nodeType": "YulAssignment",
															"src": "9864:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9887:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9887:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9869:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "9869:17:7"
																},
																"nativeSrc": "9869:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9869:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9864:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9864:1:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9911:22:7",
																"nodeType": "YulBlock",
																"src": "9911:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9913:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "9913:16:7"
																			},
																			"nativeSrc": "9913:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9913:18:7"
																		},
																		"nativeSrc": "9913:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9913:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9908:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9908:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9901:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9901:6:7"
																},
																"nativeSrc": "9901:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9901:9:7"
															},
															"nativeSrc": "9898:35:7",
															"nodeType": "YulIf",
															"src": "9898:35:7"
														},
														{
															"nativeSrc": "9943:14:7",
															"nodeType": "YulAssignment",
															"src": "9943:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9952:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9952:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9955:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "9955:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9948:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9948:3:7"
																},
																"nativeSrc": "9948:9:7",
																"nodeType": "YulFunctionCall",
																"src": "9948:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9943:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "9943:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9778:185:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9809:1:7",
														"nodeType": "YulTypedName",
														"src": "9809:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9812:1:7",
														"nodeType": "YulTypedName",
														"src": "9812:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9818:1:7",
														"nodeType": "YulTypedName",
														"src": "9818:1:7",
														"type": ""
													}
												],
												"src": "9778:185:7"
											},
											{
												"body": {
													"nativeSrc": "10075:57:7",
													"nodeType": "YulBlock",
													"src": "10075:57:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10097:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10097:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10105:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10105:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10093:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10093:3:7"
																		},
																		"nativeSrc": "10093:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10093:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420696e646578",
																		"kind": "string",
																		"nativeSrc": "10109:15:7",
																		"nodeType": "YulLiteral",
																		"src": "10109:15:7",
																		"type": "",
																		"value": "Invalid index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10086:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10086:6:7"
																},
																"nativeSrc": "10086:39:7",
																"nodeType": "YulFunctionCall",
																"src": "10086:39:7"
															},
															"nativeSrc": "10086:39:7",
															"nodeType": "YulExpressionStatement",
															"src": "10086:39:7"
														}
													]
												},
												"name": "store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
												"nativeSrc": "9969:163:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10067:6:7",
														"nodeType": "YulTypedName",
														"src": "10067:6:7",
														"type": ""
													}
												],
												"src": "9969:163:7"
											},
											{
												"body": {
													"nativeSrc": "10284:220:7",
													"nodeType": "YulBlock",
													"src": "10284:220:7",
													"statements": [
														{
															"nativeSrc": "10294:74:7",
															"nodeType": "YulAssignment",
															"src": "10294:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10360:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10360:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10365:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10365:2:7",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10301:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "10301:58:7"
																},
																"nativeSrc": "10301:67:7",
																"nodeType": "YulFunctionCall",
																"src": "10301:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10294:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10294:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10466:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10466:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																	"nativeSrc": "10377:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "10377:88:7"
																},
																"nativeSrc": "10377:93:7",
																"nodeType": "YulFunctionCall",
																"src": "10377:93:7"
															},
															"nativeSrc": "10377:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "10377:93:7"
														},
														{
															"nativeSrc": "10479:19:7",
															"nodeType": "YulAssignment",
															"src": "10479:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10490:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "10490:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10495:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10495:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10486:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10486:3:7"
																},
																"nativeSrc": "10486:12:7",
																"nodeType": "YulFunctionCall",
																"src": "10486:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10479:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10479:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10138:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10272:3:7",
														"nodeType": "YulTypedName",
														"src": "10272:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10280:3:7",
														"nodeType": "YulTypedName",
														"src": "10280:3:7",
														"type": ""
													}
												],
												"src": "10138:366:7"
											},
											{
												"body": {
													"nativeSrc": "10681:248:7",
													"nodeType": "YulBlock",
													"src": "10681:248:7",
													"statements": [
														{
															"nativeSrc": "10691:26:7",
															"nodeType": "YulAssignment",
															"src": "10691:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10703:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "10703:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10714:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10714:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10699:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "10699:3:7"
																},
																"nativeSrc": "10699:18:7",
																"nodeType": "YulFunctionCall",
																"src": "10699:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10691:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10691:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10738:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10738:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10749:1:7",
																				"nodeType": "YulLiteral",
																				"src": "10749:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10734:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10734:3:7"
																		},
																		"nativeSrc": "10734:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10734:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10757:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "10757:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10763:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "10763:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10753:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "10753:3:7"
																		},
																		"nativeSrc": "10753:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10753:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10727:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10727:6:7"
																},
																"nativeSrc": "10727:47:7",
																"nodeType": "YulFunctionCall",
																"src": "10727:47:7"
															},
															"nativeSrc": "10727:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "10727:47:7"
														},
														{
															"nativeSrc": "10783:139:7",
															"nodeType": "YulAssignment",
															"src": "10783:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10917:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "10917:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10791:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "10791:124:7"
																},
																"nativeSrc": "10791:131:7",
																"nodeType": "YulFunctionCall",
																"src": "10791:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10783:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "10783:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10510:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10661:9:7",
														"nodeType": "YulTypedName",
														"src": "10661:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10676:4:7",
														"nodeType": "YulTypedName",
														"src": "10676:4:7",
														"type": ""
													}
												],
												"src": "10510:419:7"
											},
											{
												"body": {
													"nativeSrc": "10963:152:7",
													"nodeType": "YulBlock",
													"src": "10963:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10980:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10980:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10983:77:7",
																		"nodeType": "YulLiteral",
																		"src": "10983:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10973:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "10973:6:7"
																},
																"nativeSrc": "10973:88:7",
																"nodeType": "YulFunctionCall",
																"src": "10973:88:7"
															},
															"nativeSrc": "10973:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "10973:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11077:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11077:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11080:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11080:4:7",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11070:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11070:6:7"
																},
																"nativeSrc": "11070:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11070:15:7"
															},
															"nativeSrc": "11070:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11070:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11101:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11101:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11104:4:7",
																		"nodeType": "YulLiteral",
																		"src": "11104:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11094:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11094:6:7"
																},
																"nativeSrc": "11094:15:7",
																"nodeType": "YulFunctionCall",
																"src": "11094:15:7"
															},
															"nativeSrc": "11094:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "11094:15:7"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "10935:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "10935:180:7"
											},
											{
												"body": {
													"nativeSrc": "11227:56:7",
													"nodeType": "YulBlock",
													"src": "11227:56:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11249:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "11249:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11257:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11257:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11245:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11245:3:7"
																		},
																		"nativeSrc": "11245:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11245:14:7"
																	},
																	{
																		"hexValue": "46656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "11261:14:7",
																		"nodeType": "YulLiteral",
																		"src": "11261:14:7",
																		"type": "",
																		"value": "Fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11238:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11238:6:7"
																},
																"nativeSrc": "11238:38:7",
																"nodeType": "YulFunctionCall",
																"src": "11238:38:7"
															},
															"nativeSrc": "11238:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "11238:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
												"nativeSrc": "11121:162:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11219:6:7",
														"nodeType": "YulTypedName",
														"src": "11219:6:7",
														"type": ""
													}
												],
												"src": "11121:162:7"
											},
											{
												"body": {
													"nativeSrc": "11435:220:7",
													"nodeType": "YulBlock",
													"src": "11435:220:7",
													"statements": [
														{
															"nativeSrc": "11445:74:7",
															"nodeType": "YulAssignment",
															"src": "11445:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11511:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11511:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11516:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11516:2:7",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11452:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "11452:58:7"
																},
																"nativeSrc": "11452:67:7",
																"nodeType": "YulFunctionCall",
																"src": "11452:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11445:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11445:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11617:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11617:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																	"nativeSrc": "11528:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "11528:88:7"
																},
																"nativeSrc": "11528:93:7",
																"nodeType": "YulFunctionCall",
																"src": "11528:93:7"
															},
															"nativeSrc": "11528:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "11528:93:7"
														},
														{
															"nativeSrc": "11630:19:7",
															"nodeType": "YulAssignment",
															"src": "11630:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11641:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11641:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11646:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11646:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11637:3:7"
																},
																"nativeSrc": "11637:12:7",
																"nodeType": "YulFunctionCall",
																"src": "11637:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11630:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11630:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11289:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11423:3:7",
														"nodeType": "YulTypedName",
														"src": "11423:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11431:3:7",
														"nodeType": "YulTypedName",
														"src": "11431:3:7",
														"type": ""
													}
												],
												"src": "11289:366:7"
											},
											{
												"body": {
													"nativeSrc": "11832:248:7",
													"nodeType": "YulBlock",
													"src": "11832:248:7",
													"statements": [
														{
															"nativeSrc": "11842:26:7",
															"nodeType": "YulAssignment",
															"src": "11842:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11854:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11854:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11865:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11865:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11850:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11850:3:7"
																},
																"nativeSrc": "11850:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11850:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11842:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11842:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11889:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11889:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11900:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11900:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11885:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11885:3:7"
																		},
																		"nativeSrc": "11885:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11885:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11908:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "11908:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11914:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11914:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11904:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11904:3:7"
																		},
																		"nativeSrc": "11904:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11904:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11878:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11878:6:7"
																},
																"nativeSrc": "11878:47:7",
																"nodeType": "YulFunctionCall",
																"src": "11878:47:7"
															},
															"nativeSrc": "11878:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "11878:47:7"
														},
														{
															"nativeSrc": "11934:139:7",
															"nodeType": "YulAssignment",
															"src": "11934:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12068:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "12068:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11942:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "11942:124:7"
																},
																"nativeSrc": "11942:131:7",
																"nodeType": "YulFunctionCall",
																"src": "11942:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11934:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11934:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11661:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11812:9:7",
														"nodeType": "YulTypedName",
														"src": "11812:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11827:4:7",
														"nodeType": "YulTypedName",
														"src": "11827:4:7",
														"type": ""
													}
												],
												"src": "11661:419:7"
											},
											{
												"body": {
													"nativeSrc": "12192:65:7",
													"nodeType": "YulBlock",
													"src": "12192:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12214:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "12214:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12222:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12222:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12210:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12210:3:7"
																		},
																		"nativeSrc": "12210:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12210:14:7"
																	},
																	{
																		"hexValue": "496e76616c69642066656520726563697069656e74",
																		"kind": "string",
																		"nativeSrc": "12226:23:7",
																		"nodeType": "YulLiteral",
																		"src": "12226:23:7",
																		"type": "",
																		"value": "Invalid fee recipient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12203:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12203:6:7"
																},
																"nativeSrc": "12203:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12203:47:7"
															},
															"nativeSrc": "12203:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12203:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361",
												"nativeSrc": "12086:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12184:6:7",
														"nodeType": "YulTypedName",
														"src": "12184:6:7",
														"type": ""
													}
												],
												"src": "12086:171:7"
											},
											{
												"body": {
													"nativeSrc": "12409:220:7",
													"nodeType": "YulBlock",
													"src": "12409:220:7",
													"statements": [
														{
															"nativeSrc": "12419:74:7",
															"nodeType": "YulAssignment",
															"src": "12419:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12485:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12485:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12490:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12490:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12426:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "12426:58:7"
																},
																"nativeSrc": "12426:67:7",
																"nodeType": "YulFunctionCall",
																"src": "12426:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12419:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12419:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12591:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12591:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361",
																	"nativeSrc": "12502:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "12502:88:7"
																},
																"nativeSrc": "12502:93:7",
																"nodeType": "YulFunctionCall",
																"src": "12502:93:7"
															},
															"nativeSrc": "12502:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "12502:93:7"
														},
														{
															"nativeSrc": "12604:19:7",
															"nodeType": "YulAssignment",
															"src": "12604:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12615:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "12615:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12620:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12620:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12611:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12611:3:7"
																},
																"nativeSrc": "12611:12:7",
																"nodeType": "YulFunctionCall",
																"src": "12611:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12604:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12604:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12263:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12397:3:7",
														"nodeType": "YulTypedName",
														"src": "12397:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12405:3:7",
														"nodeType": "YulTypedName",
														"src": "12405:3:7",
														"type": ""
													}
												],
												"src": "12263:366:7"
											},
											{
												"body": {
													"nativeSrc": "12806:248:7",
													"nodeType": "YulBlock",
													"src": "12806:248:7",
													"statements": [
														{
															"nativeSrc": "12816:26:7",
															"nodeType": "YulAssignment",
															"src": "12816:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12828:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "12828:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12839:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12839:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12824:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12824:3:7"
																},
																"nativeSrc": "12824:18:7",
																"nodeType": "YulFunctionCall",
																"src": "12824:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12816:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12816:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12863:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12863:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12874:1:7",
																				"nodeType": "YulLiteral",
																				"src": "12874:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12859:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12859:3:7"
																		},
																		"nativeSrc": "12859:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12859:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12882:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "12882:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12888:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12888:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12878:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12878:3:7"
																		},
																		"nativeSrc": "12878:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12878:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12852:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "12852:6:7"
																},
																"nativeSrc": "12852:47:7",
																"nodeType": "YulFunctionCall",
																"src": "12852:47:7"
															},
															"nativeSrc": "12852:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "12852:47:7"
														},
														{
															"nativeSrc": "12908:139:7",
															"nodeType": "YulAssignment",
															"src": "12908:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13042:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "13042:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12916:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "12916:124:7"
																},
																"nativeSrc": "12916:131:7",
																"nodeType": "YulFunctionCall",
																"src": "12916:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12908:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "12908:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12635:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12786:9:7",
														"nodeType": "YulTypedName",
														"src": "12786:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12801:4:7",
														"nodeType": "YulTypedName",
														"src": "12801:4:7",
														"type": ""
													}
												],
												"src": "12635:419:7"
											},
											{
												"body": {
													"nativeSrc": "13214:288:7",
													"nodeType": "YulBlock",
													"src": "13214:288:7",
													"statements": [
														{
															"nativeSrc": "13224:26:7",
															"nodeType": "YulAssignment",
															"src": "13224:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13236:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "13236:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13247:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13247:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13232:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13232:3:7"
																},
																"nativeSrc": "13232:18:7",
																"nodeType": "YulFunctionCall",
																"src": "13232:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13224:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "13224:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13304:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13304:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13317:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13317:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13328:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13328:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13313:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13313:3:7"
																		},
																		"nativeSrc": "13313:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13313:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13260:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13260:43:7"
																},
																"nativeSrc": "13260:71:7",
																"nodeType": "YulFunctionCall",
																"src": "13260:71:7"
															},
															"nativeSrc": "13260:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "13260:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13385:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13385:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13398:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13398:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13409:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13409:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13394:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13394:3:7"
																		},
																		"nativeSrc": "13394:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13394:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13341:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13341:43:7"
																},
																"nativeSrc": "13341:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13341:72:7"
															},
															"nativeSrc": "13341:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13341:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13467:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13467:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13480:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "13480:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13491:2:7",
																				"nodeType": "YulLiteral",
																				"src": "13491:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13476:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13476:3:7"
																		},
																		"nativeSrc": "13476:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13476:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13423:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "13423:43:7"
																},
																"nativeSrc": "13423:72:7",
																"nodeType": "YulFunctionCall",
																"src": "13423:72:7"
															},
															"nativeSrc": "13423:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "13423:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13060:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13170:9:7",
														"nodeType": "YulTypedName",
														"src": "13170:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13182:6:7",
														"nodeType": "YulTypedName",
														"src": "13182:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13190:6:7",
														"nodeType": "YulTypedName",
														"src": "13190:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13198:6:7",
														"nodeType": "YulTypedName",
														"src": "13198:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13209:4:7",
														"nodeType": "YulTypedName",
														"src": "13209:4:7",
														"type": ""
													}
												],
												"src": "13060:442:7"
											},
											{
												"body": {
													"nativeSrc": "13552:147:7",
													"nodeType": "YulBlock",
													"src": "13552:147:7",
													"statements": [
														{
															"nativeSrc": "13562:25:7",
															"nodeType": "YulAssignment",
															"src": "13562:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13585:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13585:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13567:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13567:17:7"
																},
																"nativeSrc": "13567:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13567:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13562:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13562:1:7"
																}
															]
														},
														{
															"nativeSrc": "13596:25:7",
															"nodeType": "YulAssignment",
															"src": "13596:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13619:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13619:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13601:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "13601:17:7"
																},
																"nativeSrc": "13601:20:7",
																"nodeType": "YulFunctionCall",
																"src": "13601:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13596:1:7",
																	"nodeType": "YulIdentifier",
																	"src": "13596:1:7"
																}
															]
														},
														{
															"nativeSrc": "13630:16:7",
															"nodeType": "YulAssignment",
															"src": "13630:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13641:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13641:1:7"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13644:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13644:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13637:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13637:3:7"
																},
																"nativeSrc": "13637:9:7",
																"nodeType": "YulFunctionCall",
																"src": "13637:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "13630:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13630:3:7"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13670:22:7",
																"nodeType": "YulBlock",
																"src": "13670:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13672:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "13672:16:7"
																			},
																			"nativeSrc": "13672:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "13672:18:7"
																		},
																		"nativeSrc": "13672:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "13672:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13662:1:7",
																		"nodeType": "YulIdentifier",
																		"src": "13662:1:7"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "13665:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13665:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13659:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "13659:2:7"
																},
																"nativeSrc": "13659:10:7",
																"nodeType": "YulFunctionCall",
																"src": "13659:10:7"
															},
															"nativeSrc": "13656:36:7",
															"nodeType": "YulIf",
															"src": "13656:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "13508:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13539:1:7",
														"nodeType": "YulTypedName",
														"src": "13539:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13542:1:7",
														"nodeType": "YulTypedName",
														"src": "13542:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "13548:3:7",
														"nodeType": "YulTypedName",
														"src": "13548:3:7",
														"type": ""
													}
												],
												"src": "13508:191:7"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid index\")\n\n    }\n\n    function abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee recipient\")\n\n    }\n\n    function abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061011f575f3560e01c806358a3a1c3116100ab578063a5f408b41161006f578063a5f408b41461030b578063a9059cbb14610327578063dd62ed3e14610357578063e74b981b14610387578063f2fde38b146103a35761011f565b806358a3a1c31461027957806370a0823114610295578063715018a6146102c55780638da5cb5b146102cf57806395d89b41146102ed5761011f565b806323b872dd116100f257806323b872dd146101c1578063309e7319146101f1578063313ce5671461022157806342b53e5f1461023f578063469048401461025b5761011f565b806306fdde0314610123578063095ea7b31461014157806318160ddd14610171578063230ed44a1461018f575b5f5ffd5b61012b6103bf565b604051610138919061144d565b60405180910390f35b61015b600480360381019061015691906114fe565b61044f565b6040516101689190611556565b60405180910390f35b610179610471565b604051610186919061157e565b60405180910390f35b6101a960048036038101906101a49190611597565b61047a565b6040516101b8939291906115c2565b60405180910390f35b6101db60048036038101906101d691906115f7565b6104af565b6040516101e89190611556565b60405180910390f35b61020b60048036038101906102069190611597565b61050e565b604051610218919061157e565b60405180910390f35b6102296105d4565b6040516102369190611662565b60405180910390f35b61025960048036038101906102549190611597565b6105dc565b005b610263610708565b604051610270919061168a565b60405180910390f35b610293600480360381019061028e91906116a3565b61072d565b005b6102af60048036038101906102aa91906116f3565b61082d565b6040516102bc919061157e565b60405180910390f35b6102cd610872565b005b6102d7610885565b6040516102e4919061168a565b60405180910390f35b6102f56108ad565b604051610302919061144d565b60405180910390f35b6103256004803603810190610320919061171e565b61093d565b005b610341600480360381019061033c91906114fe565b610a6d565b60405161034e9190611556565b60405180910390f35b610371600480360381019061036c9190611782565b610ac9565b60405161037e919061157e565b60405180910390f35b6103a1600480360381019061039c91906116f3565b610b4b565b005b6103bd60048036038101906103b891906116f3565b610c3b565b005b6060600380546103ce906117ed565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa906117ed565b80156104455780601f1061041c57610100808354040283529160200191610445565b820191905f5260205f20905b81548152906001019060200180831161042857829003601f168201915b5050505050905090565b5f5f610459610cbf565b9050610466818585610cc6565b600191505092915050565b5f600254905090565b60068181548110610489575f80fd5b905f5260205f2090600302015f91509050805f0154908060010154908060020154905083565b5f5f6104ba8361050e565b90505f81846104c9919061184a565b90506104f78660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684610cd8565b50610503868683610cd8565b925050509392505050565b5f5f5f90505b6006805490508110156105ca575f600682815481106105365761053561187d565b5b905f5260205f2090600302016040518060600160405290815f8201548152602001600182015481526020016002820154815250509050805f0151841015801561059157505f81602001511480610590575080602001518411155b5b156105bc576127108160400151856105a991906118aa565b6105b39190611918565b925050506105cf565b508080600101915050610514565b505f90505b919050565b5f6012905090565b6105e4610d06565b600680549050811061062b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062290611992565b60405180910390fd5b6006600160068054905061063f919061184a565b815481106106505761064f61187d565b5b905f5260205f209060030201600682815481106106705761066f61187d565b5b905f5260205f2090600302015f820154815f0155600182015481600101556002820154816002015590505060068054806106ad576106ac6119b0565b5b600190038181905f5260205f2090600302015f5f82015f9055600182015f9055600282015f905550509055807f2b4584016031d9a0d1fc722a5f384f606370058bfcc1354c24264dbd139d67da60405160405180910390a250565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610735610d06565b61271081111561077a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077190611a27565b60405180910390fd5b6006604051806060016040528085815260200184815260200183815250908060018154018082558091505060019003905f5260205f2090600302015f909190919091505f820151815f01556020820151816001015560408201518160020155505060016006805490506107ed919061184a565b7f37a23e54e8cf606c8ccd70367d9f32d3578f972bb538e67e0c5c08f26c9dfc19848484604051610820939291906115c2565b60405180910390a2505050565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61087a610d06565b6108835f610d8d565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546108bc906117ed565b80601f01602080910402602001604051908101604052809291908181526020018280546108e8906117ed565b80156109335780601f1061090a57610100808354040283529160200191610933565b820191905f5260205f20905b81548152906001019060200180831161091657829003601f168201915b5050505050905090565b610945610d06565b600680549050841061098c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098390611992565b60405180910390fd5b6127108111156109d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109c890611a27565b60405180910390fd5b60405180606001604052808481526020018381526020018281525060068581548110610a00576109ff61187d565b5b905f5260205f2090600302015f820151815f01556020820151816001015560408201518160020155905050837fbb15785662e808c63efc6a05274ce9a7cb01b854b603db64f663b880234dd2fe848484604051610a5f939291906115c2565b60405180910390a250505050565b5f5f610a788361050e565b90505f8184610a87919061184a565b9050610ab460075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1683610e50565b50610abf8582610e50565b9250505092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b610b53610d06565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610bc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bb890611a8f565b60405180910390fd5b8060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc281604051610c30919061168a565b60405180910390a150565b610c43610d06565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cb3575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610caa919061168a565b60405180910390fd5b610cbc81610d8d565b50565b5f33905090565b610cd38383836001610e72565b505050565b5f5f610ce2610cbf565b9050610cef858285611041565b610cfa8585856110d4565b60019150509392505050565b610d0e610cbf565b73ffffffffffffffffffffffffffffffffffffffff16610d2c610885565b73ffffffffffffffffffffffffffffffffffffffff1614610d8b57610d4f610cbf565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610d82919061168a565b60405180910390fd5b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5f610e5a610cbf565b9050610e678185856110d4565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ee2575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610ed9919061168a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f52575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f49919061168a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550801561103b578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611032919061157e565b60405180910390a35b50505050565b5f61104c8484610ac9565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110ce57818110156110bf578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016110b693929190611aad565b60405180910390fd5b6110cd84848484035f610e72565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611144575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161113b919061168a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111b4575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111ab919061168a565b60405180910390fd5b6111bf8383836111c4565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611214578060025f8282546112089190611ae2565b925050819055506112e2565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561129d578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161129493929190611aad565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611329578060025f8282540392505081905550611373565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113d0919061157e565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61141f826113dd565b61142981856113e7565b93506114398185602086016113f7565b61144281611405565b840191505092915050565b5f6020820190508181035f8301526114658184611415565b905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61149a82611471565b9050919050565b6114aa81611490565b81146114b4575f5ffd5b50565b5f813590506114c5816114a1565b92915050565b5f819050919050565b6114dd816114cb565b81146114e7575f5ffd5b50565b5f813590506114f8816114d4565b92915050565b5f5f604083850312156115145761151361146d565b5b5f611521858286016114b7565b9250506020611532858286016114ea565b9150509250929050565b5f8115159050919050565b6115508161153c565b82525050565b5f6020820190506115695f830184611547565b92915050565b611578816114cb565b82525050565b5f6020820190506115915f83018461156f565b92915050565b5f602082840312156115ac576115ab61146d565b5b5f6115b9848285016114ea565b91505092915050565b5f6060820190506115d55f83018661156f565b6115e2602083018561156f565b6115ef604083018461156f565b949350505050565b5f5f5f6060848603121561160e5761160d61146d565b5b5f61161b868287016114b7565b935050602061162c868287016114b7565b925050604061163d868287016114ea565b9150509250925092565b5f60ff82169050919050565b61165c81611647565b82525050565b5f6020820190506116755f830184611653565b92915050565b61168481611490565b82525050565b5f60208201905061169d5f83018461167b565b92915050565b5f5f5f606084860312156116ba576116b961146d565b5b5f6116c7868287016114ea565b93505060206116d8868287016114ea565b92505060406116e9868287016114ea565b9150509250925092565b5f602082840312156117085761170761146d565b5b5f611715848285016114b7565b91505092915050565b5f5f5f5f608085870312156117365761173561146d565b5b5f611743878288016114ea565b9450506020611754878288016114ea565b9350506040611765878288016114ea565b9250506060611776878288016114ea565b91505092959194509250565b5f5f604083850312156117985761179761146d565b5b5f6117a5858286016114b7565b92505060206117b6858286016114b7565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061180457607f821691505b602082108103611817576118166117c0565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611854826114cb565b915061185f836114cb565b92508282039050818111156118775761187661181d565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f6118b4826114cb565b91506118bf836114cb565b92508282026118cd816114cb565b915082820484148315176118e4576118e361181d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611922826114cb565b915061192d836114cb565b92508261193d5761193c6118eb565b5b828204905092915050565b7f496e76616c696420696e646578000000000000000000000000000000000000005f82015250565b5f61197c600d836113e7565b915061198782611948565b602082019050919050565b5f6020820190508181035f8301526119a981611970565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f611a11600c836113e7565b9150611a1c826119dd565b602082019050919050565b5f6020820190508181035f830152611a3e81611a05565b9050919050565b7f496e76616c69642066656520726563697069656e7400000000000000000000005f82015250565b5f611a796015836113e7565b9150611a8482611a45565b602082019050919050565b5f6020820190508181035f830152611aa681611a6d565b9050919050565b5f606082019050611ac05f83018661167b565b611acd602083018561156f565b611ada604083018461156f565b949350505050565b5f611aec826114cb565b9150611af7836114cb565b9250828201905080821115611b0f57611b0e61181d565b5b9291505056fea2646970667358221220983b22c4b31d72784086e6554d050f636bcd344312a020a4149eb94bd4a2bf8e64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58A3A1C3 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA5F408B4 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA5F408B4 EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x357 JUMPI DUP1 PUSH4 0xE74B981B EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A3 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x58A3A1C3 EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2ED JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x309E7319 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x42B53E5F EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x46904840 EQ PUSH2 0x25B JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x141 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x230ED44A EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x12B PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x156 SWAP2 SWAP1 PUSH2 0x14FE JUMP JUMPDEST PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x471 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A4 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D6 SWAP2 SWAP1 PUSH2 0x15F7 JUMP JUMPDEST PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x218 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x229 PUSH2 0x5D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1662 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x259 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x1597 JUMP JUMPDEST PUSH2 0x5DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x263 PUSH2 0x708 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x270 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x293 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x16A3 JUMP JUMPDEST PUSH2 0x72D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AA SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0x82D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CD PUSH2 0x872 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x8AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x144D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x171E JUMP JUMPDEST PUSH2 0x93D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x14FE JUMP JUMPDEST PUSH2 0xA6D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x1556 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x371 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x36C SWAP2 SWAP1 PUSH2 0x1782 JUMP JUMPDEST PUSH2 0xAC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37E SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39C SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0xB4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3BD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B8 SWAP2 SWAP1 PUSH2 0x16F3 JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x17ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FA SWAP1 PUSH2 0x17ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x445 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x445 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x428 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x459 PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP PUSH2 0x466 DUP2 DUP6 DUP6 PUSH2 0xCC6 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x489 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4BA DUP4 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH2 0x4C9 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0x4F7 DUP7 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH2 0xCD8 JUMP JUMPDEST POP PUSH2 0x503 DUP7 DUP7 DUP4 PUSH2 0xCD8 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x5CA JUMPI PUSH0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x536 JUMPI PUSH2 0x535 PUSH2 0x187D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH0 ADD MLOAD DUP5 LT ISZERO DUP1 ISZERO PUSH2 0x591 JUMPI POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD EQ DUP1 PUSH2 0x590 JUMPI POP DUP1 PUSH1 0x20 ADD MLOAD DUP5 GT ISZERO JUMPDEST JUMPDEST ISZERO PUSH2 0x5BC JUMPI PUSH2 0x2710 DUP2 PUSH1 0x40 ADD MLOAD DUP6 PUSH2 0x5A9 SWAP2 SWAP1 PUSH2 0x18AA JUMP JUMPDEST PUSH2 0x5B3 SWAP2 SWAP1 PUSH2 0x1918 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x5CF JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x514 JUMP JUMPDEST POP PUSH0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E4 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x62B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x622 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x650 JUMPI PUSH2 0x64F PUSH2 0x187D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH2 0x66F PUSH2 0x187D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP3 ADD SLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP PUSH1 0x6 DUP1 SLOAD DUP1 PUSH2 0x6AD JUMPI PUSH2 0x6AC PUSH2 0x19B0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 PUSH0 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE POP POP SWAP1 SSTORE DUP1 PUSH32 0x2B4584016031D9A0D1FC722A5F384F606370058BFCC1354C24264DBD139D67DA PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x735 PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x77A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x771 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP PUSH1 0x1 PUSH1 0x6 DUP1 SLOAD SWAP1 POP PUSH2 0x7ED SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST PUSH32 0x37A23E54E8CF606C8CCD70367D9F32D3578F972BB538E67E0C5C08F26C9DFC19 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x820 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x87A PUSH2 0xD06 JUMP JUMPDEST PUSH2 0x883 PUSH0 PUSH2 0xD8D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x8BC SWAP1 PUSH2 0x17ED JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8E8 SWAP1 PUSH2 0x17ED JUMP JUMPDEST DUP1 ISZERO PUSH2 0x933 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x90A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x933 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x916 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x945 PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x983 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9C8 SWAP1 PUSH2 0x1A27 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP PUSH1 0x6 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xA00 JUMPI PUSH2 0x9FF PUSH2 0x187D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE SWAP1 POP POP DUP4 PUSH32 0xBB15785662E808C63EFC6A05274CE9A7CB01B854B603DB64F663B880234DD2FE DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xA78 DUP4 PUSH2 0x50E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP5 PUSH2 0xA87 SWAP2 SWAP1 PUSH2 0x184A JUMP JUMPDEST SWAP1 POP PUSH2 0xAB4 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xE50 JUMP JUMPDEST POP PUSH2 0xABF DUP6 DUP3 PUSH2 0xE50 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB53 PUSH2 0xD06 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB8 SWAP1 PUSH2 0x1A8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x7A7B5A0A132F9E0581EB8527F66EAE9EE89C2A3E79D4AC7E41A1F1F4D48A7FC2 DUP2 PUSH1 0x40 MLOAD PUSH2 0xC30 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xC43 PUSH2 0xD06 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCB3 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAA SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xD8D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xCD3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xCE2 PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP PUSH2 0xCEF DUP6 DUP3 DUP6 PUSH2 0x1041 JUMP JUMPDEST PUSH2 0xCFA DUP6 DUP6 DUP6 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xD0E PUSH2 0xCBF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD2C PUSH2 0x885 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD8B JUMPI PUSH2 0xD4F PUSH2 0xCBF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xE5A PUSH2 0xCBF JUMP JUMPDEST SWAP1 POP PUSH2 0xE67 DUP2 DUP6 DUP6 PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED9 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF52 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x103B JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1032 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x104C DUP5 DUP5 PUSH2 0xAC9 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x10CE JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x10BF JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10CD DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE72 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1144 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x113B SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11B4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11AB SWAP2 SWAP1 PUSH2 0x168A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11BF DUP4 DUP4 DUP4 PUSH2 0x11C4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1214 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1208 SWAP2 SWAP1 PUSH2 0x1AE2 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x12E2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x129D JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1294 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1329 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1373 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x13D0 SWAP2 SWAP1 PUSH2 0x157E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x141F DUP3 PUSH2 0x13DD JUMP JUMPDEST PUSH2 0x1429 DUP2 DUP6 PUSH2 0x13E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x1439 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13F7 JUMP JUMPDEST PUSH2 0x1442 DUP2 PUSH2 0x1405 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1465 DUP2 DUP5 PUSH2 0x1415 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x149A DUP3 PUSH2 0x1471 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14AA DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP2 EQ PUSH2 0x14B4 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14C5 DUP2 PUSH2 0x14A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14DD DUP2 PUSH2 0x14CB JUMP JUMPDEST DUP2 EQ PUSH2 0x14E7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14F8 DUP2 PUSH2 0x14D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1514 JUMPI PUSH2 0x1513 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1521 DUP6 DUP3 DUP7 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1532 DUP6 DUP3 DUP7 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1550 DUP2 PUSH2 0x153C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1569 PUSH0 DUP4 ADD DUP5 PUSH2 0x1547 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1578 DUP2 PUSH2 0x14CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1591 PUSH0 DUP4 ADD DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15AC JUMPI PUSH2 0x15AB PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15B9 DUP5 DUP3 DUP6 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15D5 PUSH0 DUP4 ADD DUP7 PUSH2 0x156F JUMP JUMPDEST PUSH2 0x15E2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x156F JUMP JUMPDEST PUSH2 0x15EF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x160E JUMPI PUSH2 0x160D PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x161B DUP7 DUP3 DUP8 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x162C DUP7 DUP3 DUP8 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x163D DUP7 DUP3 DUP8 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x165C DUP2 PUSH2 0x1647 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1675 PUSH0 DUP4 ADD DUP5 PUSH2 0x1653 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1684 DUP2 PUSH2 0x1490 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x169D PUSH0 DUP4 ADD DUP5 PUSH2 0x167B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x16BA JUMPI PUSH2 0x16B9 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x16C7 DUP7 DUP3 DUP8 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x16D8 DUP7 DUP3 DUP8 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x16E9 DUP7 DUP3 DUP8 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1708 JUMPI PUSH2 0x1707 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1715 DUP5 DUP3 DUP6 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1735 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1743 DUP8 DUP3 DUP9 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1754 DUP8 DUP3 DUP9 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1765 DUP8 DUP3 DUP9 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x1776 DUP8 DUP3 DUP9 ADD PUSH2 0x14EA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1798 JUMPI PUSH2 0x1797 PUSH2 0x146D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x17A5 DUP6 DUP3 DUP7 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17B6 DUP6 DUP3 DUP7 ADD PUSH2 0x14B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1817 JUMPI PUSH2 0x1816 PUSH2 0x17C0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1854 DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP PUSH2 0x185F DUP4 PUSH2 0x14CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1877 JUMPI PUSH2 0x1876 PUSH2 0x181D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x18B4 DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP PUSH2 0x18BF DUP4 PUSH2 0x14CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18CD DUP2 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18E4 JUMPI PUSH2 0x18E3 PUSH2 0x181D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1922 DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP PUSH2 0x192D DUP4 PUSH2 0x14CB JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x193D JUMPI PUSH2 0x193C PUSH2 0x18EB JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E64657800000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x197C PUSH1 0xD DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1948 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19A9 DUP2 PUSH2 0x1970 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A11 PUSH1 0xC DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A1C DUP3 PUSH2 0x19DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A3E DUP2 PUSH2 0x1A05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642066656520726563697069656E740000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A79 PUSH1 0x15 DUP4 PUSH2 0x13E7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A84 DUP3 PUSH2 0x1A45 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA6 DUP2 PUSH2 0x1A6D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1AC0 PUSH0 DUP4 ADD DUP7 PUSH2 0x167B JUMP JUMPDEST PUSH2 0x1ACD PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x156F JUMP JUMPDEST PUSH2 0x1ADA PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x156F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEC DUP3 PUSH2 0x14CB JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF7 DUP4 PUSH2 0x14CB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1B0F JUMPI PUSH2 0x1B0E PUSH2 0x181D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 EXTCODESIZE 0x22 0xC4 0xB3 SAR PUSH19 0x784086E6554D050F636BCD344312A020A4149E 0xB9 0x4B 0xD4 LOG2 0xBF DUP15 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "386:4073:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;752:25:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;4027:430;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3084:378;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2763:240:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;822:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2035:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3004:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2370:354:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3549:387;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1767:228:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:2;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;752:25:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4027:430::-;4125:4;4141:11;4155:23;4171:6;4155:15;:23::i;:::-;4141:37;;4188:17;4217:3;4208:6;:12;;;;:::i;:::-;4188:32;;4283:45;4302:6;4310:12;;;;;;;;;;;4324:3;4283:18;:45::i;:::-;;4402:48;4421:6;4429:9;4440;4402:18;:48::i;:::-;4395:55;;;;4027:430;;;;;:::o;3084:378::-;3146:11;3174:9;3186:1;3174:13;;3169:269;3193:8;:15;;;;3189:1;:19;3169:269;;;3229:19;3251:8;3260:1;3251:11;;;;;;;;:::i;:::-;;;;;;;;;;;;3229:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3290:4;:14;;;3280:6;:24;;:77;;;;;3327:1;3309:4;:14;;;:19;:47;;;;3342:4;:14;;;3332:6;:24;;3309:47;3280:77;3276:152;;;3408:5;3394:4;:10;;;3385:6;:19;;;;:::i;:::-;3384:29;;;;:::i;:::-;3377:36;;;;;;3276:152;3215:223;3210:3;;;;;;;3169:269;;;;3454:1;3447:8;;3084:378;;;;:::o;2707:82:2:-;2756:5;2780:2;2773:9;;2707:82;:::o;2763:240:6:-;1531:13:0;:11;:13::i;:::-;2846:8:6::1;:15;;;;2838:5;:23;2830:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2907:8;2934:1;2916:8;:15;;;;:19;;;;:::i;:::-;2907:29;;;;;;;;:::i;:::-;;;;;;;;;;;;2889:8;2898:5;2889:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;;;;;;;;;;2946:8;:14;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2990:5;2975:21;;;;;;;;;;2763:240:::0;:::o;822:27::-;;;;;;;;;;;;;:::o;2035:286::-;1531:13:0;:11;:13::i;:::-;2154:5:6::1;2145;:14;;2137:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2186:8;2200:36;;;;;;;;2208:9;2200:36;;;;2219:9;2200:36;;;;2230:5;2200:36;;::::0;2186:51:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2283:1;2265:8;:15;;;;:19;;;;:::i;:::-;2252:62;2286:9;2297;2308:5;2252:62;;;;;;;;:::i;:::-;;;;;;;;2035:286:::0;;;:::o;3004:116:2:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:2:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;2370:354:6:-;1531:13:0;:11;:13::i;:::-;2506:8:6::1;:15;;;;2498:5;:23;2490:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;2566:5;2557;:14;;2549:39;;;;;;;;;;;;:::i;:::-;;;;;;;;;2616:36;;;;;;;;2624:9;2616:36;;;;2635:9;2616:36;;;;2646:5;2616:36;;::::0;2598:8:::1;2607:5;2598:15;;;;;;;;:::i;:::-;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;;;;;;;;;;2682:5;2667:50;2689:9;2700;2711:5;2667:50;;;;;;;;:::i;:::-;;;;;;;;2370:354:::0;;;;:::o;3549:387::-;3627:4;3643:11;3657:23;3673:6;3657:15;:23::i;:::-;3643:37;;3690:17;3719:3;3710:6;:12;;;;:::i;:::-;3690:32;;3784:33;3799:12;;;;;;;;;;;3813:3;3784:14;:33::i;:::-;;3893:36;3908:9;3919;3893:14;:36::i;:::-;3886:43;;;;3549:387;;;;:::o;3551:140:2:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;1767:228:6:-;1531:13:0;:11;:13::i;:::-;1875:1:6::1;1851:26;;:12;:26;;::::0;1843:60:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1928:12;1913;;:27;;;;;;;;;;;;;;;;;;1955:33;1975:12;1955:33;;;;;;:::i;:::-;;;;;;;;1767:228:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8726:128:2:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3315:178:2:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;10415:476::-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:329::-;3750:6;3799:2;3787:9;3778:7;3774:23;3770:32;3767:119;;;3805:79;;:::i;:::-;3767:119;3925:1;3950:53;3995:7;3986:6;3975:9;3971:22;3950:53;:::i;:::-;3940:63;;3896:117;3691:329;;;;:::o;4026:442::-;4175:4;4213:2;4202:9;4198:18;4190:26;;4226:71;4294:1;4283:9;4279:17;4270:6;4226:71;:::i;:::-;4307:72;4375:2;4364:9;4360:18;4351:6;4307:72;:::i;:::-;4389;4457:2;4446:9;4442:18;4433:6;4389:72;:::i;:::-;4026:442;;;;;;:::o;4474:619::-;4551:6;4559;4567;4616:2;4604:9;4595:7;4591:23;4587:32;4584:119;;;4622:79;;:::i;:::-;4584:119;4742:1;4767:53;4812:7;4803:6;4792:9;4788:22;4767:53;:::i;:::-;4757:63;;4713:117;4869:2;4895:53;4940:7;4931:6;4920:9;4916:22;4895:53;:::i;:::-;4885:63;;4840:118;4997:2;5023:53;5068:7;5059:6;5048:9;5044:22;5023:53;:::i;:::-;5013:63;;4968:118;4474:619;;;;;:::o;5099:86::-;5134:7;5174:4;5167:5;5163:16;5152:27;;5099:86;;;:::o;5191:112::-;5274:22;5290:5;5274:22;:::i;:::-;5269:3;5262:35;5191:112;;:::o;5309:214::-;5398:4;5436:2;5425:9;5421:18;5413:26;;5449:67;5513:1;5502:9;5498:17;5489:6;5449:67;:::i;:::-;5309:214;;;;:::o;5529:118::-;5616:24;5634:5;5616:24;:::i;:::-;5611:3;5604:37;5529:118;;:::o;5653:222::-;5746:4;5784:2;5773:9;5769:18;5761:26;;5797:71;5865:1;5854:9;5850:17;5841:6;5797:71;:::i;:::-;5653:222;;;;:::o;5881:619::-;5958:6;5966;5974;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;6276:2;6302:53;6347:7;6338:6;6327:9;6323:22;6302:53;:::i;:::-;6292:63;;6247:118;6404:2;6430:53;6475:7;6466:6;6455:9;6451:22;6430:53;:::i;:::-;6420:63;;6375:118;5881:619;;;;;:::o;6506:329::-;6565:6;6614:2;6602:9;6593:7;6589:23;6585:32;6582:119;;;6620:79;;:::i;:::-;6582:119;6740:1;6765:53;6810:7;6801:6;6790:9;6786:22;6765:53;:::i;:::-;6755:63;;6711:117;6506:329;;;;:::o;6841:765::-;6927:6;6935;6943;6951;7000:3;6988:9;6979:7;6975:23;6971:33;6968:120;;;7007:79;;:::i;:::-;6968:120;7127:1;7152:53;7197:7;7188:6;7177:9;7173:22;7152:53;:::i;:::-;7142:63;;7098:117;7254:2;7280:53;7325:7;7316:6;7305:9;7301:22;7280:53;:::i;:::-;7270:63;;7225:118;7382:2;7408:53;7453:7;7444:6;7433:9;7429:22;7408:53;:::i;:::-;7398:63;;7353:118;7510:2;7536:53;7581:7;7572:6;7561:9;7557:22;7536:53;:::i;:::-;7526:63;;7481:118;6841:765;;;;;;;:::o;7612:474::-;7680:6;7688;7737:2;7725:9;7716:7;7712:23;7708:32;7705:119;;;7743:79;;:::i;:::-;7705:119;7863:1;7888:53;7933:7;7924:6;7913:9;7909:22;7888:53;:::i;:::-;7878:63;;7834:117;7990:2;8016:53;8061:7;8052:6;8041:9;8037:22;8016:53;:::i;:::-;8006:63;;7961:118;7612:474;;;;;:::o;8092:180::-;8140:77;8137:1;8130:88;8237:4;8234:1;8227:15;8261:4;8258:1;8251:15;8278:320;8322:6;8359:1;8353:4;8349:12;8339:22;;8406:1;8400:4;8396:12;8427:18;8417:81;;8483:4;8475:6;8471:17;8461:27;;8417:81;8545:2;8537:6;8534:14;8514:18;8511:38;8508:84;;8564:18;;:::i;:::-;8508:84;8329:269;8278:320;;;:::o;8604:180::-;8652:77;8649:1;8642:88;8749:4;8746:1;8739:15;8773:4;8770:1;8763:15;8790:194;8830:4;8850:20;8868:1;8850:20;:::i;:::-;8845:25;;8884:20;8902:1;8884:20;:::i;:::-;8879:25;;8928:1;8925;8921:9;8913:17;;8952:1;8946:4;8943:11;8940:37;;;8957:18;;:::i;:::-;8940:37;8790:194;;;;:::o;8990:180::-;9038:77;9035:1;9028:88;9135:4;9132:1;9125:15;9159:4;9156:1;9149:15;9176:410;9216:7;9239:20;9257:1;9239:20;:::i;:::-;9234:25;;9273:20;9291:1;9273:20;:::i;:::-;9268:25;;9328:1;9325;9321:9;9350:30;9368:11;9350:30;:::i;:::-;9339:41;;9529:1;9520:7;9516:15;9513:1;9510:22;9490:1;9483:9;9463:83;9440:139;;9559:18;;:::i;:::-;9440:139;9224:362;9176:410;;;;:::o;9592:180::-;9640:77;9637:1;9630:88;9737:4;9734:1;9727:15;9761:4;9758:1;9751:15;9778:185;9818:1;9835:20;9853:1;9835:20;:::i;:::-;9830:25;;9869:20;9887:1;9869:20;:::i;:::-;9864:25;;9908:1;9898:35;;9913:18;;:::i;:::-;9898:35;9955:1;9952;9948:9;9943:14;;9778:185;;;;:::o;9969:163::-;10109:15;10105:1;10097:6;10093:14;10086:39;9969:163;:::o;10138:366::-;10280:3;10301:67;10365:2;10360:3;10301:67;:::i;:::-;10294:74;;10377:93;10466:3;10377:93;:::i;:::-;10495:2;10490:3;10486:12;10479:19;;10138:366;;;:::o;10510:419::-;10676:4;10714:2;10703:9;10699:18;10691:26;;10763:9;10757:4;10753:20;10749:1;10738:9;10734:17;10727:47;10791:131;10917:4;10791:131;:::i;:::-;10783:139;;10510:419;;;:::o;10935:180::-;10983:77;10980:1;10973:88;11080:4;11077:1;11070:15;11104:4;11101:1;11094:15;11121:162;11261:14;11257:1;11249:6;11245:14;11238:38;11121:162;:::o;11289:366::-;11431:3;11452:67;11516:2;11511:3;11452:67;:::i;:::-;11445:74;;11528:93;11617:3;11528:93;:::i;:::-;11646:2;11641:3;11637:12;11630:19;;11289:366;;;:::o;11661:419::-;11827:4;11865:2;11854:9;11850:18;11842:26;;11914:9;11908:4;11904:20;11900:1;11889:9;11885:17;11878:47;11942:131;12068:4;11942:131;:::i;:::-;11934:139;;11661:419;;;:::o;12086:171::-;12226:23;12222:1;12214:6;12210:14;12203:47;12086:171;:::o;12263:366::-;12405:3;12426:67;12490:2;12485:3;12426:67;:::i;:::-;12419:74;;12502:93;12591:3;12502:93;:::i;:::-;12620:2;12615:3;12611:12;12604:19;;12263:366;;;:::o;12635:419::-;12801:4;12839:2;12828:9;12824:18;12816:26;;12888:9;12882:4;12878:20;12874:1;12863:9;12859:17;12852:47;12916:131;13042:4;12916:131;:::i;:::-;12908:139;;12635:419;;;:::o;13060:442::-;13209:4;13247:2;13236:9;13232:18;13224:26;;13260:71;13328:1;13317:9;13313:17;13304:6;13260:71;:::i;:::-;13341:72;13409:2;13398:9;13394:18;13385:6;13341:72;:::i;:::-;13423;13491:2;13480:9;13476:18;13467:6;13423:72;:::i;:::-;13060:442;;;;;;:::o;13508:191::-;13548:3;13567:20;13585:1;13567:20;:::i;:::-;13562:25;;13601:20;13619:1;13601:20;:::i;:::-;13596:25;;13644:1;13641;13637:9;13630:16;;13665:3;13662:1;13659:10;13656:36;;;13672:18;;:::i;:::-;13656:36;13508:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1397400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addFeeTier(uint256,uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2873",
								"decimals()": "405",
								"feeRecipient()": "2619",
								"feeTiers(uint256)": "infinite",
								"getFeeForAmount(uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2604",
								"removeFeeTier(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"setFeeRecipient(address)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"updateFeeTier(uint256,uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 386,
									"end": 4459,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "CODESIZE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSHSIZE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1406,
									"end": 1702,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "tag",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1528,
									"end": 1538,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "46656520546965727320455243323020546F6B656E0000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 2,
									"value": "4654453230000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1587,
									"end": 1588,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1562,
									"end": 1589,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1562,
									"end": 1589,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1575,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1589,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1562,
									"end": 1589,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1562,
									"end": 1589,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1554,
									"end": 1615,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 1554,
									"end": 1615,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1640,
									"end": 1653,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1637,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 1625,
									"end": 1637,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1625,
									"end": 1653,
									"modifierDepth": 2,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1695,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1669,
									"end": 1679,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1681,
									"end": 1694,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1668,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1663,
									"end": 1668,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1663,
									"end": 1668,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1695,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1663,
									"end": 1695,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1695,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1663,
									"end": 1695,
									"modifierDepth": 2,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1663,
									"end": 1695,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1406,
									"end": 1702,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 2,
									"value": "39"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "41"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 7,
									"value": "83"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 7,
									"value": "84"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "46"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 7,
									"value": "86"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 826,
									"end": 922,
									"name": "tag",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 826,
									"end": 922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 863,
									"end": 870,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 910,
									"end": 915,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 892,
									"end": 916,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "48"
								},
								{
									"begin": 892,
									"end": 916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 892,
									"end": 916,
									"name": "tag",
									"source": 7,
									"value": "89"
								},
								{
									"begin": 892,
									"end": 916,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 881,
									"end": 916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 881,
									"end": 916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 826,
									"end": 922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 826,
									"end": 922,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 826,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 7,
									"value": "91"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 7,
									"value": "92"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "50"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 7,
									"value": "94"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 7,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "43"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 7,
									"value": "97"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 7,
									"value": "96"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "47"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 7,
									"value": "98"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "51"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 7,
									"value": "99"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "tag",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1770,
									"end": 1776,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1804,
									"end": 1809,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1798,
									"end": 1810,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1788,
									"end": 1810,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1718,
									"end": 1817,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "tag",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 1823,
									"end": 2003,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 1871,
									"end": 1948,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1868,
									"end": 1869,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1861,
									"end": 1949,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1968,
									"end": 1972,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 1965,
									"end": 1966,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 1958,
									"end": 1973,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 1989,
									"end": 1990,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1982,
									"end": 1997,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "tag",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2009,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2057,
									"end": 2134,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2055,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2047,
									"end": 2135,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2154,
									"end": 2158,
									"name": "PUSH",
									"source": 7,
									"value": "22"
								},
								{
									"begin": 2151,
									"end": 2152,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 2144,
									"end": 2159,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2178,
									"end": 2182,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 2175,
									"end": 2176,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2168,
									"end": 2183,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "tag",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2239,
									"end": 2245,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2276,
									"end": 2277,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 2270,
									"end": 2274,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2266,
									"end": 2278,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2256,
									"end": 2278,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2323,
									"end": 2324,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2317,
									"end": 2321,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2313,
									"end": 2325,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2344,
									"end": 2362,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2400,
									"end": 2404,
									"name": "PUSH",
									"source": 7,
									"value": "7F"
								},
								{
									"begin": 2392,
									"end": 2398,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2388,
									"end": 2405,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2378,
									"end": 2405,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "tag",
									"source": 7,
									"value": "104"
								},
								{
									"begin": 2334,
									"end": 2415,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2462,
									"end": 2464,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2454,
									"end": 2460,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2451,
									"end": 2465,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 2431,
									"end": 2449,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2428,
									"end": 2466,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "54"
								},
								{
									"begin": 2481,
									"end": 2499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "tag",
									"source": 7,
									"value": "106"
								},
								{
									"begin": 2481,
									"end": 2499,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "tag",
									"source": 7,
									"value": "105"
								},
								{
									"begin": 2425,
									"end": 2509,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2246,
									"end": 2515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2195,
									"end": 2515,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "tag",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2570,
									"end": 2574,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2593,
									"end": 2596,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2585,
									"end": 2596,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2616,
									"end": 2619,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2613,
									"end": 2614,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2606,
									"end": 2620,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2650,
									"end": 2654,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2647,
									"end": 2648,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2637,
									"end": 2655,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2629,
									"end": 2655,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2521,
									"end": 2662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "tag",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2705,
									"end": 2711,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2752,
									"end": 2754,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2747,
									"end": 2749,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 2740,
									"end": 2745,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2736,
									"end": 2750,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2732,
									"end": 2755,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2722,
									"end": 2755,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2668,
									"end": 2761,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "tag",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2811,
									"end": 2819,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2861,
									"end": 2866,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2855,
									"end": 2859,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2851,
									"end": 2867,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2830,
									"end": 2867,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2767,
									"end": 2874,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "tag",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 2949,
									"end": 2955,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2999,
									"end": 3000,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2987,
									"end": 2997,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2983,
									"end": 3001,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3052,
									"end": 3118,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3041,
									"end": 3050,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3022,
									"end": 3119,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "tag",
									"source": 7,
									"value": "111"
								},
								{
									"begin": 3022,
									"end": 3119,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3170,
									"end": 3178,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3159,
									"end": 3168,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "58"
								},
								{
									"begin": 3140,
									"end": 3179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "tag",
									"source": 7,
									"value": "112"
								},
								{
									"begin": 3140,
									"end": 3179,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "SWAP6",
									"source": 7
								},
								{
									"begin": 3128,
									"end": 3179,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3212,
									"end": 3216,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3208,
									"end": 3217,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 3201,
									"end": 3206,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3197,
									"end": 3218,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 3188,
									"end": 3218,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3261,
									"end": 3265,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 3251,
									"end": 3259,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 3247,
									"end": 3266,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 3240,
									"end": 3245,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3237,
									"end": 3267,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 3227,
									"end": 3267,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2956,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 2880,
									"end": 3273,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "tag",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3307,
									"end": 3310,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3321,
									"end": 3333,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3279,
									"end": 3339,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "tag",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3395,
									"end": 3404,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3473,
									"end": 3478,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3455,
									"end": 3479,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "tag",
									"source": 7,
									"value": "117"
								},
								{
									"begin": 3455,
									"end": 3479,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 3446,
									"end": 3480,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "tag",
									"source": 7,
									"value": "116"
								},
								{
									"begin": 3446,
									"end": 3480,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 3428,
									"end": 3481,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "tag",
									"source": 7,
									"value": "115"
								},
								{
									"begin": 3428,
									"end": 3481,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3415,
									"end": 3481,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3345,
									"end": 3487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "tag",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3536,
									"end": 3539,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3557,
									"end": 3562,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3550,
									"end": 3562,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3493,
									"end": 3568,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "tag",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3715,
									"end": 3722,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "61"
								},
								{
									"begin": 3684,
									"end": 3723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "tag",
									"source": 7,
									"value": "120"
								},
								{
									"begin": 3684,
									"end": 3723,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3818,
									"end": 3834,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "62"
								},
								{
									"begin": 3794,
									"end": 3835,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "tag",
									"source": 7,
									"value": "122"
								},
								{
									"begin": 3794,
									"end": 3835,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3786,
									"end": 3792,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3779,
									"end": 3783,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 3773,
									"end": 3784,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "59"
								},
								{
									"begin": 3745,
									"end": 3836,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "tag",
									"source": 7,
									"value": "121"
								},
								{
									"begin": 3745,
									"end": 3836,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 3732,
									"end": 3837,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 3650,
									"end": 3843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3574,
									"end": 3843,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "tag",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3894,
									"end": 3897,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3915,
									"end": 3916,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3916,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3908,
									"end": 3916,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3849,
									"end": 3922,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 3849,
									"end": 3922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "tag",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 4005,
									"end": 4037,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "tag",
									"source": 7,
									"value": "125"
								},
								{
									"begin": 4005,
									"end": 4037,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4096,
									"end": 4102,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4090,
									"end": 4094,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "63"
								},
								{
									"begin": 4046,
									"end": 4111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "tag",
									"source": 7,
									"value": "126"
								},
								{
									"begin": 4046,
									"end": 4111,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 3981,
									"end": 4117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 4117,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 3928,
									"end": 4117,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "tag",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4200,
									"end": 4203,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4193,
									"end": 4198,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4190,
									"end": 4204,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4291,
									"end": 4292,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4284,
									"end": 4289,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "65"
								},
								{
									"begin": 4254,
									"end": 4293,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "tag",
									"source": 7,
									"value": "131"
								},
								{
									"begin": 4254,
									"end": 4293,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4227,
									"end": 4228,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 4220,
									"end": 4225,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4216,
									"end": 4229,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4207,
									"end": 4229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "128"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "tag",
									"source": 7,
									"value": "130"
								},
								{
									"begin": 4183,
									"end": 4303,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4309,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4123,
									"end": 4309,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "tag",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4416,
									"end": 4418,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 4411,
									"end": 4414,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4408,
									"end": 4419,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4482,
									"end": 4487,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 4450,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "tag",
									"source": 7,
									"value": "134"
								},
								{
									"begin": 4450,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4552,
									"end": 4562,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 4534,
									"end": 4563,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "tag",
									"source": 7,
									"value": "135"
								},
								{
									"begin": 4534,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4524,
									"end": 4532,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4520,
									"end": 4564,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4717,
									"end": 4719,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 4705,
									"end": 4715,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4702,
									"end": 4720,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 4738,
									"end": 4746,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4723,
									"end": 4746,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "tag",
									"source": 7,
									"value": "136"
								},
								{
									"begin": 4699,
									"end": 4748,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4835,
									"end": 4838,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "57"
								},
								{
									"begin": 4817,
									"end": 4839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "tag",
									"source": 7,
									"value": "138"
								},
								{
									"begin": 4817,
									"end": 4839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4807,
									"end": 4815,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 4803,
									"end": 4840,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 4790,
									"end": 4801,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "66"
								},
								{
									"begin": 4761,
									"end": 4841,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "tag",
									"source": 7,
									"value": "137"
								},
								{
									"begin": 4761,
									"end": 4841,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4420,
									"end": 4851,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "tag",
									"source": 7,
									"value": "133"
								},
								{
									"begin": 4405,
									"end": 4851,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4315,
									"end": 4858,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "tag",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 4918,
									"end": 4926,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 4968,
									"end": 4973,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4962,
									"end": 4966,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 4958,
									"end": 4974,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 4937,
									"end": 4974,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4864,
									"end": 4981,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "tag",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5031,
									"end": 5037,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5112,
									"end": 5113,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5108,
									"end": 5114,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5100,
									"end": 5105,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 5097,
									"end": 5098,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 5093,
									"end": 5106,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "68"
								},
								{
									"begin": 5064,
									"end": 5115,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "tag",
									"source": 7,
									"value": "141"
								},
								{
									"begin": 5064,
									"end": 5115,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5060,
									"end": 5116,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 5145,
									"end": 5149,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 5139,
									"end": 5143,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5135,
									"end": 5150,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5125,
									"end": 5150,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5038,
									"end": 5156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 4987,
									"end": 5156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "tag",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5237,
									"end": 5241,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5408,
									"end": 5411,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5402,
									"end": 5406,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 5383,
									"end": 5412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "tag",
									"source": 7,
									"value": "143"
								},
								{
									"begin": 5383,
									"end": 5412,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5375,
									"end": 5412,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5445,
									"end": 5448,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5442,
									"end": 5443,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 5438,
									"end": 5449,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 5432,
									"end": 5436,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5429,
									"end": 5450,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5421,
									"end": 5450,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5161,
									"end": 5456,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "tag",
									"source": 7,
									"value": "9"
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5611,
									"end": 5614,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "52"
								},
								{
									"begin": 5578,
									"end": 5615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "tag",
									"source": 7,
									"value": "145"
								},
								{
									"begin": 5578,
									"end": 5615,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5680,
									"end": 5698,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5672,
									"end": 5678,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5669,
									"end": 5699,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "53"
								},
								{
									"begin": 5702,
									"end": 5720,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "tag",
									"source": 7,
									"value": "147"
								},
								{
									"begin": 5702,
									"end": 5720,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "tag",
									"source": 7,
									"value": "146"
								},
								{
									"begin": 5666,
									"end": 5722,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5778,
									"end": 5782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5772,
									"end": 5783,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "55"
								},
								{
									"begin": 5746,
									"end": 5784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "tag",
									"source": 7,
									"value": "148"
								},
								{
									"begin": 5746,
									"end": 5784,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5891,
									"end": 5897,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5883,
									"end": 5889,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 5877,
									"end": 5881,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "67"
								},
								{
									"begin": 5831,
									"end": 5898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "tag",
									"source": 7,
									"value": "149"
								},
								{
									"begin": 5831,
									"end": 5898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5925,
									"end": 5926,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 5949,
									"end": 5953,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 5936,
									"end": 5953,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5981,
									"end": 5983,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 5973,
									"end": 5979,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 5970,
									"end": 5984,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 5998,
									"end": 5999,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6655,
									"end": 6656,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6678,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6721,
									"end": 6730,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6716,
									"end": 6719,
									"name": "DUP8",
									"source": 7
								},
								{
									"begin": 6712,
									"end": 6731,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6706,
									"end": 6732,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6697,
									"end": 6732,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "tag",
									"source": 7,
									"value": "152"
								},
								{
									"begin": 6669,
									"end": 6746,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6832,
									"end": 6838,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6825,
									"end": 6830,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "70"
								},
								{
									"begin": 6772,
									"end": 6839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "tag",
									"source": 7,
									"value": "153"
								},
								{
									"begin": 6772,
									"end": 6839,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6766,
									"end": 6770,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6759,
									"end": 6840,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6628,
									"end": 6850,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "tag",
									"source": 7,
									"value": "151"
								},
								{
									"begin": 5993,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6045,
									"end": 6049,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6041,
									"end": 6050,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 6033,
									"end": 6039,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6029,
									"end": 6051,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6111,
									"end": 6115,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "56"
								},
								{
									"begin": 6079,
									"end": 6116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "tag",
									"source": 7,
									"value": "154"
								},
								{
									"begin": 6079,
									"end": 6116,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6138,
									"end": 6139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6166,
									"end": 6173,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6163,
									"end": 6164,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6160,
									"end": 6174,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6245,
									"end": 6254,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6240,
									"end": 6243,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6236,
									"end": 6255,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6230,
									"end": 6256,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6222,
									"end": 6228,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6215,
									"end": 6257,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6296,
									"end": 6297,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6288,
									"end": 6294,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6284,
									"end": 6298,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6274,
									"end": 6298,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6343,
									"end": 6345,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6332,
									"end": 6341,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 6328,
									"end": 6346,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 6315,
									"end": 6346,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6189,
									"end": 6193,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 6186,
									"end": 6187,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6182,
									"end": 6194,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 6177,
									"end": 6194,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "155"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "tag",
									"source": 7,
									"value": "157"
								},
								{
									"begin": 6152,
									"end": 6360,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6388,
									"end": 6394,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 6379,
									"end": 6386,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6376,
									"end": 6395,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 6446,
									"end": 6455,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 6441,
									"end": 6444,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6437,
									"end": 6456,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6431,
									"end": 6457,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6531,
									"end": 6535,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 6523,
									"end": 6529,
									"name": "DUP10",
									"source": 7
								},
								{
									"begin": 6519,
									"end": 6536,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 6508,
									"end": 6517,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "69"
								},
								{
									"begin": 6489,
									"end": 6537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "tag",
									"source": 7,
									"value": "159"
								},
								{
									"begin": 6489,
									"end": 6537,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6481,
									"end": 6487,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 6474,
									"end": 6538,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6396,
									"end": 6552,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "tag",
									"source": 7,
									"value": "158"
								},
								{
									"begin": 6373,
									"end": 6552,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6598,
									"end": 6599,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 6594,
									"end": 6595,
									"name": "PUSH",
									"source": 7,
									"value": "2"
								},
								{
									"begin": 6586,
									"end": 6592,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6582,
									"end": 6596,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 6578,
									"end": 6600,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 6572,
									"end": 6576,
									"name": "DUP9",
									"source": 7
								},
								{
									"begin": 6565,
									"end": 6601,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6000,
									"end": 6611,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "tag",
									"source": 7,
									"value": "150"
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 5963,
									"end": 6850,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5553,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5461,
									"end": 6856,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 5461,
									"end": 6856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "tag",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6967,
									"end": 6972,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "49"
								},
								{
									"begin": 6949,
									"end": 6973,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "tag",
									"source": 7,
									"value": "161"
								},
								{
									"begin": 6949,
									"end": 6973,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6944,
									"end": 6947,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 6937,
									"end": 6974,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6980,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6862,
									"end": 6980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7079,
									"end": 7083,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7117,
									"end": 7119,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7106,
									"end": 7115,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7102,
									"end": 7120,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7094,
									"end": 7120,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7198,
									"end": 7199,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7187,
									"end": 7196,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7183,
									"end": 7200,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7174,
									"end": 7180,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 7130,
									"end": 7201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "tag",
									"source": 7,
									"value": "163"
								},
								{
									"begin": 7130,
									"end": 7201,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 6986,
									"end": 7208,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7214,
									"end": 7383,
									"name": "tag",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7214,
									"end": 7383,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7298,
									"end": 7309,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7332,
									"end": 7338,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7327,
									"end": 7330,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7320,
									"end": 7339,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7372,
									"end": 7376,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7367,
									"end": 7370,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7363,
									"end": 7377,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7348,
									"end": 7377,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7348,
									"end": 7377,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7214,
									"end": 7383,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 7214,
									"end": 7383,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7214,
									"end": 7383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7214,
									"end": 7383,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7214,
									"end": 7383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7389,
									"end": 7560,
									"name": "tag",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7389,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7529,
									"end": 7552,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C69642066656520726563697069656E740000000000000000000000"
								},
								{
									"begin": 7525,
									"end": 7526,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7517,
									"end": 7523,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7513,
									"end": 7527,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7506,
									"end": 7553,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 7389,
									"end": 7560,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7389,
									"end": 7560,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7566,
									"end": 7932,
									"name": "tag",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 7566,
									"end": 7932,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7708,
									"end": 7711,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 7729,
									"end": 7796,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7793,
									"end": 7795,
									"name": "PUSH",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 7788,
									"end": 7791,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 7729,
									"end": 7796,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "72"
								},
								{
									"begin": 7729,
									"end": 7796,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7729,
									"end": 7796,
									"name": "tag",
									"source": 7,
									"value": "167"
								},
								{
									"begin": 7729,
									"end": 7796,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7722,
									"end": 7796,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7722,
									"end": 7796,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7894,
									"end": 7897,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7898,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 7805,
									"end": 7898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7805,
									"end": 7898,
									"name": "tag",
									"source": 7,
									"value": "168"
								},
								{
									"begin": 7805,
									"end": 7898,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 7923,
									"end": 7925,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7918,
									"end": 7921,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 7914,
									"end": 7926,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 7907,
									"end": 7926,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7907,
									"end": 7926,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7566,
									"end": 7932,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7566,
									"end": 7932,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7566,
									"end": 7932,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7566,
									"end": 7932,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7938,
									"end": 8357,
									"name": "tag",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 7938,
									"end": 8357,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8104,
									"end": 8108,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8142,
									"end": 8144,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 8131,
									"end": 8140,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8127,
									"end": 8145,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8119,
									"end": 8145,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8119,
									"end": 8145,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8191,
									"end": 8200,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8185,
									"end": 8189,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8181,
									"end": 8201,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 8177,
									"end": 8178,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8166,
									"end": 8175,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8162,
									"end": 8179,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8155,
									"end": 8202,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8219,
									"end": 8350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8345,
									"end": 8349,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8219,
									"end": 8350,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "74"
								},
								{
									"begin": 8219,
									"end": 8350,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8219,
									"end": 8350,
									"name": "tag",
									"source": 7,
									"value": "170"
								},
								{
									"begin": 8219,
									"end": 8350,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8211,
									"end": 8350,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8211,
									"end": 8350,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7938,
									"end": 8357,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7938,
									"end": 8357,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7938,
									"end": 8357,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7938,
									"end": 8357,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8363,
									"end": 8543,
									"name": "tag",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 8363,
									"end": 8543,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8411,
									"end": 8488,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8408,
									"end": 8409,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8401,
									"end": 8489,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8508,
									"end": 8512,
									"name": "PUSH",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 8505,
									"end": 8506,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 8498,
									"end": 8513,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8532,
									"end": 8536,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 8529,
									"end": 8530,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8522,
									"end": 8537,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8740,
									"name": "tag",
									"source": 7,
									"value": "33"
								},
								{
									"begin": 8549,
									"end": 8740,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 8608,
									"end": 8628,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8626,
									"end": 8627,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8608,
									"end": 8628,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8608,
									"end": 8628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8608,
									"end": 8628,
									"name": "tag",
									"source": 7,
									"value": "173"
								},
								{
									"begin": 8608,
									"end": 8628,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8603,
									"end": 8628,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8603,
									"end": 8628,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8642,
									"end": 8662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8660,
									"end": 8661,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 8642,
									"end": 8662,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8642,
									"end": 8662,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8642,
									"end": 8662,
									"name": "tag",
									"source": 7,
									"value": "174"
								},
								{
									"begin": 8642,
									"end": 8662,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8637,
									"end": 8662,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8637,
									"end": 8662,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8685,
									"end": 8686,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8682,
									"end": 8683,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8678,
									"end": 8687,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 8671,
									"end": 8687,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 8671,
									"end": 8687,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8706,
									"end": 8709,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 8703,
									"end": 8704,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8700,
									"end": 8710,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 8697,
									"end": 8733,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 8697,
									"end": 8733,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8697,
									"end": 8733,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 8713,
									"end": 8731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8713,
									"end": 8731,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "75"
								},
								{
									"begin": 8713,
									"end": 8731,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8713,
									"end": 8731,
									"name": "tag",
									"source": 7,
									"value": "176"
								},
								{
									"begin": 8713,
									"end": 8731,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8697,
									"end": 8733,
									"name": "tag",
									"source": 7,
									"value": "175"
								},
								{
									"begin": 8697,
									"end": 8733,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8740,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8740,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8740,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8740,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8549,
									"end": 8740,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8746,
									"end": 8864,
									"name": "tag",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 8746,
									"end": 8864,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8833,
									"end": 8857,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8851,
									"end": 8856,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 8833,
									"end": 8857,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "45"
								},
								{
									"begin": 8833,
									"end": 8857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8833,
									"end": 8857,
									"name": "tag",
									"source": 7,
									"value": "178"
								},
								{
									"begin": 8833,
									"end": 8857,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8828,
									"end": 8831,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 8821,
									"end": 8858,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 8746,
									"end": 8864,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8746,
									"end": 8864,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8746,
									"end": 8864,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 8870,
									"end": 9312,
									"name": "tag",
									"source": 7,
									"value": "37"
								},
								{
									"begin": 8870,
									"end": 9312,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9019,
									"end": 9023,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9057,
									"end": 9059,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 9046,
									"end": 9055,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9042,
									"end": 9060,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9034,
									"end": 9060,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9034,
									"end": 9060,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9070,
									"end": 9141,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 9138,
									"end": 9139,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9127,
									"end": 9136,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9123,
									"end": 9140,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9114,
									"end": 9120,
									"name": "DUP7",
									"source": 7
								},
								{
									"begin": 9070,
									"end": 9141,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "71"
								},
								{
									"begin": 9070,
									"end": 9141,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9070,
									"end": 9141,
									"name": "tag",
									"source": 7,
									"value": "180"
								},
								{
									"begin": 9070,
									"end": 9141,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9151,
									"end": 9223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 9219,
									"end": 9221,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9208,
									"end": 9217,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9204,
									"end": 9222,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9195,
									"end": 9201,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 9151,
									"end": 9223,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9151,
									"end": 9223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9151,
									"end": 9223,
									"name": "tag",
									"source": 7,
									"value": "181"
								},
								{
									"begin": 9151,
									"end": 9223,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9233,
									"end": 9305,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 9301,
									"end": 9303,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 9290,
									"end": 9299,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9286,
									"end": 9304,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9277,
									"end": 9283,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9233,
									"end": 9305,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9233,
									"end": 9305,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9233,
									"end": 9305,
									"name": "tag",
									"source": 7,
									"value": "182"
								},
								{
									"begin": 9233,
									"end": 9305,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 8870,
									"end": 9312,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 8870,
									"end": 9312,
									"name": "SWAP4",
									"source": 7
								},
								{
									"begin": 8870,
									"end": 9312,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8870,
									"end": 9312,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8870,
									"end": 9312,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8870,
									"end": 9312,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 8870,
									"end": 9312,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9318,
									"end": 9540,
									"name": "tag",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 9318,
									"end": 9540,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9411,
									"end": 9415,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9449,
									"end": 9451,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 9438,
									"end": 9447,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 9434,
									"end": 9452,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9426,
									"end": 9452,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 9426,
									"end": 9452,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9462,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 9530,
									"end": 9531,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 9519,
									"end": 9528,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 9515,
									"end": 9532,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 9506,
									"end": 9512,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 9462,
									"end": 9533,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "76"
								},
								{
									"begin": 9462,
									"end": 9533,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 9462,
									"end": 9533,
									"name": "tag",
									"source": 7,
									"value": "184"
								},
								{
									"begin": 9462,
									"end": 9533,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 9318,
									"end": 9540,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 9318,
									"end": 9540,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 9318,
									"end": 9540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9318,
									"end": 9540,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 9318,
									"end": 9540,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 4459,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220983b22c4b31d72784086e6554d050f636bcd344312a020a4149eb94bd4a2bf8e64736f6c634300081d0033",
									".code": [
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "58A3A1C3"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "A5F408B4"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "A5F408B4"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "DD62ED3E"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "E74B981B"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "58A3A1C3"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "95D89B41"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "309E7319"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "313CE567"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "42B53E5F"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "46904840"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "6FDDE03"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "95EA7B3"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "18160DDD"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "230ED44A"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 386,
											"end": 4459,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 752,
											"end": 777,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 752,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 752,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 752,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4027,
											"end": 4457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4027,
											"end": 4457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 4027,
											"end": 4457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3084,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3084,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3084,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2763,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2763,
											"end": 3003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 822,
											"end": 849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 822,
											"end": 849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 2035,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2035,
											"end": 2321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 2370,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2370,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 3549,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3549,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 3549,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 1767,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1767,
											"end": 1995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 752,
											"end": 777,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 752,
											"end": 777,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 752,
											"end": 777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4141,
											"end": 4152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4171,
											"end": 4177,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4155,
											"end": 4178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4155,
											"end": 4178,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4155,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4141,
											"end": 4178,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4217,
											"end": 4220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4214,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4208,
											"end": 4220,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4208,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4208,
											"end": 4220,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4208,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4220,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4188,
											"end": 4220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4302,
											"end": 4308,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4324,
											"end": 4327,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4301,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4283,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4328,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4283,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4283,
											"end": 4328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4429,
											"end": 4438,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4440,
											"end": 4449,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4402,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4402,
											"end": 4450,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4402,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4450,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4395,
											"end": 4450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4027,
											"end": 4457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3146,
											"end": 3157,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3187,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3174,
											"end": 3187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3174,
											"end": 3187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3201,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3193,
											"end": 3208,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3208,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3248,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3259,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3260,
											"end": 3261,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 3251,
											"end": 3262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3251,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3229,
											"end": 3262,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3294,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3290,
											"end": 3304,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3286,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3304,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3304,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3327,
											"end": 3328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3309,
											"end": 3313,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3323,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3309,
											"end": 3323,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3323,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3328,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3309,
											"end": 3356,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3346,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3342,
											"end": 3356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3342,
											"end": 3356,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3338,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3356,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3332,
											"end": 3356,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3309,
											"end": 3356,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 3309,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3280,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3428,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3276,
											"end": 3428,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3408,
											"end": 3413,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3404,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3391,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3385,
											"end": 3404,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3404,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 3385,
											"end": 3404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3385,
											"end": 3404,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3385,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 3384,
											"end": 3413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 3384,
											"end": 3413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3377,
											"end": 3413,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3276,
											"end": 3428,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 3276,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3215,
											"end": 3438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3213,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3438,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3454,
											"end": 3455,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2846,
											"end": 2854,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2846,
											"end": 2861,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2861,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2861,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2846,
											"end": 2861,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2838,
											"end": 2843,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2838,
											"end": 2861,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2830,
											"end": 2879,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2830,
											"end": 2879,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2915,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2934,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2916,
											"end": 2924,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2916,
											"end": 2931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2931,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2931,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2935,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2935,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2916,
											"end": 2935,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2935,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2916,
											"end": 2935,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2907,
											"end": 2936,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2907,
											"end": 2936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2898,
											"end": 2903,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2889,
											"end": 2904,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2904,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2889,
											"end": 2936,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2954,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 2946,
											"end": 2960,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2960,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2990,
											"end": 2995,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2B4584016031D9A0D1FC722A5F384F606370058BFCC1354C24264DBD139D67DA"
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2763,
											"end": 3003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 822,
											"end": 849,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 822,
											"end": 849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2154,
											"end": 2159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 2145,
											"end": 2150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2159,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2159,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2137,
											"end": 2176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 2137,
											"end": 2176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2208,
											"end": 2217,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2228,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2230,
											"end": 2235,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2237,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2283,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2265,
											"end": 2273,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2265,
											"end": 2280,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2280,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2280,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2265,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2284,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 2265,
											"end": 2284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2265,
											"end": 2284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 2265,
											"end": 2284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "37A23E54E8CF606C8CCD70367D9F32D3578F972BB538E67E0C5C08F26C9DFC19"
										},
										{
											"begin": 2286,
											"end": 2295,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2297,
											"end": 2306,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2308,
											"end": 2313,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2252,
											"end": 2314,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2252,
											"end": 2314,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2035,
											"end": 2321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2514,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2506,
											"end": 2521,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2521,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2506,
											"end": 2521,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2503,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2498,
											"end": 2521,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2490,
											"end": 2539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 2490,
											"end": 2539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2566,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 2557,
											"end": 2562,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2571,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2571,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 2549,
											"end": 2588,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 2549,
											"end": 2588,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2624,
											"end": 2633,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2635,
											"end": 2644,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2646,
											"end": 2651,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2607,
											"end": 2612,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 2598,
											"end": 2613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2613,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2682,
											"end": 2687,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "BB15785662E808C63EFC6A05274CE9A7CB01B854B603DB64F663B880234DD2FE"
										},
										{
											"begin": 2689,
											"end": 2698,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2700,
											"end": 2709,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2716,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2667,
											"end": 2717,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2667,
											"end": 2717,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3627,
											"end": 3631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3643,
											"end": 3654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 3657,
											"end": 3680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3680,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 3657,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3643,
											"end": 3680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3707,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3722,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3716,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3710,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3722,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3690,
											"end": 3722,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3816,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3784,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3817,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 3784,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3817,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3919,
											"end": 3928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 3893,
											"end": 3929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 3929,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 3893,
											"end": 3929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3929,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3886,
											"end": 3929,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1875,
											"end": 1876,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1851,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1863,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1851,
											"end": 1877,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1851,
											"end": 1877,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 1843,
											"end": 1903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 1843,
											"end": 1903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1928,
											"end": 1940,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1913,
											"end": 1925,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1913,
											"end": 1940,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7A7B5A0A132F9E0581EB8527F66EAE9EE89C2A3E79D4AC7E41A1F1F4D48A7FC2"
										},
										{
											"begin": 1975,
											"end": 1987,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1955,
											"end": 1988,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1955,
											"end": 1988,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10599,
											"end": 10616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10580,
											"end": 10616,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10655,
											"end": 10660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10636,
											"end": 10660,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10714,
											"end": 10721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10723,
											"end": 10739,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10741,
											"end": 10746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 10687,
											"end": 10747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10687,
											"end": 10747,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 10632,
											"end": 10762,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10812,
											"end": 10817,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10826,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10847,
											"end": 10852,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10852,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10854,
											"end": 10859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10803,
											"end": 10811,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 10803,
											"end": 10860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 10803,
											"end": 10860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "tag",
											"source": 2,
											"value": "239"
										},
										{
											"begin": 10576,
											"end": 10885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10504,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10415,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3801,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3787,
											"end": 3796,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3785,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3774,
											"end": 3797,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3770,
											"end": 3802,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 3805,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 3805,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3767,
											"end": 3886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3925,
											"end": 3926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3995,
											"end": 4002,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3986,
											"end": 3992,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 3984,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3971,
											"end": 3993,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 3950,
											"end": 4003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 3950,
											"end": 4003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3940,
											"end": 4003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3896,
											"end": 4013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3691,
											"end": 4020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4175,
											"end": 4179,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4202,
											"end": 4211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4198,
											"end": 4216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4216,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4190,
											"end": 4216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4294,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4283,
											"end": 4292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4270,
											"end": 4276,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4226,
											"end": 4297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4226,
											"end": 4297,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4226,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4375,
											"end": 4377,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4364,
											"end": 4373,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4360,
											"end": 4378,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4351,
											"end": 4357,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4379,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4307,
											"end": 4379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4307,
											"end": 4379,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4307,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 4457,
											"end": 4459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4446,
											"end": 4455,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4442,
											"end": 4460,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4389,
											"end": 4461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4461,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 4389,
											"end": 4461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4468,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4551,
											"end": 4557,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4559,
											"end": 4565,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4616,
											"end": 4618,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4602,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4591,
											"end": 4614,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4587,
											"end": 4619,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4622,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4622,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4622,
											"end": 4701,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4622,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4584,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4742,
											"end": 4743,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4812,
											"end": 4819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4803,
											"end": 4809,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4792,
											"end": 4801,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4788,
											"end": 4810,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4767,
											"end": 4820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4767,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4820,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4757,
											"end": 4820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4713,
											"end": 4830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 4871,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4931,
											"end": 4937,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4920,
											"end": 4929,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4916,
											"end": 4938,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 4895,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4840,
											"end": 4958,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 5068,
											"end": 5075,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5059,
											"end": 5065,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 5023,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5076,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5013,
											"end": 5076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4968,
											"end": 5086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 5093,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4474,
											"end": 5093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5185,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5099,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5134,
											"end": 5141,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5174,
											"end": 5178,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5167,
											"end": 5172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5163,
											"end": 5179,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5152,
											"end": 5179,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5185,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5185,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5185,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5303,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 5191,
											"end": 5303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5290,
											"end": 5295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 5274,
											"end": 5296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5274,
											"end": 5296,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 5274,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5272,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5262,
											"end": 5297,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5191,
											"end": 5303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5523,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 5309,
											"end": 5523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5398,
											"end": 5402,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5434,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5439,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5413,
											"end": 5439,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5449,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5513,
											"end": 5514,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5502,
											"end": 5511,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5489,
											"end": 5495,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5449,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 5449,
											"end": 5516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5449,
											"end": 5516,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 5449,
											"end": 5516,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5523,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5523,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5309,
											"end": 5523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5647,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5529,
											"end": 5647,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5634,
											"end": 5639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5640,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5616,
											"end": 5640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5616,
											"end": 5640,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 5616,
											"end": 5640,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5611,
											"end": 5614,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5604,
											"end": 5641,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5529,
											"end": 5647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5875,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 5653,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5786,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5773,
											"end": 5782,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5769,
											"end": 5787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5761,
											"end": 5787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5865,
											"end": 5866,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5854,
											"end": 5863,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5850,
											"end": 5867,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5841,
											"end": 5847,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 5797,
											"end": 5868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5797,
											"end": 5868,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 5797,
											"end": 5868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5875,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5875,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5653,
											"end": 5875,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 6500,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 5881,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5958,
											"end": 5964,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5966,
											"end": 5972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5980,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6002,
											"end": 6009,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6021,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5994,
											"end": 6026,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 6029,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 6029,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 5991,
											"end": 6110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6149,
											"end": 6150,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6210,
											"end": 6216,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6199,
											"end": 6208,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6195,
											"end": 6217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6174,
											"end": 6227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 6174,
											"end": 6227,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6227,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6120,
											"end": 6237,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6276,
											"end": 6278,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 6347,
											"end": 6354,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6338,
											"end": 6344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6327,
											"end": 6336,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6323,
											"end": 6345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6302,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 6302,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6355,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6292,
											"end": 6355,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6365,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6404,
											"end": 6406,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6430,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 6475,
											"end": 6482,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6466,
											"end": 6472,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6455,
											"end": 6464,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6451,
											"end": 6473,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6430,
											"end": 6483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6430,
											"end": 6483,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 6430,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6420,
											"end": 6483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6375,
											"end": 6493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 6500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 6500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 6500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 6500,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 6500,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 6500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6835,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 6506,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6614,
											"end": 6616,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6602,
											"end": 6611,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6600,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6589,
											"end": 6612,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6585,
											"end": 6617,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6620,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 6620,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 6620,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6620,
											"end": 6699,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 6620,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 6582,
											"end": 6701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6740,
											"end": 6741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6765,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6810,
											"end": 6817,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6807,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6790,
											"end": 6799,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6786,
											"end": 6808,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 6765,
											"end": 6818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6765,
											"end": 6818,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 6765,
											"end": 6818,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6818,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6755,
											"end": 6818,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6711,
											"end": 6828,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6506,
											"end": 6835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6927,
											"end": 6933,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6935,
											"end": 6941,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6949,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6951,
											"end": 6957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7000,
											"end": 7003,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 6988,
											"end": 6997,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 6986,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6975,
											"end": 6998,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6971,
											"end": 7004,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7088,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7088,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6968,
											"end": 7088,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7007,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 7007,
											"end": 7086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7007,
											"end": 7086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7007,
											"end": 7086,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 7007,
											"end": 7086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6968,
											"end": 7088,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 6968,
											"end": 7088,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7127,
											"end": 7128,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 7197,
											"end": 7204,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7188,
											"end": 7194,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7177,
											"end": 7186,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7173,
											"end": 7195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7152,
											"end": 7205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7152,
											"end": 7205,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 7152,
											"end": 7205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7142,
											"end": 7205,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7142,
											"end": 7205,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7098,
											"end": 7215,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7254,
											"end": 7256,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7280,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 7325,
											"end": 7332,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7316,
											"end": 7322,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7305,
											"end": 7314,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7301,
											"end": 7323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7280,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7280,
											"end": 7333,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 7280,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7333,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7270,
											"end": 7333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7225,
											"end": 7343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7382,
											"end": 7384,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7408,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7453,
											"end": 7460,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7433,
											"end": 7442,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7429,
											"end": 7451,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7408,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7408,
											"end": 7461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7408,
											"end": 7461,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 7408,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7398,
											"end": 7461,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7398,
											"end": 7461,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7353,
											"end": 7471,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7510,
											"end": 7512,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7536,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7581,
											"end": 7588,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7572,
											"end": 7578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7561,
											"end": 7570,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7557,
											"end": 7579,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7536,
											"end": 7589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7536,
											"end": 7589,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 7536,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7589,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7526,
											"end": 7589,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7481,
											"end": 7599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6841,
											"end": 7606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 8086,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 7612,
											"end": 8086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7680,
											"end": 7686,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7737,
											"end": 7739,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7725,
											"end": 7734,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7716,
											"end": 7723,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7712,
											"end": 7735,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7740,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 7705,
											"end": 7824,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7705,
											"end": 7824,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 7705,
											"end": 7824,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7743,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 7743,
											"end": 7822,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 7743,
											"end": 7822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7743,
											"end": 7822,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 7743,
											"end": 7822,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7705,
											"end": 7824,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 7705,
											"end": 7824,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7864,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7888,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 7933,
											"end": 7940,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7924,
											"end": 7930,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7913,
											"end": 7922,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7909,
											"end": 7931,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 7941,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 7888,
											"end": 7941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7888,
											"end": 7941,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 7888,
											"end": 7941,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 7941,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7878,
											"end": 7941,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7834,
											"end": 7951,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7990,
											"end": 7992,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8016,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 8061,
											"end": 8068,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8052,
											"end": 8058,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8037,
											"end": 8059,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8016,
											"end": 8069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8016,
											"end": 8069,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 8016,
											"end": 8069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8069,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8006,
											"end": 8069,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7961,
											"end": 8079,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 8086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 8086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 8086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 8086,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 8086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7612,
											"end": 8086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8092,
											"end": 8272,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 8092,
											"end": 8272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8140,
											"end": 8217,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8137,
											"end": 8138,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8130,
											"end": 8218,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8237,
											"end": 8241,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 8234,
											"end": 8235,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8227,
											"end": 8242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8261,
											"end": 8265,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8258,
											"end": 8259,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8251,
											"end": 8266,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8598,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 8278,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8322,
											"end": 8328,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8359,
											"end": 8360,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 8353,
											"end": 8357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8349,
											"end": 8361,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8339,
											"end": 8361,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8339,
											"end": 8361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8406,
											"end": 8407,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8400,
											"end": 8404,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8396,
											"end": 8408,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8427,
											"end": 8445,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 8417,
											"end": 8498,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8483,
											"end": 8487,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 8475,
											"end": 8481,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8471,
											"end": 8488,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8488,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8461,
											"end": 8488,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8417,
											"end": 8498,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 8417,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8545,
											"end": 8547,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8537,
											"end": 8543,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8534,
											"end": 8548,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 8514,
											"end": 8532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8549,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8508,
											"end": 8592,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 8508,
											"end": 8592,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 8564,
											"end": 8582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 8564,
											"end": 8582,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8508,
											"end": 8592,
											"name": "tag",
											"source": 7,
											"value": "382"
										},
										{
											"begin": 8508,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8329,
											"end": 8598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8598,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8278,
											"end": 8598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8604,
											"end": 8784,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 8604,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8652,
											"end": 8729,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8730,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8739,
											"end": 8754,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8773,
											"end": 8777,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8770,
											"end": 8771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8778,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8850,
											"end": 8870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8850,
											"end": 8870,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 8850,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8845,
											"end": 8870,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8845,
											"end": 8870,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 8902,
											"end": 8903,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8884,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8904,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8879,
											"end": 8904,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8928,
											"end": 8929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8925,
											"end": 8926,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8921,
											"end": 8930,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8943,
											"end": 8954,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 8957,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8790,
											"end": 8984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 9170,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 8990,
											"end": 9170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9038,
											"end": 9115,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9035,
											"end": 9036,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9028,
											"end": 9116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9135,
											"end": 9139,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 9132,
											"end": 9133,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9125,
											"end": 9140,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9159,
											"end": 9163,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9156,
											"end": 9157,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9149,
											"end": 9164,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9176,
											"end": 9586,
											"name": "tag",
											"source": 7,
											"value": "135"
										},
										{
											"begin": 9176,
											"end": 9586,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9216,
											"end": 9223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 9257,
											"end": 9258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9239,
											"end": 9259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9234,
											"end": 9259,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9234,
											"end": 9259,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 9291,
											"end": 9292,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9293,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9273,
											"end": 9293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9273,
											"end": 9293,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 9273,
											"end": 9293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9293,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9268,
											"end": 9293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9328,
											"end": 9329,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9326,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9321,
											"end": 9330,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 9368,
											"end": 9379,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9380,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9350,
											"end": 9380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9350,
											"end": 9380,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 9350,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9380,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9339,
											"end": 9380,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9529,
											"end": 9530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9520,
											"end": 9527,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9516,
											"end": 9531,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9513,
											"end": 9514,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9532,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9490,
											"end": 9491,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9483,
											"end": 9492,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9463,
											"end": 9546,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9440,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 9440,
											"end": 9579,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 9559,
											"end": 9577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 9559,
											"end": 9577,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9440,
											"end": 9579,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 9440,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9224,
											"end": 9586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9176,
											"end": 9586,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9176,
											"end": 9586,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9176,
											"end": 9586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9176,
											"end": 9586,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9176,
											"end": 9586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9592,
											"end": 9772,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9592,
											"end": 9772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9640,
											"end": 9717,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9637,
											"end": 9638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9630,
											"end": 9718,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9741,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9727,
											"end": 9742,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9761,
											"end": 9765,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 9758,
											"end": 9759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9751,
											"end": 9766,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9963,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 9778,
											"end": 9963,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9818,
											"end": 9819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9835,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 9853,
											"end": 9854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9835,
											"end": 9855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9835,
											"end": 9855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9835,
											"end": 9855,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 9835,
											"end": 9855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9830,
											"end": 9855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 9887,
											"end": 9888,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 9869,
											"end": 9889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9869,
											"end": 9889,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 9869,
											"end": 9889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9889,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9908,
											"end": 9909,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 9898,
											"end": 9933,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9913,
											"end": 9931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9898,
											"end": 9933,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 9898,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 9956,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9952,
											"end": 9953,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9948,
											"end": 9957,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 9943,
											"end": 9957,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9943,
											"end": 9957,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9963,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9963,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9963,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9778,
											"end": 9963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9969,
											"end": 10132,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 9969,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10109,
											"end": 10124,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420696E64657800000000000000000000000000000000000000"
										},
										{
											"begin": 10105,
											"end": 10106,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10097,
											"end": 10103,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10093,
											"end": 10107,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10086,
											"end": 10125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9969,
											"end": 10132,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9969,
											"end": 10132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10504,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 10138,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10280,
											"end": 10283,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10301,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 10365,
											"end": 10367,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 10360,
											"end": 10363,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 10301,
											"end": 10368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10301,
											"end": 10368,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 10301,
											"end": 10368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10294,
											"end": 10368,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10294,
											"end": 10368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10377,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 10466,
											"end": 10469,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10377,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 10377,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10377,
											"end": 10470,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 10377,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10495,
											"end": 10497,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10490,
											"end": 10493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10498,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10498,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10479,
											"end": 10498,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10504,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10504,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10504,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10138,
											"end": 10504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10510,
											"end": 10929,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 10510,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10676,
											"end": 10680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10714,
											"end": 10716,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10703,
											"end": 10712,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10699,
											"end": 10717,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10691,
											"end": 10717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10763,
											"end": 10772,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10753,
											"end": 10773,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10749,
											"end": 10750,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10747,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 10751,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10727,
											"end": 10774,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10791,
											"end": 10922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 10917,
											"end": 10921,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10791,
											"end": 10922,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 10791,
											"end": 10922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10791,
											"end": 10922,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 10791,
											"end": 10922,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 10922,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10783,
											"end": 10922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10510,
											"end": 10929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10510,
											"end": 10929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10510,
											"end": 10929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10510,
											"end": 10929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10935,
											"end": 11115,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10935,
											"end": 11115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10983,
											"end": 11060,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10980,
											"end": 10981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10973,
											"end": 11061,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11080,
											"end": 11084,
											"name": "PUSH",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11070,
											"end": 11085,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11104,
											"end": 11108,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11101,
											"end": 11102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11094,
											"end": 11109,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11283,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 11121,
											"end": 11283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11261,
											"end": 11275,
											"name": "PUSH",
											"source": 7,
											"value": "46656520746F6F20686967680000000000000000000000000000000000000000"
										},
										{
											"begin": 11257,
											"end": 11258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11249,
											"end": 11255,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11245,
											"end": 11259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11238,
											"end": 11276,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11283,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11121,
											"end": 11283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11655,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11289,
											"end": 11655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11452,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11516,
											"end": 11518,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 11511,
											"end": 11514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11452,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 11452,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11452,
											"end": 11519,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11452,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11519,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11528,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 11617,
											"end": 11620,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11528,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 11528,
											"end": 11621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11528,
											"end": 11621,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 11528,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11648,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11641,
											"end": 11644,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11637,
											"end": 11649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11630,
											"end": 11649,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11630,
											"end": 11649,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11655,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11655,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11655,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11289,
											"end": 11655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11661,
											"end": 12080,
											"name": "tag",
											"source": 7,
											"value": "162"
										},
										{
											"begin": 11661,
											"end": 12080,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11827,
											"end": 11831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11865,
											"end": 11867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11854,
											"end": 11863,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11850,
											"end": 11868,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11842,
											"end": 11868,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11842,
											"end": 11868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11914,
											"end": 11923,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11908,
											"end": 11912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11904,
											"end": 11924,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11900,
											"end": 11901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11889,
											"end": 11898,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11885,
											"end": 11902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11878,
											"end": 11925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 12068,
											"end": 12072,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 12073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 11942,
											"end": 12073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11942,
											"end": 12073,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 11942,
											"end": 12073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11934,
											"end": 12073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11934,
											"end": 12073,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11661,
											"end": 12080,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11661,
											"end": 12080,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11661,
											"end": 12080,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11661,
											"end": 12080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12086,
											"end": 12257,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12086,
											"end": 12257,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12226,
											"end": 12249,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C69642066656520726563697069656E740000000000000000000000"
										},
										{
											"begin": 12222,
											"end": 12223,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12214,
											"end": 12220,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12210,
											"end": 12224,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12203,
											"end": 12250,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12086,
											"end": 12257,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12086,
											"end": 12257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12629,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 12263,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12405,
											"end": 12408,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12426,
											"end": 12493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 12490,
											"end": 12492,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 12485,
											"end": 12488,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 12426,
											"end": 12493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12426,
											"end": 12493,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 12426,
											"end": 12493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12419,
											"end": 12493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12419,
											"end": 12493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 12591,
											"end": 12594,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12595,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 12502,
											"end": 12595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12502,
											"end": 12595,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 12502,
											"end": 12595,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12620,
											"end": 12622,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12615,
											"end": 12618,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12611,
											"end": 12623,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12604,
											"end": 12623,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12604,
											"end": 12623,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12629,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12629,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12629,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12263,
											"end": 12629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13054,
											"name": "tag",
											"source": 7,
											"value": "202"
										},
										{
											"begin": 12635,
											"end": 13054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12801,
											"end": 12805,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12839,
											"end": 12841,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12828,
											"end": 12837,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12824,
											"end": 12842,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12816,
											"end": 12842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12816,
											"end": 12842,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12888,
											"end": 12897,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12882,
											"end": 12886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12878,
											"end": 12898,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12874,
											"end": 12875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12863,
											"end": 12872,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12859,
											"end": 12876,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12852,
											"end": 12899,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12916,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 13042,
											"end": 13046,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12916,
											"end": 13047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 12916,
											"end": 13047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12916,
											"end": 13047,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 12916,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 13047,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 13047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13054,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13054,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13054,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12635,
											"end": 13054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13502,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 13060,
											"end": 13502,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13209,
											"end": 13213,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13247,
											"end": 13249,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13236,
											"end": 13245,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13232,
											"end": 13250,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13224,
											"end": 13250,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13224,
											"end": 13250,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13260,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 13328,
											"end": 13329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13317,
											"end": 13326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13313,
											"end": 13330,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13304,
											"end": 13310,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13260,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 13260,
											"end": 13331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13260,
											"end": 13331,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 13260,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13341,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 13409,
											"end": 13411,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13398,
											"end": 13407,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13394,
											"end": 13412,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13385,
											"end": 13391,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 13341,
											"end": 13413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 13341,
											"end": 13413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13341,
											"end": 13413,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 13341,
											"end": 13413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13423,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 13491,
											"end": 13493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13480,
											"end": 13489,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13476,
											"end": 13494,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13467,
											"end": 13473,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 13423,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 13423,
											"end": 13495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13423,
											"end": 13495,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 13423,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13502,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13502,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13502,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13060,
											"end": 13502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13508,
											"end": 13699,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 13508,
											"end": 13699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13548,
											"end": 13551,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13567,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 13585,
											"end": 13586,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13587,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 13567,
											"end": 13587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13567,
											"end": 13587,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 13567,
											"end": 13587,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13562,
											"end": 13587,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13562,
											"end": 13587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13601,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 13619,
											"end": 13620,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13601,
											"end": 13621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 13601,
											"end": 13621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13601,
											"end": 13621,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 13601,
											"end": 13621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13596,
											"end": 13621,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13596,
											"end": 13621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13644,
											"end": 13645,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13641,
											"end": 13642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13637,
											"end": 13646,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13630,
											"end": 13646,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13630,
											"end": 13646,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13665,
											"end": 13668,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 13662,
											"end": 13663,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13659,
											"end": 13669,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13656,
											"end": 13692,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13656,
											"end": 13692,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 13656,
											"end": 13692,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 13672,
											"end": 13690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 13672,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13656,
											"end": 13692,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 13656,
											"end": 13692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13508,
											"end": 13699,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13508,
											"end": 13699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13508,
											"end": 13699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13508,
											"end": 13699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13508,
											"end": 13699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"F/FeeTiersERC20.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addFeeTier(uint256,uint256,uint256)": "58a3a1c3",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"feeRecipient()": "46904840",
							"feeTiers(uint256)": "230ed44a",
							"getFeeForAmount(uint256)": "309e7319",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"removeFeeTier(uint256)": "42b53e5f",
							"renounceOwnership()": "715018a6",
							"setFeeRecipient(address)": "e74b981b",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"updateFeeTier(uint256,uint256,uint256,uint256)": "a5f408b4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newFeeRecipient\",\"type\":\"address\"}],\"name\":\"FeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBP\",\"type\":\"uint256\"}],\"name\":\"FeeTierAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"FeeTierRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"feeBP\",\"type\":\"uint256\"}],\"name\":\"FeeTierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBP\",\"type\":\"uint256\"}],\"name\":\"addFeeTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"feeTiers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBP\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getFeeForAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeFeeTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"setFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeBP\",\"type\":\"uint256\"}],\"name\":\"updateFeeTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 token with fee tiers. A fee is deducted on transfers based on the transfer amount. The fee is sent to a fee recipient, and the net amount is delivered to the recipient.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addFeeTier(uint256,uint256,uint256)\":{\"details\":\"Adds a new fee tier.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor initializes the token, mints initial supply, and sets the fee recipient.\",\"params\":{\"_feeRecipient\":\"Address that will receive fees.\",\"initialSupply\":\"Total token supply in the smallest unit.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getFeeForAmount(uint256)\":{\"details\":\"Returns the fee (in token units) for a given transfer amount.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFeeTier(uint256)\":{\"details\":\"Removes a fee tier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeRecipient(address)\":{\"details\":\"Allows the owner to update the fee recipient.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"Overrides transfer to deduct fee based on fee tiers.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Overrides transferFrom to deduct fee based on fee tiers.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateFeeTier(uint256,uint256,uint256,uint256)\":{\"details\":\"Updates an existing fee tier.\"}},\"title\":\"FeeTiersERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"F/FeeTiersERC20.sol\":\"FeeTiersERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x6ef9389a2c07bc40d8a7ba48914724ab2c108fac391ce12314f01321813e6368\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7a5cb39b1e6df68f4dd9a5e76e853d745a74ffb3dfd7df4ae4d2ace6992a171\",\"dweb:/ipfs/QmPbzKR19rdM8X3PLQjsmHRepUKhvoZnedSR63XyGtXZib\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"F/FeeTiersERC20.sol\":{\"keccak256\":\"0x7c3d7170b634cf43cc867f2b627e49a5df3de684d222770086e4bfa2281c64c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f720fcc2c48420f7a949af771182b053301c36046088517137c803bd3ee4703\",\"dweb:/ipfs/QmSN8H89NH52xE7qrFif69qUjqBBLF59scswNVr486U5dS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 953,
								"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
								"label": "feeTiers",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(FeeTier)949_storage)dyn_storage"
							},
							{
								"astId": 955,
								"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
								"label": "feeRecipient",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(FeeTier)949_storage)dyn_storage": {
								"base": "t_struct(FeeTier)949_storage",
								"encoding": "dynamic_array",
								"label": "struct FeeTiersERC20.FeeTier[]",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(FeeTier)949_storage": {
								"encoding": "inplace",
								"label": "struct FeeTiersERC20.FeeTier",
								"members": [
									{
										"astId": 944,
										"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
										"label": "minAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 946,
										"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
										"label": "maxAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 948,
										"contract": "F/FeeTiersERC20.sol:FeeTiersERC20",
										"label": "feeBP",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 934,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								933
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 934,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 933,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1133:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 933,
										"src": "1133:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1142:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1150:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								933
							],
							"name": "ERC20",
							"nameLocation": "1124:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1185:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1201:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1245:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1261:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1288:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1335:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1370:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1396:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1657:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1667:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1675:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1690:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1700:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1613:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1634:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:2"
									},
									"scope": 799,
									"src": "1601:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "1839:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "1856:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "1849:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1824:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:2"
									},
									"scope": 799,
									"src": "1779:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2043:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2060:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2053:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2028:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:2"
									},
									"scope": 799,
									"src": "1981:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2763:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "2773:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2756:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:2"
									},
									"scope": 799,
									"src": "2707:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2910:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "2927:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2920:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2901:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:2"
									},
									"scope": 799,
									"src": "2849:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3078:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3095:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3105:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3088:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3023:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3069:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:2"
									},
									"scope": 799,
									"src": "3004:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3390:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3400:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "3416:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3448:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3455:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3459:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3438:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3475:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3333:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3345:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3384:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:2"
									},
									"scope": 799,
									"src": "3315:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3640:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3657:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3669:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3676:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3650:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3570:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3585:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3631:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:2"
									},
									"scope": 799,
									"src": "3551:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4077:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4087:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4103:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4134:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4141:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4150:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4125:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4166:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4032:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4071:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:2"
									},
									"scope": 799,
									"src": "3998:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "4869:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "4879:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "4897:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4935:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "4941:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4950:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "4919:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "4982:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "4986:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "4966:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5002:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4798:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4812:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4824:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "4863:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:2"
									},
									"scope": 799,
									"src": "4776:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5462:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5476:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5472:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5496:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5510:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5571:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5567:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5589:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5603:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5670:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5676:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5680:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5662:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5412:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5426:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5438:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:2"
									},
									"scope": 799,
									"src": "5393:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6083:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6097:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6271:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6285:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6307:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6317:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6340:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6354:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6336:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6361:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6411:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6417:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6430:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6571:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6581:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6589:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6603:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6093:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6117:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6233:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6249:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6647:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "6862:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7021:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7031:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7038:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6643:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6665:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "6810:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "6826:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7083:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7078:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6025:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6039:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6051:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:2"
									},
									"scope": 799,
									"src": "6008:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7514:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7528:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7524:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7551:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7565:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7644:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7653:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7624:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7473:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7490:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:2"
									},
									"scope": 799,
									"src": "7458:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8040:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8054:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8050:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8077:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8091:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8156:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8177:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8148:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "7999:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:2"
									},
									"scope": 799,
									"src": "7984:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "8800:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "8819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "8826:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "8835:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "8810:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8744:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8759:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "8776:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:2"
									},
									"scope": 799,
									"src": "8726:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "9799:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "9813:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "9809:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "9834:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "9848:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "9911:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "9907:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "9934:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "9948:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10006:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10018:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10025:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10036:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10055:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10051:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10066:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10094:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10101:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10110:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10085:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10080:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9719:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9734:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9751:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:2"
									},
									"scope": 799,
									"src": "9701:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10504:387:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10514:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10551:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10558:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10541:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10580:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10604:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10604:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10599:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10599:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10613:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10599:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10576:309:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10618:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10636:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10655:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10636:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10632:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10662:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10714:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10723:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10741:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10687:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10687:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10680:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "10775:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "10812:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "10819:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10828:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10847:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10828:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10854:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "10803:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10803:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "10803:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10440:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10455:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10472:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:2"
									},
									"scope": 799,
									"src": "10415:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1106:9787:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:10789:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:3",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "214:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "396:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "405:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "427:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "447:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:3"
									},
									"src": "390:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "627:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "636:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "659:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "684:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:3"
									},
									"src": "621:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "821:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:3"
									},
									"scope": 877,
									"src": "775:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 877,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1234:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1267:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:3"
									},
									"scope": 877,
									"src": "1204:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1567:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1582:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1622:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:3"
									},
									"scope": 877,
									"src": "1548:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2326:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2343:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2376:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:3"
									},
									"scope": 877,
									"src": "2309:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2712:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2726:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2738:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2771:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:3"
									},
									"scope": 877,
									"src": "2690:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "204:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2674:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"306:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "306:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:4",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "417:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:4"
									},
									"scope": 903,
									"src": "378:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "540:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:4"
									},
									"scope": 903,
									"src": "499:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "674:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:4"
									},
									"scope": 903,
									"src": "631:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "278:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:559:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							933
						]
					},
					"id": 934,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 906,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 933,
							"linearizedBaseContracts": [
								933
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 911,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 910,
												"id": 913,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 933,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 920,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 919,
												"id": 922,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 917,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 933,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 928,
												"id": 930,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 933,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 934,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			},
			"F/FeeTiersERC20.sol": {
				"ast": {
					"absolutePath": "F/FeeTiersERC20.sol",
					"exportedSymbols": {
						"Context": [
							933
						],
						"ERC20": [
							799
						],
						"FeeTiersERC20": [
							1306
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"Ownable": [
							147
						]
					},
					"id": 1307,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 935,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 936,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1307,
							"sourceUnit": 800,
							"src": "58:55:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 937,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1307,
							"sourceUnit": 148,
							"src": "114:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 939,
										"name": "ERC20",
										"nameLocations": [
											"412:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "412:5:6"
									},
									"id": 940,
									"nodeType": "InheritanceSpecifier",
									"src": "412:5:6"
								},
								{
									"baseName": {
										"id": 941,
										"name": "Ownable",
										"nameLocations": [
											"419:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "419:7:6"
									},
									"id": 942,
									"nodeType": "InheritanceSpecifier",
									"src": "419:7:6"
								}
							],
							"canonicalName": "FeeTiersERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 938,
								"nodeType": "StructuredDocumentation",
								"src": "168:217:6",
								"text": " @title FeeTiersERC20\n @dev ERC20 token with fee tiers. A fee is deducted on transfers based on the transfer amount.\n The fee is sent to a fee recipient, and the net amount is delivered to the recipient."
							},
							"fullyImplemented": true,
							"id": 1306,
							"linearizedBaseContracts": [
								1306,
								147,
								799,
								189,
								903,
								877,
								933
							],
							"name": "FeeTiersERC20",
							"nameLocation": "395:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "FeeTiersERC20.FeeTier",
									"id": 949,
									"members": [
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "minAmount",
											"nameLocation": "508:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 949,
											"src": "500:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "500:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 946,
											"mutability": "mutable",
											"name": "maxAmount",
											"nameLocation": "589:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 949,
											"src": "581:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 945,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "581:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 948,
											"mutability": "mutable",
											"name": "feeBP",
											"nameLocation": "684:5:6",
											"nodeType": "VariableDeclaration",
											"scope": 949,
											"src": "676:13:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 947,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "676:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FeeTier",
									"nameLocation": "482:7:6",
									"nodeType": "StructDefinition",
									"scope": 1306,
									"src": "475:271:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "230ed44a",
									"id": 953,
									"mutability": "mutable",
									"name": "feeTiers",
									"nameLocation": "769:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1306,
									"src": "752:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
										"typeString": "struct FeeTiersERC20.FeeTier[]"
									},
									"typeName": {
										"baseType": {
											"id": 951,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 950,
												"name": "FeeTier",
												"nameLocations": [
													"752:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 949,
												"src": "752:7:6"
											},
											"referencedDeclaration": 949,
											"src": "752:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FeeTier_$949_storage_ptr",
												"typeString": "struct FeeTiersERC20.FeeTier"
											}
										},
										"id": 952,
										"nodeType": "ArrayTypeName",
										"src": "752:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage_ptr",
											"typeString": "struct FeeTiersERC20.FeeTier[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "46904840",
									"id": 955,
									"mutability": "mutable",
									"name": "feeRecipient",
									"nameLocation": "837:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1306,
									"src": "822:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 954,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "822:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "37a23e54e8cf606c8ccd70367d9f32d3578f972bb538e67e0c5c08f26c9dfc19",
									"id": 965,
									"name": "FeeTierAdded",
									"nameLocation": "862:12:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 957,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "891:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "875:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "875:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"indexed": false,
												"mutability": "mutable",
												"name": "minAmount",
												"nameLocation": "906:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "898:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "925:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "917:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "917:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 963,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeBP",
												"nameLocation": "944:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "936:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "936:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "874:76:6"
									},
									"src": "856:95:6"
								},
								{
									"anonymous": false,
									"eventSelector": "bb15785662e808c63efc6a05274ce9a7cb01b854b603db64f663b880234dd2fe",
									"id": 975,
									"name": "FeeTierUpdated",
									"nameLocation": "962:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "993:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "977:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "977:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"indexed": false,
												"mutability": "mutable",
												"name": "minAmount",
												"nameLocation": "1008:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1000:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"indexed": false,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "1027:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1019:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeBP",
												"nameLocation": "1046:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1038:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:76:6"
									},
									"src": "956:97:6"
								},
								{
									"anonymous": false,
									"eventSelector": "2b4584016031d9a0d1fc722a5f384f606370058bfcc1354c24264dbd139d67da",
									"id": 979,
									"name": "FeeTierRemoved",
									"nameLocation": "1064:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"indexed": true,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "1095:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1079:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:23:6"
									},
									"src": "1058:44:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7a7b5a0a132f9e0581eb8527f66eae9ee89c2a3e79d4ac7e41a1f1f4d48a7fc2",
									"id": 983,
									"name": "FeeRecipientUpdated",
									"nameLocation": "1113:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFeeRecipient",
												"nameLocation": "1141:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 983,
												"src": "1133:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:25:6"
									},
									"src": "1107:51:6"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "1544:158:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1000,
																"name": "_feeRecipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 988,
																"src": "1562:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1587:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1579:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1001,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1579:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1579:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1562:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642066656520726563697069656e74",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1591:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361",
																"typeString": "literal_string \"Invalid fee recipient\""
															},
															"value": "Invalid fee recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361",
																"typeString": "literal_string \"Invalid fee recipient\""
															}
														],
														"id": 999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1554:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1554:61:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "1554:61:6"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "1625:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1010,
														"name": "_feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "1640:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1625:28:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "1625:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1014,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1669:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1673:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1669:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1016,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "1681:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1013,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1663:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1663:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "1663:32:6"
											}
										]
									},
									"documentation": {
										"id": 984,
										"nodeType": "StructuredDocumentation",
										"src": "1164:237:6",
										"text": " @dev Constructor initializes the token, mints initial supply, and sets the fee recipient.\n @param initialSupply Total token supply in the smallest unit.\n @param _feeRecipient Address that will receive fees."
									},
									"id": 1020,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "46656520546965727320455243323020546f6b656e",
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1478:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_20295c9335a999b45b4ce35d32d6c9d44d77e9cec8af5ea0ff426ec525e30b84",
														"typeString": "literal_string \"Fee Tiers ERC20 Token\""
													},
													"value": "Fee Tiers ERC20 Token"
												},
												{
													"hexValue": "4654453230",
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1503:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c038c281d84df1bb62d1779db9d0cddc140ebfb0efa0682805805a468a0df6f9",
														"typeString": "literal_string \"FTE20\""
													},
													"value": "FTE20"
												}
											],
											"id": 993,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 990,
												"name": "ERC20",
												"nameLocations": [
													"1472:5:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "1472:5:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1472:39:6"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 995,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1528:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1532:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1528:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 997,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 994,
												"name": "Ownable",
												"nameLocations": [
													"1520:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1520:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1520:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "1426:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1418:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1418:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "_feeRecipient",
												"nameLocation": "1449:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "1441:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1441:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1417:46:6"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1544:0:6"
									},
									"scope": 1306,
									"src": "1406:296:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "1833:162:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1029,
																"name": "newRecipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "1851:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1875:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1867:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1030,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1867:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1867:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1851:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642066656520726563697069656e74",
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1879:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361",
																"typeString": "literal_string \"Invalid fee recipient\""
															},
															"value": "Invalid fee recipient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e561266971c3ecd1d998191dab88f5e768ba5a3b9f18aaca1641faa64bcf4361",
																"typeString": "literal_string \"Invalid fee recipient\""
															}
														],
														"id": 1028,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1843:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1843:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "1843:60:6"
											},
											{
												"expression": {
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1038,
														"name": "feeRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "1913:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1039,
														"name": "newRecipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "1928:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1913:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1041,
												"nodeType": "ExpressionStatement",
												"src": "1913:27:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1043,
															"name": "newRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "1975:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1042,
														"name": "FeeRecipientUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "1955:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1955:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "EmitStatement",
												"src": "1950:38:6"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "1708:54:6",
										"text": "@dev Allows the owner to update the fee recipient."
									},
									"functionSelector": "e74b981b",
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1026,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1025,
												"name": "onlyOwner",
												"nameLocations": [
													"1823:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1823:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1823:9:6"
										}
									],
									"name": "setFeeRecipient",
									"nameLocation": "1776:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "newRecipient",
												"nameLocation": "1800:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "1792:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1792:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1791:22:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1833:0:6"
									},
									"scope": 1306,
									"src": "1767:228:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1086,
										"nodeType": "Block",
										"src": "2127:194:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1060,
																"name": "feeBP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2145:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2154:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "2145:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2161:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 1059,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2137:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "2137:39:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1070,
																	"name": "minAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "2208:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1071,
																	"name": "maxAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1052,
																	"src": "2219:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1072,
																	"name": "feeBP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "2230:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1069,
																"name": "FeeTier",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "2200:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_FeeTier_$949_storage_ptr_$",
																	"typeString": "type(struct FeeTiersERC20.FeeTier storage pointer)"
																}
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2200:36:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FeeTier_$949_memory_ptr",
																"typeString": "struct FeeTiersERC20.FeeTier memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FeeTier_$949_memory_ptr",
																"typeString": "struct FeeTiersERC20.FeeTier memory"
															}
														],
														"expression": {
															"id": 1066,
															"name": "feeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2186:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
															}
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2195:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2186:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage_ptr_$_t_struct$_FeeTier_$949_storage_$returns$__$attached_to$_t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FeeTiersERC20.FeeTier storage ref[] storage pointer,struct FeeTiersERC20.FeeTier storage ref)"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2186:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "2186:51:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1077,
																	"name": "feeTiers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "2265:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																		"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2274:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2265:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2283:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2265:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1081,
															"name": "minAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "2286:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1082,
															"name": "maxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "2297:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1083,
															"name": "feeBP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "2308:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1076,
														"name": "FeeTierAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "2252:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1085,
												"nodeType": "EmitStatement",
												"src": "2247:67:6"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "2001:29:6",
										"text": "@dev Adds a new fee tier."
									},
									"functionSelector": "58a3a1c3",
									"id": 1087,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1057,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1056,
												"name": "onlyOwner",
												"nameLocations": [
													"2117:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2117:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2117:9:6"
										}
									],
									"name": "addFeeTier",
									"nameLocation": "2044:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "minAmount",
												"nameLocation": "2063:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2055:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "2082:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2074:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "feeBP",
												"nameLocation": "2101:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2093:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2054:53:6"
									},
									"returnParameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:6"
									},
									"scope": 1306,
									"src": "2035:286:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "2480:244:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1102,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1090,
																"src": "2498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1103,
																	"name": "feeTiers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "2506:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																		"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2506:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2498:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e646578",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2523:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															},
															"value": "Invalid index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2490:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2490:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1108,
												"nodeType": "ExpressionStatement",
												"src": "2490:49:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1110,
																"name": "feeBP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "2557:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "3130303030",
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2566:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"value": "10000"
															},
															"src": "2557:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 1109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2549:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2549:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1115,
												"nodeType": "ExpressionStatement",
												"src": "2549:39:6"
											},
											{
												"expression": {
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1116,
															"name": "feeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2598:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
															}
														},
														"id": 1118,
														"indexExpression": {
															"id": 1117,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "2607:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2598:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeTier_$949_storage",
															"typeString": "struct FeeTiersERC20.FeeTier storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1120,
																"name": "minAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "2624:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1121,
																"name": "maxAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "2635:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1122,
																"name": "feeBP",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1096,
																"src": "2646:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1119,
															"name": "FeeTier",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "2616:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_FeeTier_$949_storage_ptr_$",
																"typeString": "type(struct FeeTiersERC20.FeeTier storage pointer)"
															}
														},
														"id": 1123,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2616:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeTier_$949_memory_ptr",
															"typeString": "struct FeeTiersERC20.FeeTier memory"
														}
													},
													"src": "2598:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeTier_$949_storage",
														"typeString": "struct FeeTiersERC20.FeeTier storage ref"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "2598:54:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1127,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1090,
															"src": "2682:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1128,
															"name": "minAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "2689:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1129,
															"name": "maxAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1094,
															"src": "2700:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1130,
															"name": "feeBP",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1096,
															"src": "2711:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "FeeTierUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 975,
														"src": "2667:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint256)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2667:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1132,
												"nodeType": "EmitStatement",
												"src": "2662:55:6"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "2327:38:6",
										"text": "@dev Updates an existing fee tier."
									},
									"functionSelector": "a5f408b4",
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1099,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1098,
												"name": "onlyOwner",
												"nameLocations": [
													"2470:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2470:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:9:6"
										}
									],
									"name": "updateFeeTier",
									"nameLocation": "2379:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2401:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2393:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2393:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "minAmount",
												"nameLocation": "2416:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2408:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2408:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "maxAmount",
												"nameLocation": "2435:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2427:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2427:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "feeBP",
												"nameLocation": "2454:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2446:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:68:6"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:0:6"
									},
									"scope": 1306,
									"src": "2370:354:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "2820:183:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1143,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "2838:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1144,
																	"name": "feeTiers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "2846:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																		"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
																	}
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2855:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2846:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2838:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e646578",
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2863:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															},
															"value": "Invalid index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60",
																"typeString": "literal_string \"Invalid index\""
															}
														],
														"id": 1142,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2830:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2830:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1149,
												"nodeType": "ExpressionStatement",
												"src": "2830:49:6"
											},
											{
												"expression": {
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1150,
															"name": "feeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2889:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
															}
														},
														"id": 1152,
														"indexExpression": {
															"id": 1151,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "2898:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2889:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeTier_$949_storage",
															"typeString": "struct FeeTiersERC20.FeeTier storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 1153,
															"name": "feeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2907:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
															}
														},
														"id": 1158,
														"indexExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1154,
																	"name": "feeTiers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "2916:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																		"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
																	}
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2925:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2916:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2934:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "2916:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2907:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FeeTier_$949_storage",
															"typeString": "struct FeeTiersERC20.FeeTier storage ref"
														}
													},
													"src": "2889:47:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FeeTier_$949_storage",
														"typeString": "struct FeeTiersERC20.FeeTier storage ref"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "2889:47:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1161,
															"name": "feeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "2946:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
															}
														},
														"id": 1163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2955:3:6",
														"memberName": "pop",
														"nodeType": "MemberAccess",
														"src": "2946:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FeeTiersERC20.FeeTier storage ref[] storage pointer)"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2946:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "2946:14:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1167,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "2990:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1166,
														"name": "FeeTierRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "2975:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2975:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "EmitStatement",
												"src": "2970:26:6"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "2730:28:6",
										"text": "@dev Removes a fee tier."
									},
									"functionSelector": "42b53e5f",
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1139,
												"name": "onlyOwner",
												"nameLocations": [
													"2810:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2810:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2810:9:6"
										}
									],
									"name": "removeFeeTier",
									"nameLocation": "2772:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "2794:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2786:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2786:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2785:15:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:0:6"
									},
									"scope": 1306,
									"src": "2763:240:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1226,
										"nodeType": "Block",
										"src": "3159:303:6",
										"statements": [
											{
												"body": {
													"id": 1222,
													"nodeType": "Block",
													"src": "3215:223:6",
													"statements": [
														{
															"assignments": [
																1192
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1192,
																	"mutability": "mutable",
																	"name": "tier",
																	"nameLocation": "3244:4:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1222,
																	"src": "3229:19:6",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FeeTier_$949_memory_ptr",
																		"typeString": "struct FeeTiersERC20.FeeTier"
																	},
																	"typeName": {
																		"id": 1191,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1190,
																			"name": "FeeTier",
																			"nameLocations": [
																				"3229:7:6"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 949,
																			"src": "3229:7:6"
																		},
																		"referencedDeclaration": 949,
																		"src": "3229:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FeeTier_$949_storage_ptr",
																			"typeString": "struct FeeTiersERC20.FeeTier"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1196,
															"initialValue": {
																"baseExpression": {
																	"id": 1193,
																	"name": "feeTiers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "3251:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																		"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
																	}
																},
																"id": 1195,
																"indexExpression": {
																	"id": 1194,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1180,
																	"src": "3260:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3251:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FeeTier_$949_storage",
																	"typeString": "struct FeeTiersERC20.FeeTier storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3229:33:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1197,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "3280:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"expression": {
																			"id": 1198,
																			"name": "tier",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1192,
																			"src": "3290:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FeeTier_$949_memory_ptr",
																				"typeString": "struct FeeTiersERC20.FeeTier memory"
																			}
																		},
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3295:9:6",
																		"memberName": "minAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 944,
																		"src": "3290:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3280:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1204,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1201,
																						"name": "tier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1192,
																						"src": "3309:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FeeTier_$949_memory_ptr",
																							"typeString": "struct FeeTiersERC20.FeeTier memory"
																						}
																					},
																					"id": 1202,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3314:9:6",
																					"memberName": "maxAmount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 946,
																					"src": "3309:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3327:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3309:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1205,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1174,
																					"src": "3332:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"expression": {
																						"id": 1206,
																						"name": "tier",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1192,
																						"src": "3342:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_FeeTier_$949_memory_ptr",
																							"typeString": "struct FeeTiersERC20.FeeTier memory"
																						}
																					},
																					"id": 1207,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3347:9:6",
																					"memberName": "maxAmount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 946,
																					"src": "3342:14:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3332:24:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "3309:47:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1210,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3308:49:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3280:77:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1221,
															"nodeType": "IfStatement",
															"src": "3276:152:6",
															"trueBody": {
																"id": 1220,
																"nodeType": "Block",
																"src": "3359:69:6",
																"statements": [
																	{
																		"expression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1215,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1212,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1174,
																							"src": "3385:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 1213,
																								"name": "tier",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1192,
																								"src": "3394:4:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_FeeTier_$949_memory_ptr",
																									"typeString": "struct FeeTiersERC20.FeeTier memory"
																								}
																							},
																							"id": 1214,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "3399:5:6",
																							"memberName": "feeBP",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 948,
																							"src": "3394:10:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3385:19:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1216,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3384:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "3130303030",
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3408:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10000"
																			},
																			"src": "3384:29:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1178,
																		"id": 1219,
																		"nodeType": "Return",
																		"src": "3377:36:6"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1183,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1180,
														"src": "3189:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1184,
															"name": "feeTiers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 953,
															"src": "3193:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FeeTier_$949_storage_$dyn_storage",
																"typeString": "struct FeeTiersERC20.FeeTier storage ref[] storage ref"
															}
														},
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3202:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3193:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3189:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"initializationExpression": {
													"assignments": [
														1180
													],
													"declarations": [
														{
															"constant": false,
															"id": 1180,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3182:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1223,
															"src": "3174:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1179,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3174:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1182,
													"initialValue": {
														"hexValue": "30",
														"id": 1181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3186:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3174:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3210:3:6",
														"subExpression": {
															"id": 1187,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "3210:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1189,
													"nodeType": "ExpressionStatement",
													"src": "3210:3:6"
												},
												"nodeType": "ForStatement",
												"src": "3169:269:6"
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3454:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1178,
												"id": 1225,
												"nodeType": "Return",
												"src": "3447:8:6"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "3009:70:6",
										"text": "@dev Returns the fee (in token units) for a given transfer amount."
									},
									"functionSelector": "309e7319",
									"id": 1227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeForAmount",
									"nameLocation": "3093:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3117:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3109:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3109:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3108:16:6"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3154:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "3146:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:13:6"
									},
									"scope": 1306,
									"src": "3084:378:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										409
									],
									"body": {
										"id": 1263,
										"nodeType": "Block",
										"src": "3633:303:6",
										"statements": [
											{
												"assignments": [
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "3651:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "3643:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1238,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3643:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"arguments": [
														{
															"id": 1241,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "3673:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1240,
														"name": "getFeeForAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "3657:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3643:37:6"
											},
											{
												"assignments": [
													1245
												],
												"declarations": [
													{
														"constant": false,
														"id": 1245,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "3698:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1263,
														"src": "3690:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1244,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3690:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1249,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1246,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1232,
														"src": "3710:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1247,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "3719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3710:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3690:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1253,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "3799:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1254,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "3813:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1250,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3784:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FeeTiersERC20_$1306_$",
																"typeString": "type(contract super FeeTiersERC20)"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3790:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3784:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3784:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "3784:33:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1259,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "3908:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1260,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1245,
															"src": "3919:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1257,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "3893:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FeeTiersERC20_$1306_$",
																"typeString": "type(contract super FeeTiersERC20)"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:8:6",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "3893:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3893:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1262,
												"nodeType": "Return",
												"src": "3886:43:6"
											}
										]
									},
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "3468:76:6",
										"text": " @dev Overrides transfer to deduct fee based on fee tiers."
									},
									"functionSelector": "a9059cbb",
									"id": 1264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3558:8:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1234,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3609:8:6"
									},
									"parameters": {
										"id": 1233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3575:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3567:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3594:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3586:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3586:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3566:35:6"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1264,
												"src": "3627:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3627:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3626:6:6"
									},
									"scope": 1306,
									"src": "3549:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										482
									],
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "4131:326:6",
										"statements": [
											{
												"assignments": [
													1278
												],
												"declarations": [
													{
														"constant": false,
														"id": 1278,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "4149:3:6",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "4141:11:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1277,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4141:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"arguments": [
														{
															"id": 1280,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "4171:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1279,
														"name": "getFeeForAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "4155:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4155:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4141:37:6"
											},
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "netAmount",
														"nameLocation": "4196:9:6",
														"nodeType": "VariableDeclaration",
														"scope": 1304,
														"src": "4188:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1283,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4188:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1288,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "4208:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1286,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "4217:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4208:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4188:32:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1292,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4302:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1293,
															"name": "feeRecipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "4310:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1278,
															"src": "4324:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1289,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4283:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FeeTiersERC20_$1306_$",
																"typeString": "type(contract super FeeTiersERC20)"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4289:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "4283:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "4283:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1299,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "4421:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1300,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "4429:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1301,
															"name": "netAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "4440:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1297,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4402:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_FeeTiersERC20_$1306_$",
																"typeString": "type(contract super FeeTiersERC20)"
															}
														},
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4408:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 482,
														"src": "4402:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) returns (bool)"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4402:48:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1276,
												"id": 1303,
												"nodeType": "Return",
												"src": "4395:55:6"
											}
										]
									},
									"documentation": {
										"id": 1265,
										"nodeType": "StructuredDocumentation",
										"src": "3942:80:6",
										"text": " @dev Overrides transferFrom to deduct fee based on fee tiers."
									},
									"functionSelector": "23b872dd",
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4036:12:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1273,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4107:8:6"
									},
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4057:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4049:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4049:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4073:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4065:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4065:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4092:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4084:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4048:51:6"
									},
									"returnParameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "4125:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1274,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4125:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4124:6:6"
									},
									"scope": 1306,
									"src": "4027:430:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1307,
							"src": "386:4073:6",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820,
								965,
								975,
								979,
								983
							]
						}
					],
					"src": "32:4428:6"
				},
				"id": 6
			}
		}
	}
}